//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/payloads/PayloadHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisPayloadsPayloadHelper_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisPayloadsPayloadHelper_RESTRICT
#define OrgApacheLuceneAnalysisPayloadsPayloadHelper_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisPayloadsPayloadHelper_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisPayloadsPayloadHelper_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisPayloadsPayloadHelper_) && (OrgApacheLuceneAnalysisPayloadsPayloadHelper_INCLUDE_ALL || OrgApacheLuceneAnalysisPayloadsPayloadHelper_INCLUDE)
#define _OrgApacheLuceneAnalysisPayloadsPayloadHelper_

@class IOSByteArray;

@interface OrgApacheLuceneAnalysisPayloadsPayloadHelper : NSObject

#pragma mark Public

- (instancetype)init;

+ (jfloat)decodeFloatWithByteArray:(IOSByteArray *)bytes;

+ (jfloat)decodeFloatWithByteArray:(IOSByteArray *)bytes
                           withInt:(jint)offset;

+ (jint)decodeIntWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)offset;

+ (IOSByteArray *)encodeFloatWithFloat:(jfloat)payload;

+ (IOSByteArray *)encodeFloatWithFloat:(jfloat)payload
                         withByteArray:(IOSByteArray *)data
                               withInt:(jint)offset;

+ (IOSByteArray *)encodeIntWithInt:(jint)payload;

+ (IOSByteArray *)encodeIntWithInt:(jint)payload
                     withByteArray:(IOSByteArray *)data
                           withInt:(jint)offset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPayloadsPayloadHelper)

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_(jfloat payload);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_withByteArray_withInt_(jfloat payload, IOSByteArray *data, jint offset);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_(jint payload);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_withByteArray_withInt_(jint payload, IOSByteArray *data, jint offset);

FOUNDATION_EXPORT jfloat OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeFloatWithByteArray_(IOSByteArray *bytes);

FOUNDATION_EXPORT jfloat OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeFloatWithByteArray_withInt_(IOSByteArray *bytes, jint offset);

FOUNDATION_EXPORT jint OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeIntWithByteArray_withInt_(IOSByteArray *bytes, jint offset);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPayloadsPayloadHelper_init(OrgApacheLuceneAnalysisPayloadsPayloadHelper *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPayloadsPayloadHelper *new_OrgApacheLuceneAnalysisPayloadsPayloadHelper_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPayloadsPayloadHelper)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisPayloadsPayloadHelper_INCLUDE_ALL")
