//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/payloads/TokenOffsetPayloadTokenFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_RESTRICT
#define OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_) && (OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_INCLUDE_ALL || OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_INCLUDE)
#define _OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_

#define OrgApacheLuceneAnalysisTokenFilter_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenFilter_INCLUDE 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;

@interface OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input;

- (jboolean)incrementToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter *self, OrgApacheLuceneAnalysisTokenStream *input);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter *new_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *input) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter_INCLUDE_ALL")
