//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/core/LowerCaseTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_RESTRICT
#define OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_) && (OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_INCLUDE_ALL || OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_INCLUDE)
#define _OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_

#define OrgApacheLuceneAnalysisCoreLetterTokenizer_RESTRICT 1
#define OrgApacheLuceneAnalysisCoreLetterTokenizer_INCLUDE 1
#include "org/apache/lucene/analysis/core/LetterTokenizer.h"

@interface OrgApacheLuceneAnalysisCoreLowerCaseTokenizer : OrgApacheLuceneAnalysisCoreLetterTokenizer

#pragma mark Public

- (instancetype)init;

#pragma mark Protected

- (jint)normalizeWithInt:(jint)c;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_init(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCoreLowerCaseTokenizer *new_OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_INCLUDE_ALL")
