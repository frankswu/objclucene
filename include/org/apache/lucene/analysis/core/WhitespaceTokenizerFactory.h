//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/core/WhitespaceTokenizerFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_RESTRICT
#define OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_) && (OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_INCLUDE_ALL || OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_INCLUDE)
#define _OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_

#define OrgApacheLuceneAnalysisUtilTokenizerFactory_RESTRICT 1
#define OrgApacheLuceneAnalysisUtilTokenizerFactory_INCLUDE 1
#include "org/apache/lucene/analysis/util/TokenizerFactory.h"

@class OrgApacheLuceneAnalysisCoreWhitespaceTokenizer;
@class OrgApacheLuceneUtilAttributeFactory;
@protocol JavaUtilMap;

@interface OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory : OrgApacheLuceneAnalysisUtilTokenizerFactory

#pragma mark Public

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)args;

- (OrgApacheLuceneAnalysisCoreWhitespaceTokenizer *)createWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory *self, id<JavaUtilMap> args);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory *new_OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisCoreWhitespaceTokenizerFactory_INCLUDE_ALL")
