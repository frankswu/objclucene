//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_RESTRICT
#define OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_) && (OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_INCLUDE_ALL || OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_INCLUDE)
#define _OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_

#define OrgApacheLuceneAnalysisSynonymSynonymMap_RESTRICT 1
#define OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_INCLUDE 1
#include "org/apache/lucene/analysis/synonym/SynonymMap.h"

@interface OrgApacheLuceneAnalysisSynonymWordnetSynonymParser : OrgApacheLuceneAnalysisSynonymSynonymMap_Parser

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSynonymWordnetSynonymParser)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_init(OrgApacheLuceneAnalysisSynonymWordnetSynonymParser *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSynonymWordnetSynonymParser *new_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSynonymWordnetSynonymParser)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_INCLUDE_ALL")
