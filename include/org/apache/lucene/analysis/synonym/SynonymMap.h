//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisSynonymSynonymMap_RESTRICT
#define OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisSynonymSynonymMap_RESTRICT
#if OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_INCLUDE
#define OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_INCLUDE 1
#endif

#if !defined (_OrgApacheLuceneAnalysisSynonymSynonymMap_) && (OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL || OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE)
#define _OrgApacheLuceneAnalysisSynonymSynonymMap_

@class OrgApacheLuceneUtilBytesRefHash;
@class OrgApacheLuceneUtilFstFST;

#define OrgApacheLuceneAnalysisSynonymSynonymMap_WORD_SEPARATOR 0x0000

@interface OrgApacheLuceneAnalysisSynonymSynonymMap : NSObject {
 @public
  OrgApacheLuceneUtilFstFST *fst_;
  OrgApacheLuceneUtilBytesRefHash *words_;
  jint maxHorizontalContext_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst
              withOrgApacheLuceneUtilBytesRefHash:(OrgApacheLuceneUtilBytesRefHash *)words
                                          withInt:(jint)maxHorizontalContext;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSynonymSynonymMap)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSynonymSynonymMap, fst_, OrgApacheLuceneUtilFstFST *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSynonymSynonymMap, words_, OrgApacheLuceneUtilBytesRefHash *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisSynonymSynonymMap, WORD_SEPARATOR, jchar)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSynonymSynonymMap_initWithOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilBytesRefHash_withInt_(OrgApacheLuceneAnalysisSynonymSynonymMap *self, OrgApacheLuceneUtilFstFST *fst, OrgApacheLuceneUtilBytesRefHash *words, jint maxHorizontalContext);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSynonymSynonymMap *new_OrgApacheLuceneAnalysisSynonymSynonymMap_initWithOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilBytesRefHash_withInt_(OrgApacheLuceneUtilFstFST *fst, OrgApacheLuceneUtilBytesRefHash *words, jint maxHorizontalContext) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSynonymSynonymMap)

#endif

#if !defined (_OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_) && (OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL || OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_INCLUDE)
#define _OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_

@class IOSObjectArray;
@class OrgApacheLuceneAnalysisSynonymSynonymMap;
@class OrgApacheLuceneUtilCharsRef;
@class OrgApacheLuceneUtilCharsRefBuilder;

@interface OrgApacheLuceneAnalysisSynonymSynonymMap_Builder : NSObject

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)dedup;

- (void)addWithOrgApacheLuceneUtilCharsRef:(OrgApacheLuceneUtilCharsRef *)input
           withOrgApacheLuceneUtilCharsRef:(OrgApacheLuceneUtilCharsRef *)output
                               withBoolean:(jboolean)includeOrig;

- (OrgApacheLuceneAnalysisSynonymSynonymMap *)build;

+ (OrgApacheLuceneUtilCharsRef *)joinWithNSStringArray:(IOSObjectArray *)words
                withOrgApacheLuceneUtilCharsRefBuilder:(OrgApacheLuceneUtilCharsRefBuilder *)reuse;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSynonymSynonymMap_Builder)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_initWithBoolean_(OrgApacheLuceneAnalysisSynonymSynonymMap_Builder *self, jboolean dedup);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSynonymSynonymMap_Builder *new_OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_initWithBoolean_(jboolean dedup) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilCharsRef *OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_joinWithNSStringArray_withOrgApacheLuceneUtilCharsRefBuilder_(IOSObjectArray *words, OrgApacheLuceneUtilCharsRefBuilder *reuse);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSynonymSynonymMap_Builder)

#endif

#if !defined (_OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_) && (OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL || OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_INCLUDE)
#define _OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_

@class JavaIoReader;
@class OrgApacheLuceneAnalysisAnalyzer;
@class OrgApacheLuceneUtilCharsRef;
@class OrgApacheLuceneUtilCharsRefBuilder;

@interface OrgApacheLuceneAnalysisSynonymSynonymMap_Parser : OrgApacheLuceneAnalysisSynonymSynonymMap_Builder

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)dedup
withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer;

- (OrgApacheLuceneUtilCharsRef *)analyzeWithNSString:(NSString *)text
              withOrgApacheLuceneUtilCharsRefBuilder:(OrgApacheLuceneUtilCharsRefBuilder *)reuse;

- (void)parseWithJavaIoReader:(JavaIoReader *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSynonymSynonymMap_Parser)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_initWithBoolean_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisSynonymSynonymMap_Parser *self, jboolean dedup, OrgApacheLuceneAnalysisAnalyzer *analyzer);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSynonymSynonymMap_Parser)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL")
