//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisSynonymSynonymMap_RESTRICT
#define OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisSynonymSynonymMap_RESTRICT
#if OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_INCLUDE
#define OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_INCLUDE 1
#endif

#if !defined (_OrgApacheLuceneAnalysisSynonymSynonymMap_) && (OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL || OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE)
#define _OrgApacheLuceneAnalysisSynonymSynonymMap_

#define OrgApacheLuceneAnalysisSynonymSynonymMap_WORD_SEPARATOR 0x0000

@interface OrgApacheLuceneAnalysisSynonymSynonymMap : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSynonymSynonymMap)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisSynonymSynonymMap, WORD_SEPARATOR, jchar)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSynonymSynonymMap_init(OrgApacheLuceneAnalysisSynonymSynonymMap *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSynonymSynonymMap *new_OrgApacheLuceneAnalysisSynonymSynonymMap_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSynonymSynonymMap)

#endif

#if !defined (_OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_) && (OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL || OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_INCLUDE)
#define _OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_

@interface OrgApacheLuceneAnalysisSynonymSynonymMap_Builder : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSynonymSynonymMap_Builder)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_init(OrgApacheLuceneAnalysisSynonymSynonymMap_Builder *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSynonymSynonymMap_Builder *new_OrgApacheLuceneAnalysisSynonymSynonymMap_Builder_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSynonymSynonymMap_Builder)

#endif

#if !defined (_OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_) && (OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL || OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_INCLUDE)
#define _OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_

@interface OrgApacheLuceneAnalysisSynonymSynonymMap_Parser : OrgApacheLuceneAnalysisSynonymSynonymMap_Builder

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSynonymSynonymMap_Parser)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSynonymSynonymMap_Parser_init(OrgApacheLuceneAnalysisSynonymSynonymMap_Parser *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSynonymSynonymMap_Parser)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisSynonymSynonymMap_INCLUDE_ALL")
