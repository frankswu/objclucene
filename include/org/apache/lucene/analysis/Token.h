//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/Token.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisToken_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisToken_RESTRICT
#define OrgApacheLuceneAnalysisToken_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisToken_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisToken_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisToken_) && (OrgApacheLuceneAnalysisToken_INCLUDE_ALL || OrgApacheLuceneAnalysisToken_INCLUDE)
#define _OrgApacheLuceneAnalysisToken_

#define OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl_INCLUDE 1
#include "org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl.h"

#define OrgApacheLuceneAnalysisTokenattributesFlagsAttribute_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenattributesFlagsAttribute_INCLUDE 1
#include "org/apache/lucene/analysis/tokenattributes/FlagsAttribute.h"

#define OrgApacheLuceneAnalysisTokenattributesPayloadAttribute_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenattributesPayloadAttribute_INCLUDE 1
#include "org/apache/lucene/analysis/tokenattributes/PayloadAttribute.h"

@class OrgApacheLuceneUtilAttributeFactory;
@class OrgApacheLuceneUtilAttributeImpl;
@class OrgApacheLuceneUtilBytesRef;
@protocol JavaLangCharSequence;
@protocol OrgApacheLuceneUtilAttributeReflector;

@interface OrgApacheLuceneAnalysisToken : OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl < OrgApacheLuceneAnalysisTokenattributesFlagsAttribute, OrgApacheLuceneAnalysisTokenattributesPayloadAttribute >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                     withInt:(jint)start
                                     withInt:(jint)end;

- (void)clear;

- (OrgApacheLuceneAnalysisToken *)clone;

- (void)copyToWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)target OBJC_METHOD_FAMILY_NONE;

- (jboolean)isEqual:(id)obj;

- (jint)getFlags;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (NSUInteger)hash;

- (void)reflectWithWithOrgApacheLuceneUtilAttributeReflector:(id<OrgApacheLuceneUtilAttributeReflector>)reflector;

- (void)reinitWithOrgApacheLuceneAnalysisToken:(OrgApacheLuceneAnalysisToken *)prototype;

- (void)setFlagsWithInt:(jint)flags;

- (void)setPayloadWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisToken)

FOUNDATION_EXPORT OrgApacheLuceneUtilAttributeFactory *OrgApacheLuceneAnalysisToken_TOKEN_ATTRIBUTE_FACTORY_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisToken, TOKEN_ATTRIBUTE_FACTORY_, OrgApacheLuceneUtilAttributeFactory *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisToken_init(OrgApacheLuceneAnalysisToken *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisToken *new_OrgApacheLuceneAnalysisToken_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisToken_initWithJavaLangCharSequence_withInt_withInt_(OrgApacheLuceneAnalysisToken *self, id<JavaLangCharSequence> text, jint start, jint end);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisToken *new_OrgApacheLuceneAnalysisToken_initWithJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> text, jint start, jint end) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisToken)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisToken_INCLUDE_ALL")
