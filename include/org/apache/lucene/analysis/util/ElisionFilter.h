//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/util/ElisionFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisUtilElisionFilter_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisUtilElisionFilter_RESTRICT
#define OrgApacheLuceneAnalysisUtilElisionFilter_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisUtilElisionFilter_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisUtilElisionFilter_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisUtilElisionFilter_) && (OrgApacheLuceneAnalysisUtilElisionFilter_INCLUDE_ALL || OrgApacheLuceneAnalysisUtilElisionFilter_INCLUDE)
#define _OrgApacheLuceneAnalysisUtilElisionFilter_

#define OrgApacheLuceneAnalysisTokenFilter_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenFilter_INCLUDE 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneAnalysisUtilCharArraySet;

@interface OrgApacheLuceneAnalysisUtilElisionFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
               withOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)articles;

- (jboolean)incrementToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilElisionFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisUtilElisionFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisUtilElisionFilter *self, OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisUtilCharArraySet *articles);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilElisionFilter *new_OrgApacheLuceneAnalysisUtilElisionFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisUtilCharArraySet *articles) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilElisionFilter)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisUtilElisionFilter_INCLUDE_ALL")
