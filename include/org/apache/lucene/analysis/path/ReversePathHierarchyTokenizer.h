//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/path/ReversePathHierarchyTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_RESTRICT
#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_) && (OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL || OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE)
#define _OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_

#define OrgApacheLuceneAnalysisTokenizer_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenizer_INCLUDE 1
#include "org/apache/lucene/analysis/Tokenizer.h"

@class OrgApacheLuceneUtilAttributeFactory;

#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_DEFAULT_DELIMITER '/'
#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_DEFAULT_SKIP 0

@interface OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer : OrgApacheLuceneAnalysisTokenizer

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory
                                                   withChar:(jchar)delimiter
                                                   withChar:(jchar)replacement
                                                    withInt:(jint)skip;

- (instancetype)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory
                                                    withInt:(jint)bufferSize
                                                   withChar:(jchar)delimiter
                                                   withChar:(jchar)replacement
                                                    withInt:(jint)skip;

- (instancetype)initWithChar:(jchar)delimiter
                    withChar:(jchar)replacement;

- (instancetype)initWithChar:(jchar)delimiter
                    withChar:(jchar)replacement
                     withInt:(jint)skip;

- (instancetype)initWithChar:(jchar)delimiter
                     withInt:(jint)skip;

- (instancetype)initWithInt:(jint)skip;

- (instancetype)initWithInt:(jint)bufferSize
                   withChar:(jchar)delimiter;

- (instancetype)initWithInt:(jint)bufferSize
                   withChar:(jchar)delimiter
                   withChar:(jchar)replacement;

- (instancetype)initWithInt:(jint)bufferSize
                   withChar:(jchar)delimiter
                   withChar:(jchar)replacement
                    withInt:(jint)skip;

- (void)end;

- (jboolean)incrementToken;

- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer, DEFAULT_DELIMITER, jchar)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer, DEFAULT_SKIP, jint)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_init(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_(jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jint bufferSize, jchar delimiter);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_(jint bufferSize, jchar delimiter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jchar delimiter, jchar replacement);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_(jchar delimiter, jchar replacement) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jint bufferSize, jchar delimiter, jchar replacement);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_(jint bufferSize, jchar delimiter, jchar replacement) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jchar delimiter, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withInt_(jchar delimiter, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_withInt_(jchar delimiter, jchar replacement, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withChar_withChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, OrgApacheLuceneUtilAttributeFactory *factory, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withChar_withChar_withInt_(OrgApacheLuceneUtilAttributeFactory *factory, jchar delimiter, jchar replacement, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jint bufferSize, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_withInt_(jint bufferSize, jchar delimiter, jchar replacement, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withInt_withChar_withChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, OrgApacheLuceneUtilAttributeFactory *factory, jint bufferSize, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withInt_withChar_withChar_withInt_(OrgApacheLuceneUtilAttributeFactory *factory, jint bufferSize, jchar delimiter, jchar replacement, jint skip) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL")
