//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/path/ReversePathHierarchyTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_RESTRICT
#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_) && (OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL || OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE)
#define _OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_

#define OrgApacheLuceneAnalysisTokenizer_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenizer_INCLUDE 1
#include "org/apache/lucene/analysis/Tokenizer.h"

#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_DEFAULT_DELIMITER '/'
#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_DEFAULT_SKIP 0

@interface OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer : OrgApacheLuceneAnalysisTokenizer

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer, DEFAULT_DELIMITER, jchar)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer, DEFAULT_SKIP, jint)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_init(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_INCLUDE_ALL")
