//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/path/PathHierarchyTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_RESTRICT
#define OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_) && (OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_INCLUDE_ALL || OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_INCLUDE)
#define _OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_

#define OrgApacheLuceneAnalysisTokenizer_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenizer_INCLUDE 1
#include "org/apache/lucene/analysis/Tokenizer.h"

#define OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_DEFAULT_DELIMITER '/'
#define OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_DEFAULT_SKIP 0

@interface OrgApacheLuceneAnalysisPathPathHierarchyTokenizer : OrgApacheLuceneAnalysisTokenizer

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPathPathHierarchyTokenizer)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisPathPathHierarchyTokenizer, DEFAULT_DELIMITER, jchar)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisPathPathHierarchyTokenizer, DEFAULT_SKIP, jint)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_init(OrgApacheLuceneAnalysisPathPathHierarchyTokenizer *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathPathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPathPathHierarchyTokenizer)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisPathPathHierarchyTokenizer_INCLUDE_ALL")
