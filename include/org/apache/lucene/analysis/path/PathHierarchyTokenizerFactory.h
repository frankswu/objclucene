//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/path/PathHierarchyTokenizerFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_RESTRICT
#define OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_) && (OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_INCLUDE_ALL || OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_INCLUDE)
#define _OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_

#define OrgApacheLuceneAnalysisUtilTokenizerFactory_RESTRICT 1
#define OrgApacheLuceneAnalysisUtilTokenizerFactory_INCLUDE 1
#include "org/apache/lucene/analysis/util/TokenizerFactory.h"

@interface OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory : OrgApacheLuceneAnalysisUtilTokenizerFactory

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_init(OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory *new_OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisPathPathHierarchyTokenizerFactory_INCLUDE_ALL")
