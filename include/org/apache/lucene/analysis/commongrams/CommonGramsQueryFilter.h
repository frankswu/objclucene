//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsQueryFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter

#if !defined (OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter || defined(INCLUDE_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter))
#define OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisCommongramsCommonGramsFilter;

/*!
 @brief Wrap a CommonGramsFilter optimizing phrase queries by only returning single
 words when they are not a member of a bigram.
 Example:
 <ul>
 <li>query input to CommonGramsFilter: "the rain in spain falls mainly"
 <li>output of CommomGramsFilter/input to CommonGramsQueryFilter:
 |"the, "the-rain"|"rain" "rain-in"|"in, "in-spain"|"spain"|"falls"|"mainly"
 <li>output of CommonGramsQueryFilter:"the-rain", "rain-in" ,"in-spain",
 "falls", "mainly"
 </ul>
 */
@interface OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

/*!
 @brief Constructs a new CommonGramsQueryFilter based on the provided CommomGramsFilter
 @param input CommonGramsFilter the QueryFilter will use
 */
- (instancetype)initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter:(OrgApacheLuceneAnalysisCommongramsCommonGramsFilter *)input;

/*!
 @brief Output bigrams whenever possible to optimize queries.
 Only output unigrams
 when they are not a member of a bigram. Example:
 <ul>
 <li>input: "the rain in spain falls mainly"
 <li>output:"the-rain", "rain-in" ,"in-spain", "falls", "mainly"
 </ul>
 */
- (jboolean)incrementToken;

/*!
 @brief Convenience method to check if the current type is a gram type
 @return <code>true</code> if the current type is a gram type, <code>false</code> otherwise
 */
- (jboolean)isGramType;

/*!
 
 */
- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter_initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter_(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter *self, OrgApacheLuceneAnalysisCommongramsCommonGramsFilter *input);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter *new_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter_initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter_(OrgApacheLuceneAnalysisCommongramsCommonGramsFilter *input) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter *create_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter_initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter_(OrgApacheLuceneAnalysisCommongramsCommonGramsFilter *input);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter")
