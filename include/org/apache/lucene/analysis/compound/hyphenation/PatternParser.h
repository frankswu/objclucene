//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_RESTRICT
#define OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_) && (OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_INCLUDE_ALL || OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_INCLUDE)
#define _OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_

#define OrgXmlSaxHelpersDefaultHandler_RESTRICT 1
#define OrgXmlSaxHelpersDefaultHandler_INCLUDE 1
#include "org/xml/sax/helpers/DefaultHandler.h"

@class IOSCharArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class OrgXmlSaxInputSource;
@protocol OrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxXMLReader;

#define OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_ELEM_CLASSES 1
#define OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_ELEM_EXCEPTIONS 2
#define OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_ELEM_PATTERNS 3
#define OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_ELEM_HYPHEN 4

@interface OrgApacheLuceneAnalysisCompoundHyphenationPatternParser : OrgXmlSaxHelpersDefaultHandler {
 @public
  id<OrgXmlSaxXMLReader> parser_;
  jint currElement_;
  id<OrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer> consumer_;
  JavaLangStringBuilder *token_;
  JavaUtilArrayList *exception_;
  jchar hyphenChar_;
  NSString *errMsg_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer:(id<OrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer>)consumer;

- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)length;

- (void)endElementWithNSString:(NSString *)uri
                  withNSString:(NSString *)local
                  withNSString:(NSString *)raw;

- (void)parseWithOrgXmlSaxInputSource:(OrgXmlSaxInputSource *)source;

- (void)parseWithNSString:(NSString *)filename;

- (OrgXmlSaxInputSource *)resolveEntityWithNSString:(NSString *)publicId
                                       withNSString:(NSString *)systemId;

- (void)setConsumerWithOrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer:(id<OrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer>)consumer;

- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)local
                    withNSString:(NSString *)raw
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)attrs;

#pragma mark Protected

- (NSString *)getExceptionWordWithJavaUtilArrayList:(JavaUtilArrayList *)ex;

+ (NSString *)getInterletterValuesWithNSString:(NSString *)pat;

+ (NSString *)getPatternWithNSString:(NSString *)word;

- (JavaUtilArrayList *)normalizeExceptionWithJavaUtilArrayList:(JavaUtilArrayList *)ex;

- (NSString *)readTokenWithJavaLangStringBuilder:(JavaLangStringBuilder *)chars;

#pragma mark Package-Private

+ (id<OrgXmlSaxXMLReader>)createParser;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser, parser_, id<OrgXmlSaxXMLReader>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser, consumer_, id<OrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser, token_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser, exception_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser, errMsg_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser, ELEM_CLASSES, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser, ELEM_EXCEPTIONS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser, ELEM_PATTERNS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser, ELEM_HYPHEN, jint)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_init(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationPatternParser *new_OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_initWithOrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer_(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser *self, id<OrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer> consumer);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationPatternParser *new_OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_initWithOrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer_(id<OrgApacheLuceneAnalysisCompoundHyphenationPatternConsumer> consumer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<OrgXmlSaxXMLReader> OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_createParser();

FOUNDATION_EXPORT NSString *OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_getPatternWithNSString_(NSString *word);

FOUNDATION_EXPORT NSString *OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_getInterletterValuesWithNSString_(NSString *pat);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCompoundHyphenationPatternParser)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisCompoundHyphenationPatternParser_INCLUDE_ALL")
