//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/Lucene47WordDelimiterFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_RESTRICT
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_) && (OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_INCLUDE_ALL || OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_INCLUDE)
#define _OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_

#define OrgApacheLuceneAnalysisTokenFilter_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenFilter_INCLUDE 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class IOSByteArray;
@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneAnalysisUtilCharArraySet;

#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_LOWER 1
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_UPPER 2
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_DIGIT 4
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_SUBWORD_DELIM 8
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_ALPHA 3
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_ALPHANUM 7
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_GENERATE_WORD_PARTS 1
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_GENERATE_NUMBER_PARTS 2
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_CATENATE_WORDS 4
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_CATENATE_NUMBERS 8
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_CATENATE_ALL 16
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_PRESERVE_ORIGINAL 32
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_SPLIT_ON_CASE_CHANGE 64
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_SPLIT_ON_NUMERICS 128
#define OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_STEM_ENGLISH_POSSESSIVE 256

@interface OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter : OrgApacheLuceneAnalysisTokenFilter {
 @public
  OrgApacheLuceneAnalysisUtilCharArraySet *protWords_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                             withByteArray:(IOSByteArray *)charTypeTable
                                                   withInt:(jint)configurationFlags
               withOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)protWords;

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                                   withInt:(jint)configurationFlags
               withOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)protWords;

- (jboolean)incrementToken;

- (void)reset;

#pragma mark Package-Private

+ (jboolean)isAlphaWithInt:(jint)type;

+ (jboolean)isDigitWithInt:(jint)type;

+ (jboolean)isSubwordDelimWithInt:(jint)type;

+ (jboolean)isUpperWithInt:(jint)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, protWords_, OrgApacheLuceneAnalysisUtilCharArraySet *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, LOWER, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, UPPER, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, DIGIT, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, SUBWORD_DELIM, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, ALPHA, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, ALPHANUM, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, GENERATE_WORD_PARTS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, GENERATE_NUMBER_PARTS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, CATENATE_WORDS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, CATENATE_NUMBERS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, CATENATE_ALL, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, PRESERVE_ORIGINAL, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, SPLIT_ON_CASE_CHANGE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, SPLIT_ON_NUMERICS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter, STEM_ENGLISH_POSSESSIVE, jint)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_initWithOrgApacheLuceneAnalysisTokenStream_withByteArray_withInt_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg, IOSByteArray *charTypeTable, jint configurationFlags, OrgApacheLuceneAnalysisUtilCharArraySet *protWords);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter *new_OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_initWithOrgApacheLuceneAnalysisTokenStream_withByteArray_withInt_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisTokenStream *inArg, IOSByteArray *charTypeTable, jint configurationFlags, OrgApacheLuceneAnalysisUtilCharArraySet *protWords) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg, jint configurationFlags, OrgApacheLuceneAnalysisUtilCharArraySet *protWords);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter *new_OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisTokenStream *inArg, jint configurationFlags, OrgApacheLuceneAnalysisUtilCharArraySet *protWords) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jboolean OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_isAlphaWithInt_(jint type);

FOUNDATION_EXPORT jboolean OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_isDigitWithInt_(jint type);

FOUNDATION_EXPORT jboolean OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_isSubwordDelimWithInt_(jint type);

FOUNDATION_EXPORT jboolean OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_isUpperWithInt_(jint type);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter)

#endif

#if !defined (_OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation_) && (OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_INCLUDE_ALL || OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation_INCLUDE)
#define _OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation_

@class IOSCharArray;
@class JavaLangStringBuilder;
@class OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter;

@interface OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation : NSObject {
 @public
  JavaLangStringBuilder *buffer_;
  jint startOffset_;
  jint endOffset_;
  jint type_;
  jint subwordCount_;
}

#pragma mark Package-Private

- (instancetype)initWithOrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter:(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter *)outer$;

- (void)appendWithCharArray:(IOSCharArray *)text
                    withInt:(jint)offset
                    withInt:(jint)length;

- (void)clear;

- (jboolean)isEmpty;

- (void)write;

- (void)writeAndClear;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation, buffer_, JavaLangStringBuilder *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation_initWithOrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation *self, OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter *outer$);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation *new_OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation_initWithOrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_WordDelimiterConcatenation)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisMiscellaneousLucene47WordDelimiterFilter_INCLUDE_ALL")
