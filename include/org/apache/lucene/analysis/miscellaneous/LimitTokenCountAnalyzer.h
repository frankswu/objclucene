//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountAnalyzer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_RESTRICT
#define OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_) && (OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_INCLUDE_ALL || OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_INCLUDE)
#define _OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_

#define OrgApacheLuceneAnalysisAnalyzerWrapper_RESTRICT 1
#define OrgApacheLuceneAnalysisAnalyzerWrapper_INCLUDE 1
#include "org/apache/lucene/analysis/AnalyzerWrapper.h"

@class OrgApacheLuceneAnalysisAnalyzer;
@class OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;

@interface OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer : OrgApacheLuceneAnalysisAnalyzerWrapper

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)delegate
                                                withInt:(jint)maxTokenCount;

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)delegate
                                                withInt:(jint)maxTokenCount
                                            withBoolean:(jboolean)consumeAllTokens;

- (NSString *)description;

#pragma mark Protected

- (OrgApacheLuceneAnalysisAnalyzer *)getWrappedAnalyzerWithNSString:(NSString *)fieldName;

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)wrapComponentsWithNSString:(NSString *)fieldName
                            withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_withInt_(OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer *self, OrgApacheLuceneAnalysisAnalyzer *delegate, jint maxTokenCount);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer *new_OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_withInt_(OrgApacheLuceneAnalysisAnalyzer *delegate, jint maxTokenCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer *self, OrgApacheLuceneAnalysisAnalyzer *delegate, jint maxTokenCount, jboolean consumeAllTokens);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer *new_OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(OrgApacheLuceneAnalysisAnalyzer *delegate, jint maxTokenCount, jboolean consumeAllTokens) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisMiscellaneousLimitTokenCountAnalyzer_INCLUDE_ALL")
