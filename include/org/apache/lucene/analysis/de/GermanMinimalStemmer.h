//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/de/GermanMinimalStemmer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisDeGermanMinimalStemmer")
#ifdef RESTRICT_OrgApacheLuceneAnalysisDeGermanMinimalStemmer
#define INCLUDE_ALL_OrgApacheLuceneAnalysisDeGermanMinimalStemmer 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisDeGermanMinimalStemmer 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisDeGermanMinimalStemmer

#if !defined (OrgApacheLuceneAnalysisDeGermanMinimalStemmer_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisDeGermanMinimalStemmer || defined(INCLUDE_OrgApacheLuceneAnalysisDeGermanMinimalStemmer))
#define OrgApacheLuceneAnalysisDeGermanMinimalStemmer_

@class IOSCharArray;

/*!
 @brief Minimal Stemmer for German.
 <p>
 This stemmer implements the following algorithm:
 <i>Morphologie et recherche d'information</i>
 Jacques Savoy.
 */
@interface OrgApacheLuceneAnalysisDeGermanMinimalStemmer : NSObject

#pragma mark Public

- (instancetype)init;

- (jint)stemWithCharArray:(IOSCharArray *)s
                  withInt:(jint)len;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisDeGermanMinimalStemmer)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisDeGermanMinimalStemmer_init(OrgApacheLuceneAnalysisDeGermanMinimalStemmer *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisDeGermanMinimalStemmer *new_OrgApacheLuceneAnalysisDeGermanMinimalStemmer_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisDeGermanMinimalStemmer *create_OrgApacheLuceneAnalysisDeGermanMinimalStemmer_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisDeGermanMinimalStemmer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisDeGermanMinimalStemmer")
