//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/ngram/Lucene43NGramTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_RESTRICT
#define OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_) && (OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_INCLUDE_ALL || OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_INCLUDE)
#define _OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_

#define OrgApacheLuceneAnalysisTokenizer_RESTRICT 1
#define OrgApacheLuceneAnalysisTokenizer_INCLUDE 1
#include "org/apache/lucene/analysis/Tokenizer.h"

@class OrgApacheLuceneUtilAttributeFactory;

#define OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_DEFAULT_MIN_NGRAM_SIZE 1
#define OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_DEFAULT_MAX_NGRAM_SIZE 2

@interface OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer : OrgApacheLuceneAnalysisTokenizer

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory
                                                    withInt:(jint)minGram
                                                    withInt:(jint)maxGram;

- (instancetype)initWithInt:(jint)minGram
                    withInt:(jint)maxGram;

- (void)end;

- (jboolean)incrementToken;

- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer, DEFAULT_MIN_NGRAM_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer, DEFAULT_MAX_NGRAM_SIZE, jint)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_initWithInt_withInt_(OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer *self, jint minGram, jint maxGram);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer *new_OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_initWithInt_withInt_(jint minGram, jint maxGram) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withInt_withInt_(OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer *self, OrgApacheLuceneUtilAttributeFactory *factory, jint minGram, jint maxGram);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer *new_OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withInt_withInt_(OrgApacheLuceneUtilAttributeFactory *factory, jint minGram, jint maxGram) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_init(OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer *new_OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisNgramLucene43NGramTokenizer_INCLUDE_ALL")
