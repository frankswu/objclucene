//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/Analyzer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneAnalysisAnalyzer_INCLUDE_ALL")
#if OrgApacheLuceneAnalysisAnalyzer_RESTRICT
#define OrgApacheLuceneAnalysisAnalyzer_INCLUDE_ALL 0
#else
#define OrgApacheLuceneAnalysisAnalyzer_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneAnalysisAnalyzer_RESTRICT

#if !defined (_OrgApacheLuceneAnalysisAnalyzer_) && (OrgApacheLuceneAnalysisAnalyzer_INCLUDE_ALL || OrgApacheLuceneAnalysisAnalyzer_INCLUDE)
#define _OrgApacheLuceneAnalysisAnalyzer_

#define JavaIoCloseable_RESTRICT 1
#define JavaIoCloseable_INCLUDE 1
#include "java/io/Closeable.h"

@class JavaIoReader;
@class OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;
@class OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;
@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneUtilCloseableThreadLocal;
@class OrgApacheLuceneUtilVersion;

@interface OrgApacheLuceneAnalysisAnalyzer : NSObject < JavaIoCloseable > {
 @public
  OrgApacheLuceneUtilCloseableThreadLocal *storedValue_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)reuseStrategy;

- (void)close;

- (jint)getOffsetGapWithNSString:(NSString *)fieldName;

- (jint)getPositionIncrementGapWithNSString:(NSString *)fieldName;

- (OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)getReuseStrategy;

- (OrgApacheLuceneUtilVersion *)getVersion;

- (void)setVersionWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)v;

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamWithNSString:(NSString *)fieldName
                                               withJavaIoReader:(JavaIoReader *)reader;

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamWithNSString:(NSString *)fieldName
                                                   withNSString:(NSString *)text;

#pragma mark Protected

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)createComponentsWithNSString:(NSString *)fieldName;

- (JavaIoReader *)initReaderWithNSString:(NSString *)fieldName
                        withJavaIoReader:(JavaIoReader *)reader OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisAnalyzer)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisAnalyzer, storedValue_, OrgApacheLuceneUtilCloseableThreadLocal *)

FOUNDATION_EXPORT OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *OrgApacheLuceneAnalysisAnalyzer_GLOBAL_REUSE_STRATEGY_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisAnalyzer, GLOBAL_REUSE_STRATEGY_, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)

FOUNDATION_EXPORT OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *OrgApacheLuceneAnalysisAnalyzer_PER_FIELD_REUSE_STRATEGY_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisAnalyzer, PER_FIELD_REUSE_STRATEGY_, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisAnalyzer_init(OrgApacheLuceneAnalysisAnalyzer *self);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisAnalyzer *self, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisAnalyzer)

#endif

#if !defined (_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_) && (OrgApacheLuceneAnalysisAnalyzer_INCLUDE_ALL || OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_INCLUDE)
#define _OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_

@class JavaIoReader;
@class OrgApacheLuceneAnalysisReusableStringReader;
@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneAnalysisTokenizer;

@interface OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents : NSObject {
 @public
  OrgApacheLuceneAnalysisTokenizer *source_;
  OrgApacheLuceneAnalysisTokenStream *sink_;
  OrgApacheLuceneAnalysisReusableStringReader *reusableStringReader_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneAnalysisTokenizer:(OrgApacheLuceneAnalysisTokenizer *)source;

- (instancetype)initWithOrgApacheLuceneAnalysisTokenizer:(OrgApacheLuceneAnalysisTokenizer *)source
                  withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)result;

- (OrgApacheLuceneAnalysisTokenizer *)getTokenizer;

- (OrgApacheLuceneAnalysisTokenStream *)getTokenStream;

#pragma mark Protected

- (void)setReaderWithJavaIoReader:(JavaIoReader *)reader;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents, source_, OrgApacheLuceneAnalysisTokenizer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents, sink_, OrgApacheLuceneAnalysisTokenStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents, reusableStringReader_, OrgApacheLuceneAnalysisReusableStringReader *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *self, OrgApacheLuceneAnalysisTokenizer *source, OrgApacheLuceneAnalysisTokenStream *result);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *new_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenizer *source, OrgApacheLuceneAnalysisTokenStream *result) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *self, OrgApacheLuceneAnalysisTokenizer *source);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *new_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_(OrgApacheLuceneAnalysisTokenizer *source) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents)

#endif

#if !defined (_OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_) && (OrgApacheLuceneAnalysisAnalyzer_INCLUDE_ALL || OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_INCLUDE)
#define _OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_

@class OrgApacheLuceneAnalysisAnalyzer;
@class OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;

@interface OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy : NSObject

#pragma mark Public

- (instancetype)init;

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName;

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components;

#pragma mark Protected

- (id)getStoredValueWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer;

- (void)setStoredValueWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                   withId:(id)storedValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_init(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy)

#endif

#pragma pop_macro("OrgApacheLuceneAnalysisAnalyzer_INCLUDE_ALL")
