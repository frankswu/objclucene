//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/TermVectorsConsumerPerField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneIndexTermVectorsConsumerPerField_INCLUDE_ALL")
#if OrgApacheLuceneIndexTermVectorsConsumerPerField_RESTRICT
#define OrgApacheLuceneIndexTermVectorsConsumerPerField_INCLUDE_ALL 0
#else
#define OrgApacheLuceneIndexTermVectorsConsumerPerField_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneIndexTermVectorsConsumerPerField_RESTRICT

#if !defined (_OrgApacheLuceneIndexTermVectorsConsumerPerField_) && (OrgApacheLuceneIndexTermVectorsConsumerPerField_INCLUDE_ALL || OrgApacheLuceneIndexTermVectorsConsumerPerField_INCLUDE)
#define _OrgApacheLuceneIndexTermVectorsConsumerPerField_

#define OrgApacheLuceneIndexTermsHashPerField_RESTRICT 1
#define OrgApacheLuceneIndexTermsHashPerField_INCLUDE 1
#include "org/apache/lucene/index/TermsHashPerField.h"

@class OrgApacheLuceneIndexFieldInfo;
@class OrgApacheLuceneIndexFieldInvertState;
@class OrgApacheLuceneIndexParallelPostingsArray;
@class OrgApacheLuceneIndexTermVectorsConsumer;
@class OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray;
@protocol OrgApacheLuceneAnalysisTokenattributesOffsetAttribute;
@protocol OrgApacheLuceneAnalysisTokenattributesPayloadAttribute;
@protocol OrgApacheLuceneIndexIndexableField;

@interface OrgApacheLuceneIndexTermVectorsConsumerPerField : OrgApacheLuceneIndexTermsHashPerField {
 @public
  OrgApacheLuceneIndexTermVectorsConsumer *termsWriter_;
  jboolean doVectors_;
  jboolean doVectorPositions_;
  jboolean doVectorOffsets_;
  jboolean doVectorPayloads_;
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAttribute_;
  id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute> payloadAttribute_;
  jboolean hasPayloads_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneIndexFieldInvertState:(OrgApacheLuceneIndexFieldInvertState *)invertState
                 withOrgApacheLuceneIndexTermVectorsConsumer:(OrgApacheLuceneIndexTermVectorsConsumer *)termsWriter
                           withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo;

- (void)newPostingsArray OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

- (void)addTermWithInt:(jint)termID;

- (OrgApacheLuceneIndexParallelPostingsArray *)createPostingsArrayWithInt:(jint)size;

- (void)finish;

- (void)finishDocument;

- (void)newTermWithInt:(jint)termID OBJC_METHOD_FAMILY_NONE;

- (jboolean)startWithOrgApacheLuceneIndexIndexableField:(id<OrgApacheLuceneIndexIndexableField>)field
                                            withBoolean:(jboolean)first;

- (void)writeProxWithOrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray:(OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray *)postings
                                                                                      withInt:(jint)termID;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexTermVectorsConsumerPerField)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermVectorsConsumerPerField, termsWriter_, OrgApacheLuceneIndexTermVectorsConsumer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermVectorsConsumerPerField, offsetAttribute_, id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermVectorsConsumerPerField, payloadAttribute_, id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>)

FOUNDATION_EXPORT void OrgApacheLuceneIndexTermVectorsConsumerPerField_initWithOrgApacheLuceneIndexFieldInvertState_withOrgApacheLuceneIndexTermVectorsConsumer_withOrgApacheLuceneIndexFieldInfo_(OrgApacheLuceneIndexTermVectorsConsumerPerField *self, OrgApacheLuceneIndexFieldInvertState *invertState, OrgApacheLuceneIndexTermVectorsConsumer *termsWriter, OrgApacheLuceneIndexFieldInfo *fieldInfo);

FOUNDATION_EXPORT OrgApacheLuceneIndexTermVectorsConsumerPerField *new_OrgApacheLuceneIndexTermVectorsConsumerPerField_initWithOrgApacheLuceneIndexFieldInvertState_withOrgApacheLuceneIndexTermVectorsConsumer_withOrgApacheLuceneIndexFieldInfo_(OrgApacheLuceneIndexFieldInvertState *invertState, OrgApacheLuceneIndexTermVectorsConsumer *termsWriter, OrgApacheLuceneIndexFieldInfo *fieldInfo) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexTermVectorsConsumerPerField)

#endif

#if !defined (_OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray_) && (OrgApacheLuceneIndexTermVectorsConsumerPerField_INCLUDE_ALL || OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray_INCLUDE)
#define _OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray_

#define OrgApacheLuceneIndexParallelPostingsArray_RESTRICT 1
#define OrgApacheLuceneIndexParallelPostingsArray_INCLUDE 1
#include "org/apache/lucene/index/ParallelPostingsArray.h"

@class IOSIntArray;

@interface OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray : OrgApacheLuceneIndexParallelPostingsArray {
 @public
  IOSIntArray *freqs_;
  IOSIntArray *lastOffsets_;
  IOSIntArray *lastPositions_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)size;

#pragma mark Package-Private

- (jint)bytesPerPosting;

- (void)copyToWithOrgApacheLuceneIndexParallelPostingsArray:(OrgApacheLuceneIndexParallelPostingsArray *)toArray
                                                    withInt:(jint)numToCopy OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneIndexParallelPostingsArray *)newInstanceWithInt:(jint)size OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray, freqs_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray, lastOffsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray, lastPositions_, IOSIntArray *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray_initWithInt_(OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray *self, jint size);

FOUNDATION_EXPORT OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray *new_OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray_initWithInt_(jint size) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexTermVectorsConsumerPerField_TermVectorsPostingsArray)

#endif

#pragma pop_macro("OrgApacheLuceneIndexTermVectorsConsumerPerField_INCLUDE_ALL")
