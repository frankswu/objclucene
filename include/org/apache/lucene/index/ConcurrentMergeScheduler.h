//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneIndexConcurrentMergeScheduler_INCLUDE_ALL")
#if OrgApacheLuceneIndexConcurrentMergeScheduler_RESTRICT
#define OrgApacheLuceneIndexConcurrentMergeScheduler_INCLUDE_ALL 0
#else
#define OrgApacheLuceneIndexConcurrentMergeScheduler_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneIndexConcurrentMergeScheduler_RESTRICT

#if !defined (_OrgApacheLuceneIndexConcurrentMergeScheduler_) && (OrgApacheLuceneIndexConcurrentMergeScheduler_INCLUDE_ALL || OrgApacheLuceneIndexConcurrentMergeScheduler_INCLUDE)
#define _OrgApacheLuceneIndexConcurrentMergeScheduler_

#define OrgApacheLuceneIndexMergeScheduler_RESTRICT 1
#define OrgApacheLuceneIndexMergeScheduler_INCLUDE 1
#include "org/apache/lucene/index/MergeScheduler.h"

@class JavaLangThrowable;
@class OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread;
@class OrgApacheLuceneIndexIndexWriter;
@class OrgApacheLuceneIndexMergePolicy_OneMerge;
@class OrgApacheLuceneIndexMergeTriggerEnum;
@class OrgApacheLuceneStoreDirectory;
@protocol JavaUtilList;

#define OrgApacheLuceneIndexConcurrentMergeScheduler_AUTO_DETECT_MERGES_AND_THREADS -1

@interface OrgApacheLuceneIndexConcurrentMergeScheduler : OrgApacheLuceneIndexMergeScheduler {
 @public
  id<JavaUtilList> mergeThreads_;
  jint mergeThreadCount_;
  jdouble targetMBPerSec_;
}

#pragma mark Public

- (instancetype)init;

- (void)close;

- (void)disableAutoIOThrottle;

- (void)enableAutoIOThrottle;

- (jboolean)getAutoIOThrottle;

- (jdouble)getForceMergeMBPerSec;

- (jdouble)getIORateLimitMBPerSec;

- (jint)getMaxMergeCount;

- (jint)getMaxThreadCount;

- (void)mergeWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
        withOrgApacheLuceneIndexMergeTriggerEnum:(OrgApacheLuceneIndexMergeTriggerEnum *)trigger
                                     withBoolean:(jboolean)newMergesFound;

- (jint)mergeThreadCount;

- (void)setDefaultMaxMergesAndThreadsWithBoolean:(jboolean)spins;

- (void)setForceMergeMBPerSecWithDouble:(jdouble)v;

- (void)setMaxMergesAndThreadsWithInt:(jint)maxMergeCount
                              withInt:(jint)maxThreadCount;

- (void)sync;

- (NSString *)description;

#pragma mark Protected

- (void)doMergeWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
      withOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge;

- (void)doStall;

- (OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread *)getMergeThreadWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                                                                   withOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge;

- (void)handleMergeExceptionWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                        withJavaLangThrowable:(JavaLangThrowable *)exc;

- (jboolean)maybeStallWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

- (void)targetMBPerSecChanged;

- (void)updateMergeThreads;

#pragma mark Package-Private

- (void)clearSuppressExceptions;

- (void)removeMergeThread;

- (void)setSuppressExceptions;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexConcurrentMergeScheduler)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexConcurrentMergeScheduler, mergeThreads_, id<JavaUtilList>)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneIndexConcurrentMergeScheduler, AUTO_DETECT_MERGES_AND_THREADS, jint)

FOUNDATION_EXPORT NSString *OrgApacheLuceneIndexConcurrentMergeScheduler_DEFAULT_CPU_CORE_COUNT_PROPERTY_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneIndexConcurrentMergeScheduler, DEFAULT_CPU_CORE_COUNT_PROPERTY_, NSString *)

FOUNDATION_EXPORT NSString *OrgApacheLuceneIndexConcurrentMergeScheduler_DEFAULT_SPINS_PROPERTY_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneIndexConcurrentMergeScheduler, DEFAULT_SPINS_PROPERTY_, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexConcurrentMergeScheduler_init(OrgApacheLuceneIndexConcurrentMergeScheduler *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexConcurrentMergeScheduler *new_OrgApacheLuceneIndexConcurrentMergeScheduler_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexConcurrentMergeScheduler)

#endif

#if !defined (_OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread_) && (OrgApacheLuceneIndexConcurrentMergeScheduler_INCLUDE_ALL || OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread_INCLUDE)
#define _OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread_

#define JavaLangThread_RESTRICT 1
#define JavaLangThread_INCLUDE 1
#include "java/lang/Thread.h"

#define JavaLangComparable_RESTRICT 1
#define JavaLangComparable_INCLUDE 1
#include "java/lang/Comparable.h"

@class OrgApacheLuceneIndexConcurrentMergeScheduler;
@class OrgApacheLuceneIndexIndexWriter;
@class OrgApacheLuceneIndexMergePolicy_OneMerge;

@interface OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread : JavaLangThread < JavaLangComparable > {
 @public
  OrgApacheLuceneIndexIndexWriter *writer_;
  OrgApacheLuceneIndexMergePolicy_OneMerge *merge_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneIndexConcurrentMergeScheduler:(OrgApacheLuceneIndexConcurrentMergeScheduler *)outer$
                                 withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                        withOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge;

- (jint)compareToWithId:(OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread *)other;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread, writer_, OrgApacheLuceneIndexIndexWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread, merge_, OrgApacheLuceneIndexMergePolicy_OneMerge *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread_initWithOrgApacheLuceneIndexConcurrentMergeScheduler_withOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexMergePolicy_OneMerge_(OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread *self, OrgApacheLuceneIndexConcurrentMergeScheduler *outer$, OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexMergePolicy_OneMerge *merge);

FOUNDATION_EXPORT OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread *new_OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread_initWithOrgApacheLuceneIndexConcurrentMergeScheduler_withOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexMergePolicy_OneMerge_(OrgApacheLuceneIndexConcurrentMergeScheduler *outer$, OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexMergePolicy_OneMerge *merge) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexConcurrentMergeScheduler_MergeThread)

#endif

#pragma pop_macro("OrgApacheLuceneIndexConcurrentMergeScheduler_INCLUDE_ALL")
