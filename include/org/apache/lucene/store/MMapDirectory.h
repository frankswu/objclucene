//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/MMapDirectory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneStoreMMapDirectory_INCLUDE_ALL")
#if OrgApacheLuceneStoreMMapDirectory_RESTRICT
#define OrgApacheLuceneStoreMMapDirectory_INCLUDE_ALL 0
#else
#define OrgApacheLuceneStoreMMapDirectory_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneStoreMMapDirectory_RESTRICT

#if !defined (_OrgApacheLuceneStoreMMapDirectory_) && (OrgApacheLuceneStoreMMapDirectory_INCLUDE_ALL || OrgApacheLuceneStoreMMapDirectory_INCLUDE)
#define _OrgApacheLuceneStoreMMapDirectory_

#define OrgApacheLuceneStoreFSDirectory_RESTRICT 1
#define OrgApacheLuceneStoreFSDirectory_INCLUDE 1
#include "org/apache/lucene/store/FSDirectory.h"

@class IOSObjectArray;
@class JavaNioChannelsFileChannel;
@class OrgApacheLuceneStoreIOContext;
@class OrgApacheLuceneStoreIndexInput;
@class OrgApacheLuceneStoreLockFactory;
@class OrgLukhnosPortmobileFilePath;

@interface OrgApacheLuceneStoreMMapDirectory : OrgApacheLuceneStoreFSDirectory {
 @public
  jint chunkSizePower_;
}

#pragma mark Public

- (instancetype)initWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
                 withOrgApacheLuceneStoreLockFactory:(OrgApacheLuceneStoreLockFactory *)lockFactory;

- (instancetype)initWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
                 withOrgApacheLuceneStoreLockFactory:(OrgApacheLuceneStoreLockFactory *)lockFactory
                                             withInt:(jint)maxChunkSize;

- (jboolean)getUseUnmap;

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name
                        withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context;

#pragma mark Package-Private

- (IOSObjectArray *)mapWithNSString:(NSString *)resourceDescription
     withJavaNioChannelsFileChannel:(JavaNioChannelsFileChannel *)fc
                           withLong:(jlong)offset
                           withLong:(jlong)length;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneStoreMMapDirectory)

FOUNDATION_EXPORT jint OrgApacheLuceneStoreMMapDirectory_DEFAULT_MAX_CHUNK_SIZE_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneStoreMMapDirectory, DEFAULT_MAX_CHUNK_SIZE_, jint)

FOUNDATION_EXPORT jboolean OrgApacheLuceneStoreMMapDirectory_UNMAP_SUPPORTED_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneStoreMMapDirectory, UNMAP_SUPPORTED_, jboolean)

FOUNDATION_EXPORT void OrgApacheLuceneStoreMMapDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgApacheLuceneStoreMMapDirectory *self, OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory);

FOUNDATION_EXPORT OrgApacheLuceneStoreMMapDirectory *new_OrgApacheLuceneStoreMMapDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneStoreMMapDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_withInt_(OrgApacheLuceneStoreMMapDirectory *self, OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory, jint maxChunkSize);

FOUNDATION_EXPORT OrgApacheLuceneStoreMMapDirectory *new_OrgApacheLuceneStoreMMapDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_withInt_(OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory, jint maxChunkSize) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneStoreMMapDirectory)

#endif

#pragma pop_macro("OrgApacheLuceneStoreMMapDirectory_INCLUDE_ALL")
