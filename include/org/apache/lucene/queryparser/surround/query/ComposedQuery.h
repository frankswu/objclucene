//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/ComposedQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneQueryparserSurroundQueryComposedQuery_INCLUDE_ALL")
#if OrgApacheLuceneQueryparserSurroundQueryComposedQuery_RESTRICT
#define OrgApacheLuceneQueryparserSurroundQueryComposedQuery_INCLUDE_ALL 0
#else
#define OrgApacheLuceneQueryparserSurroundQueryComposedQuery_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneQueryparserSurroundQueryComposedQuery_RESTRICT

#if !defined (_OrgApacheLuceneQueryparserSurroundQueryComposedQuery_) && (OrgApacheLuceneQueryparserSurroundQueryComposedQuery_INCLUDE_ALL || OrgApacheLuceneQueryparserSurroundQueryComposedQuery_INCLUDE)
#define _OrgApacheLuceneQueryparserSurroundQueryComposedQuery_

#define OrgApacheLuceneQueryparserSurroundQuerySrndQuery_RESTRICT 1
#define OrgApacheLuceneQueryparserSurroundQuerySrndQuery_INCLUDE 1
#include "org/apache/lucene/queryparser/surround/query/SrndQuery.h"

@class JavaLangStringBuilder;
@class OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory;
@protocol JavaUtilIterator;
@protocol JavaUtilList;

@interface OrgApacheLuceneQueryparserSurroundQueryComposedQuery : OrgApacheLuceneQueryparserSurroundQuerySrndQuery {
 @public
  NSString *opName_;
  id<JavaUtilList> queries_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)qs
                         withBoolean:(jboolean)operatorInfix
                        withNSString:(NSString *)opName;

- (jint)getNrSubQueries;

- (NSString *)getOperatorName;

- (id<JavaUtilIterator>)getSubQueriesIterator;

- (OrgApacheLuceneQueryparserSurroundQuerySrndQuery *)getSubQueryWithInt:(jint)qn;

- (jboolean)isFieldsSubQueryAcceptable;

- (jboolean)isOperatorInfix;

- (id<JavaUtilList>)makeLuceneSubQueriesFieldWithNSString:(NSString *)fn
withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf;

- (NSString *)description;

#pragma mark Protected

- (NSString *)getBracketClose;

- (NSString *)getBracketOpen;

- (NSString *)getPrefixSeparator;

- (void)infixToStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)r;

- (void)prefixToStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)r;

- (void)recomposeWithJavaUtilList:(id<JavaUtilList>)queries;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserSurroundQueryComposedQuery)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserSurroundQueryComposedQuery, opName_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserSurroundQueryComposedQuery, queries_, id<JavaUtilList>)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserSurroundQueryComposedQuery_initWithJavaUtilList_withBoolean_withNSString_(OrgApacheLuceneQueryparserSurroundQueryComposedQuery *self, id<JavaUtilList> qs, jboolean operatorInfix, NSString *opName);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserSurroundQueryComposedQuery)

#endif

#pragma pop_macro("OrgApacheLuceneQueryparserSurroundQueryComposedQuery_INCLUDE_ALL")
