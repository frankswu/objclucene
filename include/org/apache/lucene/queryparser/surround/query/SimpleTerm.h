//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/SimpleTerm.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_INCLUDE_ALL")
#if OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_RESTRICT
#define OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_INCLUDE_ALL 0
#else
#define OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_RESTRICT

#if !defined (_OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_) && (OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_INCLUDE_ALL || OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_INCLUDE)
#define _OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_

#define OrgApacheLuceneQueryparserSurroundQuerySrndQuery_RESTRICT 1
#define OrgApacheLuceneQueryparserSurroundQuerySrndQuery_INCLUDE 1
#include "org/apache/lucene/queryparser/surround/query/SrndQuery.h"

#define OrgApacheLuceneQueryparserSurroundQueryDistanceSubQuery_RESTRICT 1
#define OrgApacheLuceneQueryparserSurroundQueryDistanceSubQuery_INCLUDE 1
#include "org/apache/lucene/queryparser/surround/query/DistanceSubQuery.h"

#define JavaLangComparable_RESTRICT 1
#define JavaLangComparable_INCLUDE 1
#include "java/lang/Comparable.h"

@class JavaLangStringBuilder;
@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory;
@class OrgApacheLuceneQueryparserSurroundQuerySpanNearClauseFactory;
@class OrgApacheLuceneSearchQuery;
@protocol OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor;

@interface OrgApacheLuceneQueryparserSurroundQuerySimpleTerm : OrgApacheLuceneQueryparserSurroundQuerySrndQuery < OrgApacheLuceneQueryparserSurroundQueryDistanceSubQuery, JavaLangComparable >

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)q;

- (void)addSpanQueriesWithOrgApacheLuceneQueryparserSurroundQuerySpanNearClauseFactory:(OrgApacheLuceneQueryparserSurroundQuerySpanNearClauseFactory *)sncf;

- (jint)compareToWithId:(OrgApacheLuceneQueryparserSurroundQuerySimpleTerm *)ost;

- (NSString *)distanceSubQueryNotAllowed;

- (NSString *)getFieldOperator;

- (NSString *)getQuote;

- (OrgApacheLuceneSearchQuery *)makeLuceneQueryFieldNoBoostWithNSString:(NSString *)fieldName
           withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf;

- (NSString *)description;

- (NSString *)toStringUnquoted;

- (void)visitMatchingTermsWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withNSString:(NSString *)fieldName
withOrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor:(id<OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor>)mtv;

#pragma mark Protected

- (void)suffixToStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)r;

#pragma mark Package-Private

- (jboolean)isQuoted;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserSurroundQuerySimpleTerm)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_initWithBoolean_(OrgApacheLuceneQueryparserSurroundQuerySimpleTerm *self, jboolean q);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserSurroundQuerySimpleTerm)

#endif

#if !defined (_OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor_) && (OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_INCLUDE_ALL || OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor_INCLUDE)
#define _OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor_

@class OrgApacheLuceneIndexTerm;

@protocol OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor < NSObject, JavaObject >

- (void)visitMatchingTermWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor)

#endif

#pragma pop_macro("OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_INCLUDE_ALL")
