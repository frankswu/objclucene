//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler

#if !defined (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler))
#define OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler 1
#include "org/apache/lucene/queryparser/flexible/core/config/QueryConfigHandler.h"

/*!
 @brief This query configuration handler is used for almost every processor defined
 in the <code>StandardQueryNodeProcessorPipeline</code> processor pipeline.
 It holds
 configuration methods that reproduce the configuration methods that could be set on the old
 lucene 2.4 QueryParser class.
 - seealso: StandardQueryNodeProcessorPipeline
 */
@interface OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler : OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler *self);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler *new_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler *create_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler)

#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys))
#define OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_

@class OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;

/*!
 @brief Class holding keys for StandardQueryNodeProcessorPipeline options.
 */
@interface OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys : NSObject

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)ENABLE_POSITION_INCREMENTS;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)LOWERCASE_EXPANDED_TERMS;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)ALLOW_LEADING_WILDCARD;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)ANALYZER;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)DEFAULT_OPERATOR;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)PHRASE_SLOP;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)LOCALE;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)TIMEZONE;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)MULTI_TERM_REWRITE_METHOD;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)MULTI_FIELDS;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)FIELD_BOOST_MAP;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)FIELD_DATE_RESOLUTION_MAP;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)FUZZY_CONFIG;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)DATE_RESOLUTION;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)BOOST;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)NUMERIC_CONFIG;

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)NUMERIC_CONFIG_MAP;

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys)

/*!
 @brief Key used to set whether position increments is enabled
 - seealso: StandardQueryParser#setEnablePositionIncrements(boolean)
 - seealso: StandardQueryParser#getEnablePositionIncrements()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_ENABLE_POSITION_INCREMENTS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ENABLE_POSITION_INCREMENTS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ENABLE_POSITION_INCREMENTS, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set whether expanded terms should be lower-cased
 - seealso: StandardQueryParser#setLowercaseExpandedTerms(boolean)
 - seealso: StandardQueryParser#getLowercaseExpandedTerms()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_LOWERCASE_EXPANDED_TERMS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOWERCASE_EXPANDED_TERMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOWERCASE_EXPANDED_TERMS, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set whether leading wildcards are supported
 - seealso: StandardQueryParser#setAllowLeadingWildcard(boolean)
 - seealso: StandardQueryParser#getAllowLeadingWildcard()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_ALLOW_LEADING_WILDCARD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ALLOW_LEADING_WILDCARD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ALLOW_LEADING_WILDCARD, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set the <code>Analyzer</code> used for terms found in the query
 - seealso: StandardQueryParser#setAnalyzer(Analyzer)
 - seealso: StandardQueryParser#getAnalyzer()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_ANALYZER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ANALYZER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ANALYZER, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set the default boolean operator
 - seealso: StandardQueryParser#setDefaultOperator(org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler.Operator)
 - seealso: StandardQueryParser#getDefaultOperator()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_DEFAULT_OPERATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DEFAULT_OPERATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, DEFAULT_OPERATOR, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set the default phrase slop
 - seealso: StandardQueryParser#setPhraseSlop(int)
 - seealso: StandardQueryParser#getPhraseSlop()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_PHRASE_SLOP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_PHRASE_SLOP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, PHRASE_SLOP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set the <code>Locale</code> used when parsing the query
 - seealso: StandardQueryParser#setLocale(Locale)
 - seealso: StandardQueryParser#getLocale()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_LOCALE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOCALE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOCALE, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_TIMEZONE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_TIMEZONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, TIMEZONE, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set the <code>RewriteMethod</code> used when creating queries
 - seealso: StandardQueryParser#setMultiTermRewriteMethod(org.apache.lucene.search.MultiTermQuery.RewriteMethod)
 - seealso: StandardQueryParser#getMultiTermRewriteMethod()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_MULTI_TERM_REWRITE_METHOD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_TERM_REWRITE_METHOD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, MULTI_TERM_REWRITE_METHOD, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set the fields a query should be expanded to when the field
 is <code>null</code>
 - seealso: StandardQueryParser#setMultiFields(CharSequence[])
 - seealso: StandardQueryParser#getMultiFields(CharSequence[])
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_MULTI_FIELDS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_FIELDS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, MULTI_FIELDS, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set a field to boost map that is used to set the boost for each field
 - seealso: StandardQueryParser#setFieldsBoost(Map)
 - seealso: StandardQueryParser#getFieldsBoost()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_FIELD_BOOST_MAP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_BOOST_MAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_BOOST_MAP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set a field to <code>Resolution</code> map that is used
 to normalize each date field value.
 - seealso: StandardQueryParser#setDateResolutionMap(Map)
 - seealso: StandardQueryParser#getDateResolutionMap()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_FIELD_DATE_RESOLUTION_MAP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_DATE_RESOLUTION_MAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_DATE_RESOLUTION_MAP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set the <code>FuzzyConfig</code> used to create fuzzy queries.
 - seealso: StandardQueryParser#setFuzzyMinSim(float)
 - seealso: StandardQueryParser#setFuzzyPrefixLength(int)
 - seealso: StandardQueryParser#getFuzzyMinSim()
 - seealso: StandardQueryParser#getFuzzyPrefixLength()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_FUZZY_CONFIG();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FUZZY_CONFIG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FUZZY_CONFIG, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set default <code>Resolution</code>.
 - seealso: StandardQueryParser#setDateResolution(org.apache.lucene.document.DateTools.Resolution)
 - seealso: StandardQueryParser#getDateResolution()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_DATE_RESOLUTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DATE_RESOLUTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, DATE_RESOLUTION, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set the boost value in <code>FieldConfig</code> objects.
 - seealso: StandardQueryParser#setFieldsBoost(Map)
 - seealso: StandardQueryParser#getFieldsBoost()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_BOOST();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_BOOST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, BOOST, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set a field to its <code>NumericConfig</code>.
 - seealso: StandardQueryParser#setNumericConfigMap(Map)
 - seealso: StandardQueryParser#getNumericConfigMap()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_NUMERIC_CONFIG();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, NUMERIC_CONFIG, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

/*!
 @brief Key used to set the <code>NumericConfig</code> in <code>FieldConfig</code> for numeric fields.
 - seealso: StandardQueryParser#setNumericConfigMap(Map)
 - seealso: StandardQueryParser#getNumericConfigMap()
 */
inline OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_get_NUMERIC_CONFIG_MAP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG_MAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, NUMERIC_CONFIG_MAP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys *self);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys *new_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys *create_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys)

#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator))
#define OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

typedef NS_ENUM(NSUInteger, OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_Enum) {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_Enum_AND = 0,
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_Enum_OR = 1,
};

/*!
 @brief Boolean Operator: AND or OR
 */
@interface OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator : JavaLangEnum < NSCopying >

+ (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)AND;

+ (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)OR;

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;
- (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_[];

inline OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_get_AND();
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, AND)

inline OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_get_OR();
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, OR)

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values();

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler")
