//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/StrictStringTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilStrictStringTokenizer_INCLUDE_ALL")
#if OrgApacheLuceneUtilStrictStringTokenizer_RESTRICT
#define OrgApacheLuceneUtilStrictStringTokenizer_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilStrictStringTokenizer_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilStrictStringTokenizer_RESTRICT

#if !defined (_OrgApacheLuceneUtilStrictStringTokenizer_) && (OrgApacheLuceneUtilStrictStringTokenizer_INCLUDE_ALL || OrgApacheLuceneUtilStrictStringTokenizer_INCLUDE)
#define _OrgApacheLuceneUtilStrictStringTokenizer_

@interface OrgApacheLuceneUtilStrictStringTokenizer : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)s
                        withChar:(jchar)delimiter;

- (jboolean)hasMoreTokens;

- (NSString *)nextToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilStrictStringTokenizer)

FOUNDATION_EXPORT void OrgApacheLuceneUtilStrictStringTokenizer_initWithNSString_withChar_(OrgApacheLuceneUtilStrictStringTokenizer *self, NSString *s, jchar delimiter);

FOUNDATION_EXPORT OrgApacheLuceneUtilStrictStringTokenizer *new_OrgApacheLuceneUtilStrictStringTokenizer_initWithNSString_withChar_(NSString *s, jchar delimiter) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilStrictStringTokenizer)

#endif

#pragma pop_macro("OrgApacheLuceneUtilStrictStringTokenizer_INCLUDE_ALL")
