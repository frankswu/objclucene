//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/ArrayUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilArrayUtil_INCLUDE_ALL")
#if OrgApacheLuceneUtilArrayUtil_RESTRICT
#define OrgApacheLuceneUtilArrayUtil_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilArrayUtil_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilArrayUtil_RESTRICT

#if !defined (_OrgApacheLuceneUtilArrayUtil_) && (OrgApacheLuceneUtilArrayUtil_INCLUDE_ALL || OrgApacheLuceneUtilArrayUtil_INCLUDE)
#define _OrgApacheLuceneUtilArrayUtil_

@class IOSByteArray;
@class IOSCharArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSLongArray;
@class IOSObjectArray;
@protocol JavaUtilComparator;

@interface OrgApacheLuceneUtilArrayUtil : NSObject

#pragma mark Public

+ (IOSByteArray *)growWithByteArray:(IOSByteArray *)array;

+ (IOSByteArray *)growWithByteArray:(IOSByteArray *)array
                            withInt:(jint)minSize;

+ (IOSCharArray *)growWithCharArray:(IOSCharArray *)array
                            withInt:(jint)minSize;

+ (IOSFloatArray *)growWithFloatArray:(IOSFloatArray *)array;

+ (IOSFloatArray *)growWithFloatArray:(IOSFloatArray *)array
                              withInt:(jint)minSize;

+ (IOSIntArray *)growWithIntArray:(IOSIntArray *)array;

+ (IOSIntArray *)growWithIntArray:(IOSIntArray *)array
                          withInt:(jint)minSize;

+ (IOSLongArray *)growWithLongArray:(IOSLongArray *)array
                            withInt:(jint)minSize;

+ (IOSObjectArray *)growWithNSObjectArray:(IOSObjectArray *)array
                                  withInt:(jint)minSize;

+ (jint)hashCodeWithCharArray:(IOSCharArray *)array
                      withInt:(jint)start
                      withInt:(jint)end;

+ (void)introSortWithJavaLangComparableArray:(IOSObjectArray *)a
                                     withInt:(jint)fromIndex
                                     withInt:(jint)toIndex;

+ (void)introSortWithNSObjectArray:(IOSObjectArray *)a
                           withInt:(jint)fromIndex
                           withInt:(jint)toIndex
            withJavaUtilComparator:(id<JavaUtilComparator>)comp;

+ (id<JavaUtilComparator>)naturalComparator;

+ (jint)oversizeWithInt:(jint)minTargetSize
                withInt:(jint)bytesPerElement;

+ (void)swapWithNSObjectArray:(IOSObjectArray *)arr
                      withInt:(jint)i
                      withInt:(jint)j;

+ (void)timSortWithJavaLangComparableArray:(IOSObjectArray *)a;

+ (void)timSortWithNSObjectArray:(IOSObjectArray *)a
          withJavaUtilComparator:(id<JavaUtilComparator>)comp;

+ (void)timSortWithJavaLangComparableArray:(IOSObjectArray *)a
                                   withInt:(jint)fromIndex
                                   withInt:(jint)toIndex;

+ (void)timSortWithNSObjectArray:(IOSObjectArray *)a
                         withInt:(jint)fromIndex
                         withInt:(jint)toIndex
          withJavaUtilComparator:(id<JavaUtilComparator>)comp;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilArrayUtil)

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_MAX_ARRAY_LENGTH_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH_, jint)

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(jint minTargetSize, jint bytesPerElement);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneUtilArrayUtil_growWithNSObjectArray_withInt_(IOSObjectArray *array, jint minSize);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheLuceneUtilArrayUtil_growWithFloatArray_withInt_(IOSFloatArray *array, jint minSize);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheLuceneUtilArrayUtil_growWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT IOSIntArray *OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(IOSIntArray *array, jint minSize);

FOUNDATION_EXPORT IOSIntArray *OrgApacheLuceneUtilArrayUtil_growWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT IOSLongArray *OrgApacheLuceneUtilArrayUtil_growWithLongArray_withInt_(IOSLongArray *array, jint minSize);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(IOSByteArray *array, jint minSize);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneUtilArrayUtil_growWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT IOSCharArray *OrgApacheLuceneUtilArrayUtil_growWithCharArray_withInt_(IOSCharArray *array, jint minSize);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_hashCodeWithCharArray_withInt_withInt_(IOSCharArray *array, jint start, jint end);

FOUNDATION_EXPORT id<JavaUtilComparator> OrgApacheLuceneUtilArrayUtil_naturalComparator();

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_swapWithNSObjectArray_withInt_withInt_(IOSObjectArray *arr, jint i, jint j);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_introSortWithNSObjectArray_withInt_withInt_withJavaUtilComparator_(IOSObjectArray *a, jint fromIndex, jint toIndex, id<JavaUtilComparator> comp);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_introSortWithJavaLangComparableArray_withInt_withInt_(IOSObjectArray *a, jint fromIndex, jint toIndex);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_timSortWithNSObjectArray_withInt_withInt_withJavaUtilComparator_(IOSObjectArray *a, jint fromIndex, jint toIndex, id<JavaUtilComparator> comp);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_timSortWithNSObjectArray_withJavaUtilComparator_(IOSObjectArray *a, id<JavaUtilComparator> comp);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_timSortWithJavaLangComparableArray_withInt_withInt_(IOSObjectArray *a, jint fromIndex, jint toIndex);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_timSortWithJavaLangComparableArray_(IOSObjectArray *a);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilArrayUtil)

#endif

#pragma pop_macro("OrgApacheLuceneUtilArrayUtil_INCLUDE_ALL")
