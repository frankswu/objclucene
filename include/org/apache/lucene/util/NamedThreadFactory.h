//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/NamedThreadFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilNamedThreadFactory_INCLUDE_ALL")
#if OrgApacheLuceneUtilNamedThreadFactory_RESTRICT
#define OrgApacheLuceneUtilNamedThreadFactory_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilNamedThreadFactory_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilNamedThreadFactory_RESTRICT

#if !defined (_OrgApacheLuceneUtilNamedThreadFactory_) && (OrgApacheLuceneUtilNamedThreadFactory_INCLUDE_ALL || OrgApacheLuceneUtilNamedThreadFactory_INCLUDE)
#define _OrgApacheLuceneUtilNamedThreadFactory_

#define JavaUtilConcurrentThreadFactory_RESTRICT 1
#define JavaUtilConcurrentThreadFactory_INCLUDE 1
#include "java/util/concurrent/ThreadFactory.h"

@interface OrgApacheLuceneUtilNamedThreadFactory : NSObject < JavaUtilConcurrentThreadFactory >

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilNamedThreadFactory)

FOUNDATION_EXPORT void OrgApacheLuceneUtilNamedThreadFactory_init(OrgApacheLuceneUtilNamedThreadFactory *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilNamedThreadFactory *new_OrgApacheLuceneUtilNamedThreadFactory_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilNamedThreadFactory)

#endif

#pragma pop_macro("OrgApacheLuceneUtilNamedThreadFactory_INCLUDE_ALL")
