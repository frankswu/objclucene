//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/automaton/TooComplexToDeterminizeException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException")
#ifdef RESTRICT_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException
#define INCLUDE_ALL_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException

#if !defined (OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_) && (INCLUDE_ALL_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException || defined(INCLUDE_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException))
#define OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class OrgApacheLuceneUtilAutomatonAutomaton;
@class OrgApacheLuceneUtilAutomatonRegExp;

/*!
 @brief This exception is thrown when determinizing an automaton would result in one
 has too many states.
 */
@interface OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException : JavaLangRuntimeException

#pragma mark Public

/*!
 @brief Use this constructor when the automaton failed to determinize.
 */
- (instancetype)initWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)automaton
                                                      withInt:(jint)maxDeterminizedStates;

/*!
 @brief Use this constructor when the RegExp failed to convert to an automaton.
 */
- (instancetype)initWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)regExp
withOrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException:(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *)cause;

/*!
 @brief Returns the automaton that caused this exception, if any.
 */
- (OrgApacheLuceneUtilAutomatonAutomaton *)getAutomaton;

/*!
 @brief Get the maximum number of allowed determinized states.
 */
- (jint)getMaxDeterminizedStates;

/*!
 @brief Return the RegExp that caused this exception if any.
 */
- (OrgApacheLuceneUtilAutomatonRegExp *)getRegExp;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException)

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *self, OrgApacheLuceneUtilAutomatonRegExp *regExp, OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *cause);

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *new_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_(OrgApacheLuceneUtilAutomatonRegExp *regExp, OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *create_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_(OrgApacheLuceneUtilAutomatonRegExp *regExp, OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *cause);

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *self, OrgApacheLuceneUtilAutomatonAutomaton *automaton, jint maxDeterminizedStates);

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *new_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonAutomaton *automaton, jint maxDeterminizedStates) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *create_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonAutomaton *automaton, jint maxDeterminizedStates);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException")
