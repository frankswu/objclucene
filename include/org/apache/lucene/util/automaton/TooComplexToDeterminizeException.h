//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/automaton/TooComplexToDeterminizeException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_INCLUDE_ALL")
#if OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_RESTRICT
#define OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_RESTRICT

#if !defined (_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_) && (OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_INCLUDE_ALL || OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_INCLUDE)
#define _OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_

#define JavaLangRuntimeException_RESTRICT 1
#define JavaLangRuntimeException_INCLUDE 1
#include "java/lang/RuntimeException.h"

@class OrgApacheLuceneUtilAutomatonAutomaton;
@class OrgApacheLuceneUtilAutomatonRegExp;

@interface OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)automaton
                                                      withInt:(jint)maxDeterminizedStates;

- (instancetype)initWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)regExp
withOrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException:(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *)cause;

- (OrgApacheLuceneUtilAutomatonAutomaton *)getAutomaton;

- (jint)getMaxDeterminizedStates;

- (OrgApacheLuceneUtilAutomatonRegExp *)getRegExp;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException)

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *self, OrgApacheLuceneUtilAutomatonRegExp *regExp, OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *cause);

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *new_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_(OrgApacheLuceneUtilAutomatonRegExp *regExp, OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *self, OrgApacheLuceneUtilAutomatonAutomaton *automaton, jint maxDeterminizedStates);

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *new_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonAutomaton *automaton, jint maxDeterminizedStates) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException)

#endif

#pragma pop_macro("OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_INCLUDE_ALL")
