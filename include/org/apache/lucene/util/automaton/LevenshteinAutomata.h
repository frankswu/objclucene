//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/automaton/LevenshteinAutomata.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilAutomatonLevenshteinAutomata_INCLUDE_ALL")
#if OrgApacheLuceneUtilAutomatonLevenshteinAutomata_RESTRICT
#define OrgApacheLuceneUtilAutomatonLevenshteinAutomata_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilAutomatonLevenshteinAutomata_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilAutomatonLevenshteinAutomata_RESTRICT

#if !defined (_OrgApacheLuceneUtilAutomatonLevenshteinAutomata_) && (OrgApacheLuceneUtilAutomatonLevenshteinAutomata_INCLUDE_ALL || OrgApacheLuceneUtilAutomatonLevenshteinAutomata_INCLUDE)
#define _OrgApacheLuceneUtilAutomatonLevenshteinAutomata_

@class IOSIntArray;
@class IOSObjectArray;
@class OrgApacheLuceneUtilAutomatonAutomaton;

#define OrgApacheLuceneUtilAutomatonLevenshteinAutomata_MAXIMUM_SUPPORTED_DISTANCE 2

@interface OrgApacheLuceneUtilAutomatonLevenshteinAutomata : NSObject {
 @public
  IOSIntArray *word_;
  IOSIntArray *alphabet_;
  jint alphaMax_;
  IOSIntArray *rangeLower_;
  IOSIntArray *rangeUpper_;
  jint numRanges_;
  IOSObjectArray *descriptions_;
}

#pragma mark Public

- (instancetype)initWithIntArray:(IOSIntArray *)word
                         withInt:(jint)alphaMax
                     withBoolean:(jboolean)withTranspositions;

- (instancetype)initWithNSString:(NSString *)input
                     withBoolean:(jboolean)withTranspositions;

- (OrgApacheLuceneUtilAutomatonAutomaton *)toAutomatonWithInt:(jint)n;

- (OrgApacheLuceneUtilAutomatonAutomaton *)toAutomatonWithInt:(jint)n
                                                 withNSString:(NSString *)prefix;

#pragma mark Package-Private

- (jint)getVectorWithInt:(jint)x
                 withInt:(jint)pos
                 withInt:(jint)end;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilAutomatonLevenshteinAutomata)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonLevenshteinAutomata, word_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonLevenshteinAutomata, alphabet_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonLevenshteinAutomata, rangeLower_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonLevenshteinAutomata, rangeUpper_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonLevenshteinAutomata, descriptions_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilAutomatonLevenshteinAutomata, MAXIMUM_SUPPORTED_DISTANCE, jint)

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonLevenshteinAutomata_initWithNSString_withBoolean_(OrgApacheLuceneUtilAutomatonLevenshteinAutomata *self, NSString *input, jboolean withTranspositions);

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonLevenshteinAutomata *new_OrgApacheLuceneUtilAutomatonLevenshteinAutomata_initWithNSString_withBoolean_(NSString *input, jboolean withTranspositions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonLevenshteinAutomata_initWithIntArray_withInt_withBoolean_(OrgApacheLuceneUtilAutomatonLevenshteinAutomata *self, IOSIntArray *word, jint alphaMax, jboolean withTranspositions);

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonLevenshteinAutomata *new_OrgApacheLuceneUtilAutomatonLevenshteinAutomata_initWithIntArray_withInt_withBoolean_(IOSIntArray *word, jint alphaMax, jboolean withTranspositions) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilAutomatonLevenshteinAutomata)

#endif

#if !defined (_OrgApacheLuceneUtilAutomatonLevenshteinAutomata_ParametricDescription_) && (OrgApacheLuceneUtilAutomatonLevenshteinAutomata_INCLUDE_ALL || OrgApacheLuceneUtilAutomatonLevenshteinAutomata_ParametricDescription_INCLUDE)
#define _OrgApacheLuceneUtilAutomatonLevenshteinAutomata_ParametricDescription_

@class IOSIntArray;
@class IOSLongArray;

@interface OrgApacheLuceneUtilAutomatonLevenshteinAutomata_ParametricDescription : NSObject {
 @public
  jint w_;
  jint n_;
}

#pragma mark Protected

- (jint)unpackWithLongArray:(IOSLongArray *)data
                    withInt:(jint)index
                    withInt:(jint)bitsPerValue;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)w
                    withInt:(jint)n
               withIntArray:(IOSIntArray *)minErrors;

- (jint)getPositionWithInt:(jint)absState;

- (jboolean)isAcceptWithInt:(jint)absState;

- (jint)size;

- (jint)transitionWithInt:(jint)state
                  withInt:(jint)position
                  withInt:(jint)vector;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilAutomatonLevenshteinAutomata_ParametricDescription)

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonLevenshteinAutomata_ParametricDescription_initWithInt_withInt_withIntArray_(OrgApacheLuceneUtilAutomatonLevenshteinAutomata_ParametricDescription *self, jint w, jint n, IOSIntArray *minErrors);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilAutomatonLevenshteinAutomata_ParametricDescription)

#endif

#pragma pop_macro("OrgApacheLuceneUtilAutomatonLevenshteinAutomata_INCLUDE_ALL")
