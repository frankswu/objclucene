//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/util/GeoUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilGeoUtils_INCLUDE_ALL")
#if OrgApacheLuceneUtilGeoUtils_RESTRICT
#define OrgApacheLuceneUtilGeoUtils_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilGeoUtils_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilGeoUtils_RESTRICT

#if !defined (_OrgApacheLuceneUtilGeoUtils_) && (OrgApacheLuceneUtilGeoUtils_INCLUDE_ALL || OrgApacheLuceneUtilGeoUtils_INCLUDE)
#define _OrgApacheLuceneUtilGeoUtils_

@class IOSDoubleArray;
@class JavaLangLong;
@class JavaUtilArrayList;

#define OrgApacheLuceneUtilGeoUtils_BITS 32
#define OrgApacheLuceneUtilGeoUtils_TOLERANCE 1.0E-6
#define OrgApacheLuceneUtilGeoUtils_MIN_LON_INCL -180.0
#define OrgApacheLuceneUtilGeoUtils_MAX_LON_INCL 180.0
#define OrgApacheLuceneUtilGeoUtils_MIN_LAT_INCL -90.0
#define OrgApacheLuceneUtilGeoUtils_MAX_LAT_INCL 90.0

@interface OrgApacheLuceneUtilGeoUtils : NSObject

#pragma mark Public

+ (jboolean)bboxContainsWithDouble:(jdouble)lon
                        withDouble:(jdouble)lat
                        withDouble:(jdouble)minLon
                        withDouble:(jdouble)minLat
                        withDouble:(jdouble)maxLon
                        withDouble:(jdouble)maxLat;

+ (JavaUtilArrayList *)circleToPolyWithDouble:(jdouble)lon
                                   withDouble:(jdouble)lat
                                   withDouble:(jdouble)radius;

+ (jboolean)circleWithinRectWithDouble:(jdouble)rMinX
                            withDouble:(jdouble)rMinY
                            withDouble:(jdouble)rMaxX
                            withDouble:(jdouble)rMaxY
                            withDouble:(jdouble)centerLon
                            withDouble:(jdouble)centerLat
                            withDouble:(jdouble)radius;

+ (jdouble)compareWithDouble:(jdouble)v1
                  withDouble:(jdouble)v2;

+ (NSString *)geoTermToStringWithLong:(jlong)term;

+ (jboolean)isValidLatWithDouble:(jdouble)lat;

+ (jboolean)isValidLonWithDouble:(jdouble)lon;

+ (JavaLangLong *)mortonHashWithDouble:(jdouble)lon
                            withDouble:(jdouble)lat;

+ (jdouble)mortonUnhashLatWithLong:(jlong)hash_;

+ (jdouble)mortonUnhashLonWithLong:(jlong)hash_;

+ (jdouble)normalizeLatWithDouble:(jdouble)lat_deg;

+ (jdouble)normalizeLonWithDouble:(jdouble)lon_deg;

+ (jboolean)pointInPolygonWithDoubleArray:(IOSDoubleArray *)x
                          withDoubleArray:(IOSDoubleArray *)y
                               withDouble:(jdouble)lat
                               withDouble:(jdouble)lon;

+ (jboolean)rectContainsWithDouble:(jdouble)aMinX
                        withDouble:(jdouble)aMinY
                        withDouble:(jdouble)aMaxX
                        withDouble:(jdouble)aMaxY
                        withDouble:(jdouble)bMinX
                        withDouble:(jdouble)bMinY
                        withDouble:(jdouble)bMaxX
                        withDouble:(jdouble)bMaxY;

+ (jboolean)rectCrossesWithDouble:(jdouble)aMinX
                       withDouble:(jdouble)aMinY
                       withDouble:(jdouble)aMaxX
                       withDouble:(jdouble)aMaxY
                       withDouble:(jdouble)bMinX
                       withDouble:(jdouble)bMinY
                       withDouble:(jdouble)bMaxX
                       withDouble:(jdouble)bMaxY;

+ (jboolean)rectCrossesCircleWithDouble:(jdouble)rMinX
                             withDouble:(jdouble)rMinY
                             withDouble:(jdouble)rMaxX
                             withDouble:(jdouble)rMaxY
                             withDouble:(jdouble)centerLon
                             withDouble:(jdouble)centerLat
                             withDouble:(jdouble)radius;

+ (jboolean)rectCrossesPolyWithDouble:(jdouble)rMinX
                           withDouble:(jdouble)rMinY
                           withDouble:(jdouble)rMaxX
                           withDouble:(jdouble)rMaxY
                      withDoubleArray:(IOSDoubleArray *)shapeX
                      withDoubleArray:(IOSDoubleArray *)shapeY
                           withDouble:(jdouble)sMinX
                           withDouble:(jdouble)sMinY
                           withDouble:(jdouble)sMaxX
                           withDouble:(jdouble)sMaxY;

+ (jboolean)rectDisjointWithDouble:(jdouble)aMinX
                        withDouble:(jdouble)aMinY
                        withDouble:(jdouble)aMaxX
                        withDouble:(jdouble)aMaxY
                        withDouble:(jdouble)bMinX
                        withDouble:(jdouble)bMinY
                        withDouble:(jdouble)bMaxX
                        withDouble:(jdouble)bMaxY;

+ (jboolean)rectIntersectsWithDouble:(jdouble)aMinX
                          withDouble:(jdouble)aMinY
                          withDouble:(jdouble)aMaxX
                          withDouble:(jdouble)aMaxY
                          withDouble:(jdouble)bMinX
                          withDouble:(jdouble)bMinY
                          withDouble:(jdouble)bMaxX
                          withDouble:(jdouble)bMaxY;

+ (jboolean)rectWithinWithDouble:(jdouble)aMinX
                      withDouble:(jdouble)aMinY
                      withDouble:(jdouble)aMaxX
                      withDouble:(jdouble)aMaxY
                      withDouble:(jdouble)bMinX
                      withDouble:(jdouble)bMinY
                      withDouble:(jdouble)bMaxX
                      withDouble:(jdouble)bMaxY;

+ (jboolean)rectWithinCircleWithDouble:(jdouble)rMinX
                            withDouble:(jdouble)rMinY
                            withDouble:(jdouble)rMaxX
                            withDouble:(jdouble)rMaxY
                            withDouble:(jdouble)centerLon
                            withDouble:(jdouble)centerLat
                            withDouble:(jdouble)radius;

+ (jboolean)rectWithinPolyWithDouble:(jdouble)rMinX
                          withDouble:(jdouble)rMinY
                          withDouble:(jdouble)rMaxX
                          withDouble:(jdouble)rMaxY
                     withDoubleArray:(IOSDoubleArray *)shapeX
                     withDoubleArray:(IOSDoubleArray *)shapeY
                          withDouble:(jdouble)sMinX
                          withDouble:(jdouble)sMinY
                          withDouble:(jdouble)sMaxX
                          withDouble:(jdouble)sMaxY;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilGeoUtils)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, BITS, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, TOLERANCE, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, MIN_LON_INCL, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, MAX_LON_INCL, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, MIN_LAT_INCL, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, MAX_LAT_INCL, jdouble)

FOUNDATION_EXPORT JavaLangLong *OrgApacheLuceneUtilGeoUtils_mortonHashWithDouble_withDouble_(jdouble lon, jdouble lat);

FOUNDATION_EXPORT jdouble OrgApacheLuceneUtilGeoUtils_mortonUnhashLonWithLong_(jlong hash_);

FOUNDATION_EXPORT jdouble OrgApacheLuceneUtilGeoUtils_mortonUnhashLatWithLong_(jlong hash_);

FOUNDATION_EXPORT jdouble OrgApacheLuceneUtilGeoUtils_compareWithDouble_withDouble_(jdouble v1, jdouble v2);

FOUNDATION_EXPORT jdouble OrgApacheLuceneUtilGeoUtils_normalizeLonWithDouble_(jdouble lon_deg);

FOUNDATION_EXPORT jdouble OrgApacheLuceneUtilGeoUtils_normalizeLatWithDouble_(jdouble lat_deg);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_bboxContainsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble lon, jdouble lat, jdouble minLon, jdouble minLat, jdouble maxLon, jdouble maxLat);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_pointInPolygonWithDoubleArray_withDoubleArray_withDouble_withDouble_(IOSDoubleArray *x, IOSDoubleArray *y, jdouble lat, jdouble lon);

FOUNDATION_EXPORT NSString *OrgApacheLuceneUtilGeoUtils_geoTermToStringWithLong_(jlong term);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_rectDisjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_rectWithinWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_rectCrossesWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_rectContainsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_rectIntersectsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_rectCrossesPolyWithDouble_withDouble_withDouble_withDouble_withDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, IOSDoubleArray *shapeX, IOSDoubleArray *shapeY, jdouble sMinX, jdouble sMinY, jdouble sMaxX, jdouble sMaxY);

FOUNDATION_EXPORT JavaUtilArrayList *OrgApacheLuceneUtilGeoUtils_circleToPolyWithDouble_withDouble_withDouble_(jdouble lon, jdouble lat, jdouble radius);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_rectWithinPolyWithDouble_withDouble_withDouble_withDouble_withDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, IOSDoubleArray *shapeX, IOSDoubleArray *shapeY, jdouble sMinX, jdouble sMinY, jdouble sMaxX, jdouble sMaxY);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_rectWithinCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_rectCrossesCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_circleWithinRectWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_isValidLatWithDouble_(jdouble lat);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilGeoUtils_isValidLonWithDouble_(jdouble lon);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilGeoUtils)

#endif

#pragma pop_macro("OrgApacheLuceneUtilGeoUtils_INCLUDE_ALL")
