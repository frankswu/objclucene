//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/RecyclingByteBlockAllocator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilRecyclingByteBlockAllocator_INCLUDE_ALL")
#if OrgApacheLuceneUtilRecyclingByteBlockAllocator_RESTRICT
#define OrgApacheLuceneUtilRecyclingByteBlockAllocator_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilRecyclingByteBlockAllocator_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilRecyclingByteBlockAllocator_RESTRICT

#if !defined (_OrgApacheLuceneUtilRecyclingByteBlockAllocator_) && (OrgApacheLuceneUtilRecyclingByteBlockAllocator_INCLUDE_ALL || OrgApacheLuceneUtilRecyclingByteBlockAllocator_INCLUDE)
#define _OrgApacheLuceneUtilRecyclingByteBlockAllocator_

#define OrgApacheLuceneUtilByteBlockPool_RESTRICT 1
#define OrgApacheLuceneUtilByteBlockPool_Allocator_INCLUDE 1
#include "org/apache/lucene/util/ByteBlockPool.h"

@class IOSByteArray;
@class IOSObjectArray;
@class OrgApacheLuceneUtilCounter;

#define OrgApacheLuceneUtilRecyclingByteBlockAllocator_DEFAULT_BUFFERED_BLOCKS 64

@interface OrgApacheLuceneUtilRecyclingByteBlockAllocator : OrgApacheLuceneUtilByteBlockPool_Allocator

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)blockSize
                    withInt:(jint)maxBufferedBlocks;

- (instancetype)initWithInt:(jint)blockSize
                    withInt:(jint)maxBufferedBlocks
withOrgApacheLuceneUtilCounter:(OrgApacheLuceneUtilCounter *)bytesUsed;

- (jlong)bytesUsed;

- (jint)freeBlocksWithInt:(jint)num;

- (IOSByteArray *)getByteBlock;

- (jint)maxBufferedBlocks;

- (jint)numBufferedBlocks;

- (void)recycleByteBlocksWithByteArray2:(IOSObjectArray *)blocks
                                withInt:(jint)start
                                withInt:(jint)end;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilRecyclingByteBlockAllocator)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilRecyclingByteBlockAllocator, DEFAULT_BUFFERED_BLOCKS, jint)

FOUNDATION_EXPORT void OrgApacheLuceneUtilRecyclingByteBlockAllocator_initWithInt_withInt_withOrgApacheLuceneUtilCounter_(OrgApacheLuceneUtilRecyclingByteBlockAllocator *self, jint blockSize, jint maxBufferedBlocks, OrgApacheLuceneUtilCounter *bytesUsed);

FOUNDATION_EXPORT OrgApacheLuceneUtilRecyclingByteBlockAllocator *new_OrgApacheLuceneUtilRecyclingByteBlockAllocator_initWithInt_withInt_withOrgApacheLuceneUtilCounter_(jint blockSize, jint maxBufferedBlocks, OrgApacheLuceneUtilCounter *bytesUsed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneUtilRecyclingByteBlockAllocator_initWithInt_withInt_(OrgApacheLuceneUtilRecyclingByteBlockAllocator *self, jint blockSize, jint maxBufferedBlocks);

FOUNDATION_EXPORT OrgApacheLuceneUtilRecyclingByteBlockAllocator *new_OrgApacheLuceneUtilRecyclingByteBlockAllocator_initWithInt_withInt_(jint blockSize, jint maxBufferedBlocks) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneUtilRecyclingByteBlockAllocator_init(OrgApacheLuceneUtilRecyclingByteBlockAllocator *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilRecyclingByteBlockAllocator *new_OrgApacheLuceneUtilRecyclingByteBlockAllocator_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilRecyclingByteBlockAllocator)

#endif

#pragma pop_macro("OrgApacheLuceneUtilRecyclingByteBlockAllocator_INCLUDE_ALL")
