//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/packed/Packed64.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilPackedPacked64_INCLUDE_ALL")
#if OrgApacheLuceneUtilPackedPacked64_RESTRICT
#define OrgApacheLuceneUtilPackedPacked64_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilPackedPacked64_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilPackedPacked64_RESTRICT

#if !defined (_OrgApacheLuceneUtilPackedPacked64_) && (OrgApacheLuceneUtilPackedPacked64_INCLUDE_ALL || OrgApacheLuceneUtilPackedPacked64_INCLUDE)
#define _OrgApacheLuceneUtilPackedPacked64_

#define OrgApacheLuceneUtilPackedPackedInts_RESTRICT 1
#define OrgApacheLuceneUtilPackedPackedInts_MutableImpl_INCLUDE 1
#include "org/apache/lucene/util/packed/PackedInts.h"

@class IOSLongArray;
@class OrgApacheLuceneStoreDataInput;

#define OrgApacheLuceneUtilPackedPacked64_BLOCK_SIZE 64
#define OrgApacheLuceneUtilPackedPacked64_BLOCK_BITS 6
#define OrgApacheLuceneUtilPackedPacked64_MOD_MASK 63

@interface OrgApacheLuceneUtilPackedPacked64 : OrgApacheLuceneUtilPackedPackedInts_MutableImpl

#pragma mark Public

- (instancetype)initWithInt:(jint)packedIntsVersion
withOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
                    withInt:(jint)valueCount
                    withInt:(jint)bitsPerValue;

- (instancetype)initWithInt:(jint)valueCount
                    withInt:(jint)bitsPerValue;

- (void)clear;

- (void)fillWithInt:(jint)fromIndex
            withInt:(jint)toIndex
           withLong:(jlong)val;

- (jlong)getWithInt:(jint)index;

- (jint)getWithInt:(jint)index
     withLongArray:(IOSLongArray *)arr
           withInt:(jint)off
           withInt:(jint)len;

- (jlong)ramBytesUsed;

- (void)setWithInt:(jint)index
          withLong:(jlong)value;

- (jint)setWithInt:(jint)index
     withLongArray:(IOSLongArray *)arr
           withInt:(jint)off
           withInt:(jint)len;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilPackedPacked64)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedPacked64, BLOCK_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedPacked64, BLOCK_BITS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedPacked64, MOD_MASK, jint)

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedPacked64_initWithInt_withInt_(OrgApacheLuceneUtilPackedPacked64 *self, jint valueCount, jint bitsPerValue);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPacked64 *new_OrgApacheLuceneUtilPackedPacked64_initWithInt_withInt_(jint valueCount, jint bitsPerValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedPacked64_initWithInt_withOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneUtilPackedPacked64 *self, jint packedIntsVersion, OrgApacheLuceneStoreDataInput *inArg, jint valueCount, jint bitsPerValue);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPacked64 *new_OrgApacheLuceneUtilPackedPacked64_initWithInt_withOrgApacheLuceneStoreDataInput_withInt_withInt_(jint packedIntsVersion, OrgApacheLuceneStoreDataInput *inArg, jint valueCount, jint bitsPerValue) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilPackedPacked64)

#endif

#pragma pop_macro("OrgApacheLuceneUtilPackedPacked64_INCLUDE_ALL")
