//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_INCLUDE_ALL")
#if OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_RESTRICT
#define OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_RESTRICT

#if !defined (_OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_) && (OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_INCLUDE_ALL || OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_INCLUDE)
#define _OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_

@class IOSByteArray;
@class IOSLongArray;
@class OrgApacheLuceneStoreDataOutput;

#define OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_MIN_BLOCK_SIZE 64
#define OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_MAX_BLOCK_SIZE 134217728
#define OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_MIN_VALUE_EQUALS_0 1
#define OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_BPV_SHIFT 1

@interface OrgApacheLuceneUtilPackedAbstractBlockPackedWriter : NSObject {
 @public
  OrgApacheLuceneStoreDataOutput *out_;
  IOSLongArray *values_;
  IOSByteArray *blocks_;
  jint off_;
  jlong ord_;
  jboolean finished_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)outArg
                                               withInt:(jint)blockSize;

- (void)addWithLong:(jlong)l;

- (void)finish;

- (jlong)ord;

- (void)resetWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)outArg;

#pragma mark Protected

- (void)flush;

- (void)writeValuesWithInt:(jint)bitsRequired;

#pragma mark Package-Private

- (void)addBlockOfZeros;

+ (void)writeVLongWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)outArg
                                            withLong:(jlong)i;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter, out_, OrgApacheLuceneStoreDataOutput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter, values_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter, blocks_, IOSByteArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter, MIN_BLOCK_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter, MAX_BLOCK_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter, MIN_VALUE_EQUALS_0, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter, BPV_SHIFT, jint)

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_writeVLongWithOrgApacheLuceneStoreDataOutput_withLong_(OrgApacheLuceneStoreDataOutput *outArg, jlong i);

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter *self, OrgApacheLuceneStoreDataOutput *outArg, jint blockSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilPackedAbstractBlockPackedWriter)

#endif

#pragma pop_macro("OrgApacheLuceneUtilPackedAbstractBlockPackedWriter_INCLUDE_ALL")
