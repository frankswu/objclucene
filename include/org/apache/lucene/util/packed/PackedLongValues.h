//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/packed/PackedLongValues.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilPackedPackedLongValues_INCLUDE_ALL")
#if OrgApacheLuceneUtilPackedPackedLongValues_RESTRICT
#define OrgApacheLuceneUtilPackedPackedLongValues_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilPackedPackedLongValues_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilPackedPackedLongValues_RESTRICT

#if !defined (_OrgApacheLuceneUtilPackedPackedLongValues_) && (OrgApacheLuceneUtilPackedPackedLongValues_INCLUDE_ALL || OrgApacheLuceneUtilPackedPackedLongValues_INCLUDE)
#define _OrgApacheLuceneUtilPackedPackedLongValues_

#define OrgApacheLuceneUtilLongValues_RESTRICT 1
#define OrgApacheLuceneUtilLongValues_INCLUDE 1
#include "org/apache/lucene/util/LongValues.h"

#define OrgApacheLuceneUtilAccountable_RESTRICT 1
#define OrgApacheLuceneUtilAccountable_INCLUDE 1
#include "org/apache/lucene/util/Accountable.h"

@class IOSLongArray;
@class IOSObjectArray;
@class OrgApacheLuceneUtilPackedPackedLongValues_Builder;
@class OrgApacheLuceneUtilPackedPackedLongValues_Iterator;

#define OrgApacheLuceneUtilPackedPackedLongValues_DEFAULT_PAGE_SIZE 1024
#define OrgApacheLuceneUtilPackedPackedLongValues_MIN_PAGE_SIZE 64
#define OrgApacheLuceneUtilPackedPackedLongValues_MAX_PAGE_SIZE 1048576

@interface OrgApacheLuceneUtilPackedPackedLongValues : OrgApacheLuceneUtilLongValues < OrgApacheLuceneUtilAccountable > {
 @public
  IOSObjectArray *values_;
  jint pageShift_, pageMask_;
}

#pragma mark Public

+ (OrgApacheLuceneUtilPackedPackedLongValues_Builder *)deltaPackedBuilderWithFloat:(jfloat)acceptableOverheadRatio;

+ (OrgApacheLuceneUtilPackedPackedLongValues_Builder *)deltaPackedBuilderWithInt:(jint)pageSize
                                                                       withFloat:(jfloat)acceptableOverheadRatio;

- (jlong)getWithLong:(jlong)index;

- (OrgApacheLuceneUtilPackedPackedLongValues_Iterator *)iterator;

+ (OrgApacheLuceneUtilPackedPackedLongValues_Builder *)monotonicBuilderWithFloat:(jfloat)acceptableOverheadRatio;

+ (OrgApacheLuceneUtilPackedPackedLongValues_Builder *)monotonicBuilderWithInt:(jint)pageSize
                                                                     withFloat:(jfloat)acceptableOverheadRatio;

+ (OrgApacheLuceneUtilPackedPackedLongValues_Builder *)packedBuilderWithFloat:(jfloat)acceptableOverheadRatio;

+ (OrgApacheLuceneUtilPackedPackedLongValues_Builder *)packedBuilderWithInt:(jint)pageSize
                                                                  withFloat:(jfloat)acceptableOverheadRatio;

- (jlong)ramBytesUsed;

- (jlong)size;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)pageShift
                    withInt:(jint)pageMask
withOrgApacheLuceneUtilPackedPackedInts_ReaderArray:(IOSObjectArray *)values
                   withLong:(jlong)size
                   withLong:(jlong)ramBytesUsed;

- (jint)decodeBlockWithInt:(jint)block
             withLongArray:(IOSLongArray *)dest;

- (jlong)getWithInt:(jint)block
            withInt:(jint)element;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilPackedPackedLongValues)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilPackedPackedLongValues, values_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedPackedLongValues, DEFAULT_PAGE_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedPackedLongValues, MIN_PAGE_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilPackedPackedLongValues, MAX_PAGE_SIZE, jint)

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPackedLongValues_Builder *OrgApacheLuceneUtilPackedPackedLongValues_packedBuilderWithInt_withFloat_(jint pageSize, jfloat acceptableOverheadRatio);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPackedLongValues_Builder *OrgApacheLuceneUtilPackedPackedLongValues_packedBuilderWithFloat_(jfloat acceptableOverheadRatio);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPackedLongValues_Builder *OrgApacheLuceneUtilPackedPackedLongValues_deltaPackedBuilderWithInt_withFloat_(jint pageSize, jfloat acceptableOverheadRatio);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPackedLongValues_Builder *OrgApacheLuceneUtilPackedPackedLongValues_deltaPackedBuilderWithFloat_(jfloat acceptableOverheadRatio);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPackedLongValues_Builder *OrgApacheLuceneUtilPackedPackedLongValues_monotonicBuilderWithInt_withFloat_(jint pageSize, jfloat acceptableOverheadRatio);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPackedLongValues_Builder *OrgApacheLuceneUtilPackedPackedLongValues_monotonicBuilderWithFloat_(jfloat acceptableOverheadRatio);

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedPackedLongValues_initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLong_withLong_(OrgApacheLuceneUtilPackedPackedLongValues *self, jint pageShift, jint pageMask, IOSObjectArray *values, jlong size, jlong ramBytesUsed);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPackedLongValues *new_OrgApacheLuceneUtilPackedPackedLongValues_initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLong_withLong_(jint pageShift, jint pageMask, IOSObjectArray *values, jlong size, jlong ramBytesUsed) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilPackedPackedLongValues)

#endif

#if !defined (_OrgApacheLuceneUtilPackedPackedLongValues_Iterator_) && (OrgApacheLuceneUtilPackedPackedLongValues_INCLUDE_ALL || OrgApacheLuceneUtilPackedPackedLongValues_Iterator_INCLUDE)
#define _OrgApacheLuceneUtilPackedPackedLongValues_Iterator_

@class IOSLongArray;
@class OrgApacheLuceneUtilPackedPackedLongValues;

@interface OrgApacheLuceneUtilPackedPackedLongValues_Iterator : NSObject {
 @public
  IOSLongArray *currentValues_;
  jint vOff_, pOff_;
  jint currentCount_;
}

#pragma mark Public

- (jboolean)hasNext;

- (jlong)next;

#pragma mark Package-Private

- (instancetype)initWithOrgApacheLuceneUtilPackedPackedLongValues:(OrgApacheLuceneUtilPackedPackedLongValues *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilPackedPackedLongValues_Iterator)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilPackedPackedLongValues_Iterator, currentValues_, IOSLongArray *)

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedPackedLongValues_Iterator_initWithOrgApacheLuceneUtilPackedPackedLongValues_(OrgApacheLuceneUtilPackedPackedLongValues_Iterator *self, OrgApacheLuceneUtilPackedPackedLongValues *outer$);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPackedLongValues_Iterator *new_OrgApacheLuceneUtilPackedPackedLongValues_Iterator_initWithOrgApacheLuceneUtilPackedPackedLongValues_(OrgApacheLuceneUtilPackedPackedLongValues *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilPackedPackedLongValues_Iterator)

#endif

#if !defined (_OrgApacheLuceneUtilPackedPackedLongValues_Builder_) && (OrgApacheLuceneUtilPackedPackedLongValues_INCLUDE_ALL || OrgApacheLuceneUtilPackedPackedLongValues_Builder_INCLUDE)
#define _OrgApacheLuceneUtilPackedPackedLongValues_Builder_

#define OrgApacheLuceneUtilAccountable_RESTRICT 1
#define OrgApacheLuceneUtilAccountable_INCLUDE 1
#include "org/apache/lucene/util/Accountable.h"

@class IOSLongArray;
@class IOSObjectArray;
@class OrgApacheLuceneUtilPackedPackedLongValues;

@interface OrgApacheLuceneUtilPackedPackedLongValues_Builder : NSObject < OrgApacheLuceneUtilAccountable > {
 @public
  jint pageShift_, pageMask_;
  jfloat acceptableOverheadRatio_;
  IOSLongArray *pending_;
  jlong size_;
  IOSObjectArray *values_;
  jlong ramBytesUsed_;
  jint valuesOff_;
  jint pendingOff_;
}

#pragma mark Public

- (OrgApacheLuceneUtilPackedPackedLongValues_Builder *)addWithLong:(jlong)l;

- (OrgApacheLuceneUtilPackedPackedLongValues *)build;

- (jlong)ramBytesUsed;

- (jlong)size;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)pageSize
                  withFloat:(jfloat)acceptableOverheadRatio;

- (jlong)baseRamBytesUsed;

- (void)finish;

- (void)growWithInt:(jint)newBlockCount;

- (void)packWithLongArray:(IOSLongArray *)values
                  withInt:(jint)numValues
                  withInt:(jint)block
                withFloat:(jfloat)acceptableOverheadRatio;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilPackedPackedLongValues_Builder)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilPackedPackedLongValues_Builder, pending_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilPackedPackedLongValues_Builder, values_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedPackedLongValues_Builder_initWithInt_withFloat_(OrgApacheLuceneUtilPackedPackedLongValues_Builder *self, jint pageSize, jfloat acceptableOverheadRatio);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPackedLongValues_Builder *new_OrgApacheLuceneUtilPackedPackedLongValues_Builder_initWithInt_withFloat_(jint pageSize, jfloat acceptableOverheadRatio) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilPackedPackedLongValues_Builder)

#endif

#pragma pop_macro("OrgApacheLuceneUtilPackedPackedLongValues_INCLUDE_ALL")
