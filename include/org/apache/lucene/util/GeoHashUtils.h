//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/util/GeoHashUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilGeoHashUtils")
#ifdef RESTRICT_OrgApacheLuceneUtilGeoHashUtils
#define INCLUDE_ALL_OrgApacheLuceneUtilGeoHashUtils 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilGeoHashUtils 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilGeoHashUtils

#if !defined (OrgApacheLuceneUtilGeoHashUtils_) && (INCLUDE_ALL_OrgApacheLuceneUtilGeoHashUtils || defined(INCLUDE_OrgApacheLuceneUtilGeoHashUtils))
#define OrgApacheLuceneUtilGeoHashUtils_

@class IOSCharArray;

/*!
 @brief Utilities for converting to/from the GeoHash standard
 The geohash long format is represented as lon/lat (x/y) interleaved with the 4 least significant bits
 representing the level (1-12) [xyxy...xyxyllll]
 This differs from a morton encoded value which interleaves lat/lon (y/x).
 */
@interface OrgApacheLuceneUtilGeoHashUtils : NSObject

+ (IOSCharArray *)BASE_32;

+ (NSString *)BASE_32_STRING;

+ (jint)PRECISION;

#pragma mark Public

- (instancetype)init;

/*!
 @brief Encode lon/lat to the geohash based long format (lon/lat interleaved, 4 least significant bits = level)
 */
+ (jlong)longEncodeWithDouble:(jdouble)lon
                   withDouble:(jdouble)lat
                      withInt:(jint)level;

/*!
 @brief Encode from geohash string to the geohash based long format (lon/lat interleaved, 4 least significant bits = level)
 */
+ (jlong)longEncodeWithNSString:(NSString *)hash_;

/*!
 @brief Encode to a morton long value from a given geohash long value
 */
+ (jlong)mortonEncodeWithLong:(jlong)geoHashLong;

/*!
 @brief Encode to a morton long value from a given geohash string
 */
+ (jlong)mortonEncodeWithNSString:(NSString *)hash_;

/*!
 @brief Encode to a geohash string from full resolution longitude, latitude)
 */
+ (NSString *)stringEncodeWithDouble:(jdouble)lon
                          withDouble:(jdouble)lat;

/*!
 @brief Encode to a level specific geohash string from full resolution longitude, latitude
 */
+ (NSString *)stringEncodeWithDouble:(jdouble)lon
                          withDouble:(jdouble)lat
                             withInt:(jint)level;

/*!
 @brief Encode to a geohash string from the geohash based long format
 */
+ (NSString *)stringEncodeWithLong:(jlong)geoHashLong;

/*!
 @brief Encode to a full precision geohash string from a given morton encoded long value
 */
+ (NSString *)stringEncodeFromMortonLongWithLong:(jlong)hashedVal;

/*!
 @brief Encode to a geohash string at a given level from a morton long
 */
+ (NSString *)stringEncodeFromMortonLongWithLong:(jlong)hashedVal
                                         withInt:(jint)level;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilGeoHashUtils)

inline IOSCharArray *OrgApacheLuceneUtilGeoHashUtils_get_BASE_32();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSCharArray *OrgApacheLuceneUtilGeoHashUtils_BASE_32;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilGeoHashUtils, BASE_32, IOSCharArray *)

inline NSString *OrgApacheLuceneUtilGeoHashUtils_get_BASE_32_STRING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheLuceneUtilGeoHashUtils_BASE_32_STRING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilGeoHashUtils, BASE_32_STRING, NSString *)

inline jint OrgApacheLuceneUtilGeoHashUtils_get_PRECISION();
#define OrgApacheLuceneUtilGeoHashUtils_PRECISION 12
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilGeoHashUtils, PRECISION, jint)

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilGeoHashUtils_longEncodeWithDouble_withDouble_withInt_(jdouble lon, jdouble lat, jint level);

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilGeoHashUtils_longEncodeWithNSString_(NSString *hash_);

FOUNDATION_EXPORT NSString *OrgApacheLuceneUtilGeoHashUtils_stringEncodeWithLong_(jlong geoHashLong);

FOUNDATION_EXPORT NSString *OrgApacheLuceneUtilGeoHashUtils_stringEncodeWithDouble_withDouble_(jdouble lon, jdouble lat);

FOUNDATION_EXPORT NSString *OrgApacheLuceneUtilGeoHashUtils_stringEncodeWithDouble_withDouble_withInt_(jdouble lon, jdouble lat, jint level);

FOUNDATION_EXPORT NSString *OrgApacheLuceneUtilGeoHashUtils_stringEncodeFromMortonLongWithLong_(jlong hashedVal);

FOUNDATION_EXPORT NSString *OrgApacheLuceneUtilGeoHashUtils_stringEncodeFromMortonLongWithLong_withInt_(jlong hashedVal, jint level);

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilGeoHashUtils_mortonEncodeWithNSString_(NSString *hash_);

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilGeoHashUtils_mortonEncodeWithLong_(jlong geoHashLong);

FOUNDATION_EXPORT void OrgApacheLuceneUtilGeoHashUtils_init(OrgApacheLuceneUtilGeoHashUtils *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilGeoHashUtils *new_OrgApacheLuceneUtilGeoHashUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilGeoHashUtils *create_OrgApacheLuceneUtilGeoHashUtils_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilGeoHashUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilGeoHashUtils")
