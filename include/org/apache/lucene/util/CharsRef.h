//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/CharsRef.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneUtilCharsRef_INCLUDE_ALL")
#if OrgApacheLuceneUtilCharsRef_RESTRICT
#define OrgApacheLuceneUtilCharsRef_INCLUDE_ALL 0
#else
#define OrgApacheLuceneUtilCharsRef_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneUtilCharsRef_RESTRICT

#if !defined (_OrgApacheLuceneUtilCharsRef_) && (OrgApacheLuceneUtilCharsRef_INCLUDE_ALL || OrgApacheLuceneUtilCharsRef_INCLUDE)
#define _OrgApacheLuceneUtilCharsRef_

#define JavaLangComparable_RESTRICT 1
#define JavaLangComparable_INCLUDE 1
#include "java/lang/Comparable.h"

#define JavaLangCharSequence_RESTRICT 1
#define JavaLangCharSequence_INCLUDE 1
#include "java/lang/CharSequence.h"

@class IOSCharArray;

@interface OrgApacheLuceneUtilCharsRef : NSObject < JavaLangComparable, JavaLangCharSequence, NSCopying > {
 @public
  IOSCharArray *chars_;
  jint offset_;
  jint length_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithCharArray:(IOSCharArray *)chars
                          withInt:(jint)offset
                          withInt:(jint)length;

- (jchar)charAtWithInt:(jint)index;

- (jboolean)charsEqualsWithOrgApacheLuceneUtilCharsRef:(OrgApacheLuceneUtilCharsRef *)other;

- (OrgApacheLuceneUtilCharsRef *)clone;

- (jint)compareToWithId:(OrgApacheLuceneUtilCharsRef *)other;

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (jboolean)isValid;

- (jint)length;

- (id<JavaLangCharSequence>)subSequenceFrom:(jint)start
                                         to:(jint)end;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilCharsRef)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilCharsRef, chars_, IOSCharArray *)

FOUNDATION_EXPORT IOSCharArray *OrgApacheLuceneUtilCharsRef_EMPTY_CHARS_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilCharsRef, EMPTY_CHARS_, IOSCharArray *)

FOUNDATION_EXPORT void OrgApacheLuceneUtilCharsRef_init(OrgApacheLuceneUtilCharsRef *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilCharsRef *new_OrgApacheLuceneUtilCharsRef_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneUtilCharsRef_initWithCharArray_withInt_withInt_(OrgApacheLuceneUtilCharsRef *self, IOSCharArray *chars, jint offset, jint length);

FOUNDATION_EXPORT OrgApacheLuceneUtilCharsRef *new_OrgApacheLuceneUtilCharsRef_initWithCharArray_withInt_withInt_(IOSCharArray *chars, jint offset, jint length) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilCharsRef)

#endif

#pragma pop_macro("OrgApacheLuceneUtilCharsRef_INCLUDE_ALL")
