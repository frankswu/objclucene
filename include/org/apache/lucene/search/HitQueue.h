//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/HitQueue.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchHitQueue")
#ifdef RESTRICT_OrgApacheLuceneSearchHitQueue
#define INCLUDE_ALL_OrgApacheLuceneSearchHitQueue 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchHitQueue 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchHitQueue

#if !defined (OrgApacheLuceneSearchHitQueue_) && (INCLUDE_ALL_OrgApacheLuceneSearchHitQueue || defined(INCLUDE_OrgApacheLuceneSearchHitQueue))
#define OrgApacheLuceneSearchHitQueue_

#define RESTRICT_OrgApacheLuceneUtilPriorityQueue 1
#define INCLUDE_OrgApacheLuceneUtilPriorityQueue 1
#include "org/apache/lucene/util/PriorityQueue.h"

@class OrgApacheLuceneSearchScoreDoc;

@interface OrgApacheLuceneSearchHitQueue : OrgApacheLuceneUtilPriorityQueue

#pragma mark Protected

- (OrgApacheLuceneSearchScoreDoc *)getSentinelObject;

- (jboolean)lessThanWithId:(OrgApacheLuceneSearchScoreDoc *)hitA
                    withId:(OrgApacheLuceneSearchScoreDoc *)hitB;

#pragma mark Package-Private

/*!
 @brief Creates a new instance with <code>size</code> elements.
 If
 <code>prePopulate</code> is set to true, the queue will pre-populate itself
 with sentinel objects and set its <code>size()</code> to <code>size</code>. In
 that case, you should not rely on <code>size()</code> to get the number of
 actual elements that were added to the queue, but keep track yourself.<br>
 <b>NOTE:</b> in case <code>prePopulate</code> is true, you should pop
 elements from the queue using the following code example:
 <pre class="prettyprint">
 PriorityQueue&lt;ScoreDoc&gt; pq = new HitQueue(10, true); // pre-populate.
 ScoreDoc top = pq.top();
 // Add/Update one element.
 top.score = 1.0f;
 top.doc = 0;
 top = (ScoreDoc) pq.updateTop();
 int totalHits = 1;
 // Now pop only the elements that were *truly* inserted.
 // First, pop all the sentinel elements (there are pq.size() - totalHits).
 for (int i = pq.size() - totalHits; i &gt; 0; i--) pq.pop();
 // Now pop the truly added elements.
 ScoreDoc[] results = new ScoreDoc[totalHits];
 for (int i = totalHits - 1; i &gt;= 0; i--) {
 results[i] = (ScoreDoc) pq.pop();
 }
 
@endcode
 <p><b>NOTE</b>: This class pre-allocate a full array of
 length <code>size</code>.
 @param size
 the requested size of this queue.
 @param prePopulate
 specifies whether to pre-populate the queue with sentinel values.
 - seealso: #getSentinelObject()
 */
- (instancetype)initWithInt:(jint)size
                withBoolean:(jboolean)prePopulate;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchHitQueue)

FOUNDATION_EXPORT void OrgApacheLuceneSearchHitQueue_initWithInt_withBoolean_(OrgApacheLuceneSearchHitQueue *self, jint size, jboolean prePopulate);

FOUNDATION_EXPORT OrgApacheLuceneSearchHitQueue *new_OrgApacheLuceneSearchHitQueue_initWithInt_withBoolean_(jint size, jboolean prePopulate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHitQueue *create_OrgApacheLuceneSearchHitQueue_initWithInt_withBoolean_(jint size, jboolean prePopulate);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchHitQueue)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchHitQueue")
