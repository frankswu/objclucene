//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/SpanOrQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneSearchSpansSpanOrQuery_INCLUDE_ALL")
#if OrgApacheLuceneSearchSpansSpanOrQuery_RESTRICT
#define OrgApacheLuceneSearchSpansSpanOrQuery_INCLUDE_ALL 0
#else
#define OrgApacheLuceneSearchSpansSpanOrQuery_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneSearchSpansSpanOrQuery_RESTRICT

#if !defined (_OrgApacheLuceneSearchSpansSpanOrQuery_) && (OrgApacheLuceneSearchSpansSpanOrQuery_INCLUDE_ALL || OrgApacheLuceneSearchSpansSpanOrQuery_INCLUDE)
#define _OrgApacheLuceneSearchSpansSpanOrQuery_

#define OrgApacheLuceneSearchSpansSpanQuery_RESTRICT 1
#define OrgApacheLuceneSearchSpansSpanQuery_INCLUDE 1
#include "org/apache/lucene/search/spans/SpanQuery.h"

@class IOSObjectArray;
@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchQuery;
@class OrgApacheLuceneSearchSpansSpanWeight;

@interface OrgApacheLuceneSearchSpansSpanOrQuery : OrgApacheLuceneSearchSpansSpanQuery < NSCopying >

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQueryArray:(IOSObjectArray *)clauses;

- (void)addClauseWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)clause;

- (OrgApacheLuceneSearchSpansSpanOrQuery *)clone;

- (OrgApacheLuceneSearchSpansSpanWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                                 withBoolean:(jboolean)needsScores;

- (jboolean)isEqual:(id)o;

- (IOSObjectArray *)getClauses;

- (NSString *)getField;

- (NSUInteger)hash;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

- (NSString *)toStringWithNSString:(NSString *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanOrQuery)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanOrQuery_initWithOrgApacheLuceneSearchSpansSpanQueryArray_(OrgApacheLuceneSearchSpansSpanOrQuery *self, IOSObjectArray *clauses);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanOrQuery *new_OrgApacheLuceneSearchSpansSpanOrQuery_initWithOrgApacheLuceneSearchSpansSpanQueryArray_(IOSObjectArray *clauses) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanOrQuery)

#endif

#if !defined (_OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight_) && (OrgApacheLuceneSearchSpansSpanOrQuery_INCLUDE_ALL || OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight_INCLUDE)
#define _OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight_

#define OrgApacheLuceneSearchSpansSpanWeight_RESTRICT 1
#define OrgApacheLuceneSearchSpansSpanWeight_INCLUDE 1
#include "org/apache/lucene/search/spans/SpanWeight.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchSpansSpanOrQuery;
@class OrgApacheLuceneSearchSpansSpanWeight_PostingsEnum;
@class OrgApacheLuceneSearchSpansSpans;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight : OrgApacheLuceneSearchSpansSpanWeight {
 @public
  id<JavaUtilList> subWeights_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanOrQuery:(OrgApacheLuceneSearchSpansSpanOrQuery *)outer$
                       withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                              withJavaUtilMap:(id<JavaUtilMap>)terms
                                             withJavaUtilList:(id<JavaUtilList>)subWeights;

- (void)extractTermContextsWithJavaUtilMap:(id<JavaUtilMap>)contexts;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (OrgApacheLuceneSearchSpansSpans *)getSpansWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                 withOrgApacheLuceneSearchSpansSpanWeight_PostingsEnum:(OrgApacheLuceneSearchSpansSpanWeight_PostingsEnum *)requiredPostings;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight, subWeights_, id<JavaUtilList>)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight_initWithOrgApacheLuceneSearchSpansSpanOrQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withJavaUtilList_(OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight *self, OrgApacheLuceneSearchSpansSpanOrQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms, id<JavaUtilList> subWeights);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight *new_OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight_initWithOrgApacheLuceneSearchSpansSpanOrQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withJavaUtilList_(OrgApacheLuceneSearchSpansSpanOrQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms, id<JavaUtilList> subWeights) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanOrQuery_SpanOrWeight)

#endif

#pragma pop_macro("OrgApacheLuceneSearchSpansSpanOrQuery_INCLUDE_ALL")
