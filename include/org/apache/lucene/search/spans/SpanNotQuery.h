//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/SpanNotQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneSearchSpansSpanNotQuery_INCLUDE_ALL")
#if OrgApacheLuceneSearchSpansSpanNotQuery_RESTRICT
#define OrgApacheLuceneSearchSpansSpanNotQuery_INCLUDE_ALL 0
#else
#define OrgApacheLuceneSearchSpansSpanNotQuery_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneSearchSpansSpanNotQuery_RESTRICT

#if !defined (_OrgApacheLuceneSearchSpansSpanNotQuery_) && (OrgApacheLuceneSearchSpansSpanNotQuery_INCLUDE_ALL || OrgApacheLuceneSearchSpansSpanNotQuery_INCLUDE)
#define _OrgApacheLuceneSearchSpansSpanNotQuery_

#define OrgApacheLuceneSearchSpansSpanQuery_RESTRICT 1
#define OrgApacheLuceneSearchSpansSpanQuery_INCLUDE 1
#include "org/apache/lucene/search/spans/SpanQuery.h"

@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchQuery;
@class OrgApacheLuceneSearchSpansSpanWeight;

@interface OrgApacheLuceneSearchSpansSpanNotQuery : OrgApacheLuceneSearchSpansSpanQuery < NSCopying >

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)include
                    withOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)exclude;

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)include
                    withOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)exclude
                                                    withInt:(jint)dist;

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)include
                    withOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)exclude
                                                    withInt:(jint)pre
                                                    withInt:(jint)post;

- (OrgApacheLuceneSearchSpansSpanNotQuery *)clone;

- (OrgApacheLuceneSearchSpansSpanWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                                 withBoolean:(jboolean)needsScores;

- (jboolean)isEqual:(id)o;

- (OrgApacheLuceneSearchSpansSpanQuery *)getExclude;

- (NSString *)getField;

- (OrgApacheLuceneSearchSpansSpanQuery *)getInclude;

- (NSUInteger)hash;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

- (NSString *)toStringWithNSString:(NSString *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanNotQuery)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanNotQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanNotQuery *self, OrgApacheLuceneSearchSpansSpanQuery *include, OrgApacheLuceneSearchSpansSpanQuery *exclude);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanNotQuery *new_OrgApacheLuceneSearchSpansSpanNotQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanQuery *include, OrgApacheLuceneSearchSpansSpanQuery *exclude) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanNotQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_withInt_(OrgApacheLuceneSearchSpansSpanNotQuery *self, OrgApacheLuceneSearchSpansSpanQuery *include, OrgApacheLuceneSearchSpansSpanQuery *exclude, jint dist);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanNotQuery *new_OrgApacheLuceneSearchSpansSpanNotQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_withInt_(OrgApacheLuceneSearchSpansSpanQuery *include, OrgApacheLuceneSearchSpansSpanQuery *exclude, jint dist) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanNotQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_withInt_withInt_(OrgApacheLuceneSearchSpansSpanNotQuery *self, OrgApacheLuceneSearchSpansSpanQuery *include, OrgApacheLuceneSearchSpansSpanQuery *exclude, jint pre, jint post);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanNotQuery *new_OrgApacheLuceneSearchSpansSpanNotQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_withInt_withInt_(OrgApacheLuceneSearchSpansSpanQuery *include, OrgApacheLuceneSearchSpansSpanQuery *exclude, jint pre, jint post) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanNotQuery)

#endif

#if !defined (_OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight_) && (OrgApacheLuceneSearchSpansSpanNotQuery_INCLUDE_ALL || OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight_INCLUDE)
#define _OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight_

#define OrgApacheLuceneSearchSpansSpanWeight_RESTRICT 1
#define OrgApacheLuceneSearchSpansSpanWeight_INCLUDE 1
#include "org/apache/lucene/search/spans/SpanWeight.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchSpansSpanNotQuery;
@class OrgApacheLuceneSearchSpansSpanWeight_PostingsEnum;
@class OrgApacheLuceneSearchSpansSpans;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight : OrgApacheLuceneSearchSpansSpanWeight {
 @public
  OrgApacheLuceneSearchSpansSpanWeight *includeWeight_;
  OrgApacheLuceneSearchSpansSpanWeight *excludeWeight_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanNotQuery:(OrgApacheLuceneSearchSpansSpanNotQuery *)outer$
                        withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withJavaUtilMap:(id<JavaUtilMap>)terms
                      withOrgApacheLuceneSearchSpansSpanWeight:(OrgApacheLuceneSearchSpansSpanWeight *)includeWeight
                      withOrgApacheLuceneSearchSpansSpanWeight:(OrgApacheLuceneSearchSpansSpanWeight *)excludeWeight;

- (void)extractTermContextsWithJavaUtilMap:(id<JavaUtilMap>)contexts;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (OrgApacheLuceneSearchSpansSpans *)getSpansWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                 withOrgApacheLuceneSearchSpansSpanWeight_PostingsEnum:(OrgApacheLuceneSearchSpansSpanWeight_PostingsEnum *)requiredPostings;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight, includeWeight_, OrgApacheLuceneSearchSpansSpanWeight *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight, excludeWeight_, OrgApacheLuceneSearchSpansSpanWeight *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight_initWithOrgApacheLuceneSearchSpansSpanNotQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight *self, OrgApacheLuceneSearchSpansSpanNotQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms, OrgApacheLuceneSearchSpansSpanWeight *includeWeight, OrgApacheLuceneSearchSpansSpanWeight *excludeWeight);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight *new_OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight_initWithOrgApacheLuceneSearchSpansSpanNotQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(OrgApacheLuceneSearchSpansSpanNotQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms, OrgApacheLuceneSearchSpansSpanWeight *includeWeight, OrgApacheLuceneSearchSpansSpanWeight *excludeWeight) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanNotQuery_SpanNotWeight)

#endif

#pragma pop_macro("OrgApacheLuceneSearchSpansSpanNotQuery_INCLUDE_ALL")
