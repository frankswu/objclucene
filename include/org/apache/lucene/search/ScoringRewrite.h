//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/ScoringRewrite.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneSearchScoringRewrite_INCLUDE_ALL")
#if OrgApacheLuceneSearchScoringRewrite_RESTRICT
#define OrgApacheLuceneSearchScoringRewrite_INCLUDE_ALL 0
#else
#define OrgApacheLuceneSearchScoringRewrite_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneSearchScoringRewrite_RESTRICT

#if !defined (_OrgApacheLuceneSearchScoringRewrite_) && (OrgApacheLuceneSearchScoringRewrite_INCLUDE_ALL || OrgApacheLuceneSearchScoringRewrite_INCLUDE)
#define _OrgApacheLuceneSearchScoringRewrite_

#define OrgApacheLuceneSearchTermCollectingRewrite_RESTRICT 1
#define OrgApacheLuceneSearchTermCollectingRewrite_INCLUDE 1
#include "org/apache/lucene/search/TermCollectingRewrite.h"

@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneSearchMultiTermQuery;
@class OrgApacheLuceneSearchMultiTermQuery_RewriteMethod;
@class OrgApacheLuceneSearchQuery;

@interface OrgApacheLuceneSearchScoringRewrite : OrgApacheLuceneSearchTermCollectingRewrite

#pragma mark Public

- (instancetype)init;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query;

#pragma mark Protected

- (void)checkMaxClauseCountWithInt:(jint)count;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneSearchScoringRewrite)

FOUNDATION_EXPORT OrgApacheLuceneSearchScoringRewrite *OrgApacheLuceneSearchScoringRewrite_SCORING_BOOLEAN_REWRITE_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneSearchScoringRewrite, SCORING_BOOLEAN_REWRITE_, OrgApacheLuceneSearchScoringRewrite *)

FOUNDATION_EXPORT OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *OrgApacheLuceneSearchScoringRewrite_CONSTANT_SCORE_BOOLEAN_REWRITE_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneSearchScoringRewrite, CONSTANT_SCORE_BOOLEAN_REWRITE_, OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchScoringRewrite_init(OrgApacheLuceneSearchScoringRewrite *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchScoringRewrite)

#endif

#if !defined (_OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_) && (OrgApacheLuceneSearchScoringRewrite_INCLUDE_ALL || OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_INCLUDE)
#define _OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_

#define OrgApacheLuceneSearchTermCollectingRewrite_RESTRICT 1
#define OrgApacheLuceneSearchTermCollectingRewrite_TermCollector_INCLUDE 1
#include "org/apache/lucene/search/TermCollectingRewrite.h"

@class OrgApacheLuceneIndexTermsEnum;
@class OrgApacheLuceneSearchScoringRewrite;
@class OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart;
@class OrgApacheLuceneUtilBytesRef;
@class OrgApacheLuceneUtilBytesRefHash;

@interface OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector : OrgApacheLuceneSearchTermCollectingRewrite_TermCollector {
 @public
  OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *array_;
  OrgApacheLuceneUtilBytesRefHash *terms_;
  OrgApacheLuceneIndexTermsEnum *termsEnum_;
}

#pragma mark Public

- (jboolean)collectWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes;

- (void)setNextEnumWithOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum;

#pragma mark Package-Private

- (instancetype)initWithOrgApacheLuceneSearchScoringRewrite:(OrgApacheLuceneSearchScoringRewrite *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector, array_, OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector, terms_, OrgApacheLuceneUtilBytesRefHash *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector, termsEnum_, OrgApacheLuceneIndexTermsEnum *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_initWithOrgApacheLuceneSearchScoringRewrite_(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector *self, OrgApacheLuceneSearchScoringRewrite *outer$);

FOUNDATION_EXPORT OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector *new_OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_initWithOrgApacheLuceneSearchScoringRewrite_(OrgApacheLuceneSearchScoringRewrite *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector)

#endif

#if !defined (_OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_) && (OrgApacheLuceneSearchScoringRewrite_INCLUDE_ALL || OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_INCLUDE)
#define _OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_

#define OrgApacheLuceneUtilBytesRefHash_RESTRICT 1
#define OrgApacheLuceneUtilBytesRefHash_DirectBytesStartArray_INCLUDE 1
#include "org/apache/lucene/util/BytesRefHash.h"

@class IOSFloatArray;
@class IOSIntArray;
@class IOSObjectArray;

@interface OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart : OrgApacheLuceneUtilBytesRefHash_DirectBytesStartArray {
 @public
  IOSFloatArray *boost_;
  IOSObjectArray *termState_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)initSize;

- (IOSIntArray *)clear;

- (IOSIntArray *)grow;

- (IOSIntArray *)init__ OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart, boost_, IOSFloatArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart, termState_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_initWithInt_(OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *self, jint initSize);

FOUNDATION_EXPORT OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *new_OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_initWithInt_(jint initSize) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart)

#endif

#pragma pop_macro("OrgApacheLuceneSearchScoringRewrite_INCLUDE_ALL")
