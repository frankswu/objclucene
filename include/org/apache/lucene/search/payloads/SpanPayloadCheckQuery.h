//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/payloads/SpanPayloadCheckQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_INCLUDE_ALL")
#if OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_RESTRICT
#define OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_INCLUDE_ALL 0
#else
#define OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_RESTRICT

#if !defined (_OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_) && (OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_INCLUDE_ALL || OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_INCLUDE)
#define _OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_

#define OrgApacheLuceneSearchSpansSpanQuery_RESTRICT 1
#define OrgApacheLuceneSearchSpansSpanQuery_INCLUDE 1
#include "org/apache/lucene/search/spans/SpanQuery.h"

@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchSpansFilterSpans_AcceptStatusEnum;
@class OrgApacheLuceneSearchSpansSpanWeight;
@protocol JavaUtilCollection;

@interface OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery : OrgApacheLuceneSearchSpansSpanQuery {
 @public
  id<JavaUtilCollection> payloadToMatch_;
  OrgApacheLuceneSearchSpansSpanQuery *match_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)match
                                     withJavaUtilCollection:(id<JavaUtilCollection>)payloadToMatch;

- (OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery *)clone;

- (OrgApacheLuceneSearchSpansSpanWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                                 withBoolean:(jboolean)needsScores;

- (jboolean)isEqual:(id)o;

- (NSString *)getField;

- (NSUInteger)hash;

- (NSString *)toStringWithNSString:(NSString *)field;

#pragma mark Protected

- (OrgApacheLuceneSearchSpansFilterSpans_AcceptStatusEnum *)checkPayloadsWithJavaUtilCollection:(id<JavaUtilCollection>)candidate;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery, payloadToMatch_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery, match_, OrgApacheLuceneSearchSpansSpanQuery *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withJavaUtilCollection_(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery *self, OrgApacheLuceneSearchSpansSpanQuery *match, id<JavaUtilCollection> payloadToMatch);

FOUNDATION_EXPORT OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery *new_OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withJavaUtilCollection_(OrgApacheLuceneSearchSpansSpanQuery *match, id<JavaUtilCollection> payloadToMatch) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery)

#endif

#if !defined (_OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight_) && (OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_INCLUDE_ALL || OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight_INCLUDE)
#define _OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight_

#define OrgApacheLuceneSearchSpansSpanWeight_RESTRICT 1
#define OrgApacheLuceneSearchSpansSpanWeight_INCLUDE 1
#include "org/apache/lucene/search/spans/SpanWeight.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery;
@class OrgApacheLuceneSearchScorer;
@class OrgApacheLuceneSearchSpansSpanWeight_PostingsEnum;
@class OrgApacheLuceneSearchSpansSpans;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight : OrgApacheLuceneSearchSpansSpanWeight {
 @public
  OrgApacheLuceneSearchSpansSpanWeight *matchWeight_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery:(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery *)outer$
                                    withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                           withJavaUtilMap:(id<JavaUtilMap>)termContexts
                                  withOrgApacheLuceneSearchSpansSpanWeight:(OrgApacheLuceneSearchSpansSpanWeight *)matchWeight;

- (void)extractTermContextsWithJavaUtilMap:(id<JavaUtilMap>)contexts;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (OrgApacheLuceneSearchSpansSpans *)getSpansWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                 withOrgApacheLuceneSearchSpansSpanWeight_PostingsEnum:(OrgApacheLuceneSearchSpansSpanWeight_PostingsEnum *)requiredPostings;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight, matchWeight_, OrgApacheLuceneSearchSpansSpanWeight *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight_initWithOrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight *self, OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> termContexts, OrgApacheLuceneSearchSpansSpanWeight *matchWeight);

FOUNDATION_EXPORT OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight *new_OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight_initWithOrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> termContexts, OrgApacheLuceneSearchSpansSpanWeight *matchWeight) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_SpanPayloadCheckWeight)

#endif

#pragma pop_macro("OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_INCLUDE_ALL")
