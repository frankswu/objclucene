//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/payloads/SpanNearPayloadCheckQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery

#if !defined (OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery || defined(INCLUDE_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery))
#define OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_

#define RESTRICT_OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery 1
#define INCLUDE_OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery 1
#include "org/apache/lucene/search/payloads/SpanPayloadCheckQuery.h"

@class IOSObjectArray;
@class OrgApacheLuceneSearchSpansSpanNearQuery;
@protocol JavaUtilCollection;

/*!
 @brief Only return those matches that have a specific payload at
 the given position.
 */
@interface OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery : OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery

#pragma mark Public

/*!
 @param match          The underlying <code>org.apache.lucene.search.spans.SpanQuery</code> to check
 @param payloadToMatch The <code>java.util.Collection</code> of payloads to match
 */
- (instancetype)initWithOrgApacheLuceneSearchSpansSpanNearQuery:(OrgApacheLuceneSearchSpansSpanNearQuery *)match
                                         withJavaUtilCollection:(id<JavaUtilCollection>)payloadToMatch;

- (OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *)clone;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (NSString *)toStringWithNSString:(NSString *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery)

FOUNDATION_EXPORT void OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *self, OrgApacheLuceneSearchSpansSpanNearQuery *match, id<JavaUtilCollection> payloadToMatch);

FOUNDATION_EXPORT OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *new_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(OrgApacheLuceneSearchSpansSpanNearQuery *match, id<JavaUtilCollection> payloadToMatch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *create_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(OrgApacheLuceneSearchSpansSpanNearQuery *match, id<JavaUtilCollection> payloadToMatch);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery")
