//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_INCLUDE_ALL")
#if OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_RESTRICT
#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_INCLUDE_ALL 0
#else
#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_INCLUDE_ALL 1
#endif
#undef OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_RESTRICT

#if !defined (_OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_) && (OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_INCLUDE_ALL || OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_INCLUDE)
#define _OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_

#define OrgApacheLuceneCodecsFieldsProducer_RESTRICT 1
#define OrgApacheLuceneCodecsFieldsProducer_INCLUDE 1
#include "org/apache/lucene/codecs/FieldsProducer.h"

@class OrgApacheLuceneCodecsPostingsReaderBase;
@class OrgApacheLuceneIndexSegmentReadState;
@class OrgApacheLuceneIndexTerms;
@class OrgApacheLuceneStoreIndexInput;
@class OrgApacheLuceneUtilBytesRef;
@class OrgApacheLuceneUtilFstOutputs;
@protocol JavaUtilIterator;

#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_OUTPUT_FLAGS_NUM_BITS 2
#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_OUTPUT_FLAGS_MASK 3
#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_OUTPUT_FLAG_IS_FLOOR 1
#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_OUTPUT_FLAG_HAS_TERMS 2
#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_VERSION_START 0
#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_VERSION_AUTO_PREFIX_TERMS 1
#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_VERSION_AUTO_PREFIX_TERMS_COND 2
#define OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_VERSION_CURRENT 2

@interface OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader : OrgApacheLuceneCodecsFieldsProducer {
 @public
  OrgApacheLuceneStoreIndexInput *termsIn_;
  OrgApacheLuceneCodecsPostingsReaderBase *postingsReader_;
  NSString *segment_;
  jint version__;
  jboolean anyAutoPrefixTerms_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneCodecsPostingsReaderBase:(OrgApacheLuceneCodecsPostingsReaderBase *)postingsReader
                       withOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state;

- (void)checkIntegrity;

- (void)close;

- (id<JavaUtilIterator>)iterator;

- (jlong)ramBytesUsed;

- (jint)size;

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field;

- (NSString *)description;

#pragma mark Package-Private


@end

J2OBJC_STATIC_INIT(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, termsIn_, OrgApacheLuceneStoreIndexInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, postingsReader_, OrgApacheLuceneCodecsPostingsReaderBase *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, segment_, NSString *)

FOUNDATION_EXPORT OrgApacheLuceneUtilFstOutputs *OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_FST_OUTPUTS_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, FST_OUTPUTS_, OrgApacheLuceneUtilFstOutputs *)

FOUNDATION_EXPORT OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_NO_OUTPUT_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, NO_OUTPUT_, OrgApacheLuceneUtilBytesRef *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, OUTPUT_FLAGS_NUM_BITS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, OUTPUT_FLAGS_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, OUTPUT_FLAG_IS_FLOOR, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, OUTPUT_FLAG_HAS_TERMS, jint)

FOUNDATION_EXPORT NSString *OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_TERMS_EXTENSION_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, TERMS_EXTENSION_, NSString *)

FOUNDATION_EXPORT NSString *OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_TERMS_CODEC_NAME_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, TERMS_CODEC_NAME_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, VERSION_START, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, VERSION_AUTO_PREFIX_TERMS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, VERSION_AUTO_PREFIX_TERMS_COND, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, VERSION_CURRENT, jint)

FOUNDATION_EXPORT NSString *OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_TERMS_INDEX_EXTENSION_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, TERMS_INDEX_EXTENSION_, NSString *)

FOUNDATION_EXPORT NSString *OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_TERMS_INDEX_CODEC_NAME_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader, TERMS_INDEX_CODEC_NAME_, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_initWithOrgApacheLuceneCodecsPostingsReaderBase_withOrgApacheLuceneIndexSegmentReadState_(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader *self, OrgApacheLuceneCodecsPostingsReaderBase *postingsReader, OrgApacheLuceneIndexSegmentReadState *state);

FOUNDATION_EXPORT OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader *new_OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_initWithOrgApacheLuceneCodecsPostingsReaderBase_withOrgApacheLuceneIndexSegmentReadState_(OrgApacheLuceneCodecsPostingsReaderBase *postingsReader, OrgApacheLuceneIndexSegmentReadState *state) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader)

#endif

#pragma pop_macro("OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_INCLUDE_ALL")
