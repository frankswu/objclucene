//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./misc/src/java/org/apache/lucene/uninverting/DocTermOrds.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/DocValues.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/RandomAccessOrds.h"
#include "org/apache/lucene/index/SortedSetDocValues.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/uninverting/DocTermOrds.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/PagedBytes.h"
#include "org/apache/lucene/util/StringHelper.h"

#define OrgApacheLuceneUninvertingDocTermOrds_TNUM_OFFSET 2

@interface OrgApacheLuceneUninvertingDocTermOrds () {
 @public
  jint indexIntervalBits_;
  jint indexIntervalMask_;
  jint indexInterval_;
  jlong memsz_;
}

+ (jint)vIntSizeWithInt:(jint)x;

+ (jint)writeIntWithInt:(jint)x
          withByteArray:(IOSByteArray *)arr
                withInt:(jint)pos;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUninvertingDocTermOrds, TNUM_OFFSET, jint)

__attribute__((unused)) static jint OrgApacheLuceneUninvertingDocTermOrds_vIntSizeWithInt_(jint x);

__attribute__((unused)) static jint OrgApacheLuceneUninvertingDocTermOrds_writeIntWithInt_withByteArray_withInt_(jint x, IOSByteArray *arr, jint pos);

@interface OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum : OrgApacheLuceneIndexTermsEnum {
 @public
  OrgApacheLuceneUninvertingDocTermOrds *this$0_;
  OrgApacheLuceneIndexTermsEnum *termsEnum_;
  OrgApacheLuceneUtilBytesRef *term_;
  jlong ord_;
}

- (instancetype)initWithOrgApacheLuceneUninvertingDocTermOrds:(OrgApacheLuceneUninvertingDocTermOrds *)outer$
                           withOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader;

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags;

- (OrgApacheLuceneUtilBytesRef *)term;

- (OrgApacheLuceneUtilBytesRef *)next;

- (jint)docFreq;

- (jlong)totalTermFreq;

- (jlong)ord;

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target;

- (void)seekExactWithLong:(jlong)targetOrd;

- (OrgApacheLuceneUtilBytesRef *)setTerm;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum, this$0_, OrgApacheLuceneUninvertingDocTermOrds *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum, termsEnum_, OrgApacheLuceneIndexTermsEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum, term_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum *self, OrgApacheLuceneUninvertingDocTermOrds *outer$, OrgApacheLuceneIndexLeafReader *reader);

__attribute__((unused)) static OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum *new_OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(OrgApacheLuceneUninvertingDocTermOrds *outer$, OrgApacheLuceneIndexLeafReader *reader) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilBytesRef *OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_setTerm(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum)

@interface OrgApacheLuceneUninvertingDocTermOrds_Iterator : OrgApacheLuceneIndexSortedSetDocValues {
 @public
  OrgApacheLuceneUninvertingDocTermOrds *this$0_;
  OrgApacheLuceneIndexLeafReader *reader_;
  OrgApacheLuceneIndexTermsEnum *te_;
  IOSIntArray *buffer_;
  jint bufferUpto_;
  jint bufferLength_;
  jint tnum_;
  jint upto_;
  IOSByteArray *arr_;
}

- (instancetype)initWithOrgApacheLuceneUninvertingDocTermOrds:(OrgApacheLuceneUninvertingDocTermOrds *)outer$
                           withOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader;

- (jlong)nextOrd;

- (jint)readWithIntArray:(IOSIntArray *)buffer;

- (void)setDocumentWithInt:(jint)docID;

- (OrgApacheLuceneUtilBytesRef *)lookupOrdWithLong:(jlong)ord;

- (jlong)getValueCount;

- (jlong)lookupTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)key;

- (OrgApacheLuceneIndexTermsEnum *)termsEnum;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUninvertingDocTermOrds_Iterator)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingDocTermOrds_Iterator, this$0_, OrgApacheLuceneUninvertingDocTermOrds *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingDocTermOrds_Iterator, reader_, OrgApacheLuceneIndexLeafReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingDocTermOrds_Iterator, te_, OrgApacheLuceneIndexTermsEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingDocTermOrds_Iterator, buffer_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingDocTermOrds_Iterator, arr_, IOSByteArray *)

__attribute__((unused)) static void OrgApacheLuceneUninvertingDocTermOrds_Iterator_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(OrgApacheLuceneUninvertingDocTermOrds_Iterator *self, OrgApacheLuceneUninvertingDocTermOrds *outer$, OrgApacheLuceneIndexLeafReader *reader);

__attribute__((unused)) static OrgApacheLuceneUninvertingDocTermOrds_Iterator *new_OrgApacheLuceneUninvertingDocTermOrds_Iterator_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(OrgApacheLuceneUninvertingDocTermOrds *outer$, OrgApacheLuceneIndexLeafReader *reader) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUninvertingDocTermOrds_Iterator)

@implementation OrgApacheLuceneUninvertingDocTermOrds

- (jlong)ramBytesUsed {
  if (memsz_ != 0) return memsz_;
  jlong sz = 8 * 8 + 32;
  if (index_ != nil) sz += index_->size_ * 4;
  if (tnums_ != nil) {
    {
      IOSObjectArray *a__ = tnums_;
      IOSByteArray * const *b__ = a__->buffer_;
      IOSByteArray * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        IOSByteArray *arr = *b__++;
        if (arr != nil) sz += arr->size_;
      }
    }
  }
  memsz_ = sz;
  return sz;
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (instancetype)initWithOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader
                           withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)liveDocs
                                          withNSString:(NSString *)field {
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_(self, reader, liveDocs, field);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader
                           withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)liveDocs
                                          withNSString:(NSString *)field
                       withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)termPrefix {
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_(self, reader, liveDocs, field, termPrefix);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader
                           withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)liveDocs
                                          withNSString:(NSString *)field
                       withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)termPrefix
                                               withInt:(jint)maxTermDocFreq {
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, reader, liveDocs, field, termPrefix, maxTermDocFreq);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader
                           withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)liveDocs
                                          withNSString:(NSString *)field
                       withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)termPrefix
                                               withInt:(jint)maxTermDocFreq
                                               withInt:(jint)indexIntervalBits {
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_withInt_(self, reader, liveDocs, field, termPrefix, maxTermDocFreq, indexIntervalBits);
  return self;
}

- (instancetype)initWithNSString:(NSString *)field
                         withInt:(jint)maxTermDocFreq
                         withInt:(jint)indexIntervalBits {
  OrgApacheLuceneUninvertingDocTermOrds_initWithNSString_withInt_withInt_(self, field, maxTermDocFreq, indexIntervalBits);
  return self;
}

- (OrgApacheLuceneIndexTermsEnum *)getOrdTermsEnumWithOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader {
  JreAssert((nil != indexedTermsArray_), (@"org/apache/lucene/uninverting/DocTermOrds.java:243 condition failed: assert null != indexedTermsArray;"));
  if (0 == ((IOSObjectArray *) nil_chk(indexedTermsArray_))->size_) {
    return nil;
  }
  else {
    return [new_OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(self, reader) autorelease];
  }
}

- (jint)numTerms {
  return numTermsInField_;
}

- (jboolean)isEmpty {
  return index_ == nil;
}

- (void)visitTermWithOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)te
                                           withInt:(jint)termNum {
}

- (void)setActualDocFreqWithInt:(jint)termNum
                        withInt:(jint)df {
}

- (void)uninvertWithOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader
                       withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)liveDocs
                   withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)termPrefix {
  OrgApacheLuceneIndexFieldInfo *info = [((OrgApacheLuceneIndexFieldInfos *) nil_chk([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) getFieldInfos])) fieldInfoWithNSString:field_];
  if (info != nil && [info getDocValuesType] != JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, NONE)) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$@", @"Type mismatch: ", field_, @" was indexed as ", [info getDocValuesType])) autorelease];
  }
  jlong startTime = JavaLangSystem_currentTimeMillis();
  JreStrongAssign(&prefix_, termPrefix == nil ? nil : OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(termPrefix));
  jint maxDoc = [reader maxDoc];
  IOSIntArray *index = [IOSIntArray arrayWithLength:maxDoc];
  IOSIntArray *lastTerm = [IOSIntArray arrayWithLength:maxDoc];
  IOSObjectArray *bytes = [IOSObjectArray arrayWithLength:maxDoc type:IOSClass_byteArray(1)];
  OrgApacheLuceneIndexTerms *terms = [reader termsWithNSString:field_];
  if (terms == nil) {
    return;
  }
  OrgApacheLuceneIndexTermsEnum *te = [((OrgApacheLuceneIndexTerms *) nil_chk(terms)) iterator];
  OrgApacheLuceneUtilBytesRef *seekStart = termPrefix != nil ? termPrefix : [new_OrgApacheLuceneUtilBytesRef_init() autorelease];
  if ([((OrgApacheLuceneIndexTermsEnum *) nil_chk(te)) seekCeilWithOrgApacheLuceneUtilBytesRef:seekStart] == JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END)) {
    return;
  }
  id<JavaUtilList> indexedTerms = [new_JavaUtilArrayList_init() autorelease];
  OrgApacheLuceneUtilPagedBytes *indexedTermsBytes = [new_OrgApacheLuceneUtilPagedBytes_initWithInt_(15) autorelease];
  IOSByteArray *tempArr = [IOSByteArray arrayWithLength:12];
  jint termNum = 0;
  JreStrongAssign(&postingsEnum_, nil);
  for (; ; ) {
    OrgApacheLuceneUtilBytesRef *t = [te term];
    if (t == nil || (termPrefix != nil && !OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(t, termPrefix))) {
      break;
    }
    [self visitTermWithOrgApacheLuceneIndexTermsEnum:te withInt:termNum];
    if ((termNum & indexIntervalMask_) == 0) {
      sizeOfIndexedStrings_ += ((OrgApacheLuceneUtilBytesRef *) nil_chk(t))->length_;
      OrgApacheLuceneUtilBytesRef *indexedTerm = [new_OrgApacheLuceneUtilBytesRef_init() autorelease];
      [indexedTermsBytes copy__WithOrgApacheLuceneUtilBytesRef:t withOrgApacheLuceneUtilBytesRef:indexedTerm];
      [indexedTerms addWithId:indexedTerm];
    }
    jint df = [te docFreq];
    if (df <= maxTermDocFreq_) {
      JreStrongAssign(&postingsEnum_, [te postingsWithOrgApacheLuceneIndexPostingsEnum:postingsEnum_ withInt:OrgApacheLuceneIndexPostingsEnum_NONE]);
      jint actualDF = 0;
      for (; ; ) {
        jint doc = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum_)) nextDoc];
        if (doc == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
          break;
        }
        actualDF++;
        termInstances_++;
        jint delta = termNum - IOSIntArray_Get(lastTerm, doc) + OrgApacheLuceneUninvertingDocTermOrds_TNUM_OFFSET;
        *IOSIntArray_GetRef(lastTerm, doc) = termNum;
        jint val = IOSIntArray_Get(index, doc);
        if ((val & (jint) 0xff) == 1) {
          jint pos = JreURShift32(val, 8);
          jint ilen = OrgApacheLuceneUninvertingDocTermOrds_vIntSizeWithInt_(delta);
          IOSByteArray *arr = IOSObjectArray_Get(bytes, doc);
          jint newend = pos + ilen;
          if (newend > ((IOSByteArray *) nil_chk(arr))->size_) {
            jint newLen = (newend + 3) & (jint) 0xfffffffc;
            IOSByteArray *newarr = [IOSByteArray arrayWithLength:newLen];
            JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(arr, 0, newarr, 0, pos);
            arr = newarr;
            IOSObjectArray_Set(bytes, doc, newarr);
          }
          pos = OrgApacheLuceneUninvertingDocTermOrds_writeIntWithInt_withByteArray_withInt_(delta, arr, pos);
          *IOSIntArray_GetRef(index, doc) = (JreLShift32(pos, 8)) | 1;
        }
        else {
          jint ipos;
          if (val == 0) {
            ipos = 0;
          }
          else if ((val & (jint) 0x0000ff80) == 0) {
            ipos = 1;
          }
          else if ((val & (jint) 0x00ff8000) == 0) {
            ipos = 2;
          }
          else if ((val & (jint) 0xff800000) == 0) {
            ipos = 3;
          }
          else {
            ipos = 4;
          }
          jint endPos = OrgApacheLuceneUninvertingDocTermOrds_writeIntWithInt_withByteArray_withInt_(delta, tempArr, ipos);
          if (endPos <= 4) {
            for (jint j = ipos; j < endPos; j++) {
              val |= JreLShift32((IOSByteArray_Get(tempArr, j) & (jint) 0xff), (JreLShift32(j, 3)));
            }
            *IOSIntArray_GetRef(index, doc) = val;
          }
          else {
            for (jint j = 0; j < ipos; j++) {
              *IOSByteArray_GetRef(tempArr, j) = (jbyte) val;
              JreURShiftAssignInt(&val, 8);
            }
            *IOSIntArray_GetRef(index, doc) = (JreLShift32(endPos, 8)) | 1;
            IOSObjectArray_Set(bytes, doc, tempArr);
            tempArr = [IOSByteArray arrayWithLength:12];
          }
        }
      }
      [self setActualDocFreqWithInt:termNum withInt:actualDF];
    }
    termNum++;
    if ([te next] == nil) {
      break;
    }
  }
  numTermsInField_ = termNum;
  jlong midPoint = JavaLangSystem_currentTimeMillis();
  if (termInstances_ == 0) {
    JreStrongAssign(&tnums_, nil);
  }
  else {
    JreStrongAssign(&self->index_, index);
    for (jint pass = 0; pass < 256; pass++) {
      IOSByteArray *target = IOSObjectArray_Get(nil_chk(tnums_), pass);
      jint pos = 0;
      if (target != nil) {
        pos = target->size_;
      }
      else {
        target = [IOSByteArray arrayWithLength:4096];
      }
      for (jint docbase = JreLShift32(pass, 16); docbase < maxDoc; docbase += (JreLShift32(1, 24))) {
        jint lim = JavaLangMath_minWithInt_withInt_(docbase + (JreLShift32(1, 16)), maxDoc);
        for (jint doc = docbase; doc < lim; doc++) {
          jint val = IOSIntArray_Get(index, doc);
          if ((val & (jint) 0xff) == 1) {
            jint len = JreURShift32(val, 8);
            *IOSIntArray_GetRef(index, doc) = (JreLShift32(pos, 8)) | 1;
            if ((pos & (jint) 0xff000000) != 0) {
              @throw [new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"Too many values for UnInvertedField faceting on field ", field_)) autorelease];
            }
            IOSByteArray *arr = IOSObjectArray_Get(bytes, doc);
            IOSObjectArray_Set(bytes, doc, nil);
            if (((IOSByteArray *) nil_chk(target))->size_ <= pos + len) {
              jint newlen = target->size_;
              while (newlen <= pos + len) JreLShiftAssignInt(&newlen, 1);
              IOSByteArray *newtarget = [IOSByteArray arrayWithLength:newlen];
              JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(target, 0, newtarget, 0, pos);
              target = newtarget;
            }
            JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(arr, 0, target, pos, len);
            pos += len + 1;
          }
        }
      }
      if (pos < ((IOSByteArray *) nil_chk(target))->size_) {
        IOSByteArray *newtarget = [IOSByteArray arrayWithLength:pos];
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(target, 0, newtarget, 0, pos);
        target = newtarget;
      }
      IOSObjectArray_Set(tnums_, pass, target);
      if ((JreLShift32(pass, 16)) > maxDoc) break;
    }
  }
  JreStrongAssign(&indexedTermsArray_, [indexedTerms toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[indexedTerms size] type:OrgApacheLuceneUtilBytesRef_class_()]]);
  jlong endTime = JavaLangSystem_currentTimeMillis();
  total_time_ = (jint) (endTime - startTime);
  phase1_time_ = (jint) (midPoint - startTime);
}

+ (jint)vIntSizeWithInt:(jint)x {
  return OrgApacheLuceneUninvertingDocTermOrds_vIntSizeWithInt_(x);
}

+ (jint)writeIntWithInt:(jint)x
          withByteArray:(IOSByteArray *)arr
                withInt:(jint)pos {
  return OrgApacheLuceneUninvertingDocTermOrds_writeIntWithInt_withByteArray_withInt_(x, arr, pos);
}

- (OrgApacheLuceneUtilBytesRef *)lookupTermWithOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum
                                                                     withInt:(jint)ord {
  [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) seekExactWithLong:ord];
  return [termsEnum term];
}

- (OrgApacheLuceneIndexSortedSetDocValues *)iteratorWithOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader {
  if ([self isEmpty]) {
    return OrgApacheLuceneIndexDocValues_emptySortedSet();
  }
  else {
    return [new_OrgApacheLuceneUninvertingDocTermOrds_Iterator_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(self, reader) autorelease];
  }
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(index_);
  RELEASE_(tnums_);
  RELEASE_(indexedTermsArray_);
  RELEASE_(prefix_);
  RELEASE_(postingsEnum_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneIndexLeafReader:withOrgApacheLuceneUtilBits:withNSString:", "DocTermOrds", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneIndexLeafReader:withOrgApacheLuceneUtilBits:withNSString:withOrgApacheLuceneUtilBytesRef:", "DocTermOrds", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneIndexLeafReader:withOrgApacheLuceneUtilBits:withNSString:withOrgApacheLuceneUtilBytesRef:withInt:", "DocTermOrds", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneIndexLeafReader:withOrgApacheLuceneUtilBits:withNSString:withOrgApacheLuceneUtilBytesRef:withInt:withInt:", "DocTermOrds", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithNSString:withInt:withInt:", "DocTermOrds", NULL, 0x4, NULL, NULL },
    { "getOrdTermsEnumWithOrgApacheLuceneIndexLeafReader:", "getOrdTermsEnum", "Lorg.apache.lucene.index.TermsEnum;", 0x1, "Ljava.io.IOException;", NULL },
    { "numTerms", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "visitTermWithOrgApacheLuceneIndexTermsEnum:withInt:", "visitTerm", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "setActualDocFreqWithInt:withInt:", "setActualDocFreq", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "uninvertWithOrgApacheLuceneIndexLeafReader:withOrgApacheLuceneUtilBits:withOrgApacheLuceneUtilBytesRef:", "uninvert", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "vIntSizeWithInt:", "vIntSize", "I", 0xa, NULL, NULL },
    { "writeIntWithInt:withByteArray:withInt:", "writeInt", "I", 0xa, NULL, NULL },
    { "lookupTermWithOrgApacheLuceneIndexTermsEnum:withInt:", "lookupTerm", "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "iteratorWithOrgApacheLuceneIndexLeafReader:", "iterator", "Lorg.apache.lucene.index.SortedSetDocValues;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TNUM_OFFSET", "TNUM_OFFSET", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUninvertingDocTermOrds_TNUM_OFFSET },
    { "DEFAULT_INDEX_INTERVAL_BITS", "DEFAULT_INDEX_INTERVAL_BITS", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUninvertingDocTermOrds_DEFAULT_INDEX_INTERVAL_BITS },
    { "indexIntervalBits_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "indexIntervalMask_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "indexInterval_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxTermDocFreq_", NULL, 0x14, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "field_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "numTermsInField_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "termInstances_", NULL, 0x4, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "memsz_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "total_time_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "phase1_time_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "index_", NULL, 0x4, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "tnums_", NULL, 0x4, "[[B", NULL, NULL, .constantValue.asLong = 0 },
    { "sizeOfIndexedStrings_", NULL, 0x4, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "indexedTermsArray_", NULL, 0x4, "[Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "prefix_", NULL, 0x4, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "ordBase_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "postingsEnum_", NULL, 0x4, "Lorg.apache.lucene.index.PostingsEnum;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.uninverting.DocTermOrds$OrdWrappedTermsEnum;", "Lorg.apache.lucene.uninverting.DocTermOrds$Iterator;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUninvertingDocTermOrds = { 2, "DocTermOrds", "org.apache.lucene.uninverting", NULL, 0x1, 17, methods, 19, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneUninvertingDocTermOrds;
}

@end

void OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_(OrgApacheLuceneUninvertingDocTermOrds *self, OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> liveDocs, NSString *field) {
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, reader, liveDocs, field, nil, JavaLangInteger_MAX_VALUE);
}

OrgApacheLuceneUninvertingDocTermOrds *new_OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_(OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> liveDocs, NSString *field) {
  OrgApacheLuceneUninvertingDocTermOrds *self = [OrgApacheLuceneUninvertingDocTermOrds alloc];
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_(self, reader, liveDocs, field);
  return self;
}

void OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneUninvertingDocTermOrds *self, OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> liveDocs, NSString *field, OrgApacheLuceneUtilBytesRef *termPrefix) {
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, reader, liveDocs, field, termPrefix, JavaLangInteger_MAX_VALUE);
}

OrgApacheLuceneUninvertingDocTermOrds *new_OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> liveDocs, NSString *field, OrgApacheLuceneUtilBytesRef *termPrefix) {
  OrgApacheLuceneUninvertingDocTermOrds *self = [OrgApacheLuceneUninvertingDocTermOrds alloc];
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_(self, reader, liveDocs, field, termPrefix);
  return self;
}

void OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(OrgApacheLuceneUninvertingDocTermOrds *self, OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> liveDocs, NSString *field, OrgApacheLuceneUtilBytesRef *termPrefix, jint maxTermDocFreq) {
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_withInt_(self, reader, liveDocs, field, termPrefix, maxTermDocFreq, OrgApacheLuceneUninvertingDocTermOrds_DEFAULT_INDEX_INTERVAL_BITS);
}

OrgApacheLuceneUninvertingDocTermOrds *new_OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> liveDocs, NSString *field, OrgApacheLuceneUtilBytesRef *termPrefix, jint maxTermDocFreq) {
  OrgApacheLuceneUninvertingDocTermOrds *self = [OrgApacheLuceneUninvertingDocTermOrds alloc];
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, reader, liveDocs, field, termPrefix, maxTermDocFreq);
  return self;
}

void OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_withInt_(OrgApacheLuceneUninvertingDocTermOrds *self, OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> liveDocs, NSString *field, OrgApacheLuceneUtilBytesRef *termPrefix, jint maxTermDocFreq, jint indexIntervalBits) {
  OrgApacheLuceneUninvertingDocTermOrds_initWithNSString_withInt_withInt_(self, field, maxTermDocFreq, indexIntervalBits);
  [self uninvertWithOrgApacheLuceneIndexLeafReader:reader withOrgApacheLuceneUtilBits:liveDocs withOrgApacheLuceneUtilBytesRef:termPrefix];
}

OrgApacheLuceneUninvertingDocTermOrds *new_OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_withInt_(OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> liveDocs, NSString *field, OrgApacheLuceneUtilBytesRef *termPrefix, jint maxTermDocFreq, jint indexIntervalBits) {
  OrgApacheLuceneUninvertingDocTermOrds *self = [OrgApacheLuceneUninvertingDocTermOrds alloc];
  OrgApacheLuceneUninvertingDocTermOrds_initWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_withInt_(self, reader, liveDocs, field, termPrefix, maxTermDocFreq, indexIntervalBits);
  return self;
}

void OrgApacheLuceneUninvertingDocTermOrds_initWithNSString_withInt_withInt_(OrgApacheLuceneUninvertingDocTermOrds *self, NSString *field, jint maxTermDocFreq, jint indexIntervalBits) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->tnums_, [IOSObjectArray newArrayWithLength:256 type:IOSClass_byteArray(1)]);
  JreStrongAssignAndConsume(&self->indexedTermsArray_, [IOSObjectArray newArrayWithLength:0 type:OrgApacheLuceneUtilBytesRef_class_()]);
  JreStrongAssign(&self->field_, field);
  self->maxTermDocFreq_ = maxTermDocFreq;
  self->indexIntervalBits_ = indexIntervalBits;
  self->indexIntervalMask_ = JreURShift32((jint) 0xffffffff, (32 - indexIntervalBits));
  self->indexInterval_ = JreLShift32(1, indexIntervalBits);
}

OrgApacheLuceneUninvertingDocTermOrds *new_OrgApacheLuceneUninvertingDocTermOrds_initWithNSString_withInt_withInt_(NSString *field, jint maxTermDocFreq, jint indexIntervalBits) {
  OrgApacheLuceneUninvertingDocTermOrds *self = [OrgApacheLuceneUninvertingDocTermOrds alloc];
  OrgApacheLuceneUninvertingDocTermOrds_initWithNSString_withInt_withInt_(self, field, maxTermDocFreq, indexIntervalBits);
  return self;
}

jint OrgApacheLuceneUninvertingDocTermOrds_vIntSizeWithInt_(jint x) {
  OrgApacheLuceneUninvertingDocTermOrds_initialize();
  if ((x & (JreLShift32((jint) 0xffffffff, (7 * 1)))) == 0) {
    return 1;
  }
  if ((x & (JreLShift32((jint) 0xffffffff, (7 * 2)))) == 0) {
    return 2;
  }
  if ((x & (JreLShift32((jint) 0xffffffff, (7 * 3)))) == 0) {
    return 3;
  }
  if ((x & (JreLShift32((jint) 0xffffffff, (7 * 4)))) == 0) {
    return 4;
  }
  return 5;
}

jint OrgApacheLuceneUninvertingDocTermOrds_writeIntWithInt_withByteArray_withInt_(jint x, IOSByteArray *arr, jint pos) {
  OrgApacheLuceneUninvertingDocTermOrds_initialize();
  jint a;
  a = (JreURShift32(x, (7 * 4)));
  if (a != 0) {
    *IOSByteArray_GetRef(nil_chk(arr), pos++) = (jbyte) (a | (jint) 0x80);
  }
  a = (JreURShift32(x, (7 * 3)));
  if (a != 0) {
    *IOSByteArray_GetRef(nil_chk(arr), pos++) = (jbyte) (a | (jint) 0x80);
  }
  a = (JreURShift32(x, (7 * 2)));
  if (a != 0) {
    *IOSByteArray_GetRef(nil_chk(arr), pos++) = (jbyte) (a | (jint) 0x80);
  }
  a = (JreURShift32(x, (7 * 1)));
  if (a != 0) {
    *IOSByteArray_GetRef(nil_chk(arr), pos++) = (jbyte) (a | (jint) 0x80);
  }
  *IOSByteArray_GetRef(nil_chk(arr), pos++) = (jbyte) (x & (jint) 0x7f);
  return pos;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUninvertingDocTermOrds)

@implementation OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum

- (instancetype)initWithOrgApacheLuceneUninvertingDocTermOrds:(OrgApacheLuceneUninvertingDocTermOrds *)outer$
                           withOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader {
  OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(self, outer$, reader);
  return self;
}

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags {
  return [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) postingsWithOrgApacheLuceneIndexPostingsEnum:reuse withInt:flags];
}

- (OrgApacheLuceneUtilBytesRef *)term {
  return term_;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if (++ord_ < 0) {
    ord_ = 0;
  }
  if ([((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) next] == nil) {
    JreStrongAssign(&term_, nil);
    return nil;
  }
  return OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_setTerm(self);
}

- (jint)docFreq {
  return [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) docFreq];
}

- (jlong)totalTermFreq {
  return [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) totalTermFreq];
}

- (jlong)ord {
  return this$0_->ordBase_ + ord_;
}

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target {
  if (term_ != nil && [term_ isEqual:target]) {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND);
  }
  jint startIdx = JavaUtilArrays_binarySearchWithNSObjectArray_withId_(this$0_->indexedTermsArray_, target);
  if (startIdx >= 0) {
    OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *seekStatus = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) seekCeilWithOrgApacheLuceneUtilBytesRef:target];
    JreAssert((seekStatus == JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND)), (@"org/apache/lucene/uninverting/DocTermOrds.java:652 condition failed: assert seekStatus == TermsEnum.SeekStatus.FOUND;"));
    ord_ = JreLShift32(startIdx, this$0_->indexIntervalBits_);
    OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_setTerm(self);
    JreAssert((term_ != nil), (@"org/apache/lucene/uninverting/DocTermOrds.java:655 condition failed: assert term != null;"));
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND);
  }
  startIdx = -startIdx - 1;
  if (startIdx == 0) {
    OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *seekStatus = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) seekCeilWithOrgApacheLuceneUtilBytesRef:target];
    JreAssert((seekStatus == JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, NOT_FOUND)), (@"org/apache/lucene/uninverting/DocTermOrds.java:665 condition failed: assert seekStatus == TermsEnum.SeekStatus.NOT_FOUND;"));
    ord_ = 0;
    OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_setTerm(self);
    JreAssert((term_ != nil), (@"org/apache/lucene/uninverting/DocTermOrds.java:668 condition failed: assert term != null;"));
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, NOT_FOUND);
  }
  startIdx--;
  if ((JreRShift64(ord_, this$0_->indexIntervalBits_)) == startIdx && term_ != nil && [term_ compareToWithId:target] <= 0) {
  }
  else {
    OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *seekStatus = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) seekCeilWithOrgApacheLuceneUtilBytesRef:IOSObjectArray_Get(nil_chk(this$0_->indexedTermsArray_), startIdx)];
    JreAssert((seekStatus == JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND)), (@"org/apache/lucene/uninverting/DocTermOrds.java:681 condition failed: assert seekStatus == TermsEnum.SeekStatus.FOUND;"));
    ord_ = JreLShift32(startIdx, this$0_->indexIntervalBits_);
    OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_setTerm(self);
    JreAssert((term_ != nil), (@"org/apache/lucene/uninverting/DocTermOrds.java:684 condition failed: assert term != null;"));
  }
  while (term_ != nil && [term_ compareToWithId:target] < 0) {
    [self next];
  }
  if (term_ == nil) {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END);
  }
  else if ([term_ compareToWithId:target] == 0) {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND);
  }
  else {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, NOT_FOUND);
  }
}

- (void)seekExactWithLong:(jlong)targetOrd {
  jint delta = (jint) (targetOrd - this$0_->ordBase_ - ord_);
  if (delta < 0 || delta > this$0_->indexInterval_) {
    jint idx = (jint) (JreURShift64(targetOrd, this$0_->indexIntervalBits_));
    OrgApacheLuceneUtilBytesRef *base = IOSObjectArray_Get(nil_chk(this$0_->indexedTermsArray_), idx);
    ord_ = JreLShift32(idx, this$0_->indexIntervalBits_);
    delta = (jint) (targetOrd - ord_);
    OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *seekStatus = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) seekCeilWithOrgApacheLuceneUtilBytesRef:base];
    JreAssert((seekStatus == JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND)), (@"org/apache/lucene/uninverting/DocTermOrds.java:711 condition failed: assert seekStatus == TermsEnum.SeekStatus.FOUND;"));
  }
  else {
  }
  while (--delta >= 0) {
    OrgApacheLuceneUtilBytesRef *br = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) next];
    if (br == nil) {
      JreAssert((NO), (@"org/apache/lucene/uninverting/DocTermOrds.java:719 condition failed: assert false;"));
      return;
    }
    ord_++;
  }
  OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_setTerm(self);
  JreAssert((term_ != nil), (@"org/apache/lucene/uninverting/DocTermOrds.java:726 condition failed: assert term != null;"));
}

- (OrgApacheLuceneUtilBytesRef *)setTerm {
  return OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_setTerm(self);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(termsEnum_);
  RELEASE_(term_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUninvertingDocTermOrds:withOrgApacheLuceneIndexLeafReader:", "OrdWrappedTermsEnum", NULL, 0x1, NULL, NULL },
    { "postingsWithOrgApacheLuceneIndexPostingsEnum:withInt:", "postings", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, "Ljava.io.IOException;", NULL },
    { "term", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "docFreq", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "totalTermFreq", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "ord", NULL, "J", 0x1, NULL, NULL },
    { "seekCeilWithOrgApacheLuceneUtilBytesRef:", "seekCeil", "Lorg.apache.lucene.index.TermsEnum$SeekStatus;", 0x1, "Ljava.io.IOException;", NULL },
    { "seekExactWithLong:", "seekExact", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "setTerm", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x2, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.uninverting.DocTermOrds;", NULL, NULL, .constantValue.asLong = 0 },
    { "termsEnum_", NULL, 0x12, "Lorg.apache.lucene.index.TermsEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "term_", NULL, 0x2, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "ord_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum = { 2, "OrdWrappedTermsEnum", "org.apache.lucene.uninverting", "DocTermOrds", 0x12, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum;
}

@end

void OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum *self, OrgApacheLuceneUninvertingDocTermOrds *outer$, OrgApacheLuceneIndexLeafReader *reader) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexTermsEnum_init(self);
  self->ord_ = -outer$->indexInterval_ - 1;
  JreAssert((outer$->indexedTermsArray_ != nil), (@"org/apache/lucene/uninverting/DocTermOrds.java:597 condition failed: assert indexedTermsArray != null;"));
  JreAssert((0 != ((IOSObjectArray *) nil_chk(outer$->indexedTermsArray_))->size_), (@"org/apache/lucene/uninverting/DocTermOrds.java:598 condition failed: assert 0 != indexedTermsArray.length;"));
  JreStrongAssign(&self->termsEnum_, [((OrgApacheLuceneIndexTerms *) nil_chk([((OrgApacheLuceneIndexFields *) nil_chk([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) fields])) termsWithNSString:outer$->field_])) iterator]);
}

OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum *new_OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(OrgApacheLuceneUninvertingDocTermOrds *outer$, OrgApacheLuceneIndexLeafReader *reader) {
  OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum *self = [OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum alloc];
  OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(self, outer$, reader);
  return self;
}

OrgApacheLuceneUtilBytesRef *OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum_setTerm(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum *self) {
  JreStrongAssign(&self->term_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(self->termsEnum_)) term]);
  if (self->this$0_->prefix_ != nil && !OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(self->term_, self->this$0_->prefix_)) {
    JreStrongAssign(&self->term_, nil);
  }
  return self->term_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUninvertingDocTermOrds_OrdWrappedTermsEnum)

@implementation OrgApacheLuceneUninvertingDocTermOrds_Iterator

- (instancetype)initWithOrgApacheLuceneUninvertingDocTermOrds:(OrgApacheLuceneUninvertingDocTermOrds *)outer$
                           withOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader {
  OrgApacheLuceneUninvertingDocTermOrds_Iterator_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(self, outer$, reader);
  return self;
}

- (jlong)nextOrd {
  while (bufferUpto_ == bufferLength_) {
    if (bufferLength_ < ((IOSIntArray *) nil_chk(buffer_))->size_) {
      return OrgApacheLuceneIndexSortedSetDocValues_NO_MORE_ORDS;
    }
    else {
      bufferLength_ = [self readWithIntArray:buffer_];
      bufferUpto_ = 0;
    }
  }
  return IOSIntArray_Get(nil_chk(buffer_), bufferUpto_++);
}

- (jint)readWithIntArray:(IOSIntArray *)buffer {
  jint bufferUpto = 0;
  if (arr_ == nil) {
    jint code = upto_;
    jint delta = 0;
    for (; ; ) {
      delta = (JreLShift32(delta, 7)) | (code & (jint) 0x7f);
      if ((code & (jint) 0x80) == 0) {
        if (delta == 0) break;
        tnum_ += delta - OrgApacheLuceneUninvertingDocTermOrds_TNUM_OFFSET;
        *IOSIntArray_GetRef(nil_chk(buffer), bufferUpto++) = this$0_->ordBase_ + tnum_;
        delta = 0;
      }
      JreURShiftAssignInt(&code, 8);
    }
  }
  else {
    for (; ; ) {
      jint delta = 0;
      for (; ; ) {
        jbyte b = IOSByteArray_Get(arr_, upto_++);
        delta = (JreLShift32(delta, 7)) | (b & (jint) 0x7f);
        if ((b & (jint) 0x80) == 0) break;
      }
      if (delta == 0) break;
      tnum_ += delta - OrgApacheLuceneUninvertingDocTermOrds_TNUM_OFFSET;
      *IOSIntArray_GetRef(nil_chk(buffer), bufferUpto++) = this$0_->ordBase_ + tnum_;
      if (bufferUpto == buffer->size_) {
        break;
      }
    }
  }
  return bufferUpto;
}

- (void)setDocumentWithInt:(jint)docID {
  tnum_ = 0;
  jint code = IOSIntArray_Get(nil_chk(this$0_->index_), docID);
  if ((code & (jint) 0xff) == 1) {
    upto_ = JreURShift32(code, 8);
    jint whichArray = (JreURShift32(docID, 16)) & (jint) 0xff;
    JreStrongAssign(&arr_, IOSObjectArray_Get(nil_chk(this$0_->tnums_), whichArray));
  }
  else {
    JreStrongAssign(&arr_, nil);
    upto_ = code;
  }
  bufferUpto_ = 0;
  bufferLength_ = [self readWithIntArray:buffer_];
}

- (OrgApacheLuceneUtilBytesRef *)lookupOrdWithLong:(jlong)ord {
  @try {
    return [this$0_ lookupTermWithOrgApacheLuceneIndexTermsEnum:te_ withInt:(jint) ord];
  }
  @catch (JavaIoIOException *e) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(e) autorelease];
  }
}

- (jlong)getValueCount {
  return [this$0_ numTerms];
}

- (jlong)lookupTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)key {
  @try {
    switch ([[((OrgApacheLuceneIndexTermsEnum *) nil_chk(te_)) seekCeilWithOrgApacheLuceneUtilBytesRef:key] ordinal]) {
      case OrgApacheLuceneIndexTermsEnum_SeekStatus_FOUND:
      JreAssert(([te_ ord] >= 0), (@"org/apache/lucene/uninverting/DocTermOrds.java:868 condition failed: assert te.ord() >= 0;"));
      return [te_ ord];
      case OrgApacheLuceneIndexTermsEnum_SeekStatus_NOT_FOUND:
      JreAssert(([te_ ord] >= 0), (@"org/apache/lucene/uninverting/DocTermOrds.java:871 condition failed: assert te.ord() >= 0;"));
      return -[te_ ord] - 1;
      default:
      return -[this$0_ numTerms] - 1;
    }
  }
  @catch (JavaIoIOException *e) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(e) autorelease];
  }
}

- (OrgApacheLuceneIndexTermsEnum *)termsEnum {
  @try {
    return [this$0_ getOrdTermsEnumWithOrgApacheLuceneIndexLeafReader:reader_];
  }
  @catch (JavaIoIOException *e) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(e) autorelease];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(reader_);
  RELEASE_(te_);
  RELEASE_(buffer_);
  RELEASE_(arr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUninvertingDocTermOrds:withOrgApacheLuceneIndexLeafReader:", "Iterator", NULL, 0x0, NULL, NULL },
    { "nextOrd", NULL, "J", 0x1, NULL, NULL },
    { "readWithIntArray:", "read", "I", 0x0, NULL, NULL },
    { "setDocumentWithInt:", "setDocument", "V", 0x1, NULL, NULL },
    { "lookupOrdWithLong:", "lookupOrd", "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "getValueCount", NULL, "J", 0x1, NULL, NULL },
    { "lookupTermWithOrgApacheLuceneUtilBytesRef:", "lookupTerm", "J", 0x1, NULL, NULL },
    { "termsEnum", NULL, "Lorg.apache.lucene.index.TermsEnum;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.uninverting.DocTermOrds;", NULL, NULL, .constantValue.asLong = 0 },
    { "reader_", NULL, 0x10, "Lorg.apache.lucene.index.LeafReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "te_", NULL, 0x10, "Lorg.apache.lucene.index.TermsEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "buffer_", NULL, 0x10, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "bufferUpto_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bufferLength_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "tnum_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "upto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "arr_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUninvertingDocTermOrds_Iterator = { 2, "Iterator", "org.apache.lucene.uninverting", "DocTermOrds", 0x2, 8, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUninvertingDocTermOrds_Iterator;
}

@end

void OrgApacheLuceneUninvertingDocTermOrds_Iterator_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(OrgApacheLuceneUninvertingDocTermOrds_Iterator *self, OrgApacheLuceneUninvertingDocTermOrds *outer$, OrgApacheLuceneIndexLeafReader *reader) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexSortedSetDocValues_init(self);
  JreStrongAssignAndConsume(&self->buffer_, [IOSIntArray newArrayWithLength:5]);
  JreStrongAssign(&self->reader_, reader);
  JreStrongAssign(&self->te_, [self termsEnum]);
}

OrgApacheLuceneUninvertingDocTermOrds_Iterator *new_OrgApacheLuceneUninvertingDocTermOrds_Iterator_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(OrgApacheLuceneUninvertingDocTermOrds *outer$, OrgApacheLuceneIndexLeafReader *reader) {
  OrgApacheLuceneUninvertingDocTermOrds_Iterator *self = [OrgApacheLuceneUninvertingDocTermOrds_Iterator alloc];
  OrgApacheLuceneUninvertingDocTermOrds_Iterator_initWithOrgApacheLuceneUninvertingDocTermOrds_withOrgApacheLuceneIndexLeafReader_(self, outer$, reader);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUninvertingDocTermOrds_Iterator)
