//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./misc/src/java/org/apache/lucene/uninverting/FieldCacheSanityChecker.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexReaderContext.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/uninverting/FieldCache.h"
#include "org/apache/lucene/uninverting/FieldCacheImpl.h"
#include "org/apache/lucene/uninverting/FieldCacheSanityChecker.h"
#include "org/apache/lucene/util/MapOfSets.h"

@interface OrgApacheLuceneUninvertingFieldCacheSanityChecker ()

- (id<JavaUtilCollection>)checkValueMismatchWithOrgApacheLuceneUtilMapOfSets:(OrgApacheLuceneUtilMapOfSets *)valIdToItems
                                            withOrgApacheLuceneUtilMapOfSets:(OrgApacheLuceneUtilMapOfSets *)readerFieldToValIds
                                                             withJavaUtilSet:(id<JavaUtilSet>)valMismatchKeys;

- (id<JavaUtilCollection>)checkSubreadersWithOrgApacheLuceneUtilMapOfSets:(OrgApacheLuceneUtilMapOfSets *)valIdToItems
                                         withOrgApacheLuceneUtilMapOfSets:(OrgApacheLuceneUtilMapOfSets *)readerFieldToValIds;

- (id<JavaUtilList>)getAllDescendantReaderKeysWithId:(id)seed;

@end

__attribute__((unused)) static id<JavaUtilCollection> OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkValueMismatchWithOrgApacheLuceneUtilMapOfSets_withOrgApacheLuceneUtilMapOfSets_withJavaUtilSet_(OrgApacheLuceneUninvertingFieldCacheSanityChecker *self, OrgApacheLuceneUtilMapOfSets *valIdToItems, OrgApacheLuceneUtilMapOfSets *readerFieldToValIds, id<JavaUtilSet> valMismatchKeys);

__attribute__((unused)) static id<JavaUtilCollection> OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkSubreadersWithOrgApacheLuceneUtilMapOfSets_withOrgApacheLuceneUtilMapOfSets_(OrgApacheLuceneUninvertingFieldCacheSanityChecker *self, OrgApacheLuceneUtilMapOfSets *valIdToItems, OrgApacheLuceneUtilMapOfSets *readerFieldToValIds);

__attribute__((unused)) static id<JavaUtilList> OrgApacheLuceneUninvertingFieldCacheSanityChecker_getAllDescendantReaderKeysWithId_(OrgApacheLuceneUninvertingFieldCacheSanityChecker *self, id seed);

@interface OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField : NSObject {
 @public
  id readerKey_;
  NSString *fieldName_;
}

- (instancetype)initWithId:(id)readerKey
              withNSString:(NSString *)fieldName;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)that;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField, readerKey_, id)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField, fieldName_, NSString *)

__attribute__((unused)) static void OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField_initWithId_withNSString_(OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *self, id readerKey, NSString *fieldName);

__attribute__((unused)) static OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField_initWithId_withNSString_(id readerKey, NSString *fieldName) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField)

@interface OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity () {
 @public
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *type_;
  NSString *msg_;
  IOSObjectArray *entries_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity, type_, OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity, msg_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity, entries_, IOSObjectArray *)

@interface OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType () {
 @public
  NSString *label_;
}

- (instancetype)initWithNSString:(NSString *)label;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType, label_, NSString *)

__attribute__((unused)) static void OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_initWithNSString_(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *self, NSString *label);

__attribute__((unused)) static OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_initWithNSString_(NSString *label) NS_RETURNS_RETAINED;

@implementation OrgApacheLuceneUninvertingFieldCacheSanityChecker

- (instancetype)init {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_init(self);
  return self;
}

+ (IOSObjectArray *)checkSanityWithOrgApacheLuceneUninvertingFieldCache:(id<OrgApacheLuceneUninvertingFieldCache>)cache {
  return OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkSanityWithOrgApacheLuceneUninvertingFieldCache_(cache);
}

+ (IOSObjectArray *)checkSanityWithOrgApacheLuceneUninvertingFieldCache_CacheEntryArray:(IOSObjectArray *)cacheEntries {
  return OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkSanityWithOrgApacheLuceneUninvertingFieldCache_CacheEntryArray_(cacheEntries);
}

- (IOSObjectArray *)checkWithOrgApacheLuceneUninvertingFieldCache_CacheEntryArray:(IOSObjectArray *)cacheEntries {
  if (nil == cacheEntries || 0 == cacheEntries->size_) return [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity_class_()];
  OrgApacheLuceneUtilMapOfSets *valIdToItems = [new_OrgApacheLuceneUtilMapOfSets_initWithJavaUtilMap_([new_JavaUtilHashMap_initWithInt_(17) autorelease]) autorelease];
  OrgApacheLuceneUtilMapOfSets *readerFieldToValIds = [new_OrgApacheLuceneUtilMapOfSets_initWithJavaUtilMap_([new_JavaUtilHashMap_initWithInt_(17) autorelease]) autorelease];
  id<JavaUtilSet> valMismatchKeys = [new_JavaUtilHashSet_init() autorelease];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(cacheEntries))->size_; i++) {
    OrgApacheLuceneUninvertingFieldCache_CacheEntry *item = IOSObjectArray_Get(cacheEntries, i);
    id val = [((OrgApacheLuceneUninvertingFieldCache_CacheEntry *) nil_chk(item)) getValue];
    if ([val isKindOfClass:[OrgApacheLuceneUninvertingFieldCacheImpl_BitsEntry class]]) {
      continue;
    }
    if ([val isKindOfClass:[OrgApacheLuceneUninvertingFieldCache_CreationPlaceholder class]]) continue;
    OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *rf = [new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField_initWithId_withNSString_([item getReaderKey], [item getFieldName]) autorelease];
    JavaLangInteger *valId = JavaLangInteger_valueOfWithInt_(JavaLangSystem_identityHashCodeWithId_(val));
    [valIdToItems putWithId:valId withId:item];
    if (1 < [readerFieldToValIds putWithId:rf withId:valId]) {
      [valMismatchKeys addWithId:rf];
    }
  }
  id<JavaUtilList> insanity = [new_JavaUtilArrayList_initWithInt_([valMismatchKeys size] * 3) autorelease];
  [insanity addAllWithJavaUtilCollection:OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkValueMismatchWithOrgApacheLuceneUtilMapOfSets_withOrgApacheLuceneUtilMapOfSets_withJavaUtilSet_(self, valIdToItems, readerFieldToValIds, valMismatchKeys)];
  [insanity addAllWithJavaUtilCollection:OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkSubreadersWithOrgApacheLuceneUtilMapOfSets_withOrgApacheLuceneUtilMapOfSets_(self, valIdToItems, readerFieldToValIds)];
  return [insanity toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[insanity size] type:OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity_class_()]];
}

- (id<JavaUtilCollection>)checkValueMismatchWithOrgApacheLuceneUtilMapOfSets:(OrgApacheLuceneUtilMapOfSets *)valIdToItems
                                            withOrgApacheLuceneUtilMapOfSets:(OrgApacheLuceneUtilMapOfSets *)readerFieldToValIds
                                                             withJavaUtilSet:(id<JavaUtilSet>)valMismatchKeys {
  return OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkValueMismatchWithOrgApacheLuceneUtilMapOfSets_withOrgApacheLuceneUtilMapOfSets_withJavaUtilSet_(self, valIdToItems, readerFieldToValIds, valMismatchKeys);
}

- (id<JavaUtilCollection>)checkSubreadersWithOrgApacheLuceneUtilMapOfSets:(OrgApacheLuceneUtilMapOfSets *)valIdToItems
                                         withOrgApacheLuceneUtilMapOfSets:(OrgApacheLuceneUtilMapOfSets *)readerFieldToValIds {
  return OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkSubreadersWithOrgApacheLuceneUtilMapOfSets_withOrgApacheLuceneUtilMapOfSets_(self, valIdToItems, readerFieldToValIds);
}

- (id<JavaUtilList>)getAllDescendantReaderKeysWithId:(id)seed {
  return OrgApacheLuceneUninvertingFieldCacheSanityChecker_getAllDescendantReaderKeysWithId_(self, seed);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FieldCacheSanityChecker", NULL, 0x1, NULL, NULL },
    { "checkSanityWithOrgApacheLuceneUninvertingFieldCache:", "checkSanity", "[Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$Insanity;", 0x9, NULL, NULL },
    { "checkSanityWithOrgApacheLuceneUninvertingFieldCache_CacheEntryArray:", "checkSanity", "[Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$Insanity;", 0x89, NULL, NULL },
    { "checkWithOrgApacheLuceneUninvertingFieldCache_CacheEntryArray:", "check", "[Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$Insanity;", 0x81, NULL, NULL },
    { "checkValueMismatchWithOrgApacheLuceneUtilMapOfSets:withOrgApacheLuceneUtilMapOfSets:withJavaUtilSet:", "checkValueMismatch", "Ljava.util.Collection;", 0x2, NULL, NULL },
    { "checkSubreadersWithOrgApacheLuceneUtilMapOfSets:withOrgApacheLuceneUtilMapOfSets:", "checkSubreaders", "Ljava.util.Collection;", 0x2, NULL, NULL },
    { "getAllDescendantReaderKeysWithId:", "getAllDescendantReaderKeys", "Ljava.util.List;", 0x2, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$ReaderField;", "Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$Insanity;", "Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$InsanityType;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUninvertingFieldCacheSanityChecker = { 2, "FieldCacheSanityChecker", "org.apache.lucene.uninverting", NULL, 0x10, 7, methods, 0, NULL, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneUninvertingFieldCacheSanityChecker;
}

@end

void OrgApacheLuceneUninvertingFieldCacheSanityChecker_init(OrgApacheLuceneUninvertingFieldCacheSanityChecker *self) {
  NSObject_init(self);
}

OrgApacheLuceneUninvertingFieldCacheSanityChecker *new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_init() {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker *self = [OrgApacheLuceneUninvertingFieldCacheSanityChecker alloc];
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_init(self);
  return self;
}

IOSObjectArray *OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkSanityWithOrgApacheLuceneUninvertingFieldCache_(id<OrgApacheLuceneUninvertingFieldCache> cache) {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_initialize();
  return OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkSanityWithOrgApacheLuceneUninvertingFieldCache_CacheEntryArray_([((id<OrgApacheLuceneUninvertingFieldCache>) nil_chk(cache)) getCacheEntries]);
}

IOSObjectArray *OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkSanityWithOrgApacheLuceneUninvertingFieldCache_CacheEntryArray_(IOSObjectArray *cacheEntries) {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_initialize();
  OrgApacheLuceneUninvertingFieldCacheSanityChecker *sanityChecker = [new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_init() autorelease];
  return [sanityChecker checkWithOrgApacheLuceneUninvertingFieldCache_CacheEntryArray:cacheEntries];
}

id<JavaUtilCollection> OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkValueMismatchWithOrgApacheLuceneUtilMapOfSets_withOrgApacheLuceneUtilMapOfSets_withJavaUtilSet_(OrgApacheLuceneUninvertingFieldCacheSanityChecker *self, OrgApacheLuceneUtilMapOfSets *valIdToItems, OrgApacheLuceneUtilMapOfSets *readerFieldToValIds, id<JavaUtilSet> valMismatchKeys) {
  id<JavaUtilList> insanity = [new_JavaUtilArrayList_initWithInt_([((id<JavaUtilSet>) nil_chk(valMismatchKeys)) size] * 3) autorelease];
  if (![valMismatchKeys isEmpty]) {
    id<JavaUtilMap> rfMap = [((OrgApacheLuceneUtilMapOfSets *) nil_chk(readerFieldToValIds)) getMap];
    id<JavaUtilMap> valMap = [((OrgApacheLuceneUtilMapOfSets *) nil_chk(valIdToItems)) getMap];
    for (OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField * __strong rf in valMismatchKeys) {
      id<JavaUtilList> badEntries = [new_JavaUtilArrayList_initWithInt_([valMismatchKeys size] * 2) autorelease];
      for (JavaLangInteger * __strong value in nil_chk([((id<JavaUtilMap>) nil_chk(rfMap)) getWithId:rf])) {
        for (OrgApacheLuceneUninvertingFieldCache_CacheEntry * __strong cacheEntry in nil_chk([((id<JavaUtilMap>) nil_chk(valMap)) getWithId:value])) {
          [badEntries addWithId:cacheEntry];
        }
      }
      IOSObjectArray *badness = [IOSObjectArray arrayWithLength:[badEntries size] type:OrgApacheLuceneUninvertingFieldCache_CacheEntry_class_()];
      badness = [badEntries toArrayWithNSObjectArray:badness];
      [insanity addWithId:[new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity_initWithOrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_withNSString_withOrgApacheLuceneUninvertingFieldCache_CacheEntryArray_(JreLoadStatic(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType, VALUEMISMATCH_), JreStrcat("$$", @"Multiple distinct value objects for ", [((OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *) nil_chk(rf)) description]), badness) autorelease]];
    }
  }
  return insanity;
}

id<JavaUtilCollection> OrgApacheLuceneUninvertingFieldCacheSanityChecker_checkSubreadersWithOrgApacheLuceneUtilMapOfSets_withOrgApacheLuceneUtilMapOfSets_(OrgApacheLuceneUninvertingFieldCacheSanityChecker *self, OrgApacheLuceneUtilMapOfSets *valIdToItems, OrgApacheLuceneUtilMapOfSets *readerFieldToValIds) {
  id<JavaUtilList> insanity = [new_JavaUtilArrayList_initWithInt_(23) autorelease];
  id<JavaUtilMap> badChildren = [new_JavaUtilHashMap_initWithInt_(17) autorelease];
  OrgApacheLuceneUtilMapOfSets *badKids = [new_OrgApacheLuceneUtilMapOfSets_initWithJavaUtilMap_(badChildren) autorelease];
  id<JavaUtilMap> viToItemSets = [((OrgApacheLuceneUtilMapOfSets *) nil_chk(valIdToItems)) getMap];
  id<JavaUtilMap> rfToValIdSets = [((OrgApacheLuceneUtilMapOfSets *) nil_chk(readerFieldToValIds)) getMap];
  id<JavaUtilSet> seen = [new_JavaUtilHashSet_initWithInt_(17) autorelease];
  id<JavaUtilSet> readerFields = [((id<JavaUtilMap>) nil_chk(rfToValIdSets)) keySet];
  for (OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField * __strong rf in nil_chk(readerFields)) {
    if ([seen containsWithId:rf]) continue;
    id<JavaUtilList> kids = OrgApacheLuceneUninvertingFieldCacheSanityChecker_getAllDescendantReaderKeysWithId_(self, ((OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *) nil_chk(rf))->readerKey_);
    for (id __strong kidKey in nil_chk(kids)) {
      OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *kid = [new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField_initWithId_withNSString_(kidKey, rf->fieldName_) autorelease];
      if ([badChildren containsKeyWithId:kid]) {
        [badKids putWithId:rf withId:kid];
        [badKids putAllWithId:rf withJavaUtilCollection:[badChildren getWithId:kid]];
        [badChildren removeWithId:kid];
      }
      else if ([rfToValIdSets containsKeyWithId:kid]) {
        [badKids putWithId:rf withId:kid];
      }
      [seen addWithId:kid];
    }
    [seen addWithId:rf];
  }
  for (OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField * __strong parent in nil_chk([badChildren keySet])) {
    id<JavaUtilSet> kids = [badChildren getWithId:parent];
    id<JavaUtilList> badEntries = [new_JavaUtilArrayList_initWithInt_([((id<JavaUtilSet>) nil_chk(kids)) size] * 2) autorelease];
    {
      for (JavaLangInteger * __strong value in nil_chk([rfToValIdSets getWithId:parent])) {
        [badEntries addAllWithJavaUtilCollection:[((id<JavaUtilMap>) nil_chk(viToItemSets)) getWithId:value]];
      }
    }
    for (OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField * __strong kid in kids) {
      for (JavaLangInteger * __strong value in nil_chk([rfToValIdSets getWithId:kid])) {
        [badEntries addAllWithJavaUtilCollection:[((id<JavaUtilMap>) nil_chk(viToItemSets)) getWithId:value]];
      }
    }
    IOSObjectArray *badness = [IOSObjectArray arrayWithLength:[badEntries size] type:OrgApacheLuceneUninvertingFieldCache_CacheEntry_class_()];
    badness = [badEntries toArrayWithNSObjectArray:badness];
    [insanity addWithId:[new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity_initWithOrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_withNSString_withOrgApacheLuceneUninvertingFieldCache_CacheEntryArray_(JreLoadStatic(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType, SUBREADER_), JreStrcat("$$", @"Found caches for descendants of ", [((OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *) nil_chk(parent)) description]), badness) autorelease]];
  }
  return insanity;
}

id<JavaUtilList> OrgApacheLuceneUninvertingFieldCacheSanityChecker_getAllDescendantReaderKeysWithId_(OrgApacheLuceneUninvertingFieldCacheSanityChecker *self, id seed) {
  id<JavaUtilList> all = [new_JavaUtilArrayList_initWithInt_(17) autorelease];
  [all addWithId:seed];
  for (jint i = 0; i < [all size]; i++) {
    id obj = [all getWithInt:i];
    if ([obj isKindOfClass:[OrgApacheLuceneIndexIndexReader class]]) {
      @try {
        id<JavaUtilList> childs = [((OrgApacheLuceneIndexIndexReaderContext *) nil_chk([((OrgApacheLuceneIndexIndexReader *) nil_chk(((OrgApacheLuceneIndexIndexReader *) check_class_cast(obj, [OrgApacheLuceneIndexIndexReader class])))) getContext])) children];
        if (childs != nil) {
          for (OrgApacheLuceneIndexIndexReaderContext * __strong ctx in childs) {
            [all addWithId:[((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneIndexIndexReaderContext *) nil_chk(ctx)) reader])) getCoreCacheKey]];
          }
        }
      }
      @catch (OrgApacheLuceneStoreAlreadyClosedException *ace) {
      }
    }
  }
  return [all subListWithInt:1 withInt:[all size]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUninvertingFieldCacheSanityChecker)

@implementation OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField

- (instancetype)initWithId:(id)readerKey
              withNSString:(NSString *)fieldName {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField_initWithId_withNSString_(self, readerKey, fieldName);
  return self;
}

- (NSUInteger)hash {
  return JavaLangSystem_identityHashCodeWithId_(readerKey_) * ((jint) [((NSString *) nil_chk(fieldName_)) hash]);
}

- (jboolean)isEqual:(id)that {
  if (!([that isKindOfClass:[OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField class]])) return NO;
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *other = (OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *) check_class_cast(that, [OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField class]);
  return (self->readerKey_ == ((OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *) nil_chk(other))->readerKey_ && [((NSString *) nil_chk(self->fieldName_)) isEqual:other->fieldName_]);
}

- (NSString *)description {
  return JreStrcat("$C$", [nil_chk(readerKey_) description], '+', fieldName_);
}

- (void)dealloc {
  RELEASE_(readerKey_);
  RELEASE_(fieldName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withNSString:", "ReaderField", NULL, 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "readerKey_", NULL, 0x11, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldName_", NULL, 0x11, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField = { 2, "ReaderField", "org.apache.lucene.uninverting", "FieldCacheSanityChecker", 0x1a, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField;
}

@end

void OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField_initWithId_withNSString_(OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *self, id readerKey, NSString *fieldName) {
  NSObject_init(self);
  JreStrongAssign(&self->readerKey_, readerKey);
  JreStrongAssign(&self->fieldName_, fieldName);
}

OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField_initWithId_withNSString_(id readerKey, NSString *fieldName) {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField *self = [OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField alloc];
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField_initWithId_withNSString_(self, readerKey, fieldName);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUninvertingFieldCacheSanityChecker_ReaderField)

@implementation OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity

- (instancetype)initWithOrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType:(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *)type
                                                                          withNSString:(NSString *)msg
                              withOrgApacheLuceneUninvertingFieldCache_CacheEntryArray:(IOSObjectArray *)entries {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity_initWithOrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_withNSString_withOrgApacheLuceneUninvertingFieldCache_CacheEntryArray_(self, type, msg, entries);
  return self;
}

- (OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *)getType {
  return type_;
}

- (NSString *)getMsg {
  return msg_;
}

- (IOSObjectArray *)getCacheEntries {
  return entries_;
}

- (NSString *)description {
  JavaLangStringBuilder *buf = [new_JavaLangStringBuilder_init() autorelease];
  [((JavaLangStringBuilder *) nil_chk([buf appendWithId:[self getType]])) appendWithNSString:@": "];
  NSString *m = [self getMsg];
  if (nil != m) [buf appendWithNSString:m];
  [buf appendWithChar:0x000a];
  IOSObjectArray *ce = [self getCacheEntries];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(ce))->size_; i++) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buf appendWithChar:0x0009])) appendWithNSString:[((OrgApacheLuceneUninvertingFieldCache_CacheEntry *) nil_chk(IOSObjectArray_Get(ce, i))) description]])) appendWithChar:0x000a];
  }
  return [buf description];
}

- (void)dealloc {
  RELEASE_(type_);
  RELEASE_(msg_);
  RELEASE_(entries_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType:withNSString:withOrgApacheLuceneUninvertingFieldCache_CacheEntryArray:", "Insanity", NULL, 0x81, NULL, NULL },
    { "getType", NULL, "Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$InsanityType;", 0x1, NULL, NULL },
    { "getMsg", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getCacheEntries", NULL, "[Lorg.apache.lucene.uninverting.FieldCache$CacheEntry;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x12, "Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$InsanityType;", NULL, NULL, .constantValue.asLong = 0 },
    { "msg_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "entries_", NULL, 0x12, "[Lorg.apache.lucene.uninverting.FieldCache$CacheEntry;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity = { 2, "Insanity", "org.apache.lucene.uninverting", "FieldCacheSanityChecker", 0x19, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity;
}

@end

void OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity_initWithOrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_withNSString_withOrgApacheLuceneUninvertingFieldCache_CacheEntryArray_(OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity *self, OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *type, NSString *msg, IOSObjectArray *entries) {
  NSObject_init(self);
  if (nil == type) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Insanity requires non-null InsanityType") autorelease];
  }
  if (nil == entries || 0 == entries->size_) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Insanity requires non-null/non-empty CacheEntry[]") autorelease];
  }
  JreStrongAssign(&self->type_, type);
  JreStrongAssign(&self->msg_, msg);
  JreStrongAssign(&self->entries_, entries);
}

OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity *new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity_initWithOrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_withNSString_withOrgApacheLuceneUninvertingFieldCache_CacheEntryArray_(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *type, NSString *msg, IOSObjectArray *entries) {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity *self = [OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity alloc];
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity_initWithOrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_withNSString_withOrgApacheLuceneUninvertingFieldCache_CacheEntryArray_(self, type, msg, entries);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUninvertingFieldCacheSanityChecker_Insanity)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType)

OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_SUBREADER_;
OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_VALUEMISMATCH_;
OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_EXPECTED_;

@implementation OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType

- (instancetype)initWithNSString:(NSString *)label {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_initWithNSString_(self, label);
  return self;
}

- (NSString *)description {
  return label_;
}

- (void)dealloc {
  RELEASE_(label_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_SUBREADER_, new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_initWithNSString_(@"SUBREADER"));
    JreStrongAssignAndConsume(&OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_VALUEMISMATCH_, new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_initWithNSString_(@"VALUEMISMATCH"));
    JreStrongAssignAndConsume(&OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_EXPECTED_, new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_initWithNSString_(@"EXPECTED"));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "InsanityType", NULL, 0x2, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "label_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "SUBREADER_", NULL, 0x19, "Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$InsanityType;", &OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_SUBREADER_, NULL, .constantValue.asLong = 0 },
    { "VALUEMISMATCH_", NULL, 0x19, "Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$InsanityType;", &OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_VALUEMISMATCH_, NULL, .constantValue.asLong = 0 },
    { "EXPECTED_", NULL, 0x19, "Lorg.apache.lucene.uninverting.FieldCacheSanityChecker$InsanityType;", &OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_EXPECTED_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType = { 2, "InsanityType", "org.apache.lucene.uninverting", "FieldCacheSanityChecker", 0x19, 2, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType;
}

@end

void OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_initWithNSString_(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *self, NSString *label) {
  NSObject_init(self);
  JreStrongAssign(&self->label_, label);
}

OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *new_OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_initWithNSString_(NSString *label) {
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType *self = [OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType alloc];
  OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType_initWithNSString_(self, label);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUninvertingFieldCacheSanityChecker_InsanityType)
