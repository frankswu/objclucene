//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./expressions/src/java/org/apache/lucene/expressions/SimpleBindings.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StackOverflowError.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/apache/lucene/expressions/Bindings.h"
#include "org/apache/lucene/expressions/Expression.h"
#include "org/apache/lucene/expressions/SimpleBindings.h"
#include "org/apache/lucene/queries/function/ValueSource.h"
#include "org/apache/lucene/queries/function/valuesource/DoubleFieldSource.h"
#include "org/apache/lucene/queries/function/valuesource/FloatFieldSource.h"
#include "org/apache/lucene/queries/function/valuesource/IntFieldSource.h"
#include "org/apache/lucene/queries/function/valuesource/LongFieldSource.h"
#include "org/apache/lucene/search/SortField.h"

@implementation OrgApacheLuceneExpressionsSimpleBindings

- (instancetype)init {
  OrgApacheLuceneExpressionsSimpleBindings_init(self);
  return self;
}

- (void)addWithOrgApacheLuceneSearchSortField:(OrgApacheLuceneSearchSortField *)sortField {
  [((id<JavaUtilMap>) nil_chk(map_)) putWithId:[((OrgApacheLuceneSearchSortField *) nil_chk(sortField)) getField] withId:sortField];
}

- (void)addWithNSString:(NSString *)name
withOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)source {
  [((id<JavaUtilMap>) nil_chk(map_)) putWithId:name withId:source];
}

- (void)addWithNSString:(NSString *)name
withOrgApacheLuceneExpressionsExpression:(OrgApacheLuceneExpressionsExpression *)expression {
  [((id<JavaUtilMap>) nil_chk(map_)) putWithId:name withId:expression];
}

- (OrgApacheLuceneQueriesFunctionValueSource *)getValueSourceWithNSString:(NSString *)name {
  id o = [((id<JavaUtilMap>) nil_chk(map_)) getWithId:name];
  if (o == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$C", @"Invalid reference '", name, '\'')) autorelease];
  }
  else if ([o isKindOfClass:[OrgApacheLuceneExpressionsExpression class]]) {
    return [((OrgApacheLuceneExpressionsExpression *) check_class_cast(o, [OrgApacheLuceneExpressionsExpression class])) getValueSourceWithOrgApacheLuceneExpressionsBindings:self];
  }
  else if ([o isKindOfClass:[OrgApacheLuceneQueriesFunctionValueSource class]]) {
    return ((OrgApacheLuceneQueriesFunctionValueSource *) check_class_cast(o, [OrgApacheLuceneQueriesFunctionValueSource class]));
  }
  OrgApacheLuceneSearchSortField *field = (OrgApacheLuceneSearchSortField *) check_class_cast(o, [OrgApacheLuceneSearchSortField class]);
  switch ([[((OrgApacheLuceneSearchSortField *) nil_chk(field)) getType] ordinal]) {
    case OrgApacheLuceneSearchSortField_Type_INT:
    return [new_OrgApacheLuceneQueriesFunctionValuesourceIntFieldSource_initWithNSString_([field getField]) autorelease];
    case OrgApacheLuceneSearchSortField_Type_LONG:
    return [new_OrgApacheLuceneQueriesFunctionValuesourceLongFieldSource_initWithNSString_([field getField]) autorelease];
    case OrgApacheLuceneSearchSortField_Type_FLOAT:
    return [new_OrgApacheLuceneQueriesFunctionValuesourceFloatFieldSource_initWithNSString_([field getField]) autorelease];
    case OrgApacheLuceneSearchSortField_Type_DOUBLE:
    return [new_OrgApacheLuceneQueriesFunctionValuesourceDoubleFieldSource_initWithNSString_([field getField]) autorelease];
    case OrgApacheLuceneSearchSortField_Type_SCORE:
    return [self getScoreValueSource];
    default:
    @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
  }
}

- (void)validate {
  for (id __strong o in nil_chk([((id<JavaUtilMap>) nil_chk(map_)) values])) {
    if ([o isKindOfClass:[OrgApacheLuceneExpressionsExpression class]]) {
      OrgApacheLuceneExpressionsExpression *expr = (OrgApacheLuceneExpressionsExpression *) check_class_cast(o, [OrgApacheLuceneExpressionsExpression class]);
      @try {
        [((OrgApacheLuceneExpressionsExpression *) nil_chk(expr)) getValueSourceWithOrgApacheLuceneExpressionsBindings:self];
      }
      @catch (JavaLangStackOverflowError *e) {
        @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$C", @"Recursion Error: Cycle detected originating in (", ((OrgApacheLuceneExpressionsExpression *) nil_chk(expr))->sourceText_, ')')) autorelease];
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SimpleBindings", NULL, 0x1, NULL, NULL },
    { "addWithOrgApacheLuceneSearchSortField:", "add", "V", 0x1, NULL, NULL },
    { "addWithNSString:withOrgApacheLuceneQueriesFunctionValueSource:", "add", "V", 0x1, NULL, NULL },
    { "addWithNSString:withOrgApacheLuceneExpressionsExpression:", "add", "V", 0x1, NULL, NULL },
    { "getValueSourceWithNSString:", "getValueSource", "Lorg.apache.lucene.queries.function.ValueSource;", 0x1, NULL, NULL },
    { "validate", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "map_", NULL, 0x10, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneExpressionsSimpleBindings = { 2, "SimpleBindings", "org.apache.lucene.expressions", NULL, 0x11, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneExpressionsSimpleBindings;
}

@end

void OrgApacheLuceneExpressionsSimpleBindings_init(OrgApacheLuceneExpressionsSimpleBindings *self) {
  OrgApacheLuceneExpressionsBindings_init(self);
  JreStrongAssignAndConsume(&self->map_, new_JavaUtilHashMap_init());
}

OrgApacheLuceneExpressionsSimpleBindings *new_OrgApacheLuceneExpressionsSimpleBindings_init() {
  OrgApacheLuceneExpressionsSimpleBindings *self = [OrgApacheLuceneExpressionsSimpleBindings alloc];
  OrgApacheLuceneExpressionsSimpleBindings_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneExpressionsSimpleBindings)
