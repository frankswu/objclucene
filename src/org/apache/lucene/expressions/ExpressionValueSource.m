//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./expressions/src/java/org/apache/lucene/expressions/ExpressionValueSource.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/apache/lucene/expressions/Bindings.h"
#include "org/apache/lucene/expressions/Expression.h"
#include "org/apache/lucene/expressions/ExpressionFunctionValues.h"
#include "org/apache/lucene/expressions/ExpressionSortField.h"
#include "org/apache/lucene/expressions/ExpressionValueSource.h"
#include "org/apache/lucene/expressions/ScoreValueSource.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/queries/function/FunctionValues.h"
#include "org/apache/lucene/queries/function/ValueSource.h"
#include "org/apache/lucene/search/SortField.h"

@implementation OrgApacheLuceneExpressionsExpressionValueSource

- (instancetype)initWithOrgApacheLuceneExpressionsBindings:(OrgApacheLuceneExpressionsBindings *)bindings
                  withOrgApacheLuceneExpressionsExpression:(OrgApacheLuceneExpressionsExpression *)expression {
  OrgApacheLuceneExpressionsExpressionValueSource_initWithOrgApacheLuceneExpressionsBindings_withOrgApacheLuceneExpressionsExpression_(self, bindings, expression);
  return self;
}

- (OrgApacheLuceneQueriesFunctionFunctionValues *)getValuesWithJavaUtilMap:(id<JavaUtilMap>)context
                                 withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext {
  id<JavaUtilMap> valuesCache = (id<JavaUtilMap>) check_protocol_cast([((id<JavaUtilMap>) nil_chk(context)) getWithId:@"valuesCache"], JavaUtilMap_class_());
  if (valuesCache == nil) {
    valuesCache = [new_JavaUtilHashMap_init() autorelease];
    context = [new_JavaUtilHashMap_initWithJavaUtilMap_(context) autorelease];
    [context putWithId:@"valuesCache" withId:valuesCache];
  }
  IOSObjectArray *externalValues = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(((OrgApacheLuceneExpressionsExpression *) nil_chk(expression_))->variables_))->size_ type:OrgApacheLuceneQueriesFunctionFunctionValues_class_()];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(variables_))->size_; ++i) {
    NSString *externalName = IOSObjectArray_Get(expression_->variables_, i);
    OrgApacheLuceneQueriesFunctionFunctionValues *values = [((id<JavaUtilMap>) nil_chk(valuesCache)) getWithId:externalName];
    if (values == nil) {
      values = [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(IOSObjectArray_Get(variables_, i))) getValuesWithJavaUtilMap:context withOrgApacheLuceneIndexLeafReaderContext:readerContext];
      if (values == nil) {
        @throw [new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Internal error. External (", externalName, @") does not exist.")) autorelease];
      }
      [valuesCache putWithId:externalName withId:values];
    }
    IOSObjectArray_Set(externalValues, i, values);
  }
  return [new_OrgApacheLuceneExpressionsExpressionFunctionValues_initWithOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneExpressionsExpression_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_(self, expression_, externalValues) autorelease];
}

- (OrgApacheLuceneSearchSortField *)getSortFieldWithBoolean:(jboolean)reverse {
  return [new_OrgApacheLuceneExpressionsExpressionSortField_initWithNSString_withOrgApacheLuceneExpressionsExpressionValueSource_withBoolean_(((OrgApacheLuceneExpressionsExpression *) nil_chk(expression_))->sourceText_, self, reverse) autorelease];
}

- (NSString *)description__ {
  return JreStrcat("$$C", @"expr(", ((OrgApacheLuceneExpressionsExpression *) nil_chk(expression_))->sourceText_, ')');
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + ((expression_ == nil) ? 0 : ((jint) [expression_ hash]));
  result = prime * result + (needsScores_ ? 1231 : 1237);
  result = prime * result + JavaUtilArrays_hashCodeWithNSObjectArray_(variables_);
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return YES;
  }
  if (obj == nil) {
    return NO;
  }
  if ([self getClass] != [nil_chk(obj) getClass]) {
    return NO;
  }
  OrgApacheLuceneExpressionsExpressionValueSource *other = (OrgApacheLuceneExpressionsExpressionValueSource *) check_class_cast(obj, [OrgApacheLuceneExpressionsExpressionValueSource class]);
  if (expression_ == nil) {
    if (other->expression_ != nil) {
      return NO;
    }
  }
  else if (![expression_ isEqual:other->expression_]) {
    return NO;
  }
  if (needsScores_ != other->needsScores_) {
    return NO;
  }
  if (!JavaUtilArrays_equalsWithNSObjectArray_withNSObjectArray_(variables_, other->variables_)) {
    return NO;
  }
  return YES;
}

- (jboolean)needsScores {
  return needsScores_;
}

- (void)dealloc {
  RELEASE_(variables_);
  RELEASE_(expression_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneExpressionsBindings:withOrgApacheLuceneExpressionsExpression:", "ExpressionValueSource", NULL, 0x0, NULL, NULL },
    { "getValuesWithJavaUtilMap:withOrgApacheLuceneIndexLeafReaderContext:", "getValues", "Lorg.apache.lucene.queries.function.FunctionValues;", 0x1, "Ljava.io.IOException;", NULL },
    { "getSortFieldWithBoolean:", "getSortField", "Lorg.apache.lucene.search.SortField;", 0x1, NULL, NULL },
    { "description__", "description", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "needsScores", NULL, "Z", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "variables_", NULL, 0x10, "[Lorg.apache.lucene.queries.function.ValueSource;", NULL, NULL, .constantValue.asLong = 0 },
    { "expression_", NULL, 0x10, "Lorg.apache.lucene.expressions.Expression;", NULL, NULL, .constantValue.asLong = 0 },
    { "needsScores_", NULL, 0x10, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneExpressionsExpressionValueSource = { 2, "ExpressionValueSource", "org.apache.lucene.expressions", NULL, 0x10, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneExpressionsExpressionValueSource;
}

@end

void OrgApacheLuceneExpressionsExpressionValueSource_initWithOrgApacheLuceneExpressionsBindings_withOrgApacheLuceneExpressionsExpression_(OrgApacheLuceneExpressionsExpressionValueSource *self, OrgApacheLuceneExpressionsBindings *bindings, OrgApacheLuceneExpressionsExpression *expression) {
  OrgApacheLuceneQueriesFunctionValueSource_init(self);
  if (bindings == nil) @throw [new_JavaLangNullPointerException_init() autorelease];
  if (expression == nil) @throw [new_JavaLangNullPointerException_init() autorelease];
  JreStrongAssign(&self->expression_, expression);
  JreStrongAssignAndConsume(&self->variables_, [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(((OrgApacheLuceneExpressionsExpression *) nil_chk(expression))->variables_))->size_ type:OrgApacheLuceneQueriesFunctionValueSource_class_()]);
  jboolean needsScores = NO;
  for (jint i = 0; i < self->variables_->size_; i++) {
    OrgApacheLuceneQueriesFunctionValueSource *source = [((OrgApacheLuceneExpressionsBindings *) nil_chk(bindings)) getValueSourceWithNSString:IOSObjectArray_Get(expression->variables_, i)];
    if ([source isKindOfClass:[OrgApacheLuceneExpressionsScoreValueSource class]]) {
      needsScores = YES;
    }
    else if ([source isKindOfClass:[OrgApacheLuceneExpressionsExpressionValueSource class]]) {
      if ([((OrgApacheLuceneExpressionsExpressionValueSource *) nil_chk(((OrgApacheLuceneExpressionsExpressionValueSource *) check_class_cast(source, [OrgApacheLuceneExpressionsExpressionValueSource class])))) needsScores]) {
        needsScores = YES;
      }
    }
    else if (source == nil) {
      @throw [new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Internal error. Variable (", IOSObjectArray_Get(expression->variables_, i), @") does not exist.")) autorelease];
    }
    IOSObjectArray_Set(self->variables_, i, source);
  }
  self->needsScores_ = needsScores;
}

OrgApacheLuceneExpressionsExpressionValueSource *new_OrgApacheLuceneExpressionsExpressionValueSource_initWithOrgApacheLuceneExpressionsBindings_withOrgApacheLuceneExpressionsExpression_(OrgApacheLuceneExpressionsBindings *bindings, OrgApacheLuceneExpressionsExpression *expression) {
  OrgApacheLuceneExpressionsExpressionValueSource *self = [OrgApacheLuceneExpressionsExpressionValueSource alloc];
  OrgApacheLuceneExpressionsExpressionValueSource_initWithOrgApacheLuceneExpressionsBindings_withOrgApacheLuceneExpressionsExpression_(self, bindings, expression);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneExpressionsExpressionValueSource)
