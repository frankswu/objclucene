//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/bkdtree/HeapLatLonWriter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "org/apache/lucene/bkdtree/HeapLatLonReader.h"
#include "org/apache/lucene/bkdtree/HeapLatLonWriter.h"
#include "org/apache/lucene/bkdtree/LatLonReader.h"

@interface OrgApacheLuceneBkdtreeHeapLatLonWriter () {
 @public
  jint nextWrite_;
}

@end

@implementation OrgApacheLuceneBkdtreeHeapLatLonWriter

- (instancetype)initWithInt:(jint)count {
  OrgApacheLuceneBkdtreeHeapLatLonWriter_initWithInt_(self, count);
  return self;
}

- (void)appendWithInt:(jint)latEnc
              withInt:(jint)lonEnc
             withLong:(jlong)ord
              withInt:(jint)docID {
  *IOSIntArray_GetRef(nil_chk(latEncs_), nextWrite_) = latEnc;
  *IOSIntArray_GetRef(nil_chk(lonEncs_), nextWrite_) = lonEnc;
  *IOSLongArray_GetRef(nil_chk(ords_), nextWrite_) = ord;
  *IOSIntArray_GetRef(nil_chk(docIDs_), nextWrite_) = docID;
  nextWrite_++;
}

- (id<OrgApacheLuceneBkdtreeLatLonReader>)getReaderWithLong:(jlong)start {
  return [new_OrgApacheLuceneBkdtreeHeapLatLonReader_initWithIntArray_withIntArray_withLongArray_withIntArray_withInt_withInt_(latEncs_, lonEncs_, ords_, docIDs_, (jint) start, ((IOSIntArray *) nil_chk(latEncs_))->size_) autorelease];
}

- (void)close {
  if (nextWrite_ != ((IOSIntArray *) nil_chk(latEncs_))->size_) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$I", @"only wrote ", nextWrite_, @" values, but expected ", latEncs_->size_)) autorelease];
  }
}

- (void)destroy {
}

- (NSString *)description {
  return JreStrcat("$IC", @"HeapLatLonWriter(count=", ((IOSIntArray *) nil_chk(latEncs_))->size_, ')');
}

- (void)dealloc {
  RELEASE_(latEncs_);
  RELEASE_(lonEncs_);
  RELEASE_(docIDs_);
  RELEASE_(ords_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "HeapLatLonWriter", NULL, 0x1, NULL, NULL },
    { "appendWithInt:withInt:withLong:withInt:", "append", "V", 0x1, NULL, NULL },
    { "getReaderWithLong:", "getReader", "Lorg.apache.lucene.bkdtree.LatLonReader;", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "destroy", NULL, "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "latEncs_", NULL, 0x10, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "lonEncs_", NULL, 0x10, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "docIDs_", NULL, 0x10, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "ords_", NULL, 0x10, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "nextWrite_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeHeapLatLonWriter = { 2, "HeapLatLonWriter", "org.apache.lucene.bkdtree", NULL, 0x10, 6, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneBkdtreeHeapLatLonWriter;
}

@end

void OrgApacheLuceneBkdtreeHeapLatLonWriter_initWithInt_(OrgApacheLuceneBkdtreeHeapLatLonWriter *self, jint count) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->latEncs_, [IOSIntArray newArrayWithLength:count]);
  JreStrongAssignAndConsume(&self->lonEncs_, [IOSIntArray newArrayWithLength:count]);
  JreStrongAssignAndConsume(&self->docIDs_, [IOSIntArray newArrayWithLength:count]);
  JreStrongAssignAndConsume(&self->ords_, [IOSLongArray newArrayWithLength:count]);
}

OrgApacheLuceneBkdtreeHeapLatLonWriter *new_OrgApacheLuceneBkdtreeHeapLatLonWriter_initWithInt_(jint count) {
  OrgApacheLuceneBkdtreeHeapLatLonWriter *self = [OrgApacheLuceneBkdtreeHeapLatLonWriter alloc];
  OrgApacheLuceneBkdtreeHeapLatLonWriter_initWithInt_(self, count);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneBkdtreeHeapLatLonWriter)
