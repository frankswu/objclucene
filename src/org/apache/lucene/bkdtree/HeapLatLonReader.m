//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/bkdtree/HeapLatLonReader.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/bkdtree/HeapLatLonReader.h"

@interface OrgApacheLuceneBkdtreeHeapLatLonReader () {
 @public
  jint curRead_;
}

@end

@implementation OrgApacheLuceneBkdtreeHeapLatLonReader

- (instancetype)initWithIntArray:(IOSIntArray *)latEncs
                    withIntArray:(IOSIntArray *)lonEncs
                   withLongArray:(IOSLongArray *)ords
                    withIntArray:(IOSIntArray *)docIDs
                         withInt:(jint)start
                         withInt:(jint)end {
  OrgApacheLuceneBkdtreeHeapLatLonReader_initWithIntArray_withIntArray_withLongArray_withIntArray_withInt_withInt_(self, latEncs, lonEncs, ords, docIDs, start, end);
  return self;
}

- (jboolean)next {
  curRead_++;
  return curRead_ < end_;
}

- (jint)latEnc {
  return IOSIntArray_Get(nil_chk(latEncs_), curRead_);
}

- (jint)lonEnc {
  return IOSIntArray_Get(nil_chk(lonEncs_), curRead_);
}

- (jint)docID {
  return IOSIntArray_Get(nil_chk(docIDs_), curRead_);
}

- (jlong)ord {
  return IOSLongArray_Get(nil_chk(ords_), curRead_);
}

- (void)close {
}

- (void)dealloc {
  RELEASE_(latEncs_);
  RELEASE_(lonEncs_);
  RELEASE_(ords_);
  RELEASE_(docIDs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIntArray:withIntArray:withLongArray:withIntArray:withInt:withInt:", "HeapLatLonReader", NULL, 0x0, NULL, NULL },
    { "next", NULL, "Z", 0x1, NULL, NULL },
    { "latEnc", NULL, "I", 0x1, NULL, NULL },
    { "lonEnc", NULL, "I", 0x1, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "ord", NULL, "J", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "curRead_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "latEncs_", NULL, 0x10, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "lonEncs_", NULL, 0x10, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "ords_", NULL, 0x10, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "docIDs_", NULL, 0x10, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "end_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeHeapLatLonReader = { 2, "HeapLatLonReader", "org.apache.lucene.bkdtree", NULL, 0x10, 7, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneBkdtreeHeapLatLonReader;
}

@end

void OrgApacheLuceneBkdtreeHeapLatLonReader_initWithIntArray_withIntArray_withLongArray_withIntArray_withInt_withInt_(OrgApacheLuceneBkdtreeHeapLatLonReader *self, IOSIntArray *latEncs, IOSIntArray *lonEncs, IOSLongArray *ords, IOSIntArray *docIDs, jint start, jint end) {
  NSObject_init(self);
  JreStrongAssign(&self->latEncs_, latEncs);
  JreStrongAssign(&self->lonEncs_, lonEncs);
  JreStrongAssign(&self->ords_, ords);
  JreStrongAssign(&self->docIDs_, docIDs);
  self->curRead_ = start - 1;
  self->end_ = end;
}

OrgApacheLuceneBkdtreeHeapLatLonReader *new_OrgApacheLuceneBkdtreeHeapLatLonReader_initWithIntArray_withIntArray_withLongArray_withIntArray_withInt_withInt_(IOSIntArray *latEncs, IOSIntArray *lonEncs, IOSLongArray *ords, IOSIntArray *docIDs, jint start, jint end) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeHeapLatLonReader, initWithIntArray_withIntArray_withLongArray_withIntArray_withInt_withInt_, latEncs, lonEncs, ords, docIDs, start, end)
}

OrgApacheLuceneBkdtreeHeapLatLonReader *create_OrgApacheLuceneBkdtreeHeapLatLonReader_initWithIntArray_withIntArray_withLongArray_withIntArray_withInt_withInt_(IOSIntArray *latEncs, IOSIntArray *lonEncs, IOSLongArray *ords, IOSIntArray *docIDs, jint start, jint end) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeHeapLatLonReader, initWithIntArray_withIntArray_withLongArray_withIntArray_withInt_withInt_, latEncs, lonEncs, ords, docIDs, start, end)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneBkdtreeHeapLatLonReader)
