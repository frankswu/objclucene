//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/sandbox/queries/SlowFuzzyQuery.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/index/SingleTermsEnum.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/sandbox/queries/SlowFuzzyQuery.h"
#include "org/apache/lucene/sandbox/queries/SlowFuzzyTermsEnum.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/util/AttributeSource.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/ToStringUtils.h"
#include "org/apache/lucene/util/automaton/LevenshteinAutomata.h"

@interface OrgApacheLuceneSandboxQueriesSlowFuzzyQuery () {
 @public
  jfloat minimumSimilarity_;
  jint prefixLength_;
  jboolean termLongEnough_;
}

@end

@implementation OrgApacheLuceneSandboxQueriesSlowFuzzyQuery

- (instancetype)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                       withFloat:(jfloat)minimumSimilarity
                                         withInt:(jint)prefixLength
                                         withInt:(jint)maxExpansions {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_withInt_(self, term, minimumSimilarity, prefixLength, maxExpansions);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                       withFloat:(jfloat)minimumSimilarity
                                         withInt:(jint)prefixLength {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_(self, term, minimumSimilarity, prefixLength);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                       withFloat:(jfloat)minimumSimilarity {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_(self, term, minimumSimilarity);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_(self, term);
  return self;
}

- (jfloat)getMinSimilarity {
  return minimumSimilarity_;
}

- (jint)getPrefixLength {
  return prefixLength_;
}

- (OrgApacheLuceneIndexTermsEnum *)getTermsEnumWithOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)terms
                                      withOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)atts {
  if (!termLongEnough_) {
    return [new_OrgApacheLuceneIndexSingleTermsEnum_initWithOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilBytesRef_([((OrgApacheLuceneIndexTerms *) nil_chk(terms)) iterator], [((OrgApacheLuceneIndexTerm *) nil_chk(term_)) bytes]) autorelease];
  }
  return [new_OrgApacheLuceneSandboxQueriesSlowFuzzyTermsEnum_initWithOrgApacheLuceneIndexTerms_withOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneIndexTerm_withFloat_withInt_(terms, atts, [self getTerm], minimumSimilarity_, prefixLength_) autorelease];
}

- (OrgApacheLuceneIndexTerm *)getTerm {
  return term_;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *buffer = [new_JavaLangStringBuilder_init() autorelease];
  if (![((NSString *) nil_chk([((OrgApacheLuceneIndexTerm *) nil_chk(term_)) field])) isEqual:field]) {
    [buffer appendWithNSString:[term_ field]];
    [buffer appendWithNSString:@":"];
  }
  [buffer appendWithNSString:[term_ text]];
  [buffer appendWithChar:'~'];
  [buffer appendWithNSString:JavaLangFloat_toStringWithFloat_(minimumSimilarity_)];
  [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [buffer description];
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = ((jint) [super hash]);
  result = prime * result + JavaLangFloat_floatToIntBitsWithFloat_(minimumSimilarity_);
  result = prime * result + prefixLength_;
  result = prime * result + ((term_ == nil) ? 0 : ((jint) [term_ hash]));
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return true;
  if (![super isEqual:obj]) return false;
  if ([self getClass] != [nil_chk(obj) getClass]) return false;
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *other = (OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *) check_class_cast(obj, [OrgApacheLuceneSandboxQueriesSlowFuzzyQuery class]);
  if (JavaLangFloat_floatToIntBitsWithFloat_(minimumSimilarity_) != JavaLangFloat_floatToIntBitsWithFloat_(other->minimumSimilarity_)) return false;
  if (prefixLength_ != other->prefixLength_) return false;
  if (term_ == nil) {
    if (other->term_ != nil) return false;
  }
  else if (![term_ isEqual:other->term_]) return false;
  return true;
}

- (void)dealloc {
  RELEASE_(term_);
  [super dealloc];
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexTerm:withFloat:withInt:withInt:", "SlowFuzzyQuery", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneIndexTerm:withFloat:withInt:", "SlowFuzzyQuery", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneIndexTerm:withFloat:", "SlowFuzzyQuery", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneIndexTerm:", "SlowFuzzyQuery", NULL, 0x1, NULL, NULL },
    { "getMinSimilarity", NULL, "F", 0x1, NULL, NULL },
    { "getPrefixLength", NULL, "I", 0x1, NULL, NULL },
    { "getTermsEnumWithOrgApacheLuceneIndexTerms:withOrgApacheLuceneUtilAttributeSource:", "getTermsEnum", "Lorg.apache.lucene.index.TermsEnum;", 0x4, "Ljava.io.IOException;", NULL },
    { "getTerm", NULL, "Lorg.apache.lucene.index.Term;", 0x1, NULL, NULL },
    { "toStringWithNSString:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "defaultMinSimilarity", "defaultMinSimilarity", 0x19, "F", NULL, NULL, .constantValue.asFloat = OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_defaultMinSimilarity },
    { "defaultPrefixLength", "defaultPrefixLength", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_defaultPrefixLength },
    { "defaultMaxExpansions", "defaultMaxExpansions", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_defaultMaxExpansions },
    { "minimumSimilarity_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "prefixLength_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "termLongEnough_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "term_", NULL, 0x4, "Lorg.apache.lucene.index.Term;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSandboxQueriesSlowFuzzyQuery = { 2, "SlowFuzzyQuery", "org.apache.lucene.sandbox.queries", NULL, 0x1, 11, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSandboxQueriesSlowFuzzyQuery;
}

@end

void OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_withInt_(OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *self, OrgApacheLuceneIndexTerm *term, jfloat minimumSimilarity, jint prefixLength, jint maxExpansions) {
  OrgApacheLuceneSearchMultiTermQuery_initWithNSString_(self, [((OrgApacheLuceneIndexTerm *) nil_chk(term)) field]);
  self->termLongEnough_ = false;
  JreStrongAssign(&self->term_, term);
  if (minimumSimilarity >= 1.0f && minimumSimilarity != JreFpToInt(minimumSimilarity)) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"fractional edit distances are not allowed") autorelease];
  if (minimumSimilarity < 0.0f) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"minimumSimilarity < 0") autorelease];
  if (prefixLength < 0) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"prefixLength < 0") autorelease];
  if (maxExpansions < 0) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"maxExpansions < 0") autorelease];
  [self setRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:[new_OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite_initWithInt_(maxExpansions) autorelease]];
  NSString *text = [term text];
  jint len = [text codePointCount:0 endIndex:((jint) [((NSString *) nil_chk(text)) length])];
  if (len > 0 && (minimumSimilarity >= 1.0f || len > 1.0f / (1.0f - minimumSimilarity))) {
    self->termLongEnough_ = true;
  }
  self->minimumSimilarity_ = minimumSimilarity;
  self->prefixLength_ = prefixLength;
}

OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *new_OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_withInt_(OrgApacheLuceneIndexTerm *term, jfloat minimumSimilarity, jint prefixLength, jint maxExpansions) {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *self = [OrgApacheLuceneSandboxQueriesSlowFuzzyQuery alloc];
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_withInt_(self, term, minimumSimilarity, prefixLength, maxExpansions);
  return self;
}

void OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_(OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *self, OrgApacheLuceneIndexTerm *term, jfloat minimumSimilarity, jint prefixLength) {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_withInt_(self, term, minimumSimilarity, prefixLength, OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_defaultMaxExpansions);
}

OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *new_OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_(OrgApacheLuceneIndexTerm *term, jfloat minimumSimilarity, jint prefixLength) {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *self = [OrgApacheLuceneSandboxQueriesSlowFuzzyQuery alloc];
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_(self, term, minimumSimilarity, prefixLength);
  return self;
}

void OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_(OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *self, OrgApacheLuceneIndexTerm *term, jfloat minimumSimilarity) {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_withInt_(self, term, minimumSimilarity, OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_defaultPrefixLength, OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_defaultMaxExpansions);
}

OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *new_OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_(OrgApacheLuceneIndexTerm *term, jfloat minimumSimilarity) {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *self = [OrgApacheLuceneSandboxQueriesSlowFuzzyQuery alloc];
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_(self, term, minimumSimilarity);
  return self;
}

void OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *self, OrgApacheLuceneIndexTerm *term) {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_withFloat_withInt_withInt_(self, term, OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_defaultMinSimilarity, OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_defaultPrefixLength, OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_defaultMaxExpansions);
}

OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *new_OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexTerm *term) {
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery *self = [OrgApacheLuceneSandboxQueriesSlowFuzzyQuery alloc];
  OrgApacheLuceneSandboxQueriesSlowFuzzyQuery_initWithOrgApacheLuceneIndexTerm_(self, term);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSandboxQueriesSlowFuzzyQuery)
