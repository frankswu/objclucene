//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/sinks/TeeSinkTokenFilter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/sinks/TeeSinkTokenFilter.h"
#include "org/apache/lucene/util/AttributeFactory.h"
#include "org/apache/lucene/util/AttributeImpl.h"
#include "org/apache/lucene/util/AttributeSource.h"

@interface OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter () {
 @public
  id<JavaUtilList> sinks_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter, sinks_, id<JavaUtilList>)

inline OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_get_ACCEPT_ALL_FILTER();
static OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_ACCEPT_ALL_FILTER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter, ACCEPT_ALL_FILTER, OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *)

@interface OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream () {
 @public
  id<JavaUtilList> cachedStates_;
  OrgApacheLuceneUtilAttributeSource_State *finalState_;
  id<JavaUtilIterator> it_;
  OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *filter_;
}

- (instancetype)initWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)source
withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter:(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *)filter;

- (jboolean)acceptWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)source;

- (void)addStateWithOrgApacheLuceneUtilAttributeSource_State:(OrgApacheLuceneUtilAttributeSource_State *)state;

- (void)setFinalStateWithOrgApacheLuceneUtilAttributeSource_State:(OrgApacheLuceneUtilAttributeSource_State *)finalState;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream, cachedStates_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream, finalState_, OrgApacheLuceneUtilAttributeSource_State *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream, it_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream, filter_, OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *)

__attribute__((unused)) static void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *self, OrgApacheLuceneUtilAttributeSource *source, OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *filter);

__attribute__((unused)) static OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *new_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_(OrgApacheLuceneUtilAttributeSource *source, OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *filter) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *create_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_(OrgApacheLuceneUtilAttributeSource *source, OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *filter);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_acceptWithOrgApacheLuceneUtilAttributeSource_(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *self, OrgApacheLuceneUtilAttributeSource *source);

__attribute__((unused)) static void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_addStateWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *self, OrgApacheLuceneUtilAttributeSource_State *state);

__attribute__((unused)) static void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_setFinalStateWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *self, OrgApacheLuceneUtilAttributeSource_State *finalState);

@interface OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1 : OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter

- (jboolean)acceptWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)source;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1)

__attribute__((unused)) static void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1_init(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1 *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1 *new_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1 *create_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter)

@implementation OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input {
  OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, input);
  return self;
}

- (OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *)newSinkTokenStream {
  return [self newSinkTokenStreamWithOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter:OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_ACCEPT_ALL_FILTER];
}

- (OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *)newSinkTokenStreamWithOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter:(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *)filter {
  OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *sink = create_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_([self cloneAttributes], filter);
  [((id<JavaUtilList>) nil_chk(self->sinks_)) addWithId:create_JavaLangRefWeakReference_initWithId_(sink)];
  return sink;
}

- (void)addSinkTokenStreamWithOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream:(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *)sink {
  if (![((OrgApacheLuceneUtilAttributeFactory *) nil_chk([self getAttributeFactory])) isEqual:[((OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *) nil_chk(sink)) getAttributeFactory]]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The supplied sink is not compatible to this tee");
  }
  for (id<JavaUtilIterator> it = [((OrgApacheLuceneUtilAttributeSource *) nil_chk([self cloneAttributes])) getAttributeImplsIterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [sink addAttributeImplWithOrgApacheLuceneUtilAttributeImpl:[it next]];
  }
  [((id<JavaUtilList>) nil_chk(self->sinks_)) addWithId:create_JavaLangRefWeakReference_initWithId_(sink)];
}

- (void)consumeAllTokens {
  while ([self incrementToken]) {
  }
}

- (jboolean)incrementToken {
  if ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    OrgApacheLuceneUtilAttributeSource_State *state = nil;
    for (JavaLangRefWeakReference * __strong ref in nil_chk(sinks_)) {
      OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *sink = [((JavaLangRefWeakReference *) nil_chk(ref)) get];
      if (sink != nil) {
        if (OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_acceptWithOrgApacheLuceneUtilAttributeSource_(sink, self)) {
          if (state == nil) {
            state = [self captureState];
          }
          OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_addStateWithOrgApacheLuceneUtilAttributeSource_State_(sink, state);
        }
      }
    }
    return true;
  }
  return false;
}

- (void)end {
  [super end];
  OrgApacheLuceneUtilAttributeSource_State *finalState = [self captureState];
  for (JavaLangRefWeakReference * __strong ref in nil_chk(sinks_)) {
    OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *sink = [((JavaLangRefWeakReference *) nil_chk(ref)) get];
    if (sink != nil) {
      OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_setFinalStateWithOrgApacheLuceneUtilAttributeSource_State_(sink, finalState);
    }
  }
}

- (void)dealloc {
  RELEASE_(sinks_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_ACCEPT_ALL_FILTER, new_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisTokenStream:", "TeeSinkTokenFilter", NULL, 0x1, NULL, NULL },
    { "newSinkTokenStream", NULL, "Lorg.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;", 0x1, NULL, NULL },
    { "newSinkTokenStreamWithOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter:", "newSinkTokenStream", "Lorg.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;", 0x1, NULL, NULL },
    { "addSinkTokenStreamWithOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream:", "addSinkTokenStream", "V", 0x1, NULL, NULL },
    { "consumeAllTokens", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "incrementToken", NULL, "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "end", NULL, "V", 0x11, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sinks_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/ref/WeakReference<Lorg/apache/lucene/analysis/sinks/TeeSinkTokenFilter$SinkTokenStream;>;>;", .constantValue.asLong = 0 },
    { "ACCEPT_ALL_FILTER", "ACCEPT_ALL_FILTER", 0x1a, "Lorg.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter;", &OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_ACCEPT_ALL_FILTER, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter;", "Lorg.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter = { 2, "TeeSinkTokenFilter", "org.apache.lucene.analysis.sinks", NULL, 0x11, 7, methods, 2, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter;
}

@end

void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter *self, OrgApacheLuceneAnalysisTokenStream *input) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, input);
  JreStrongAssignAndConsume(&self->sinks_, new_JavaUtilLinkedList_init());
}

OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter *new_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *input) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter, initWithOrgApacheLuceneAnalysisTokenStream_, input)
}

OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter *create_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *input) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter, initWithOrgApacheLuceneAnalysisTokenStream_, input)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter)

@implementation OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter

- (jboolean)acceptWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)source {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)reset {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "acceptWithOrgApacheLuceneUtilAttributeSource:", "accept", "Z", 0x401, NULL, NULL },
    { "reset", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "init", "SinkFilter", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter = { 2, "SinkFilter", "org.apache.lucene.analysis.sinks", "TeeSinkTokenFilter", 0x409, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter;
}

@end

void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_init(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter)

@implementation OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream

- (instancetype)initWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)source
withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter:(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *)filter {
  OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_(self, source, filter);
  return self;
}

- (jboolean)acceptWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)source {
  return OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_acceptWithOrgApacheLuceneUtilAttributeSource_(self, source);
}

- (void)addStateWithOrgApacheLuceneUtilAttributeSource_State:(OrgApacheLuceneUtilAttributeSource_State *)state {
  OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_addStateWithOrgApacheLuceneUtilAttributeSource_State_(self, state);
}

- (void)setFinalStateWithOrgApacheLuceneUtilAttributeSource_State:(OrgApacheLuceneUtilAttributeSource_State *)finalState {
  OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_setFinalStateWithOrgApacheLuceneUtilAttributeSource_State_(self, finalState);
}

- (jboolean)incrementToken {
  if (it_ == nil) {
    JreStrongAssign(&it_, [((id<JavaUtilList>) nil_chk(cachedStates_)) iterator]);
  }
  if (![((id<JavaUtilIterator>) nil_chk(it_)) hasNext]) {
    return false;
  }
  OrgApacheLuceneUtilAttributeSource_State *state = [((id<JavaUtilIterator>) nil_chk(it_)) next];
  [self restoreStateWithOrgApacheLuceneUtilAttributeSource_State:state];
  return true;
}

- (void)end {
  if (finalState_ != nil) {
    [self restoreStateWithOrgApacheLuceneUtilAttributeSource_State:finalState_];
  }
}

- (void)reset {
  JreStrongAssign(&it_, [((id<JavaUtilList>) nil_chk(cachedStates_)) iterator]);
}

- (void)dealloc {
  RELEASE_(cachedStates_);
  RELEASE_(finalState_);
  RELEASE_(it_);
  RELEASE_(filter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUtilAttributeSource:withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter:", "SinkTokenStream", NULL, 0x2, NULL, NULL },
    { "acceptWithOrgApacheLuceneUtilAttributeSource:", "accept", "Z", 0x2, NULL, NULL },
    { "addStateWithOrgApacheLuceneUtilAttributeSource_State:", "addState", "V", 0x2, NULL, NULL },
    { "setFinalStateWithOrgApacheLuceneUtilAttributeSource_State:", "setFinalState", "V", 0x2, NULL, NULL },
    { "incrementToken", NULL, "Z", 0x11, NULL, NULL },
    { "end", NULL, "V", 0x11, NULL, NULL },
    { "reset", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cachedStates_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/util/AttributeSource$State;>;", .constantValue.asLong = 0 },
    { "finalState_", NULL, 0x2, "Lorg.apache.lucene.util.AttributeSource$State;", NULL, NULL, .constantValue.asLong = 0 },
    { "it_", NULL, 0x2, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Lorg/apache/lucene/util/AttributeSource$State;>;", .constantValue.asLong = 0 },
    { "filter_", NULL, 0x2, "Lorg.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream = { 2, "SinkTokenStream", "org.apache.lucene.analysis.sinks", "TeeSinkTokenFilter", 0x19, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream;
}

@end

void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *self, OrgApacheLuceneUtilAttributeSource *source, OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *filter) {
  OrgApacheLuceneAnalysisTokenStream_initWithOrgApacheLuceneUtilAttributeSource_(self, source);
  JreStrongAssignAndConsume(&self->cachedStates_, new_JavaUtilLinkedList_init());
  JreStrongAssign(&self->it_, nil);
  JreStrongAssign(&self->filter_, filter);
}

OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *new_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_(OrgApacheLuceneUtilAttributeSource *source, OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *filter) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream, initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_, source, filter)
}

OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *create_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_(OrgApacheLuceneUtilAttributeSource *source, OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *filter) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream, initWithOrgApacheLuceneUtilAttributeSource_withOrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_, source, filter)
}

jboolean OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_acceptWithOrgApacheLuceneUtilAttributeSource_(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *self, OrgApacheLuceneUtilAttributeSource *source) {
  return [((OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter *) nil_chk(self->filter_)) acceptWithOrgApacheLuceneUtilAttributeSource:source];
}

void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_addStateWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *self, OrgApacheLuceneUtilAttributeSource_State *state) {
  if (self->it_ != nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"The tee must be consumed before sinks are consumed.");
  }
  [((id<JavaUtilList>) nil_chk(self->cachedStates_)) addWithId:state];
}

void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream_setFinalStateWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream *self, OrgApacheLuceneUtilAttributeSource_State *finalState) {
  JreStrongAssign(&self->finalState_, finalState);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkTokenStream)

@implementation OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1

- (jboolean)acceptWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)source {
  return true;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "acceptWithOrgApacheLuceneUtilAttributeSource:", "accept", "Z", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1 = { 2, "", "org.apache.lucene.analysis.sinks", "TeeSinkTokenFilter", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1;
}

@end

void OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1_init(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1 *self) {
  OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter_init(self);
}

OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1 *new_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1, init)
}

OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1 *create_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_$1)
