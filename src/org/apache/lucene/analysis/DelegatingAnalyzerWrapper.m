//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/DelegatingAnalyzerWrapper.java
//

#include "J2ObjC_source.h"
#include "java/io/Reader.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/AnalyzerWrapper.h"
#include "org/apache/lucene/analysis/DelegatingAnalyzerWrapper.h"

@interface OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy : OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy {
 @public
  OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *wrapper_;
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy_;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)fallbackStrategy;

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName;

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy, wrapper_, OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy, fallbackStrategy_, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)

__attribute__((unused)) static void OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *self, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy);

__attribute__((unused)) static OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *new_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy)

@implementation OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)fallbackStrategy {
  OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, fallbackStrategy);
  return self;
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)wrapComponentsWithNSString:(NSString *)fieldName
                            withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  return [super wrapComponentsWithNSString:fieldName withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:components];
}

- (JavaIoReader *)wrapReaderWithNSString:(NSString *)fieldName
                        withJavaIoReader:(JavaIoReader *)reader {
  return [super wrapReaderWithNSString:fieldName withJavaIoReader:reader];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:", "DelegatingAnalyzerWrapper", NULL, 0x4, NULL, NULL },
    { "wrapComponentsWithNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:", "wrapComponents", "Lorg.apache.lucene.analysis.Analyzer$TokenStreamComponents;", 0x14, NULL, NULL },
    { "wrapReaderWithNSString:withJavaIoReader:", "wrapReader", "Ljava.io.Reader;", 0x14, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.analysis.DelegatingAnalyzerWrapper$DelegatingReuseStrategy;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper = { 2, "DelegatingAnalyzerWrapper", "org.apache.lucene.analysis", NULL, 0x401, 3, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper;
}

@end

void OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *self, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy) {
  OrgApacheLuceneAnalysisAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, [new_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(fallbackStrategy) autorelease]);
  JreStrongAssign(&((OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *) nil_chk(((OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *) check_class_cast([self getReuseStrategy], [OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy class]))))->wrapper_, self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper)

@implementation OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)fallbackStrategy {
  OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, fallbackStrategy);
  return self;
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName {
  if (analyzer == wrapper_) {
    OrgApacheLuceneAnalysisAnalyzer *wrappedAnalyzer = [((OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *) nil_chk(wrapper_)) getWrappedAnalyzerWithNSString:fieldName];
    return [((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk([((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(wrappedAnalyzer)) getReuseStrategy])) getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:wrappedAnalyzer withNSString:fieldName];
  }
  else {
    return [((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk(fallbackStrategy_)) getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:analyzer withNSString:fieldName];
  }
}

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  if (analyzer == wrapper_) {
    OrgApacheLuceneAnalysisAnalyzer *wrappedAnalyzer = [((OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *) nil_chk(wrapper_)) getWrappedAnalyzerWithNSString:fieldName];
    [((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk([((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(wrappedAnalyzer)) getReuseStrategy])) setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:wrappedAnalyzer withNSString:fieldName withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:components];
  }
  else {
    [((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk(fallbackStrategy_)) setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:analyzer withNSString:fieldName withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:components];
  }
}

- (void)dealloc {
  RELEASE_(wrapper_);
  RELEASE_(fallbackStrategy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:", "DelegatingReuseStrategy", NULL, 0x0, NULL, NULL },
    { "getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:", "getReusableComponents", "Lorg.apache.lucene.analysis.Analyzer$TokenStreamComponents;", 0x1, NULL, NULL },
    { "setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:", "setReusableComponents", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "wrapper_", NULL, 0x0, "Lorg.apache.lucene.analysis.DelegatingAnalyzerWrapper;", NULL, NULL, .constantValue.asLong = 0 },
    { "fallbackStrategy_", NULL, 0x12, "Lorg.apache.lucene.analysis.Analyzer$ReuseStrategy;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy = { 2, "DelegatingReuseStrategy", "org.apache.lucene.analysis", "DelegatingAnalyzerWrapper", 0x1a, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy;
}

@end

void OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *self, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy) {
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_init(self);
  JreStrongAssign(&self->fallbackStrategy_, fallbackStrategy);
}

OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *new_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy) {
  OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *self = [OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy alloc];
  OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, fallbackStrategy);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy)
