//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterFactory.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Map.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilter.h"
#include "org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterFactory.h"
#include "org/apache/lucene/analysis/payloads/FloatEncoder.h"
#include "org/apache/lucene/analysis/payloads/IdentityEncoder.h"
#include "org/apache/lucene/analysis/payloads/IntegerEncoder.h"
#include "org/apache/lucene/analysis/payloads/PayloadEncoder.h"
#include "org/apache/lucene/analysis/util/AbstractAnalysisFactory.h"
#include "org/apache/lucene/analysis/util/ResourceLoader.h"
#include "org/apache/lucene/analysis/util/TokenFilterFactory.h"

@interface OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory () {
 @public
  NSString *encoderClass_;
  jchar delimiter_;
  id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder> encoder_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory, encoderClass_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory, encoder_, id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder>)

NSString *OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_ENCODER_ATTR = @"encoder";
NSString *OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_DELIMITER_ATTR = @"delimiter";

@implementation OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory

+ (NSString *)ENCODER_ATTR {
  return OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_ENCODER_ATTR;
}

+ (NSString *)DELIMITER_ATTR {
  return OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_DELIMITER_ATTR;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)args {
  OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_initWithJavaUtilMap_(self, args);
  return self;
}

- (OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter *)createWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input {
  return create_OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_(input, delimiter_, encoder_);
}

- (void)informWithOrgApacheLuceneAnalysisUtilResourceLoader:(id<OrgApacheLuceneAnalysisUtilResourceLoader>)loader {
  if ([((NSString *) nil_chk(encoderClass_)) isEqual:@"float"]) {
    JreStrongAssignAndConsume(&encoder_, new_OrgApacheLuceneAnalysisPayloadsFloatEncoder_init());
  }
  else if ([encoderClass_ isEqual:@"integer"]) {
    JreStrongAssignAndConsume(&encoder_, new_OrgApacheLuceneAnalysisPayloadsIntegerEncoder_init());
  }
  else if ([encoderClass_ isEqual:@"identity"]) {
    JreStrongAssignAndConsume(&encoder_, new_OrgApacheLuceneAnalysisPayloadsIdentityEncoder_init());
  }
  else {
    JreStrongAssign(&encoder_, [((id<OrgApacheLuceneAnalysisUtilResourceLoader>) nil_chk(loader)) newInstanceWithNSString:encoderClass_ withIOSClass:OrgApacheLuceneAnalysisPayloadsPayloadEncoder_class_()]);
  }
}

- (void)dealloc {
  RELEASE_(encoderClass_);
  RELEASE_(encoder_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilMap:", "DelimitedPayloadTokenFilterFactory", NULL, 0x1, NULL, "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V" },
    { "createWithOrgApacheLuceneAnalysisTokenStream:", "create", "Lorg.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilter;", 0x1, NULL, NULL },
    { "informWithOrgApacheLuceneAnalysisUtilResourceLoader:", "inform", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ENCODER_ATTR", "ENCODER_ATTR", 0x19, "Ljava.lang.String;", &OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_ENCODER_ATTR, NULL, .constantValue.asLong = 0 },
    { "DELIMITER_ATTR", "DELIMITER_ATTR", 0x19, "Ljava.lang.String;", &OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_DELIMITER_ATTR, NULL, .constantValue.asLong = 0 },
    { "encoderClass_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "delimiter_", NULL, 0x12, "C", NULL, NULL, .constantValue.asLong = 0 },
    { "encoder_", NULL, 0x2, "Lorg.apache.lucene.analysis.payloads.PayloadEncoder;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory = { 2, "DelimitedPayloadTokenFilterFactory", "org.apache.lucene.analysis.payloads", NULL, 0x1, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory;
}

@end

void OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory *self, id<JavaUtilMap> args) {
  OrgApacheLuceneAnalysisUtilTokenFilterFactory_initWithJavaUtilMap_(self, args);
  JreStrongAssign(&self->encoderClass_, [self requireWithJavaUtilMap:args withNSString:OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_ENCODER_ATTR]);
  self->delimiter_ = [self getCharWithJavaUtilMap:args withNSString:OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_DELIMITER_ATTR withChar:'|'];
  if (![((id<JavaUtilMap>) nil_chk(args)) isEmpty]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Unknown parameters: ", args));
  }
}

OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory *new_OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory, initWithJavaUtilMap_, args)
}

OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory *create_OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory, initWithJavaUtilMap_, args)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilterFactory)
