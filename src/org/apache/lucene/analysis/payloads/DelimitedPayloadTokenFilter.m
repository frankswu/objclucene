//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilter.h"
#include "org/apache/lucene/analysis/payloads/PayloadEncoder.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PayloadAttribute.h"
#include "org/apache/lucene/util/AttributeSource.h"
#include "org/apache/lucene/util/BytesRef.h"

@interface OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter () {
 @public
  jchar delimiter_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute> payAtt_;
  id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder> encoder_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter, payAtt_, id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter, encoder_, id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder>)

@implementation OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                                                  withChar:(jchar)delimiter
         withOrgApacheLuceneAnalysisPayloadsPayloadEncoder:(id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder>)encoder {
  OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_(self, input, delimiter, encoder);
  return self;
}

- (jboolean)incrementToken {
  if ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    IOSCharArray *buffer = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) buffer];
    jint length = [termAtt_ length];
    for (jint i = 0; i < length; i++) {
      if (IOSCharArray_Get(nil_chk(buffer), i) == delimiter_) {
        [((id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>) nil_chk(payAtt_)) setPayloadWithOrgApacheLuceneUtilBytesRef:[((id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder>) nil_chk(encoder_)) encodeWithCharArray:buffer withInt:i + 1 withInt:(length - (i + 1))]];
        [termAtt_ setLengthWithInt:i];
        return true;
      }
    }
    [((id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>) nil_chk(payAtt_)) setPayloadWithOrgApacheLuceneUtilBytesRef:nil];
    return true;
  }
  else return false;
}

- (void)dealloc {
  RELEASE_(termAtt_);
  RELEASE_(payAtt_);
  RELEASE_(encoder_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisTokenStream:withChar:withOrgApacheLuceneAnalysisPayloadsPayloadEncoder:", "DelimitedPayloadTokenFilter", NULL, 0x1, NULL, NULL },
    { "incrementToken", NULL, "Z", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_DELIMITER", "DEFAULT_DELIMITER", 0x19, "C", NULL, NULL, .constantValue.asUnichar = OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_DEFAULT_DELIMITER },
    { "delimiter_", NULL, 0x12, "C", NULL, NULL, .constantValue.asLong = 0 },
    { "termAtt_", NULL, 0x12, "Lorg.apache.lucene.analysis.tokenattributes.CharTermAttribute;", NULL, NULL, .constantValue.asLong = 0 },
    { "payAtt_", NULL, 0x12, "Lorg.apache.lucene.analysis.tokenattributes.PayloadAttribute;", NULL, NULL, .constantValue.asLong = 0 },
    { "encoder_", NULL, 0x12, "Lorg.apache.lucene.analysis.payloads.PayloadEncoder;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter = { 2, "DelimitedPayloadTokenFilter", "org.apache.lucene.analysis.payloads", NULL, 0x11, 2, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter;
}

@end

void OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter *self, OrgApacheLuceneAnalysisTokenStream *input, jchar delimiter, id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder> encoder) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, input);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->payAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPayloadAttribute_class_()]);
  self->delimiter_ = delimiter;
  JreStrongAssign(&self->encoder_, encoder);
}

OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter *new_OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_(OrgApacheLuceneAnalysisTokenStream *input, jchar delimiter, id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder> encoder) {
  OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter *self = [OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter alloc];
  OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_(self, input, delimiter, encoder);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter)
