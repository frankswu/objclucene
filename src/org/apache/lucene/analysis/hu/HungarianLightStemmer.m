//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/hu/HungarianLightStemmer.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/hu/HungarianLightStemmer.h"
#include "org/apache/lucene/analysis/util/StemmerUtil.h"

@interface OrgApacheLuceneAnalysisHuHungarianLightStemmer ()

- (jint)removeCaseWithCharArray:(IOSCharArray *)s
                        withInt:(jint)len;

- (jint)removePossessiveWithCharArray:(IOSCharArray *)s
                              withInt:(jint)len;

- (jint)removePluralWithCharArray:(IOSCharArray *)s
                          withInt:(jint)len;

- (jint)normalizeWithCharArray:(IOSCharArray *)s
                       withInt:(jint)len;

- (jboolean)isVowelWithChar:(jchar)ch;

@end

__attribute__((unused)) static jint OrgApacheLuceneAnalysisHuHungarianLightStemmer_removeCaseWithCharArray_withInt_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, IOSCharArray *s, jint len);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisHuHungarianLightStemmer_removePossessiveWithCharArray_withInt_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, IOSCharArray *s, jint len);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisHuHungarianLightStemmer_removePluralWithCharArray_withInt_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, IOSCharArray *s, jint len);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisHuHungarianLightStemmer_normalizeWithCharArray_withInt_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, IOSCharArray *s, jint len);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, jchar ch);

@implementation OrgApacheLuceneAnalysisHuHungarianLightStemmer

- (jint)stemWithCharArray:(IOSCharArray *)s
                  withInt:(jint)len {
  for (jint i = 0; i < len; i++) switch (IOSCharArray_Get(nil_chk(s), i)) {
    case 0x00e1:
    *IOSCharArray_GetRef(s, i) = 'a';
    break;
    case 0x00eb:
    case 0x00e9:
    *IOSCharArray_GetRef(s, i) = 'e';
    break;
    case 0x00ed:
    *IOSCharArray_GetRef(s, i) = 'i';
    break;
    case 0x00f3:
    case 0x0151:
    case 0x00f5:
    case 0x00f6:
    *IOSCharArray_GetRef(s, i) = 'o';
    break;
    case 0x00fa:
    case 0x0171:
    case 0x0169:
    case 0x00fb:
    case 0x00fc:
    *IOSCharArray_GetRef(s, i) = 'u';
    break;
  }
  len = OrgApacheLuceneAnalysisHuHungarianLightStemmer_removeCaseWithCharArray_withInt_(self, s, len);
  len = OrgApacheLuceneAnalysisHuHungarianLightStemmer_removePossessiveWithCharArray_withInt_(self, s, len);
  len = OrgApacheLuceneAnalysisHuHungarianLightStemmer_removePluralWithCharArray_withInt_(self, s, len);
  return OrgApacheLuceneAnalysisHuHungarianLightStemmer_normalizeWithCharArray_withInt_(self, s, len);
}

- (jint)removeCaseWithCharArray:(IOSCharArray *)s
                        withInt:(jint)len {
  return OrgApacheLuceneAnalysisHuHungarianLightStemmer_removeCaseWithCharArray_withInt_(self, s, len);
}

- (jint)removePossessiveWithCharArray:(IOSCharArray *)s
                              withInt:(jint)len {
  return OrgApacheLuceneAnalysisHuHungarianLightStemmer_removePossessiveWithCharArray_withInt_(self, s, len);
}

- (jint)removePluralWithCharArray:(IOSCharArray *)s
                          withInt:(jint)len {
  return OrgApacheLuceneAnalysisHuHungarianLightStemmer_removePluralWithCharArray_withInt_(self, s, len);
}

- (jint)normalizeWithCharArray:(IOSCharArray *)s
                       withInt:(jint)len {
  return OrgApacheLuceneAnalysisHuHungarianLightStemmer_normalizeWithCharArray_withInt_(self, s, len);
}

- (jboolean)isVowelWithChar:(jchar)ch {
  return OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, ch);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisHuHungarianLightStemmer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "stemWithCharArray:withInt:", "stem", "I", 0x1, NULL, NULL },
    { "removeCaseWithCharArray:withInt:", "removeCase", "I", 0x2, NULL, NULL },
    { "removePossessiveWithCharArray:withInt:", "removePossessive", "I", 0x2, NULL, NULL },
    { "removePluralWithCharArray:withInt:", "removePlural", "I", 0x2, NULL, NULL },
    { "normalizeWithCharArray:withInt:", "normalize", "I", 0x2, NULL, NULL },
    { "isVowelWithChar:", "isVowel", "Z", 0x2, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisHuHungarianLightStemmer = { 2, "HungarianLightStemmer", "org.apache.lucene.analysis.hu", NULL, 0x1, 7, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisHuHungarianLightStemmer;
}

@end

jint OrgApacheLuceneAnalysisHuHungarianLightStemmer_removeCaseWithCharArray_withInt_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, IOSCharArray *s, jint len) {
  if (len > 6 && OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"kent")) return len - 4;
  if (len > 5) {
    if (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"nak") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"nek") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"val") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"vel") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ert") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"rol") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ban") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ben") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"bol") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"nal") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"nel") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"hoz") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"hez") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"tol")) return len - 3;
    if (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"al") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"el")) {
      if (!OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(nil_chk(s), len - 3)) && IOSCharArray_Get(s, len - 3) == IOSCharArray_Get(s, len - 4)) return len - 3;
    }
  }
  if (len > 4) {
    if (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"at") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"et") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ot") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"va") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ve") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ra") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"re") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ba") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"be") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ul") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ig")) return len - 2;
    if ((OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"on") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"en")) && !OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(nil_chk(s), len - 3))) return len - 2;
    switch (IOSCharArray_Get(nil_chk(s), len - 1)) {
      case 't':
      case 'n':
      return len - 1;
      case 'a':
      case 'e':
      if (IOSCharArray_Get(s, len - 2) == IOSCharArray_Get(s, len - 3) && !OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(s, len - 2))) return len - 2;
    }
  }
  return len;
}

jint OrgApacheLuceneAnalysisHuHungarianLightStemmer_removePossessiveWithCharArray_withInt_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, IOSCharArray *s, jint len) {
  if (len > 6) {
    if (!OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(nil_chk(s), len - 5)) && (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"atok") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"otok") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"etek"))) return len - 4;
    if (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"itek") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"itok")) return len - 4;
  }
  if (len > 5) {
    if (!OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(nil_chk(s), len - 4)) && (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"unk") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"tok") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"tek"))) return len - 3;
    if (OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(s, len - 4)) && OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"juk")) return len - 3;
    if (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ink")) return len - 3;
  }
  if (len > 4) {
    if (!OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(nil_chk(s), len - 3)) && (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"am") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"em") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"om") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ad") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ed") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"od") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"uk"))) return len - 2;
    if (OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(s, len - 3)) && (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"nk") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ja") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"je"))) return len - 2;
    if (OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"im") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"id") || OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, @"ik")) return len - 2;
  }
  if (len > 3) switch (IOSCharArray_Get(nil_chk(s), len - 1)) {
    case 'a':
    case 'e':
    if (!OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(s, len - 2))) return len - 1;
    break;
    case 'm':
    case 'd':
    if (OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(self, IOSCharArray_Get(s, len - 2))) return len - 1;
    break;
    case 'i':
    return len - 1;
  }
  return len;
}

jint OrgApacheLuceneAnalysisHuHungarianLightStemmer_removePluralWithCharArray_withInt_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, IOSCharArray *s, jint len) {
  if (len > 3 && IOSCharArray_Get(nil_chk(s), len - 1) == 'k') switch (IOSCharArray_Get(s, len - 2)) {
    case 'a':
    case 'o':
    case 'e':
    if (len > 4) return len - 2;
    default:
    return len - 1;
  }
  return len;
}

jint OrgApacheLuceneAnalysisHuHungarianLightStemmer_normalizeWithCharArray_withInt_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, IOSCharArray *s, jint len) {
  if (len > 3) switch (IOSCharArray_Get(nil_chk(s), len - 1)) {
    case 'a':
    case 'e':
    case 'i':
    case 'o':
    return len - 1;
  }
  return len;
}

jboolean OrgApacheLuceneAnalysisHuHungarianLightStemmer_isVowelWithChar_(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self, jchar ch) {
  switch (ch) {
    case 'a':
    case 'e':
    case 'i':
    case 'o':
    case 'u':
    case 'y':
    return true;
    default:
    return false;
  }
}

void OrgApacheLuceneAnalysisHuHungarianLightStemmer_init(OrgApacheLuceneAnalysisHuHungarianLightStemmer *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisHuHungarianLightStemmer *new_OrgApacheLuceneAnalysisHuHungarianLightStemmer_init() {
  OrgApacheLuceneAnalysisHuHungarianLightStemmer *self = [OrgApacheLuceneAnalysisHuHungarianLightStemmer alloc];
  OrgApacheLuceneAnalysisHuHungarianLightStemmer_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisHuHungarianLightStemmer)
