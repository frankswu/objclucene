//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/no/NorwegianLightStemFilterFactory.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Map.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/no/NorwegianLightStemFilter.h"
#include "org/apache/lucene/analysis/no/NorwegianLightStemFilterFactory.h"
#include "org/apache/lucene/analysis/no/NorwegianLightStemmer.h"
#include "org/apache/lucene/analysis/util/AbstractAnalysisFactory.h"
#include "org/apache/lucene/analysis/util/TokenFilterFactory.h"

@interface OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory () {
 @public
  jint flags_;
}

@end

@implementation OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)args {
  OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory_initWithJavaUtilMap_(self, args);
  return self;
}

- (OrgApacheLuceneAnalysisTokenStream *)createWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input {
  return [new_OrgApacheLuceneAnalysisNoNorwegianLightStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_(input, flags_) autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilMap:", "NorwegianLightStemFilterFactory", NULL, 0x1, NULL, NULL },
    { "createWithOrgApacheLuceneAnalysisTokenStream:", "create", "Lorg.apache.lucene.analysis.TokenStream;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "flags_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory = { 2, "NorwegianLightStemFilterFactory", "org.apache.lucene.analysis.no", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory;
}

@end

void OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory *self, id<JavaUtilMap> args) {
  OrgApacheLuceneAnalysisUtilTokenFilterFactory_initWithJavaUtilMap_(self, args);
  NSString *variant = [self getWithJavaUtilMap:args withNSString:@"variant"];
  if (variant == nil || [@"nb" isEqual:variant]) {
    self->flags_ = OrgApacheLuceneAnalysisNoNorwegianLightStemmer_BOKMAAL;
  }
  else if ([@"nn" isEqual:variant]) {
    self->flags_ = OrgApacheLuceneAnalysisNoNorwegianLightStemmer_NYNORSK;
  }
  else if ([@"no" isEqual:variant]) {
    self->flags_ = OrgApacheLuceneAnalysisNoNorwegianLightStemmer_BOKMAAL | OrgApacheLuceneAnalysisNoNorwegianLightStemmer_NYNORSK;
  }
  else {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid variant: ", variant)) autorelease];
  }
  if (![((id<JavaUtilMap>) nil_chk(args)) isEmpty]) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Unknown parameters: ", args)) autorelease];
  }
}

OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory *new_OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) {
  OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory *self = [OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory alloc];
  OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory_initWithJavaUtilMap_(self, args);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisNoNorwegianLightStemFilterFactory)
