//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "org/apache/lucene/analysis/util/CharacterUtils.h"

@class OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils;
@class OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils;

static OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_4_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisUtilCharacterUtils, JAVA_4_, OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *)

static OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_5_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisUtilCharacterUtils, JAVA_5_, OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *)

@interface OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils : OrgApacheLuceneAnalysisUtilCharacterUtils

- (instancetype)init;

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset;

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit;

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars;

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq;

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils)

@interface OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils : OrgApacheLuceneAnalysisUtilCharacterUtils

- (instancetype)init;

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset;

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit;

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars;

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq;

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils)

@interface OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer () {
 @public
  IOSCharArray *buffer_;
  jint offset_;
  jint length_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer, buffer_, IOSCharArray *)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisUtilCharacterUtils)

@implementation OrgApacheLuceneAnalysisUtilCharacterUtils

+ (OrgApacheLuceneAnalysisUtilCharacterUtils *)getInstance {
  return OrgApacheLuceneAnalysisUtilCharacterUtils_getInstance();
}

+ (OrgApacheLuceneAnalysisUtilCharacterUtils *)getJava4Instance {
  return OrgApacheLuceneAnalysisUtilCharacterUtils_getJava4Instance();
}

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)newCharacterBufferWithInt:(jint)bufferSize {
  return OrgApacheLuceneAnalysisUtilCharacterUtils_newCharacterBufferWithInt_(bufferSize);
}

- (void)toLowerCaseWithCharArray:(IOSCharArray *)buffer
                         withInt:(jint)offset
                         withInt:(jint)limit {
  JreAssert((((IOSCharArray *) nil_chk(buffer))->size_ >= limit), (@"org/apache/lucene/analysis/util/CharacterUtils.java:118 condition failed: assert buffer.length >= limit;"));
  JreAssert((offset <= 0 && offset <= buffer->size_), (@"org/apache/lucene/analysis/util/CharacterUtils.java:119 condition failed: assert offset <=0 && offset <= buffer.length;"));
  for (jint i = offset; i < limit; ) {
    i += JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(JavaLangCharacter_toLowerCaseWithInt_([self codePointAtWithCharArray:buffer withInt:i withInt:limit]), buffer, i);
  }
}

- (void)toUpperCaseWithCharArray:(IOSCharArray *)buffer
                         withInt:(jint)offset
                         withInt:(jint)limit {
  JreAssert((((IOSCharArray *) nil_chk(buffer))->size_ >= limit), (@"org/apache/lucene/analysis/util/CharacterUtils.java:135 condition failed: assert buffer.length >= limit;"));
  JreAssert((offset <= 0 && offset <= buffer->size_), (@"org/apache/lucene/analysis/util/CharacterUtils.java:136 condition failed: assert offset <=0 && offset <= buffer.length;"));
  for (jint i = offset; i < limit; ) {
    i += JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(JavaLangCharacter_toUpperCaseWithInt_([self codePointAtWithCharArray:buffer withInt:i withInt:limit]), buffer, i);
  }
}

- (jint)toCodePointsWithCharArray:(IOSCharArray *)src
                          withInt:(jint)srcOff
                          withInt:(jint)srcLen
                     withIntArray:(IOSIntArray *)dest
                          withInt:(jint)destOff {
  if (srcLen < 0) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"srcLen must be >= 0") autorelease];
  }
  jint codePointCount = 0;
  for (jint i = 0; i < srcLen; ) {
    jint cp = [self codePointAtWithCharArray:src withInt:srcOff + i withInt:srcOff + srcLen];
    jint charCount = JavaLangCharacter_charCountWithInt_(cp);
    *IOSIntArray_GetRef(nil_chk(dest), destOff + codePointCount++) = cp;
    i += charCount;
  }
  return codePointCount;
}

- (jint)toCharsWithIntArray:(IOSIntArray *)src
                    withInt:(jint)srcOff
                    withInt:(jint)srcLen
              withCharArray:(IOSCharArray *)dest
                    withInt:(jint)destOff {
  if (srcLen < 0) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"srcLen must be >= 0") autorelease];
  }
  jint written = 0;
  for (jint i = 0; i < srcLen; ++i) {
    written += JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(IOSIntArray_Get(nil_chk(src), srcOff + i), dest, destOff + written);
  }
  return written;
}

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader {
  return [self fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:buffer withJavaIoReader:reader withInt:((IOSCharArray *) nil_chk(((OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *) nil_chk(buffer))->buffer_))->size_];
}

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (jint)readFullyWithJavaIoReader:(JavaIoReader *)reader
                    withCharArray:(IOSCharArray *)dest
                          withInt:(jint)offset
                          withInt:(jint)len {
  return OrgApacheLuceneAnalysisUtilCharacterUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(reader, dest, offset, len);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisUtilCharacterUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisUtilCharacterUtils class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_4_, new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init());
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_5_, new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisUtilCharacterUtils)
  }
}

+ (IOSObjectArray *)__annotations_getJava4Instance {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInstance", NULL, "Lorg.apache.lucene.analysis.util.CharacterUtils;", 0x9, NULL, NULL },
    { "getJava4Instance", NULL, "Lorg.apache.lucene.analysis.util.CharacterUtils;", 0x9, NULL, NULL },
    { "codePointAtWithJavaLangCharSequence:withInt:", "codePointAt", "I", 0x401, NULL, NULL },
    { "codePointAtWithCharArray:withInt:withInt:", "codePointAt", "I", 0x401, NULL, NULL },
    { "codePointCountWithJavaLangCharSequence:", "codePointCount", "I", 0x401, NULL, NULL },
    { "newCharacterBufferWithInt:", "newCharacterBuffer", "Lorg.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer;", 0x9, NULL, NULL },
    { "toLowerCaseWithCharArray:withInt:withInt:", "toLowerCase", "V", 0x11, NULL, NULL },
    { "toUpperCaseWithCharArray:withInt:withInt:", "toUpperCase", "V", 0x11, NULL, NULL },
    { "toCodePointsWithCharArray:withInt:withInt:withIntArray:withInt:", "toCodePoints", "I", 0x11, NULL, NULL },
    { "toCharsWithIntArray:withInt:withInt:withCharArray:withInt:", "toChars", "I", 0x11, NULL, NULL },
    { "fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:withJavaIoReader:withInt:", "fill", "Z", 0x401, "Ljava.io.IOException;", NULL },
    { "fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:withJavaIoReader:", "fill", "Z", 0x11, "Ljava.io.IOException;", NULL },
    { "offsetByCodePointsWithCharArray:withInt:withInt:withInt:withInt:", "offsetByCodePoints", "I", 0x401, NULL, NULL },
    { "readFullyWithJavaIoReader:withCharArray:withInt:withInt:", "readFully", "I", 0x8, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "JAVA_4_", NULL, 0x1a, "Lorg.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils;", &OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_4_, NULL, .constantValue.asLong = 0 },
    { "JAVA_5_", NULL, 0x1a, "Lorg.apache.lucene.analysis.util.CharacterUtils$Java5CharacterUtils;", &OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_5_, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.analysis.util.CharacterUtils$Java5CharacterUtils;", "Lorg.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils;", "Lorg.apache.lucene.analysis.util.CharacterUtils$CharacterBuffer;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharacterUtils = { 2, "CharacterUtils", "org.apache.lucene.analysis.util", NULL, 0x401, 15, methods, 2, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneAnalysisUtilCharacterUtils;
}

@end

OrgApacheLuceneAnalysisUtilCharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_getInstance() {
  OrgApacheLuceneAnalysisUtilCharacterUtils_initialize();
  return OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_5_;
}

OrgApacheLuceneAnalysisUtilCharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_getJava4Instance() {
  OrgApacheLuceneAnalysisUtilCharacterUtils_initialize();
  return OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_4_;
}

OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *OrgApacheLuceneAnalysisUtilCharacterUtils_newCharacterBufferWithInt_(jint bufferSize) {
  OrgApacheLuceneAnalysisUtilCharacterUtils_initialize();
  if (bufferSize < 2) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"buffersize must be >= 2") autorelease];
  }
  return [new_OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_([IOSCharArray arrayWithLength:bufferSize], 0, 0) autorelease];
}

jint OrgApacheLuceneAnalysisUtilCharacterUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(JavaIoReader *reader, IOSCharArray *dest, jint offset, jint len) {
  OrgApacheLuceneAnalysisUtilCharacterUtils_initialize();
  jint read = 0;
  while (read < len) {
    jint r = [((JavaIoReader *) nil_chk(reader)) readWithCharArray:dest withInt:offset + read withInt:len - read];
    if (r == -1) {
      break;
    }
    read += r;
  }
  return read;
}

void OrgApacheLuceneAnalysisUtilCharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharacterUtils)

@implementation OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset {
  return JavaLangCharacter_codePointAtWithJavaLangCharSequence_withInt_(seq, offset);
}

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit {
  return JavaLangCharacter_codePointAtWithCharArray_withInt_withInt_(chars, offset, limit);
}

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars {
  JreAssert((((IOSCharArray *) nil_chk(((OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *) nil_chk(buffer))->buffer_))->size_ >= 2), (@"org/apache/lucene/analysis/util/CharacterUtils.java:244 condition failed: assert buffer.buffer.length >= 2;"));
  if (numChars < 2 || numChars > buffer->buffer_->size_) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"numChars must be >= 2 and <= the buffer size") autorelease];
  }
  IOSCharArray *charBuffer = buffer->buffer_;
  buffer->offset_ = 0;
  jint offset;
  if (buffer->lastTrailingHighSurrogate_ != 0) {
    *IOSCharArray_GetRef(charBuffer, 0) = buffer->lastTrailingHighSurrogate_;
    buffer->lastTrailingHighSurrogate_ = 0;
    offset = 1;
  }
  else {
    offset = 0;
  }
  jint read = OrgApacheLuceneAnalysisUtilCharacterUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(reader, charBuffer, offset, numChars - offset);
  buffer->length_ = offset + read;
  jboolean result = buffer->length_ == numChars;
  if (buffer->length_ < numChars) {
    return result;
  }
  if (JavaLangCharacter_isHighSurrogateWithChar_(IOSCharArray_Get(charBuffer, buffer->length_ - 1))) {
    buffer->lastTrailingHighSurrogate_ = IOSCharArray_Get(charBuffer, --buffer->length_);
  }
  return result;
}

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq {
  return JavaLangCharacter_codePointCountWithJavaLangCharSequence_withInt_withInt_(seq, 0, [((id<JavaLangCharSequence>) nil_chk(seq)) length]);
}

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset {
  return JavaLangCharacter_offsetByCodePointsWithCharArray_withInt_withInt_withInt_withInt_(buf, start, count, index, offset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Java5CharacterUtils", NULL, 0x0, NULL, NULL },
    { "codePointAtWithJavaLangCharSequence:withInt:", "codePointAt", "I", 0x1, NULL, NULL },
    { "codePointAtWithCharArray:withInt:withInt:", "codePointAt", "I", 0x1, NULL, NULL },
    { "fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:withJavaIoReader:withInt:", "fill", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "codePointCountWithJavaLangCharSequence:", "codePointCount", "I", 0x1, NULL, NULL },
    { "offsetByCodePointsWithCharArray:withInt:withInt:withInt:withInt:", "offsetByCodePoints", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils = { 2, "Java5CharacterUtils", "org.apache.lucene.analysis.util", "CharacterUtils", 0x1a, 6, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils;
}

@end

void OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *self) {
  OrgApacheLuceneAnalysisUtilCharacterUtils_init(self);
}

OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init() {
  OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *self = [OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils alloc];
  OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils)

@implementation OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset {
  return [((id<JavaLangCharSequence>) nil_chk(seq)) charAtWithInt:offset];
}

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit {
  if (offset >= limit) @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(@"offset must be less than limit") autorelease];
  return IOSCharArray_Get(nil_chk(chars), offset);
}

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars {
  JreAssert((((IOSCharArray *) nil_chk(((OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *) nil_chk(buffer))->buffer_))->size_ >= 1), (@"org/apache/lucene/analysis/util/CharacterUtils.java:307 condition failed: assert buffer.buffer.length >= 1;"));
  if (numChars < 1 || numChars > buffer->buffer_->size_) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"numChars must be >= 1 and <= the buffer size") autorelease];
  }
  buffer->offset_ = 0;
  jint read = OrgApacheLuceneAnalysisUtilCharacterUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(reader, buffer->buffer_, 0, numChars);
  buffer->length_ = read;
  buffer->lastTrailingHighSurrogate_ = 0;
  return read == numChars;
}

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq {
  return [((id<JavaLangCharSequence>) nil_chk(seq)) length];
}

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset {
  jint result = index + offset;
  if (result < 0 || result > count) {
    @throw [new_JavaLangIndexOutOfBoundsException_init() autorelease];
  }
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Java4CharacterUtils", NULL, 0x0, NULL, NULL },
    { "codePointAtWithJavaLangCharSequence:withInt:", "codePointAt", "I", 0x1, NULL, NULL },
    { "codePointAtWithCharArray:withInt:withInt:", "codePointAt", "I", 0x1, NULL, NULL },
    { "fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:withJavaIoReader:withInt:", "fill", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "codePointCountWithJavaLangCharSequence:", "codePointCount", "I", 0x1, NULL, NULL },
    { "offsetByCodePointsWithCharArray:withInt:withInt:withInt:withInt:", "offsetByCodePoints", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils = { 2, "Java4CharacterUtils", "org.apache.lucene.analysis.util", "CharacterUtils", 0x1a, 6, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils;
}

@end

void OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *self) {
  OrgApacheLuceneAnalysisUtilCharacterUtils_init(self);
}

OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init() {
  OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *self = [OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils alloc];
  OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils)

@implementation OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer

- (instancetype)initWithCharArray:(IOSCharArray *)buffer
                          withInt:(jint)offset
                          withInt:(jint)length {
  OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_(self, buffer, offset, length);
  return self;
}

- (IOSCharArray *)getBuffer {
  return buffer_;
}

- (jint)getOffset {
  return offset_;
}

- (jint)getLength {
  return length_;
}

- (void)reset {
  offset_ = 0;
  length_ = 0;
  lastTrailingHighSurrogate_ = 0;
}

- (void)dealloc {
  RELEASE_(buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCharArray:withInt:withInt:", "CharacterBuffer", NULL, 0x0, NULL, NULL },
    { "getBuffer", NULL, "[C", 0x1, NULL, NULL },
    { "getOffset", NULL, "I", 0x1, NULL, NULL },
    { "getLength", NULL, "I", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "buffer_", NULL, 0x12, "[C", NULL, NULL, .constantValue.asLong = 0 },
    { "offset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "length_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastTrailingHighSurrogate_", NULL, 0x0, "C", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer = { 2, "CharacterBuffer", "org.apache.lucene.analysis.util", "CharacterUtils", 0x19, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer;
}

@end

void OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *self, IOSCharArray *buffer, jint offset, jint length) {
  NSObject_init(self);
  JreStrongAssign(&self->buffer_, buffer);
  self->offset_ = offset;
  self->length_ = length;
}

OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *new_OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_(IOSCharArray *buffer, jint offset, jint length) {
  OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *self = [OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer alloc];
  OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_(self, buffer, offset, length);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer)
