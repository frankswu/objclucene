//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/AbstractMap.h"
#include "java/util/AbstractSet.h"
#include "java/util/Arrays.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/analysis/util/CharArrayMap.h"
#include "org/apache/lucene/analysis/util/CharArraySet.h"
#include "org/apache/lucene/analysis/util/CharacterUtils.h"

@interface OrgApacheLuceneAnalysisUtilCharArrayMap () {
 @public
  OrgApacheLuceneAnalysisUtilCharacterUtils *charUtils_;
  jboolean ignoreCase_;
  jint count_;
  OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *entrySet_;
  OrgApacheLuceneAnalysisUtilCharArraySet *keySet_CharArrayMap_;
}

/*!
 @brief Create set from the supplied map (used internally for readonly maps...)
 */
- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)toCopy;

- (jint)getSlotWithCharArray:(IOSCharArray *)text
                     withInt:(jint)off
                     withInt:(jint)len;

/*!
 @brief Returns true if the String is in the set
 */
- (jint)getSlotWithJavaLangCharSequence:(id<JavaLangCharSequence>)text;

- (void)rehash;

- (jboolean)equalsWithCharArray:(IOSCharArray *)text1
                        withInt:(jint)off
                        withInt:(jint)len
                  withCharArray:(IOSCharArray *)text2;

- (jboolean)equalsWithJavaLangCharSequence:(id<JavaLangCharSequence>)text1
                             withCharArray:(IOSCharArray *)text2;

- (jint)getHashCodeWithCharArray:(IOSCharArray *)text
                         withInt:(jint)offset
                         withInt:(jint)len;

- (jint)getHashCodeWithJavaLangCharSequence:(id<JavaLangCharSequence>)text;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharArrayMap, charUtils_, OrgApacheLuceneAnalysisUtilCharacterUtils *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharArrayMap, entrySet_, OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharArrayMap, keySet_CharArrayMap_, OrgApacheLuceneAnalysisUtilCharArraySet *)

inline OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisUtilCharArrayMap_get_EMPTY_MAP();
static OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisUtilCharArrayMap_EMPTY_MAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisUtilCharArrayMap, EMPTY_MAP, OrgApacheLuceneAnalysisUtilCharArrayMap *)

inline jint OrgApacheLuceneAnalysisUtilCharArrayMap_get_INIT_SIZE();
#define OrgApacheLuceneAnalysisUtilCharArrayMap_INIT_SIZE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisUtilCharArrayMap, INIT_SIZE, jint)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, OrgApacheLuceneAnalysisUtilCharArrayMap *toCopy);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *toCopy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *toCopy);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, IOSCharArray *text, jint off, jint len);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithJavaLangCharSequence_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, id<JavaLangCharSequence> text);

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharArrayMap_rehash(OrgApacheLuceneAnalysisUtilCharArrayMap *self);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithCharArray_withInt_withInt_withCharArray_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, IOSCharArray *text1, jint off, jint len, IOSCharArray *text2);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithJavaLangCharSequence_withCharArray_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, id<JavaLangCharSequence> text1, IOSCharArray *text2);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisUtilCharArrayMap_getHashCodeWithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, IOSCharArray *text, jint offset, jint len);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisUtilCharArrayMap_getHashCodeWithJavaLangCharSequence_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, id<JavaLangCharSequence> text);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *OrgApacheLuceneAnalysisUtilCharArrayMap_entrySet(OrgApacheLuceneAnalysisUtilCharArrayMap *self);

@interface OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator () {
 @public
  OrgApacheLuceneAnalysisUtilCharArrayMap *this$0_;
  jint pos_;
  jint lastPos_;
  jboolean allowModify_;
}

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)outer$
                                                    withBoolean:(jboolean)allowModify;

- (void)goNext;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator, this$0_, OrgApacheLuceneAnalysisUtilCharArrayMap *)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *self, OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *new_OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *create_OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify);

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_goNext(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *self);

@interface OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry : NSObject < JavaUtilMap_Entry > {
 @public
  OrgApacheLuceneAnalysisUtilCharArrayMap *this$0_;
  jint pos_;
  jboolean allowModify_;
}

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)outer$
                                                        withInt:(jint)pos
                                                    withBoolean:(jboolean)allowModify;

- (id)getKey;

- (id)getValue;

- (id)setValueWithId:(id)value;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry, this$0_, OrgApacheLuceneAnalysisUtilCharArrayMap *)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry *self, OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jint pos, jboolean allowModify);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry *new_OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jint pos, jboolean allowModify) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry *create_OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jint pos, jboolean allowModify);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry)

@interface OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet () {
 @public
  OrgApacheLuceneAnalysisUtilCharArrayMap *this$0_;
  jboolean allowModify_;
}

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)outer$
                                                    withBoolean:(jboolean)allowModify;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet, this$0_, OrgApacheLuceneAnalysisUtilCharArrayMap *)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *self, OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *new_OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *create_OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify);

/*!
 @brief Empty <code>org.apache.lucene.analysis.util.CharArrayMap.UnmodifiableCharArrayMap</code> optimized for speed.
 Contains checks will always return <code>false</code> or throw
 NPE if necessary.
 */
@interface OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap : OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap

- (instancetype)init;

- (jboolean)containsKeyWithCharArray:(IOSCharArray *)text
                             withInt:(jint)off
                             withInt:(jint)len;

- (jboolean)containsKeyWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs;

- (jboolean)containsKeyWithId:(id)o;

- (id)getWithCharArray:(IOSCharArray *)text
               withInt:(jint)off
               withInt:(jint)len;

- (id)getWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs;

- (id)getWithId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap_init(OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap)

@interface OrgApacheLuceneAnalysisUtilCharArrayMap_$1 : OrgApacheLuceneAnalysisUtilCharArraySet

- (jboolean)addWithId:(id)o;

- (jboolean)addWithJavaLangCharSequence:(id<JavaLangCharSequence>)text;

- (jboolean)addWithNSString:(NSString *)text;

- (jboolean)addWithCharArray:(IOSCharArray *)text;

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharArrayMap_$1)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharArrayMap_$1_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap_$1 *self, OrgApacheLuceneAnalysisUtilCharArrayMap *arg$0);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_$1 *new_OrgApacheLuceneAnalysisUtilCharArrayMap_$1_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap_$1 *create_OrgApacheLuceneAnalysisUtilCharArrayMap_$1_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *arg$0);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharArrayMap_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisUtilCharArrayMap)

@implementation OrgApacheLuceneAnalysisUtilCharArrayMap

- (instancetype)initWithInt:(jint)startSize
                withBoolean:(jboolean)ignoreCase {
  OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(self, startSize, ignoreCase);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)c
                        withBoolean:(jboolean)ignoreCase {
  OrgApacheLuceneAnalysisUtilCharArrayMap_initWithJavaUtilMap_withBoolean_(self, c, ignoreCase);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)toCopy {
  OrgApacheLuceneAnalysisUtilCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(self, toCopy);
  return self;
}

- (void)clear {
  count_ = 0;
  JavaUtilArrays_fillWithNSObjectArray_withId_(keys_, nil);
  JavaUtilArrays_fillWithNSObjectArray_withId_(values_, nil);
}

- (jboolean)containsKeyWithCharArray:(IOSCharArray *)text
                             withInt:(jint)off
                             withInt:(jint)len {
  return IOSObjectArray_Get(nil_chk(keys_), OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithCharArray_withInt_withInt_(self, text, off, len)) != nil;
}

- (jboolean)containsKeyWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs {
  return IOSObjectArray_Get(nil_chk(keys_), OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithJavaLangCharSequence_(self, cs)) != nil;
}

- (jboolean)containsKeyWithId:(id)o {
  if ([o isKindOfClass:[IOSCharArray class]]) {
    IOSCharArray *text = (IOSCharArray *) cast_chk(o, [IOSCharArray class]);
    return [self containsKeyWithCharArray:text withInt:0 withInt:((IOSCharArray *) nil_chk(text))->size_];
  }
  return [self containsKeyWithJavaLangCharSequence:[nil_chk(o) description]];
}

- (id)getWithCharArray:(IOSCharArray *)text
               withInt:(jint)off
               withInt:(jint)len {
  return IOSObjectArray_Get(nil_chk(values_), OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithCharArray_withInt_withInt_(self, text, off, len));
}

- (id)getWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs {
  return IOSObjectArray_Get(nil_chk(values_), OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithJavaLangCharSequence_(self, cs));
}

- (id)getWithId:(id)o {
  if ([o isKindOfClass:[IOSCharArray class]]) {
    IOSCharArray *text = (IOSCharArray *) cast_chk(o, [IOSCharArray class]);
    return [self getWithCharArray:text withInt:0 withInt:((IOSCharArray *) nil_chk(text))->size_];
  }
  return [self getWithJavaLangCharSequence:[nil_chk(o) description]];
}

- (jint)getSlotWithCharArray:(IOSCharArray *)text
                     withInt:(jint)off
                     withInt:(jint)len {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithCharArray_withInt_withInt_(self, text, off, len);
}

- (jint)getSlotWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithJavaLangCharSequence_(self, text);
}

- (id)putWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                           withId:(id)value {
  return [self putWithNSString:[((id<JavaLangCharSequence>) nil_chk(text)) description] withId:value];
}

- (id)putWithId:(id)o
         withId:(id)value {
  if ([o isKindOfClass:[IOSCharArray class]]) {
    return [self putWithCharArray:(IOSCharArray *) cast_chk(o, [IOSCharArray class]) withId:value];
  }
  return [self putWithNSString:[nil_chk(o) description] withId:value];
}

- (id)putWithNSString:(NSString *)text
               withId:(id)value {
  return [self putWithCharArray:[((NSString *) nil_chk(text)) toCharArray] withId:value];
}

- (id)putWithCharArray:(IOSCharArray *)text
                withId:(id)value {
  if (ignoreCase_) {
    [((OrgApacheLuceneAnalysisUtilCharacterUtils *) nil_chk(charUtils_)) toLowerCaseWithCharArray:text withInt:0 withInt:((IOSCharArray *) nil_chk(text))->size_];
  }
  jint slot = OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithCharArray_withInt_withInt_(self, text, 0, ((IOSCharArray *) nil_chk(text))->size_);
  if (IOSObjectArray_Get(nil_chk(keys_), slot) != nil) {
    id oldValue = IOSObjectArray_Get(nil_chk(values_), slot);
    IOSObjectArray_Set(values_, slot, value);
    return oldValue;
  }
  IOSObjectArray_Set(keys_, slot, text);
  IOSObjectArray_Set(nil_chk(values_), slot, value);
  count_++;
  if (count_ + (JreRShift32(count_, 2)) > keys_->size_) {
    OrgApacheLuceneAnalysisUtilCharArrayMap_rehash(self);
  }
  return nil;
}

- (void)rehash {
  OrgApacheLuceneAnalysisUtilCharArrayMap_rehash(self);
}

- (jboolean)equalsWithCharArray:(IOSCharArray *)text1
                        withInt:(jint)off
                        withInt:(jint)len
                  withCharArray:(IOSCharArray *)text2 {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithCharArray_withInt_withInt_withCharArray_(self, text1, off, len, text2);
}

- (jboolean)equalsWithJavaLangCharSequence:(id<JavaLangCharSequence>)text1
                             withCharArray:(IOSCharArray *)text2 {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithJavaLangCharSequence_withCharArray_(self, text1, text2);
}

- (jint)getHashCodeWithCharArray:(IOSCharArray *)text
                         withInt:(jint)offset
                         withInt:(jint)len {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_getHashCodeWithCharArray_withInt_withInt_(self, text, offset, len);
}

- (jint)getHashCodeWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_getHashCodeWithJavaLangCharSequence_(self, text);
}

- (id)removeWithId:(id)key {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)size {
  return count_;
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_(@"{");
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk(OrgApacheLuceneAnalysisUtilCharArrayMap_entrySet(self))) {
    if ([sb length] > 1) [sb appendWithNSString:@", "];
    [sb appendWithId:entry_];
  }
  return [((JavaLangStringBuilder *) nil_chk([sb appendWithChar:'}'])) description];
}

- (OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *)createEntrySet {
  return create_OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(self, true);
}

- (OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *)entrySet {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_entrySet(self);
}

- (id<JavaUtilSet>)originalKeySet {
  return [super keySet];
}

- (OrgApacheLuceneAnalysisUtilCharArraySet *)keySet {
  if (keySet_CharArrayMap_ == nil) {
    JreStrongAssignAndConsume(&keySet_CharArrayMap_, new_OrgApacheLuceneAnalysisUtilCharArrayMap_$1_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(self));
  }
  return keySet_CharArrayMap_;
}

+ (OrgApacheLuceneAnalysisUtilCharArrayMap *)unmodifiableMapWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)map {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_unmodifiableMapWithOrgApacheLuceneAnalysisUtilCharArrayMap_(map);
}

+ (OrgApacheLuceneAnalysisUtilCharArrayMap *)copy__WithJavaUtilMap:(id<JavaUtilMap>)map {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_copy__WithJavaUtilMap_(map);
}

+ (OrgApacheLuceneAnalysisUtilCharArrayMap *)emptyMap {
  return OrgApacheLuceneAnalysisUtilCharArrayMap_emptyMap();
}

- (void)dealloc {
  RELEASE_(charUtils_);
  RELEASE_(keys_);
  RELEASE_(values_);
  RELEASE_(entrySet_);
  RELEASE_(keySet_CharArrayMap_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisUtilCharArrayMap class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisUtilCharArrayMap_EMPTY_MAP, new_OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisUtilCharArrayMap)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withBoolean:", "CharArrayMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:withBoolean:", "CharArrayMap", NULL, 0x1, NULL, "(Ljava/util/Map<*+TV;>;Z)V" },
    { "initWithOrgApacheLuceneAnalysisUtilCharArrayMap:", "CharArrayMap", NULL, 0x2, NULL, "(Lorg/apache/lucene/analysis/util/CharArrayMap<TV;>;)V" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsKeyWithCharArray:withInt:withInt:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsKeyWithJavaLangCharSequence:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "getWithCharArray:withInt:withInt:", "get", "TV;", 0x1, NULL, "([CII)TV;" },
    { "getWithJavaLangCharSequence:", "get", "TV;", 0x1, NULL, "(Ljava/lang/CharSequence;)TV;" },
    { "getWithId:", "get", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "getSlotWithCharArray:withInt:withInt:", "getSlot", "I", 0x2, NULL, NULL },
    { "getSlotWithJavaLangCharSequence:", "getSlot", "I", 0x2, NULL, NULL },
    { "putWithJavaLangCharSequence:withId:", "put", "TV;", 0x1, NULL, "(Ljava/lang/CharSequence;TV;)TV;" },
    { "putWithId:withId:", "put", "TV;", 0x1, NULL, "(Ljava/lang/Object;TV;)TV;" },
    { "putWithNSString:withId:", "put", "TV;", 0x1, NULL, "(Ljava/lang/String;TV;)TV;" },
    { "putWithCharArray:withId:", "put", "TV;", 0x1, NULL, "([CTV;)TV;" },
    { "rehash", NULL, "V", 0x2, NULL, NULL },
    { "equalsWithCharArray:withInt:withInt:withCharArray:", "equals", "Z", 0x2, NULL, NULL },
    { "equalsWithJavaLangCharSequence:withCharArray:", "equals", "Z", 0x2, NULL, NULL },
    { "getHashCodeWithCharArray:withInt:withInt:", "getHashCode", "I", 0x2, NULL, NULL },
    { "getHashCodeWithJavaLangCharSequence:", "getHashCode", "I", 0x2, NULL, NULL },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "createEntrySet", NULL, "Lorg.apache.lucene.analysis.util.CharArrayMap$EntrySet;", 0x0, NULL, NULL },
    { "entrySet", NULL, "Lorg.apache.lucene.analysis.util.CharArrayMap$EntrySet;", 0x11, NULL, "()Lorg/apache/lucene/analysis/util/CharArrayMap$EntrySet;" },
    { "originalKeySet", NULL, "Ljava.util.Set;", 0x10, NULL, "()Ljava/util/Set<Ljava/lang/Object;>;" },
    { "keySet", NULL, "Lorg.apache.lucene.analysis.util.CharArraySet;", 0x11, NULL, "()Lorg/apache/lucene/analysis/util/CharArraySet;" },
    { "unmodifiableMapWithOrgApacheLuceneAnalysisUtilCharArrayMap:", "unmodifiableMap", "Lorg.apache.lucene.analysis.util.CharArrayMap;", 0x9, NULL, "<V:Ljava/lang/Object;>(Lorg/apache/lucene/analysis/util/CharArrayMap<TV;>;)Lorg/apache/lucene/analysis/util/CharArrayMap<TV;>;" },
    { "copy__WithJavaUtilMap:", "copy", "Lorg.apache.lucene.analysis.util.CharArrayMap;", 0x9, NULL, "<V:Ljava/lang/Object;>(Ljava/util/Map<*+TV;>;)Lorg/apache/lucene/analysis/util/CharArrayMap<TV;>;" },
    { "emptyMap", NULL, "Lorg.apache.lucene.analysis.util.CharArrayMap;", 0x9, NULL, "<V:Ljava/lang/Object;>()Lorg/apache/lucene/analysis/util/CharArrayMap<TV;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_MAP", "EMPTY_MAP", 0x1a, "Lorg.apache.lucene.analysis.util.CharArrayMap;", &OrgApacheLuceneAnalysisUtilCharArrayMap_EMPTY_MAP, "Lorg/apache/lucene/analysis/util/CharArrayMap<*>;", .constantValue.asLong = 0 },
    { "INIT_SIZE", "INIT_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisUtilCharArrayMap_INIT_SIZE },
    { "charUtils_", NULL, 0x12, "Lorg.apache.lucene.analysis.util.CharacterUtils;", NULL, NULL, .constantValue.asLong = 0 },
    { "ignoreCase_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "count_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "keys_", NULL, 0x0, "[[C", NULL, NULL, .constantValue.asLong = 0 },
    { "values_", NULL, 0x0, "[Ljava.lang.Object;", NULL, "[TV;", .constantValue.asLong = 0 },
    { "entrySet_", NULL, 0x2, "Lorg.apache.lucene.analysis.util.CharArrayMap$EntrySet;", NULL, NULL, .constantValue.asLong = 0 },
    { "keySet_CharArrayMap_", "keySet", 0x2, "Lorg.apache.lucene.analysis.util.CharArraySet;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Ljava.lang.Object;", "TV;"};
  static const char *inner_classes[] = {"Lorg.apache.lucene.analysis.util.CharArrayMap$EntryIterator;", "Lorg.apache.lucene.analysis.util.CharArrayMap$MapEntry;", "Lorg.apache.lucene.analysis.util.CharArrayMap$EntrySet;", "Lorg.apache.lucene.analysis.util.CharArrayMap$UnmodifiableCharArrayMap;", "Lorg.apache.lucene.analysis.util.CharArrayMap$EmptyCharArrayMap;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharArrayMap = { 2, "CharArrayMap", "org.apache.lucene.analysis.util", NULL, 0x1, 31, methods, 9, fields, 2, superclass_type_args, 5, inner_classes, NULL, "<V:Ljava/lang/Object;>Ljava/util/AbstractMap<Ljava/lang/Object;TV;>;" };
  return &_OrgApacheLuceneAnalysisUtilCharArrayMap;
}

@end

void OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, jint startSize, jboolean ignoreCase) {
  JavaUtilAbstractMap_init(self);
  JreStrongAssign(&self->entrySet_, nil);
  JreStrongAssign(&self->keySet_CharArrayMap_, nil);
  self->ignoreCase_ = ignoreCase;
  jint size = OrgApacheLuceneAnalysisUtilCharArrayMap_INIT_SIZE;
  while (startSize + (JreRShift32(startSize, 2)) > size) JreLShiftAssignInt(&size, 1);
  JreStrongAssignAndConsume(&self->keys_, [IOSObjectArray newArrayWithLength:size type:IOSClass_charArray(1)]);
  JreStrongAssign(&self->values_, [IOSObjectArray arrayWithLength:size type:NSObject_class_()]);
  JreStrongAssign(&self->charUtils_, OrgApacheLuceneAnalysisUtilCharacterUtils_getInstance());
}

OrgApacheLuceneAnalysisUtilCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(jint startSize, jboolean ignoreCase) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap, initWithInt_withBoolean_, startSize, ignoreCase)
}

OrgApacheLuceneAnalysisUtilCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(jint startSize, jboolean ignoreCase) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap, initWithInt_withBoolean_, startSize, ignoreCase)
}

void OrgApacheLuceneAnalysisUtilCharArrayMap_initWithJavaUtilMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, id<JavaUtilMap> c, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(self, [((id<JavaUtilMap>) nil_chk(c)) size], ignoreCase);
  [self putAllWithJavaUtilMap:c];
}

OrgApacheLuceneAnalysisUtilCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithJavaUtilMap_withBoolean_(id<JavaUtilMap> c, jboolean ignoreCase) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap, initWithJavaUtilMap_withBoolean_, c, ignoreCase)
}

OrgApacheLuceneAnalysisUtilCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithJavaUtilMap_withBoolean_(id<JavaUtilMap> c, jboolean ignoreCase) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap, initWithJavaUtilMap_withBoolean_, c, ignoreCase)
}

void OrgApacheLuceneAnalysisUtilCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, OrgApacheLuceneAnalysisUtilCharArrayMap *toCopy) {
  JavaUtilAbstractMap_init(self);
  JreStrongAssign(&self->entrySet_, nil);
  JreStrongAssign(&self->keySet_CharArrayMap_, nil);
  JreStrongAssign(&self->keys_, ((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(toCopy))->keys_);
  JreStrongAssign(&self->values_, toCopy->values_);
  self->ignoreCase_ = toCopy->ignoreCase_;
  self->count_ = toCopy->count_;
  JreStrongAssign(&self->charUtils_, toCopy->charUtils_);
}

OrgApacheLuceneAnalysisUtilCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *toCopy) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_, toCopy)
}

OrgApacheLuceneAnalysisUtilCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *toCopy) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_, toCopy)
}

jint OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, IOSCharArray *text, jint off, jint len) {
  jint code = OrgApacheLuceneAnalysisUtilCharArrayMap_getHashCodeWithCharArray_withInt_withInt_(self, text, off, len);
  jint pos = code & (((IOSObjectArray *) nil_chk(self->keys_))->size_ - 1);
  IOSCharArray *text2 = IOSObjectArray_Get(self->keys_, pos);
  if (text2 != nil && !OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithCharArray_withInt_withInt_withCharArray_(self, text, off, len, text2)) {
    jint inc = ((JreRShift32(code, 8)) + code) | 1;
    do {
      code += inc;
      pos = code & (((IOSObjectArray *) nil_chk(self->keys_))->size_ - 1);
      text2 = IOSObjectArray_Get(self->keys_, pos);
    }
    while (text2 != nil && !OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithCharArray_withInt_withInt_withCharArray_(self, text, off, len, text2));
  }
  return pos;
}

jint OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithJavaLangCharSequence_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, id<JavaLangCharSequence> text) {
  jint code = OrgApacheLuceneAnalysisUtilCharArrayMap_getHashCodeWithJavaLangCharSequence_(self, text);
  jint pos = code & (((IOSObjectArray *) nil_chk(self->keys_))->size_ - 1);
  IOSCharArray *text2 = IOSObjectArray_Get(self->keys_, pos);
  if (text2 != nil && !OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithJavaLangCharSequence_withCharArray_(self, text, text2)) {
    jint inc = ((JreRShift32(code, 8)) + code) | 1;
    do {
      code += inc;
      pos = code & (((IOSObjectArray *) nil_chk(self->keys_))->size_ - 1);
      text2 = IOSObjectArray_Get(self->keys_, pos);
    }
    while (text2 != nil && !OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithJavaLangCharSequence_withCharArray_(self, text, text2));
  }
  return pos;
}

void OrgApacheLuceneAnalysisUtilCharArrayMap_rehash(OrgApacheLuceneAnalysisUtilCharArrayMap *self) {
  JreAssert((((IOSObjectArray *) nil_chk(self->keys_))->size_ == ((IOSObjectArray *) nil_chk(self->values_))->size_), (@"org/apache/lucene/analysis/util/CharArrayMap.java:216 condition failed: assert keys.length == values.length;"));
  jint newSize = 2 * self->keys_->size_;
  IOSObjectArray *oldkeys = self->keys_;
  IOSObjectArray *oldvalues = self->values_;
  JreStrongAssignAndConsume(&self->keys_, [IOSObjectArray newArrayWithLength:newSize type:IOSClass_charArray(1)]);
  JreStrongAssign(&self->values_, [IOSObjectArray arrayWithLength:newSize type:NSObject_class_()]);
  for (jint i = 0; i < oldkeys->size_; i++) {
    IOSCharArray *text = IOSObjectArray_Get(oldkeys, i);
    if (text != nil) {
      jint slot = OrgApacheLuceneAnalysisUtilCharArrayMap_getSlotWithCharArray_withInt_withInt_(self, text, 0, text->size_);
      IOSObjectArray_Set(nil_chk(self->keys_), slot, text);
      IOSObjectArray_Set(nil_chk(self->values_), slot, IOSObjectArray_Get(oldvalues, i));
    }
  }
}

jboolean OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithCharArray_withInt_withInt_withCharArray_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, IOSCharArray *text1, jint off, jint len, IOSCharArray *text2) {
  if (len != ((IOSCharArray *) nil_chk(text2))->size_) return false;
  jint limit = off + len;
  if (self->ignoreCase_) {
    for (jint i = 0; i < len; ) {
      jint codePointAt = [((OrgApacheLuceneAnalysisUtilCharacterUtils *) nil_chk(self->charUtils_)) codePointAtWithCharArray:text1 withInt:off + i withInt:limit];
      if (JavaLangCharacter_toLowerCaseWithInt_(codePointAt) != [self->charUtils_ codePointAtWithCharArray:text2 withInt:i withInt:text2->size_]) return false;
      i += JavaLangCharacter_charCountWithInt_(codePointAt);
    }
  }
  else {
    for (jint i = 0; i < len; i++) {
      if (IOSCharArray_Get(nil_chk(text1), off + i) != IOSCharArray_Get(text2, i)) return false;
    }
  }
  return true;
}

jboolean OrgApacheLuceneAnalysisUtilCharArrayMap_equalsWithJavaLangCharSequence_withCharArray_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, id<JavaLangCharSequence> text1, IOSCharArray *text2) {
  jint len = [((id<JavaLangCharSequence>) nil_chk(text1)) length];
  if (len != ((IOSCharArray *) nil_chk(text2))->size_) return false;
  if (self->ignoreCase_) {
    for (jint i = 0; i < len; ) {
      jint codePointAt = [((OrgApacheLuceneAnalysisUtilCharacterUtils *) nil_chk(self->charUtils_)) codePointAtWithJavaLangCharSequence:text1 withInt:i];
      if (JavaLangCharacter_toLowerCaseWithInt_(codePointAt) != [self->charUtils_ codePointAtWithCharArray:text2 withInt:i withInt:text2->size_]) return false;
      i += JavaLangCharacter_charCountWithInt_(codePointAt);
    }
  }
  else {
    for (jint i = 0; i < len; i++) {
      if ([text1 charAtWithInt:i] != IOSCharArray_Get(text2, i)) return false;
    }
  }
  return true;
}

jint OrgApacheLuceneAnalysisUtilCharArrayMap_getHashCodeWithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, IOSCharArray *text, jint offset, jint len) {
  if (text == nil) @throw create_JavaLangNullPointerException_init();
  jint code = 0;
  jint stop = offset + len;
  if (self->ignoreCase_) {
    for (jint i = offset; i < stop; ) {
      jint codePointAt = [((OrgApacheLuceneAnalysisUtilCharacterUtils *) nil_chk(self->charUtils_)) codePointAtWithCharArray:text withInt:i withInt:stop];
      code = code * 31 + JavaLangCharacter_toLowerCaseWithInt_(codePointAt);
      i += JavaLangCharacter_charCountWithInt_(codePointAt);
    }
  }
  else {
    for (jint i = offset; i < stop; i++) {
      code = code * 31 + IOSCharArray_Get(text, i);
    }
  }
  return code;
}

jint OrgApacheLuceneAnalysisUtilCharArrayMap_getHashCodeWithJavaLangCharSequence_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, id<JavaLangCharSequence> text) {
  if (text == nil) @throw create_JavaLangNullPointerException_init();
  jint code = 0;
  jint len = [text length];
  if (self->ignoreCase_) {
    for (jint i = 0; i < len; ) {
      jint codePointAt = [((OrgApacheLuceneAnalysisUtilCharacterUtils *) nil_chk(self->charUtils_)) codePointAtWithJavaLangCharSequence:text withInt:i];
      code = code * 31 + JavaLangCharacter_toLowerCaseWithInt_(codePointAt);
      i += JavaLangCharacter_charCountWithInt_(codePointAt);
    }
  }
  else {
    for (jint i = 0; i < len; i++) {
      code = code * 31 + [text charAtWithInt:i];
    }
  }
  return code;
}

OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *OrgApacheLuceneAnalysisUtilCharArrayMap_entrySet(OrgApacheLuceneAnalysisUtilCharArrayMap *self) {
  if (self->entrySet_ == nil) {
    JreStrongAssign(&self->entrySet_, [self createEntrySet]);
  }
  return self->entrySet_;
}

OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisUtilCharArrayMap_unmodifiableMapWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *map) {
  OrgApacheLuceneAnalysisUtilCharArrayMap_initialize();
  if (map == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"Given map is null");
  if (map == (id) OrgApacheLuceneAnalysisUtilCharArrayMap_emptyMap() || [map isEmpty]) return OrgApacheLuceneAnalysisUtilCharArrayMap_emptyMap();
  if ([map isKindOfClass:[OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap class]]) return map;
  return create_OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(map);
}

OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisUtilCharArrayMap_copy__WithJavaUtilMap_(id<JavaUtilMap> map) {
  OrgApacheLuceneAnalysisUtilCharArrayMap_initialize();
  if (map == (id) OrgApacheLuceneAnalysisUtilCharArrayMap_EMPTY_MAP) return OrgApacheLuceneAnalysisUtilCharArrayMap_emptyMap();
  if ([map isKindOfClass:[OrgApacheLuceneAnalysisUtilCharArrayMap class]]) {
    OrgApacheLuceneAnalysisUtilCharArrayMap *m = (OrgApacheLuceneAnalysisUtilCharArrayMap *) cast_chk(map, [OrgApacheLuceneAnalysisUtilCharArrayMap class]);
    IOSObjectArray *keys = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(m))->keys_))->size_ type:IOSClass_charArray(1)];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(m->keys_, 0, keys, 0, keys->size_);
    IOSObjectArray *values = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(m->values_))->size_ type:NSObject_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(m->values_, 0, values, 0, values->size_);
    m = create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(m);
    JreStrongAssign(&m->keys_, keys);
    JreStrongAssign(&m->values_, values);
    return m;
  }
  return create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithJavaUtilMap_withBoolean_(map, false);
}

OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisUtilCharArrayMap_emptyMap() {
  OrgApacheLuceneAnalysisUtilCharArrayMap_initialize();
  return OrgApacheLuceneAnalysisUtilCharArrayMap_EMPTY_MAP;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharArrayMap)

@implementation OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)outer$
                                                    withBoolean:(jboolean)allowModify {
  OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(self, outer$, allowModify);
  return self;
}

- (void)goNext {
  OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_goNext(self);
}

- (jboolean)hasNext {
  return pos_ < ((IOSObjectArray *) nil_chk(this$0_->keys_))->size_;
}

- (IOSCharArray *)nextKey {
  OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_goNext(self);
  return IOSObjectArray_Get(nil_chk(this$0_->keys_), lastPos_);
}

- (NSString *)nextKeyString {
  return [NSString stringWithCharacters:[self nextKey]];
}

- (id)currentValue {
  return IOSObjectArray_Get(nil_chk(this$0_->values_), lastPos_);
}

- (id)setValueWithId:(id)value {
  if (!allowModify_) @throw create_JavaLangUnsupportedOperationException_init();
  id old = IOSObjectArray_Get(nil_chk(this$0_->values_), lastPos_);
  IOSObjectArray_Set(this$0_->values_, lastPos_, value);
  return old;
}

- (id<JavaUtilMap_Entry>)next {
  OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_goNext(self);
  return create_OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_(this$0_, lastPos_, allowModify_);
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisUtilCharArrayMap:withBoolean:", "EntryIterator", NULL, 0x2, NULL, NULL },
    { "goNext", NULL, "V", 0x2, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "nextKey", NULL, "[C", 0x1, NULL, NULL },
    { "nextKeyString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "currentValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "next", NULL, "Ljava.util.Map$Entry;", 0x1, NULL, "()Ljava/util/Map$Entry<Ljava/lang/Object;TV;>;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.analysis.util.CharArrayMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "pos_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastPos_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "allowModify_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator = { 2, "EntryIterator", "org.apache.lucene.analysis.util", "CharArrayMap", 0x1, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Iterator<Ljava/util/Map$Entry<Ljava/lang/Object;TV;>;>;" };
  return &_OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator;
}

@end

void OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *self, OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->pos_ = -1;
  self->allowModify_ = allowModify;
  OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_goNext(self);
}

OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *new_OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_, outer$, allowModify)
}

OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *create_OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_, outer$, allowModify)
}

void OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_goNext(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *self) {
  self->lastPos_ = self->pos_;
  self->pos_++;
  while (self->pos_ < ((IOSObjectArray *) nil_chk(self->this$0_->keys_))->size_ && IOSObjectArray_Get(self->this$0_->keys_, self->pos_) == nil) self->pos_++;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator)

@implementation OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)outer$
                                                        withInt:(jint)pos
                                                    withBoolean:(jboolean)allowModify {
  OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_(self, outer$, pos, allowModify);
  return self;
}

- (id)getKey {
  return [((IOSCharArray *) nil_chk(IOSObjectArray_Get(nil_chk(this$0_->keys_), pos_))) clone];
}

- (id)getValue {
  return IOSObjectArray_Get(nil_chk(this$0_->values_), pos_);
}

- (id)setValueWithId:(id)value {
  if (!allowModify_) @throw create_JavaLangUnsupportedOperationException_init();
  id old = IOSObjectArray_Get(nil_chk(this$0_->values_), pos_);
  IOSObjectArray_Set(this$0_->values_, pos_, value);
  return old;
}

- (NSString *)description {
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([create_JavaLangStringBuilder_init() appendWithCharArray:IOSObjectArray_Get(nil_chk(this$0_->keys_), pos_)])) appendWithChar:'='])) appendWithId:(IOSObjectArray_Get(nil_chk(this$0_->values_), pos_) == (id) this$0_) ? @"(this Map)" : IOSObjectArray_Get(this$0_->values_, pos_)])) description];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisUtilCharArrayMap:withInt:withBoolean:", "MapEntry", NULL, 0x2, NULL, NULL },
    { "getKey", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.analysis.util.CharArrayMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "pos_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "allowModify_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry = { 2, "MapEntry", "org.apache.lucene.analysis.util", "CharArrayMap", 0x12, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Map$Entry<Ljava/lang/Object;TV;>;" };
  return &_OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry;
}

@end

void OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry *self, OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jint pos, jboolean allowModify) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->pos_ = pos;
  self->allowModify_ = allowModify;
}

OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry *new_OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jint pos, jboolean allowModify) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_, outer$, pos, allowModify)
}

OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry *create_OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jint pos, jboolean allowModify) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withInt_withBoolean_, outer$, pos, allowModify)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharArrayMap_MapEntry)

@implementation OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)outer$
                                                    withBoolean:(jboolean)allowModify {
  OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(self, outer$, allowModify);
  return self;
}

- (OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *)iterator {
  return create_OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(this$0_, allowModify_);
}

- (jboolean)containsWithId:(id)o {
  if (!([JavaUtilMap_Entry_class_() isInstance:o])) return false;
  id<JavaUtilMap_Entry> e = (id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_());
  id key = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
  id val = [e getValue];
  id v = [this$0_ getWithId:key];
  return v == nil ? val == nil : [v isEqual:val];
}

- (jboolean)removeWithId:(id)o {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)size {
  return this$0_->count_;
}

- (void)clear {
  if (!allowModify_) @throw create_JavaLangUnsupportedOperationException_init();
  [this$0_ clear];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisUtilCharArrayMap:withBoolean:", "EntrySet", NULL, 0x2, NULL, NULL },
    { "iterator", NULL, "Lorg.apache.lucene.analysis.util.CharArrayMap$EntryIterator;", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.analysis.util.CharArrayMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "allowModify_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Ljava.util.Map$Entry;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet = { 2, "EntrySet", "org.apache.lucene.analysis.util", "CharArrayMap", 0x11, 6, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/util/AbstractSet<Ljava/util/Map$Entry<Ljava/lang/Object;TV;>;>;" };
  return &_OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet;
}

@end

void OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *self, OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaUtilAbstractSet_init(self);
  self->allowModify_ = allowModify;
}

OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *new_OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_, outer$, allowModify)
}

OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *create_OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *outer$, jboolean allowModify) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_, outer$, allowModify)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet)

@implementation OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)map {
  OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(self, map);
  return self;
}

- (void)clear {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id)putWithId:(id)o
         withId:(id)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id)putWithCharArray:(IOSCharArray *)text
                withId:(id)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id)putWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                           withId:(id)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id)putWithNSString:(NSString *)text
               withId:(id)val {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (id)removeWithId:(id)key {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *)createEntrySet {
  return create_OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_withBoolean_(self, false);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisUtilCharArrayMap:", "UnmodifiableCharArrayMap", NULL, 0x0, NULL, "(Lorg/apache/lucene/analysis/util/CharArrayMap<TV;>;)V" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "putWithId:withId:", "put", "TV;", 0x1, NULL, "(Ljava/lang/Object;TV;)TV;" },
    { "putWithCharArray:withId:", "put", "TV;", 0x1, NULL, "([CTV;)TV;" },
    { "putWithJavaLangCharSequence:withId:", "put", "TV;", 0x1, NULL, "(Ljava/lang/CharSequence;TV;)TV;" },
    { "putWithNSString:withId:", "put", "TV;", 0x1, NULL, "(Ljava/lang/String;TV;)TV;" },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "createEntrySet", NULL, "Lorg.apache.lucene.analysis.util.CharArrayMap$EntrySet;", 0x0, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"TV;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap = { 2, "UnmodifiableCharArrayMap", "org.apache.lucene.analysis.util", "CharArrayMap", 0x8, 8, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "<V:Ljava/lang/Object;>Lorg/apache/lucene/analysis/util/CharArrayMap<TV;>;" };
  return &_OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap;
}

@end

void OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap *self, OrgApacheLuceneAnalysisUtilCharArrayMap *map) {
  OrgApacheLuceneAnalysisUtilCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(self, map);
}

OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *map) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_, map)
}

OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *map) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_, map)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap)

@implementation OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)containsKeyWithCharArray:(IOSCharArray *)text
                             withInt:(jint)off
                             withInt:(jint)len {
  if (text == nil) @throw create_JavaLangNullPointerException_init();
  return false;
}

- (jboolean)containsKeyWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs {
  if (cs == nil) @throw create_JavaLangNullPointerException_init();
  return false;
}

- (jboolean)containsKeyWithId:(id)o {
  if (o == nil) @throw create_JavaLangNullPointerException_init();
  return false;
}

- (id)getWithCharArray:(IOSCharArray *)text
               withInt:(jint)off
               withInt:(jint)len {
  if (text == nil) @throw create_JavaLangNullPointerException_init();
  return nil;
}

- (id)getWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs {
  if (cs == nil) @throw create_JavaLangNullPointerException_init();
  return nil;
}

- (id)getWithId:(id)o {
  if (o == nil) @throw create_JavaLangNullPointerException_init();
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "EmptyCharArrayMap", NULL, 0x0, NULL, NULL },
    { "containsKeyWithCharArray:withInt:withInt:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsKeyWithJavaLangCharSequence:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "getWithCharArray:withInt:withInt:", "get", "TV;", 0x1, NULL, "([CII)TV;" },
    { "getWithJavaLangCharSequence:", "get", "TV;", 0x1, NULL, "(Ljava/lang/CharSequence;)TV;" },
    { "getWithId:", "get", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
  };
  static const char *superclass_type_args[] = {"TV;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap = { 2, "EmptyCharArrayMap", "org.apache.lucene.analysis.util", "CharArrayMap", 0x1a, 7, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "<V:Ljava/lang/Object;>Lorg/apache/lucene/analysis/util/CharArrayMap$UnmodifiableCharArrayMap<TV;>;" };
  return &_OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap;
}

@end

void OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap_init(OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap *self) {
  OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(self, create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(0, false));
}

OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap, init)
}

OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharArrayMap_EmptyCharArrayMap)

@implementation OrgApacheLuceneAnalysisUtilCharArrayMap_$1

- (jboolean)addWithId:(id)o {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jboolean)addWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jboolean)addWithNSString:(NSString *)text {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jboolean)addWithCharArray:(IOSCharArray *)text {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)arg$0 {
  OrgApacheLuceneAnalysisUtilCharArrayMap_$1_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(self, arg$0);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithId:", "add", "Z", 0x1, NULL, NULL },
    { "addWithJavaLangCharSequence:", "add", "Z", 0x1, NULL, NULL },
    { "addWithNSString:", "add", "Z", 0x1, NULL, NULL },
    { "addWithCharArray:", "add", "Z", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneAnalysisUtilCharArrayMap:", "", NULL, 0x0, NULL, "(Lorg/apache/lucene/analysis/util/CharArrayMap<Ljava/lang/Object;>;)V" },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneAnalysisUtilCharArrayMap", "keySet" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharArrayMap_$1 = { 2, "", "org.apache.lucene.analysis.util", "CharArrayMap", 0x8008, 5, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneAnalysisUtilCharArrayMap_$1;
}

@end

void OrgApacheLuceneAnalysisUtilCharArrayMap_$1_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap_$1 *self, OrgApacheLuceneAnalysisUtilCharArrayMap *arg$0) {
  OrgApacheLuceneAnalysisUtilCharArraySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(self, arg$0);
}

OrgApacheLuceneAnalysisUtilCharArrayMap_$1 *new_OrgApacheLuceneAnalysisUtilCharArrayMap_$1_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *arg$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_$1, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_, arg$0)
}

OrgApacheLuceneAnalysisUtilCharArrayMap_$1 *create_OrgApacheLuceneAnalysisUtilCharArrayMap_$1_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *arg$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArrayMap_$1, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_, arg$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharArrayMap_$1)
