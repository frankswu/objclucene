//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/Token.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/analysis/Token.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl.h"
#include "org/apache/lucene/analysis/tokenattributes/FlagsAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl.h"
#include "org/apache/lucene/analysis/tokenattributes/PayloadAttribute.h"
#include "org/apache/lucene/util/AttributeFactory.h"
#include "org/apache/lucene/util/AttributeImpl.h"
#include "org/apache/lucene/util/AttributeReflector.h"
#include "org/apache/lucene/util/BytesRef.h"

@interface OrgApacheLuceneAnalysisToken () {
 @public
  jint flags_;
  OrgApacheLuceneUtilBytesRef *payload_;
}

- (void)copyToWithoutPayloadCloneWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)target OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisToken, payload_, OrgApacheLuceneUtilBytesRef *)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisToken)

OrgApacheLuceneUtilAttributeFactory *OrgApacheLuceneAnalysisToken_TOKEN_ATTRIBUTE_FACTORY;

@implementation OrgApacheLuceneAnalysisToken

+ (OrgApacheLuceneUtilAttributeFactory *)TOKEN_ATTRIBUTE_FACTORY {
  return OrgApacheLuceneAnalysisToken_TOKEN_ATTRIBUTE_FACTORY;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisToken_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                     withInt:(jint)start
                                     withInt:(jint)end {
  OrgApacheLuceneAnalysisToken_initWithJavaLangCharSequence_withInt_withInt_(self, text, start, end);
  return self;
}

- (jint)getFlags {
  return flags_;
}

- (void)setFlagsWithInt:(jint)flags {
  self->flags_ = flags;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return self->payload_;
}

- (void)setPayloadWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload {
  JreStrongAssign(&self->payload_, payload);
}

- (void)clear {
  [super clear];
  flags_ = 0;
  JreStrongAssign(&payload_, nil);
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) return true;
  if ([obj isKindOfClass:[OrgApacheLuceneAnalysisToken class]]) {
    OrgApacheLuceneAnalysisToken *other = (OrgApacheLuceneAnalysisToken *) cast_chk(obj, [OrgApacheLuceneAnalysisToken class]);
    return (flags_ == ((OrgApacheLuceneAnalysisToken *) nil_chk(other))->flags_ && (payload_ == nil ? other->payload_ == nil : [payload_ isEqual:other->payload_]) && [super isEqual:obj]);
  }
  else return false;
}

- (NSUInteger)hash {
  jint code = ((jint) [super hash]);
  code = code * 31 + flags_;
  if (payload_ != nil) {
    code = code * 31 + ((jint) [payload_ hash]);
  }
  return code;
}

- (OrgApacheLuceneAnalysisToken *)clone {
  OrgApacheLuceneAnalysisToken *t = (OrgApacheLuceneAnalysisToken *) cast_chk([super clone], [OrgApacheLuceneAnalysisToken class]);
  if (payload_ != nil) {
    JreStrongAssign(&((OrgApacheLuceneAnalysisToken *) nil_chk(t))->payload_, [payload_ clone]);
  }
  return t;
}

- (void)reinitWithOrgApacheLuceneAnalysisToken:(OrgApacheLuceneAnalysisToken *)prototype {
  [((OrgApacheLuceneAnalysisToken *) nil_chk(prototype)) copyToWithoutPayloadCloneWithOrgApacheLuceneUtilAttributeImpl:self];
}

- (void)copyToWithoutPayloadCloneWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)target {
  [super copyToWithOrgApacheLuceneUtilAttributeImpl:target];
  [((id<OrgApacheLuceneAnalysisTokenattributesFlagsAttribute>) nil_chk(((id<OrgApacheLuceneAnalysisTokenattributesFlagsAttribute>) cast_check(target, OrgApacheLuceneAnalysisTokenattributesFlagsAttribute_class_())))) setFlagsWithInt:flags_];
  [((id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>) nil_chk(((id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>) cast_check(target, OrgApacheLuceneAnalysisTokenattributesPayloadAttribute_class_())))) setPayloadWithOrgApacheLuceneUtilBytesRef:payload_];
}

- (void)copyToWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)target {
  [super copyToWithOrgApacheLuceneUtilAttributeImpl:target];
  [((id<OrgApacheLuceneAnalysisTokenattributesFlagsAttribute>) nil_chk(((id<OrgApacheLuceneAnalysisTokenattributesFlagsAttribute>) cast_check(target, OrgApacheLuceneAnalysisTokenattributesFlagsAttribute_class_())))) setFlagsWithInt:flags_];
  [((id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>) nil_chk(((id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>) cast_check(target, OrgApacheLuceneAnalysisTokenattributesPayloadAttribute_class_())))) setPayloadWithOrgApacheLuceneUtilBytesRef:(payload_ == nil) ? nil : [((OrgApacheLuceneUtilBytesRef *) nil_chk(payload_)) clone]];
}

- (void)reflectWithWithOrgApacheLuceneUtilAttributeReflector:(id<OrgApacheLuceneUtilAttributeReflector>)reflector {
  [super reflectWithWithOrgApacheLuceneUtilAttributeReflector:reflector];
  [((id<OrgApacheLuceneUtilAttributeReflector>) nil_chk(reflector)) reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesFlagsAttribute_class_() withNSString:@"flags" withId:JavaLangInteger_valueOfWithInt_(flags_)];
  [reflector reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPayloadAttribute_class_() withNSString:@"payload" withId:payload_];
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

- (void)dealloc {
  RELEASE_(payload_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisToken class]) {
    JreStrongAssign(&OrgApacheLuceneAnalysisToken_TOKEN_ATTRIBUTE_FACTORY, OrgApacheLuceneUtilAttributeFactory_getStaticImplementationWithOrgApacheLuceneUtilAttributeFactory_withIOSClass_(JreLoadStatic(OrgApacheLuceneUtilAttributeFactory, DEFAULT_ATTRIBUTE_FACTORY), OrgApacheLuceneAnalysisToken_class_()));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisToken)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Token", NULL, 0x1, NULL, NULL },
    { "initWithJavaLangCharSequence:withInt:withInt:", "Token", NULL, 0x1, NULL, NULL },
    { "getFlags", NULL, "I", 0x1, NULL, NULL },
    { "setFlagsWithInt:", "setFlags", "V", 0x1, NULL, NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "setPayloadWithOrgApacheLuceneUtilBytesRef:", "setPayload", "V", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.apache.lucene.analysis.Token;", 0x1, NULL, NULL },
    { "reinitWithOrgApacheLuceneAnalysisToken:", "reinit", "V", 0x1, NULL, NULL },
    { "copyToWithoutPayloadCloneWithOrgApacheLuceneUtilAttributeImpl:", "copyToWithoutPayloadClone", "V", 0x2, NULL, NULL },
    { "copyToWithOrgApacheLuceneUtilAttributeImpl:", "copyTo", "V", 0x1, NULL, NULL },
    { "reflectWithWithOrgApacheLuceneUtilAttributeReflector:", "reflectWith", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "flags_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "payload_", NULL, 0x2, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "TOKEN_ATTRIBUTE_FACTORY", "TOKEN_ATTRIBUTE_FACTORY", 0x19, "Lorg.apache.lucene.util.AttributeFactory;", &OrgApacheLuceneAnalysisToken_TOKEN_ATTRIBUTE_FACTORY, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisToken = { 2, "Token", "org.apache.lucene.analysis", NULL, 0x1, 14, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisToken;
}

@end

void OrgApacheLuceneAnalysisToken_init(OrgApacheLuceneAnalysisToken *self) {
  OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl_init(self);
}

OrgApacheLuceneAnalysisToken *new_OrgApacheLuceneAnalysisToken_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisToken, init)
}

OrgApacheLuceneAnalysisToken *create_OrgApacheLuceneAnalysisToken_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisToken, init)
}

void OrgApacheLuceneAnalysisToken_initWithJavaLangCharSequence_withInt_withInt_(OrgApacheLuceneAnalysisToken *self, id<JavaLangCharSequence> text, jint start, jint end) {
  OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl_init(self);
  [self appendWithJavaLangCharSequence:text];
  [self setOffsetWithInt:start withInt:end];
}

OrgApacheLuceneAnalysisToken *new_OrgApacheLuceneAnalysisToken_initWithJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> text, jint start, jint end) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisToken, initWithJavaLangCharSequence_withInt_withInt_, text, start, end)
}

OrgApacheLuceneAnalysisToken *create_OrgApacheLuceneAnalysisToken_initWithJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> text, jint start, jint end) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisToken, initWithJavaLangCharSequence_withInt_withInt_, text, start, end)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisToken)
