//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/lang/RuntimeException.h"
#include "java/nio/charset/Charset.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/Tokenizer.h"
#include "org/apache/lucene/analysis/core/LowerCaseFilter.h"
#include "org/apache/lucene/analysis/core/StopFilter.h"
#include "org/apache/lucene/analysis/miscellaneous/SetKeywordMarkerFilter.h"
#include "org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter.h"
#include "org/apache/lucene/analysis/nl/DutchAnalyzer.h"
#include "org/apache/lucene/analysis/snowball/SnowballFilter.h"
#include "org/apache/lucene/analysis/standard/StandardFilter.h"
#include "org/apache/lucene/analysis/standard/StandardTokenizer.h"
#include "org/apache/lucene/analysis/standard/std40/StandardTokenizer40.h"
#include "org/apache/lucene/analysis/util/CharArrayMap.h"
#include "org/apache/lucene/analysis/util/CharArraySet.h"
#include "org/apache/lucene/analysis/util/WordlistLoader.h"
#include "org/apache/lucene/util/CharsRef.h"
#include "org/apache/lucene/util/CharsRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/Version.h"
#include "org/lukhnos/portmobile/charset/StandardCharsets.h"
#include "org/tartarus/snowball/ext/DutchStemmer.h"

@interface OrgApacheLuceneAnalysisNlDutchAnalyzer () {
 @public
  /*!
   @brief Contains the stopwords used with the StopFilter.
   */
  OrgApacheLuceneAnalysisUtilCharArraySet *stoptable_;
  /*!
   @brief Contains words that should be indexed but not stemmed.
   */
  OrgApacheLuceneAnalysisUtilCharArraySet *excltable_;
  OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *stemdict_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisNlDutchAnalyzer, stoptable_, OrgApacheLuceneAnalysisUtilCharArraySet *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisNlDutchAnalyzer, excltable_, OrgApacheLuceneAnalysisUtilCharArraySet *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisNlDutchAnalyzer, stemdict_, OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *)

@interface OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder)

inline OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_get_DEFAULT_STOP_SET();
static OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STOP_SET;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder, DEFAULT_STOP_SET, OrgApacheLuceneAnalysisUtilCharArraySet *)

inline OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_get_DEFAULT_STEM_DICT();
static OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STEM_DICT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder, DEFAULT_STEM_DICT, OrgApacheLuceneAnalysisUtilCharArrayMap *)

__attribute__((unused)) static void OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_init(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder *new_OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder *create_OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder)

NSString *OrgApacheLuceneAnalysisNlDutchAnalyzer_DEFAULT_STOPWORD_FILE = @"dutch_stop.txt";

@implementation OrgApacheLuceneAnalysisNlDutchAnalyzer

+ (NSString *)DEFAULT_STOPWORD_FILE {
  return OrgApacheLuceneAnalysisNlDutchAnalyzer_DEFAULT_STOPWORD_FILE;
}

+ (OrgApacheLuceneAnalysisUtilCharArraySet *)getDefaultStopSet {
  return OrgApacheLuceneAnalysisNlDutchAnalyzer_getDefaultStopSet();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisNlDutchAnalyzer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)stopwords {
  OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_(self, stopwords);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)stopwords
                    withOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)stemExclusionTable {
  OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_(self, stopwords, stemExclusionTable);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)stopwords
                    withOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)stemExclusionTable
                    withOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)stemOverrideDict {
  OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArrayMap_(self, stopwords, stemExclusionTable, stemOverrideDict);
  return self;
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)createComponentsWithNSString:(NSString *)fieldName {
  OrgApacheLuceneAnalysisTokenizer *source;
  if ([((OrgApacheLuceneUtilVersion *) nil_chk([self getVersion])) onOrAfterWithOrgApacheLuceneUtilVersion:JreLoadStatic(OrgApacheLuceneUtilVersion, LUCENE_4_7_0)]) {
    source = create_OrgApacheLuceneAnalysisStandardStandardTokenizer_init();
  }
  else {
    source = create_OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init();
  }
  OrgApacheLuceneAnalysisTokenStream *result = create_OrgApacheLuceneAnalysisStandardStandardFilter_initWithOrgApacheLuceneAnalysisTokenStream_(source);
  result = create_OrgApacheLuceneAnalysisCoreLowerCaseFilter_initWithOrgApacheLuceneAnalysisTokenStream_(result);
  result = create_OrgApacheLuceneAnalysisCoreStopFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(result, stoptable_);
  if (![((OrgApacheLuceneAnalysisUtilCharArraySet *) nil_chk(excltable_)) isEmpty]) result = create_OrgApacheLuceneAnalysisMiscellaneousSetKeywordMarkerFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(result, excltable_);
  if (stemdict_ != nil) result = create_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap_(result, stemdict_);
  result = create_OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_(result, create_OrgTartarusSnowballExtDutchStemmer_init());
  return create_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_(source, result);
}

- (void)dealloc {
  RELEASE_(stoptable_);
  RELEASE_(excltable_);
  RELEASE_(stemdict_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getDefaultStopSet", NULL, "Lorg.apache.lucene.analysis.util.CharArraySet;", 0x9, NULL, NULL },
    { "init", "DutchAnalyzer", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneAnalysisUtilCharArraySet:", "DutchAnalyzer", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneAnalysisUtilCharArraySet:withOrgApacheLuceneAnalysisUtilCharArraySet:", "DutchAnalyzer", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneAnalysisUtilCharArraySet:withOrgApacheLuceneAnalysisUtilCharArraySet:withOrgApacheLuceneAnalysisUtilCharArrayMap:", "DutchAnalyzer", NULL, 0x1, NULL, "(Lorg/apache/lucene/analysis/util/CharArraySet;Lorg/apache/lucene/analysis/util/CharArraySet;Lorg/apache/lucene/analysis/util/CharArrayMap<Ljava/lang/String;>;)V" },
    { "createComponentsWithNSString:", "createComponents", "Lorg.apache.lucene.analysis.Analyzer$TokenStreamComponents;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_STOPWORD_FILE", "DEFAULT_STOPWORD_FILE", 0x19, "Ljava.lang.String;", &OrgApacheLuceneAnalysisNlDutchAnalyzer_DEFAULT_STOPWORD_FILE, NULL, .constantValue.asLong = 0 },
    { "stoptable_", NULL, 0x12, "Lorg.apache.lucene.analysis.util.CharArraySet;", NULL, NULL, .constantValue.asLong = 0 },
    { "excltable_", NULL, 0x2, "Lorg.apache.lucene.analysis.util.CharArraySet;", NULL, NULL, .constantValue.asLong = 0 },
    { "stemdict_", NULL, 0x12, "Lorg.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.analysis.nl.DutchAnalyzer$DefaultSetHolder;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisNlDutchAnalyzer = { 2, "DutchAnalyzer", "org.apache.lucene.analysis.nl", NULL, 0x11, 6, methods, 4, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneAnalysisNlDutchAnalyzer;
}

@end

OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisNlDutchAnalyzer_getDefaultStopSet() {
  OrgApacheLuceneAnalysisNlDutchAnalyzer_initialize();
  return JreLoadStatic(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder, DEFAULT_STOP_SET);
}

void OrgApacheLuceneAnalysisNlDutchAnalyzer_init(OrgApacheLuceneAnalysisNlDutchAnalyzer *self) {
  OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArrayMap_(self, JreLoadStatic(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder, DEFAULT_STOP_SET), JreLoadStatic(OrgApacheLuceneAnalysisUtilCharArraySet, EMPTY_SET), JreLoadStatic(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder, DEFAULT_STEM_DICT));
}

OrgApacheLuceneAnalysisNlDutchAnalyzer *new_OrgApacheLuceneAnalysisNlDutchAnalyzer_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer, init)
}

OrgApacheLuceneAnalysisNlDutchAnalyzer *create_OrgApacheLuceneAnalysisNlDutchAnalyzer_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer, init)
}

void OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisNlDutchAnalyzer *self, OrgApacheLuceneAnalysisUtilCharArraySet *stopwords) {
  OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArrayMap_(self, stopwords, JreLoadStatic(OrgApacheLuceneAnalysisUtilCharArraySet, EMPTY_SET), JreLoadStatic(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder, DEFAULT_STEM_DICT));
}

OrgApacheLuceneAnalysisNlDutchAnalyzer *new_OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisUtilCharArraySet *stopwords) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer, initWithOrgApacheLuceneAnalysisUtilCharArraySet_, stopwords)
}

OrgApacheLuceneAnalysisNlDutchAnalyzer *create_OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisUtilCharArraySet *stopwords) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer, initWithOrgApacheLuceneAnalysisUtilCharArraySet_, stopwords)
}

void OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisNlDutchAnalyzer *self, OrgApacheLuceneAnalysisUtilCharArraySet *stopwords, OrgApacheLuceneAnalysisUtilCharArraySet *stemExclusionTable) {
  OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArrayMap_(self, stopwords, stemExclusionTable, JreLoadStatic(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder, DEFAULT_STEM_DICT));
}

OrgApacheLuceneAnalysisNlDutchAnalyzer *new_OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisUtilCharArraySet *stopwords, OrgApacheLuceneAnalysisUtilCharArraySet *stemExclusionTable) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer, initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_, stopwords, stemExclusionTable)
}

OrgApacheLuceneAnalysisNlDutchAnalyzer *create_OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisUtilCharArraySet *stopwords, OrgApacheLuceneAnalysisUtilCharArraySet *stemExclusionTable) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer, initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_, stopwords, stemExclusionTable)
}

void OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisNlDutchAnalyzer *self, OrgApacheLuceneAnalysisUtilCharArraySet *stopwords, OrgApacheLuceneAnalysisUtilCharArraySet *stemExclusionTable, OrgApacheLuceneAnalysisUtilCharArrayMap *stemOverrideDict) {
  OrgApacheLuceneAnalysisAnalyzer_init(self);
  JreStrongAssign(&self->excltable_, JreLoadStatic(OrgApacheLuceneAnalysisUtilCharArraySet, EMPTY_SET));
  JreStrongAssign(&self->stoptable_, OrgApacheLuceneAnalysisUtilCharArraySet_unmodifiableSetWithOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisUtilCharArraySet_copy__WithJavaUtilSet_(stopwords)));
  JreStrongAssign(&self->excltable_, OrgApacheLuceneAnalysisUtilCharArraySet_unmodifiableSetWithOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisUtilCharArraySet_copy__WithJavaUtilSet_(stemExclusionTable)));
  if ([((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(stemOverrideDict)) isEmpty]) {
    JreStrongAssign(&self->stemdict_, nil);
  }
  else {
    OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder *builder = create_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder_initWithBoolean_(false);
    OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *iter = [((OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *) nil_chk([stemOverrideDict entrySet])) iterator];
    OrgApacheLuceneUtilCharsRefBuilder *spare = create_OrgApacheLuceneUtilCharsRefBuilder_init();
    while ([((OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *) nil_chk(iter)) hasNext]) {
      IOSCharArray *nextKey = [iter nextKey];
      [spare copyCharsWithCharArray:nextKey withInt:0 withInt:((IOSCharArray *) nil_chk(nextKey))->size_];
      [builder addWithJavaLangCharSequence:[spare get] withJavaLangCharSequence:[iter currentValue]];
    }
    @try {
      JreStrongAssign(&self->stemdict_, [builder build]);
    }
    @catch (JavaIoIOException *ex) {
      @throw create_JavaLangRuntimeException_initWithNSString_withNSException_(@"can not build stem dict", ex);
    }
  }
}

OrgApacheLuceneAnalysisNlDutchAnalyzer *new_OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArraySet *stopwords, OrgApacheLuceneAnalysisUtilCharArraySet *stemExclusionTable, OrgApacheLuceneAnalysisUtilCharArrayMap *stemOverrideDict) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer, initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArrayMap_, stopwords, stemExclusionTable, stemOverrideDict)
}

OrgApacheLuceneAnalysisNlDutchAnalyzer *create_OrgApacheLuceneAnalysisNlDutchAnalyzer_initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArraySet *stopwords, OrgApacheLuceneAnalysisUtilCharArraySet *stemExclusionTable, OrgApacheLuceneAnalysisUtilCharArrayMap *stemOverrideDict) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer, initWithOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArraySet_withOrgApacheLuceneAnalysisUtilCharArrayMap_, stopwords, stemExclusionTable, stemOverrideDict)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisNlDutchAnalyzer)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder)

@implementation OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder class]) {
    {
      @try {
        JreStrongAssign(&OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STOP_SET, OrgApacheLuceneAnalysisUtilWordlistLoader_getSnowballWordSetWithJavaIoReader_(OrgApacheLuceneUtilIOUtils_getDecodingReaderWithIOSClass_withNSString_withJavaNioCharsetCharset_(OrgApacheLuceneAnalysisSnowballSnowballFilter_class_(), OrgApacheLuceneAnalysisNlDutchAnalyzer_DEFAULT_STOPWORD_FILE, JreLoadStatic(OrgLukhnosPortmobileCharsetStandardCharsets, UTF_8))));
      }
      @catch (JavaIoIOException *ex) {
        @throw create_JavaLangRuntimeException_initWithNSString_(@"Unable to load default stopword set");
      }
      JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STEM_DICT, new_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(4, false));
      [OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STEM_DICT putWithNSString:@"fiets" withId:@"fiets"];
      [OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STEM_DICT putWithNSString:@"bromfiets" withId:@"bromfiets"];
      [OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STEM_DICT putWithNSString:@"ei" withId:@"eier"];
      [OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STEM_DICT putWithNSString:@"kind" withId:@"kinder"];
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DefaultSetHolder", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_STOP_SET", "DEFAULT_STOP_SET", 0x18, "Lorg.apache.lucene.analysis.util.CharArraySet;", &OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STOP_SET, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_STEM_DICT", "DEFAULT_STEM_DICT", 0x18, "Lorg.apache.lucene.analysis.util.CharArrayMap;", &OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_DEFAULT_STEM_DICT, "Lorg/apache/lucene/analysis/util/CharArrayMap<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder = { 2, "DefaultSetHolder", "org.apache.lucene.analysis.nl", "DutchAnalyzer", 0xa, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder;
}

@end

void OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_init(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder *new_OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder, init)
}

OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder *create_OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisNlDutchAnalyzer_DefaultSetHolder)
