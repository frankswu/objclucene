//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilterFactory.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Map.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/shingle/ShingleFilter.h"
#include "org/apache/lucene/analysis/shingle/ShingleFilterFactory.h"
#include "org/apache/lucene/analysis/util/AbstractAnalysisFactory.h"
#include "org/apache/lucene/analysis/util/TokenFilterFactory.h"

@interface OrgApacheLuceneAnalysisShingleShingleFilterFactory () {
 @public
  jint minShingleSize_;
  jint maxShingleSize_;
  jboolean outputUnigrams_;
  jboolean outputUnigramsIfNoShingles_;
  NSString *tokenSeparator_;
  NSString *fillerToken_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisShingleShingleFilterFactory, tokenSeparator_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisShingleShingleFilterFactory, fillerToken_, NSString *)

@implementation OrgApacheLuceneAnalysisShingleShingleFilterFactory

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)args {
  OrgApacheLuceneAnalysisShingleShingleFilterFactory_initWithJavaUtilMap_(self, args);
  return self;
}

- (OrgApacheLuceneAnalysisShingleShingleFilter *)createWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input {
  OrgApacheLuceneAnalysisShingleShingleFilter *r = create_OrgApacheLuceneAnalysisShingleShingleFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_(input, minShingleSize_, maxShingleSize_);
  [r setOutputUnigramsWithBoolean:outputUnigrams_];
  [r setOutputUnigramsIfNoShinglesWithBoolean:outputUnigramsIfNoShingles_];
  [r setTokenSeparatorWithNSString:tokenSeparator_];
  [r setFillerTokenWithNSString:fillerToken_];
  return r;
}

- (void)dealloc {
  RELEASE_(tokenSeparator_);
  RELEASE_(fillerToken_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilMap:", "ShingleFilterFactory", NULL, 0x1, NULL, "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V" },
    { "createWithOrgApacheLuceneAnalysisTokenStream:", "create", "Lorg.apache.lucene.analysis.shingle.ShingleFilter;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "minShingleSize_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxShingleSize_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "outputUnigrams_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "outputUnigramsIfNoShingles_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "tokenSeparator_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "fillerToken_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisShingleShingleFilterFactory = { 2, "ShingleFilterFactory", "org.apache.lucene.analysis.shingle", NULL, 0x1, 2, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisShingleShingleFilterFactory;
}

@end

void OrgApacheLuceneAnalysisShingleShingleFilterFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisShingleShingleFilterFactory *self, id<JavaUtilMap> args) {
  OrgApacheLuceneAnalysisUtilTokenFilterFactory_initWithJavaUtilMap_(self, args);
  self->maxShingleSize_ = [self getIntWithJavaUtilMap:args withNSString:@"maxShingleSize" withInt:OrgApacheLuceneAnalysisShingleShingleFilter_DEFAULT_MAX_SHINGLE_SIZE];
  if (self->maxShingleSize_ < 2) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"Invalid maxShingleSize (", self->maxShingleSize_, @") - must be at least 2"));
  }
  self->minShingleSize_ = [self getIntWithJavaUtilMap:args withNSString:@"minShingleSize" withInt:OrgApacheLuceneAnalysisShingleShingleFilter_DEFAULT_MIN_SHINGLE_SIZE];
  if (self->minShingleSize_ < 2) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"Invalid minShingleSize (", self->minShingleSize_, @") - must be at least 2"));
  }
  if (self->minShingleSize_ > self->maxShingleSize_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$IC", @"Invalid minShingleSize (", self->minShingleSize_, @") - must be no greater than maxShingleSize (", self->maxShingleSize_, ')'));
  }
  self->outputUnigrams_ = [self getBooleanWithJavaUtilMap:args withNSString:@"outputUnigrams" withBoolean:true];
  self->outputUnigramsIfNoShingles_ = [self getBooleanWithJavaUtilMap:args withNSString:@"outputUnigramsIfNoShingles" withBoolean:false];
  JreStrongAssign(&self->tokenSeparator_, [self getWithJavaUtilMap:args withNSString:@"tokenSeparator" withNSString:OrgApacheLuceneAnalysisShingleShingleFilter_DEFAULT_TOKEN_SEPARATOR]);
  JreStrongAssign(&self->fillerToken_, [self getWithJavaUtilMap:args withNSString:@"fillerToken" withNSString:OrgApacheLuceneAnalysisShingleShingleFilter_DEFAULT_FILLER_TOKEN]);
  if (![((id<JavaUtilMap>) nil_chk(args)) isEmpty]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Unknown parameters: ", args));
  }
}

OrgApacheLuceneAnalysisShingleShingleFilterFactory *new_OrgApacheLuceneAnalysisShingleShingleFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisShingleShingleFilterFactory, initWithJavaUtilMap_, args)
}

OrgApacheLuceneAnalysisShingleShingleFilterFactory *create_OrgApacheLuceneAnalysisShingleShingleFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisShingleShingleFilterFactory, initWithJavaUtilMap_, args)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisShingleShingleFilterFactory)
