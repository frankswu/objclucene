//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/pt/RSLPStemmerBase.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation OrgApacheLuceneAnalysisPtRSLPStemmerBase

- (instancetype)init {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.analysis.pt.RSLPStemmerBase$Rule;", "Lorg.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSetExceptions;", "Lorg.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSuffixExceptions;", "Lorg.apache.lucene.analysis.pt.RSLPStemmerBase$Step;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPtRSLPStemmerBase = { 2, "RSLPStemmerBase", "org.apache.lucene.analysis.pt", NULL, 0x401, 1, methods, 0, NULL, 0, NULL, 4, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneAnalysisPtRSLPStemmerBase;
}

@end

void OrgApacheLuceneAnalysisPtRSLPStemmerBase_init(OrgApacheLuceneAnalysisPtRSLPStemmerBase *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPtRSLPStemmerBase)

@implementation OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule

- (instancetype)init {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule = { 2, "Rule", "org.apache.lucene.analysis.pt", "RSLPStemmerBase", 0xc, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule;
}

@end

void OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule_init(OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule *new_OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule_init() {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule *self = [OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule alloc];
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPtRSLPStemmerBase_Rule)

@implementation OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions

- (instancetype)init {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions = { 2, "RuleWithSetExceptions", "org.apache.lucene.analysis.pt", "RSLPStemmerBase", 0xc, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions;
}

@end

void OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions_init(OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions *new_OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions_init() {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions *self = [OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions alloc];
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSetExceptions)

@implementation OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions

- (instancetype)init {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions = { 2, "RuleWithSuffixExceptions", "org.apache.lucene.analysis.pt", "RSLPStemmerBase", 0xc, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions;
}

@end

void OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions_init(OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions *new_OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions_init() {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions *self = [OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions alloc];
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPtRSLPStemmerBase_RuleWithSuffixExceptions)

@implementation OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step

- (instancetype)init {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step = { 2, "Step", "org.apache.lucene.analysis.pt", "RSLPStemmerBase", 0xc, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step;
}

@end

void OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step_init(OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *new_OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step_init() {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *self = [OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step alloc];
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step)
