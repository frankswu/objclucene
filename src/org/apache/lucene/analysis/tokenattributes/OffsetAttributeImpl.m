//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/tokenattributes/OffsetAttributeImpl.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttributeImpl.h"
#include "org/apache/lucene/util/AttributeImpl.h"
#include "org/apache/lucene/util/AttributeReflector.h"

@interface OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl () {
 @public
  jint startOffset_;
  jint endOffset_;
}

@end

@implementation OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)startOffset {
  return startOffset_;
}

- (void)setOffsetWithInt:(jint)startOffset
                 withInt:(jint)endOffset {
  if (startOffset < 0 || endOffset < startOffset) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"startOffset must be non-negative, and endOffset must be >= startOffset, startOffset=", startOffset, @",endOffset=", endOffset));
  }
  self->startOffset_ = startOffset;
  self->endOffset_ = endOffset;
}

- (jint)endOffset {
  return endOffset_;
}

- (void)clear {
  startOffset_ = 0;
  endOffset_ = 0;
}

- (jboolean)isEqual:(id)other {
  if (other == self) {
    return true;
  }
  if ([other isKindOfClass:[OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl class]]) {
    OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *o = (OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *) cast_chk(other, [OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl class]);
    return ((OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *) nil_chk(o))->startOffset_ == startOffset_ && o->endOffset_ == endOffset_;
  }
  return false;
}

- (NSUInteger)hash {
  jint code = startOffset_;
  code = code * 31 + endOffset_;
  return code;
}

- (void)copyToWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)target {
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> t = (id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) cast_check(target, OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_());
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(t)) setOffsetWithInt:startOffset_ withInt:endOffset_];
}

- (void)reflectWithWithOrgApacheLuceneUtilAttributeReflector:(id<OrgApacheLuceneUtilAttributeReflector>)reflector {
  [((id<OrgApacheLuceneUtilAttributeReflector>) nil_chk(reflector)) reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_() withNSString:@"startOffset" withId:JavaLangInteger_valueOfWithInt_(startOffset_)];
  [reflector reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_() withNSString:@"endOffset" withId:JavaLangInteger_valueOfWithInt_(endOffset_)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "OffsetAttributeImpl", NULL, 0x1, NULL, NULL },
    { "startOffset", NULL, "I", 0x1, NULL, NULL },
    { "setOffsetWithInt:withInt:", "setOffset", "V", 0x1, NULL, NULL },
    { "endOffset", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "copyToWithOrgApacheLuceneUtilAttributeImpl:", "copyTo", "V", 0x1, NULL, NULL },
    { "reflectWithWithOrgApacheLuceneUtilAttributeReflector:", "reflectWith", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "startOffset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "endOffset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl = { 2, "OffsetAttributeImpl", "org.apache.lucene.analysis.tokenattributes", NULL, 0x1, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl;
}

@end

void OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl_init(OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *self) {
  OrgApacheLuceneUtilAttributeImpl_init(self);
}

OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *new_OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl, init)
}

OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *create_OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl)
