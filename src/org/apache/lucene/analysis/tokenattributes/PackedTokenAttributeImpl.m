//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionLengthAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/TypeAttribute.h"
#include "org/apache/lucene/util/AttributeImpl.h"
#include "org/apache/lucene/util/AttributeReflector.h"

@interface OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl () {
 @public
  jint startOffset_, endOffset_;
  NSString *type_;
  jint positionIncrement_;
  jint positionLength_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl, type_, NSString *)

@implementation OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setPositionIncrementWithInt:(jint)positionIncrement {
  if (positionIncrement < 0) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Increment must be zero or greater: ", positionIncrement)) autorelease];
  self->positionIncrement_ = positionIncrement;
}

- (jint)getPositionIncrement {
  return positionIncrement_;
}

- (void)setPositionLengthWithInt:(jint)positionLength {
  self->positionLength_ = positionLength;
}

- (jint)getPositionLength {
  return positionLength_;
}

- (jint)startOffset {
  return startOffset_;
}

- (jint)endOffset {
  return endOffset_;
}

- (void)setOffsetWithInt:(jint)startOffset
                 withInt:(jint)endOffset {
  if (startOffset < 0 || endOffset < startOffset) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"startOffset must be non-negative, and endOffset must be >= startOffset, startOffset=", startOffset, @",endOffset=", endOffset)) autorelease];
  }
  self->startOffset_ = startOffset;
  self->endOffset_ = endOffset;
}

- (NSString *)type {
  return type_;
}

- (void)setTypeWithNSString:(NSString *)type {
  JreStrongAssign(&self->type_, type);
}

- (void)clear {
  [super clear];
  positionIncrement_ = positionLength_ = 1;
  startOffset_ = endOffset_ = 0;
  JreStrongAssign(&type_, OrgApacheLuceneAnalysisTokenattributesTypeAttribute_DEFAULT_TYPE_);
}

- (OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *)clone {
  return (OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *) check_class_cast([super clone], [OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl class]);
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) return true;
  if ([obj isKindOfClass:[OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl class]]) {
    OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *other = (OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *) check_class_cast(obj, [OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl class]);
    return (startOffset_ == ((OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *) nil_chk(other))->startOffset_ && endOffset_ == other->endOffset_ && positionIncrement_ == other->positionIncrement_ && positionLength_ == other->positionLength_ && (type_ == nil ? other->type_ == nil : [type_ isEqual:other->type_]) && [super isEqual:obj]);
  }
  else return false;
}

- (NSUInteger)hash {
  jint code = ((jint) [super hash]);
  code = code * 31 + startOffset_;
  code = code * 31 + endOffset_;
  code = code * 31 + positionIncrement_;
  code = code * 31 + positionLength_;
  if (type_ != nil) code = code * 31 + ((jint) [type_ hash]);
  return code;
}

- (void)copyToWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)target {
  if ([target isKindOfClass:[OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl class]]) {
    OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *to = (OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *) check_class_cast(target, [OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl class]);
    [((OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *) nil_chk(to)) copyBufferWithCharArray:[self buffer] withInt:0 withInt:[self length]];
    to->positionIncrement_ = positionIncrement_;
    to->positionLength_ = positionLength_;
    to->startOffset_ = startOffset_;
    to->endOffset_ = endOffset_;
    JreStrongAssign(&to->type_, type_);
  }
  else {
    [super copyToWithOrgApacheLuceneUtilAttributeImpl:target];
    [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) check_protocol_cast(target, OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_())))) setOffsetWithInt:startOffset_ withInt:endOffset_];
    [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) check_protocol_cast(target, OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_())))) setPositionIncrementWithInt:positionIncrement_];
    [((id<OrgApacheLuceneAnalysisTokenattributesPositionLengthAttribute>) nil_chk(((id<OrgApacheLuceneAnalysisTokenattributesPositionLengthAttribute>) check_protocol_cast(target, OrgApacheLuceneAnalysisTokenattributesPositionLengthAttribute_class_())))) setPositionLengthWithInt:positionLength_];
    [((id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>) nil_chk(((id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>) check_protocol_cast(target, OrgApacheLuceneAnalysisTokenattributesTypeAttribute_class_())))) setTypeWithNSString:type_];
  }
}

- (void)reflectWithWithOrgApacheLuceneUtilAttributeReflector:(id<OrgApacheLuceneUtilAttributeReflector>)reflector {
  [super reflectWithWithOrgApacheLuceneUtilAttributeReflector:reflector];
  [((id<OrgApacheLuceneUtilAttributeReflector>) nil_chk(reflector)) reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_() withNSString:@"startOffset" withId:JavaLangInteger_valueOfWithInt_(startOffset_)];
  [reflector reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_() withNSString:@"endOffset" withId:JavaLangInteger_valueOfWithInt_(endOffset_)];
  [reflector reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_() withNSString:@"positionIncrement" withId:JavaLangInteger_valueOfWithInt_(positionIncrement_)];
  [reflector reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionLengthAttribute_class_() withNSString:@"positionLength" withId:JavaLangInteger_valueOfWithInt_(positionLength_)];
  [reflector reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesTypeAttribute_class_() withNSString:@"type" withId:type_];
}

- (void)dealloc {
  RELEASE_(type_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PackedTokenAttributeImpl", NULL, 0x1, NULL, NULL },
    { "setPositionIncrementWithInt:", "setPositionIncrement", "V", 0x1, NULL, NULL },
    { "getPositionIncrement", NULL, "I", 0x1, NULL, NULL },
    { "setPositionLengthWithInt:", "setPositionLength", "V", 0x1, NULL, NULL },
    { "getPositionLength", NULL, "I", 0x1, NULL, NULL },
    { "startOffset", NULL, "I", 0x11, NULL, NULL },
    { "endOffset", NULL, "I", 0x11, NULL, NULL },
    { "setOffsetWithInt:withInt:", "setOffset", "V", 0x1, NULL, NULL },
    { "type", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "setTypeWithNSString:", "setType", "V", 0x11, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.apache.lucene.analysis.tokenattributes.PackedTokenAttributeImpl;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "copyToWithOrgApacheLuceneUtilAttributeImpl:", "copyTo", "V", 0x1, NULL, NULL },
    { "reflectWithWithOrgApacheLuceneUtilAttributeReflector:", "reflectWith", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "startOffset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "endOffset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "type_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "positionIncrement_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "positionLength_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl = { 2, "PackedTokenAttributeImpl", "org.apache.lucene.analysis.tokenattributes", NULL, 0x1, 16, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl;
}

@end

void OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl_init(OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *self) {
  OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl_init(self);
  JreStrongAssign(&self->type_, OrgApacheLuceneAnalysisTokenattributesTypeAttribute_DEFAULT_TYPE_);
  self->positionIncrement_ = 1;
  self->positionLength_ = 1;
}

OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *new_OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl_init() {
  OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl *self = [OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl alloc];
  OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisTokenattributesPackedTokenAttributeImpl)
