//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/standard/std40/StandardTokenizer40.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/analysis/Tokenizer.h"
#include "org/apache/lucene/analysis/standard/StandardAnalyzer.h"
#include "org/apache/lucene/analysis/standard/std40/StandardTokenizer40.h"
#include "org/apache/lucene/analysis/standard/std40/StandardTokenizerImpl40.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/TypeAttribute.h"
#include "org/apache/lucene/util/AttributeFactory.h"
#include "org/apache/lucene/util/AttributeSource.h"

@interface OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 () {
 @public
  /*!
   @brief A private instance of the JFlex-constructed scanner
   */
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *scanner_;
  jint skippedPositions_;
  jint maxTokenLength_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute> posIncrAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute> typeAtt_;
}

- (void)init__ OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40, scanner_, OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40, offsetAtt_, id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40, posIncrAtt_, id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40, typeAtt_, id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>)

__attribute__((unused)) static void OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init__(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 *self);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40)

IOSObjectArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_TOKEN_TYPES;

@implementation OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40

+ (jint)ALPHANUM {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_ALPHANUM;
}

+ (jint)APOSTROPHE {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_APOSTROPHE;
}

+ (jint)ACRONYM {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_ACRONYM;
}

+ (jint)COMPANY {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_COMPANY;
}

+ (jint)EMAIL {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_EMAIL;
}

+ (jint)HOST {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_HOST;
}

+ (jint)NUM {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_NUM;
}

+ (jint)CJ {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_CJ;
}

+ (jint)ACRONYM_DEP {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_ACRONYM_DEP;
}

+ (jint)SOUTHEAST_ASIAN {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_SOUTHEAST_ASIAN;
}

+ (jint)IDEOGRAPHIC {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_IDEOGRAPHIC;
}

+ (jint)HIRAGANA {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_HIRAGANA;
}

+ (jint)KATAKANA {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_KATAKANA;
}

+ (jint)HANGUL {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_HANGUL;
}

+ (IOSObjectArray *)TOKEN_TYPES {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_TOKEN_TYPES;
}

- (void)setMaxTokenLengthWithInt:(jint)length {
  self->maxTokenLength_ = length;
}

- (jint)getMaxTokenLength {
  return maxTokenLength_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_initWithOrgApacheLuceneUtilAttributeFactory_(self, factory);
  return self;
}

- (void)init__ {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init__(self);
}

- (jboolean)incrementToken {
  [self clearAttributes];
  skippedPositions_ = 0;
  while (true) {
    jint tokenType = [((OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *) nil_chk(scanner_)) getNextToken];
    if (tokenType == OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_YYEOF) {
      return false;
    }
    if ([((OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *) nil_chk(scanner_)) yylength] <= maxTokenLength_) {
      [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posIncrAtt_)) setPositionIncrementWithInt:skippedPositions_ + 1];
      [((OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *) nil_chk(scanner_)) getTextWithOrgApacheLuceneAnalysisTokenattributesCharTermAttribute:termAtt_];
      jint start = [((OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *) nil_chk(scanner_)) yychar];
      [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt_)) setOffsetWithInt:[self correctOffsetWithInt:start] withInt:[self correctOffsetWithInt:start + [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) length]]];
      if (tokenType == OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_ACRONYM_DEP) {
        [((id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>) nil_chk(typeAtt_)) setTypeWithNSString:IOSObjectArray_Get(nil_chk(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_TOKEN_TYPES), OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_HOST)];
        [termAtt_ setLengthWithInt:[termAtt_ length] - 1];
      }
      else {
        [((id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>) nil_chk(typeAtt_)) setTypeWithNSString:IOSObjectArray_Get(nil_chk(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_TOKEN_TYPES), tokenType)];
      }
      return true;
    }
    else skippedPositions_++;
  }
}

- (void)end {
  [super end];
  jint finalOffset = [self correctOffsetWithInt:[((OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *) nil_chk(scanner_)) yychar] + [((OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *) nil_chk(scanner_)) yylength]];
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt_)) setOffsetWithInt:finalOffset withInt:finalOffset];
  [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posIncrAtt_)) setPositionIncrementWithInt:[posIncrAtt_ getPositionIncrement] + skippedPositions_];
}

- (void)close {
  [super close];
  [((OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *) nil_chk(scanner_)) yyresetWithJavaIoReader:input_];
}

- (void)reset {
  [super reset];
  [((OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *) nil_chk(scanner_)) yyresetWithJavaIoReader:input_];
  skippedPositions_ = 0;
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_APOSTROPHE_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_ACRONYM_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_COMPANY_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_HOST_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_CJ_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_ACRONYM_DEP_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

- (void)dealloc {
  RELEASE_(scanner_);
  RELEASE_(termAtt_);
  RELEASE_(offsetAtt_);
  RELEASE_(posIncrAtt_);
  RELEASE_(typeAtt_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_TOKEN_TYPES, [IOSObjectArray newArrayWithObjects:(id[]){ @"<ALPHANUM>", @"<APOSTROPHE>", @"<ACRONYM>", @"<COMPANY>", @"<EMAIL>", @"<HOST>", @"<NUM>", @"<CJ>", @"<ACRONYM_DEP>", @"<SOUTHEAST_ASIAN>", @"<IDEOGRAPHIC>", @"<HIRAGANA>", @"<KATAKANA>", @"<HANGUL>" } count:14 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setMaxTokenLengthWithInt:", "setMaxTokenLength", "V", 0x1, NULL, NULL },
    { "getMaxTokenLength", NULL, "I", 0x1, NULL, NULL },
    { "init", "StandardTokenizer40", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneUtilAttributeFactory:", "StandardTokenizer40", NULL, 0x1, NULL, NULL },
    { "init__", "init", "V", 0x12, NULL, NULL },
    { "incrementToken", NULL, "Z", 0x11, "Ljava.io.IOException;", NULL },
    { "end", NULL, "V", 0x11, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "reset", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "scanner_", NULL, 0x2, "Lorg.apache.lucene.analysis.standard.std40.StandardTokenizerImpl40;", NULL, NULL, .constantValue.asLong = 0 },
    { "ALPHANUM", "ALPHANUM", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_ALPHANUM },
    { "APOSTROPHE", "APOSTROPHE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_APOSTROPHE },
    { "ACRONYM", "ACRONYM", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_ACRONYM },
    { "COMPANY", "COMPANY", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_COMPANY },
    { "EMAIL", "EMAIL", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_EMAIL },
    { "HOST", "HOST", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_HOST },
    { "NUM", "NUM", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_NUM },
    { "CJ", "CJ", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_CJ },
    { "ACRONYM_DEP", "ACRONYM_DEP", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_ACRONYM_DEP },
    { "SOUTHEAST_ASIAN", "SOUTHEAST_ASIAN", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_SOUTHEAST_ASIAN },
    { "IDEOGRAPHIC", "IDEOGRAPHIC", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_IDEOGRAPHIC },
    { "HIRAGANA", "HIRAGANA", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_HIRAGANA },
    { "KATAKANA", "KATAKANA", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_KATAKANA },
    { "HANGUL", "HANGUL", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_HANGUL },
    { "TOKEN_TYPES", "TOKEN_TYPES", 0x19, "[Ljava.lang.String;", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_TOKEN_TYPES, NULL, .constantValue.asLong = 0 },
    { "skippedPositions_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxTokenLength_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "termAtt_", NULL, 0x12, "Lorg.apache.lucene.analysis.tokenattributes.CharTermAttribute;", NULL, NULL, .constantValue.asLong = 0 },
    { "offsetAtt_", NULL, 0x12, "Lorg.apache.lucene.analysis.tokenattributes.OffsetAttribute;", NULL, NULL, .constantValue.asLong = 0 },
    { "posIncrAtt_", NULL, 0x12, "Lorg.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute;", NULL, NULL, .constantValue.asLong = 0 },
    { "typeAtt_", NULL, 0x12, "Lorg.apache.lucene.analysis.tokenattributes.TypeAttribute;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 = { 2, "StandardTokenizer40", "org.apache.lucene.analysis.standard.std40", NULL, 0x11, 9, methods, 22, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40;
}

@end

void OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 *self) {
  OrgApacheLuceneAnalysisTokenizer_init(self);
  self->maxTokenLength_ = OrgApacheLuceneAnalysisStandardStandardAnalyzer_DEFAULT_MAX_TOKEN_LENGTH;
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->offsetAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
  JreStrongAssign(&self->posIncrAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
  JreStrongAssign(&self->typeAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesTypeAttribute_class_()]);
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init__(self);
}

OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 *new_OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40, init)
}

OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 *create_OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40, init)
}

void OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 *self, OrgApacheLuceneUtilAttributeFactory *factory) {
  OrgApacheLuceneAnalysisTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_(self, factory);
  self->maxTokenLength_ = OrgApacheLuceneAnalysisStandardStandardAnalyzer_DEFAULT_MAX_TOKEN_LENGTH;
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->offsetAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
  JreStrongAssign(&self->posIncrAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
  JreStrongAssign(&self->typeAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesTypeAttribute_class_()]);
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init__(self);
}

OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 *new_OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneUtilAttributeFactory *factory) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40, initWithOrgApacheLuceneUtilAttributeFactory_, factory)
}

OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 *create_OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneUtilAttributeFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40, initWithOrgApacheLuceneUtilAttributeFactory_, factory)
}

void OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40_init__(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40 *self) {
  JreStrongAssignAndConsume(&self->scanner_, new_OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initWithJavaIoReader_(self->input_));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisStandardStd40StandardTokenizer40)
