//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/standard/std40/StandardTokenizerImpl40.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Error.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/apache/lucene/analysis/standard/StandardTokenizer.h"
#include "org/apache/lucene/analysis/standard/std40/StandardTokenizerImpl40.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"

#define OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_BUFFERSIZE 4096
#define OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_UNKNOWN_ERROR 0
#define OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_NO_MATCH 1
#define OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_PUSHBACK_2BIG 2

@interface OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 () {
 @public
  JavaIoReader *zzReader_;
  jint zzState_;
  jint zzLexicalState_;
  IOSCharArray *zzBuffer_;
  jint zzMarkedPos_;
  jint zzCurrentPos_;
  jint zzStartRead_;
  jint zzEndRead_;
  jint yyline_;
  jint yychar_;
  jint yycolumn_;
  jboolean zzAtBOL_;
  jboolean zzAtEOF_;
  jboolean zzEOFDone_;
}

+ (IOSIntArray *)zzUnpackAction;

+ (jint)zzUnpackActionWithNSString:(NSString *)packed
                           withInt:(jint)offset
                      withIntArray:(IOSIntArray *)result;

+ (IOSIntArray *)zzUnpackRowMap;

+ (jint)zzUnpackRowMapWithNSString:(NSString *)packed
                           withInt:(jint)offset
                      withIntArray:(IOSIntArray *)result;

+ (IOSIntArray *)zzUnpackTrans;

+ (jint)zzUnpackTransWithNSString:(NSString *)packed
                          withInt:(jint)offset
                     withIntArray:(IOSIntArray *)result;

+ (IOSIntArray *)zzUnpackAttribute;

+ (jint)zzUnpackAttributeWithNSString:(NSString *)packed
                              withInt:(jint)offset
                         withIntArray:(IOSIntArray *)result;

+ (IOSCharArray *)zzUnpackCMapWithNSString:(NSString *)packed;

- (jboolean)zzRefill;

- (void)zzScanErrorWithInt:(jint)errorCode;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, zzReader_, JavaIoReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, zzBuffer_, IOSCharArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_BUFFERSIZE, jint)

static IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_LEXSTATE_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_LEXSTATE_, IOSIntArray *)

static NSString *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_CMAP_PACKED_ = @"'\x00\x01\xc2\x82\x04\x00\x01\xc2\x81\x01\x00\x01\xc2\x82\x01\x00\n~\x01\xc2\x80\x01\xc2\x81\x05\x00\x1a|\x04\x00\x01\xc2\x83\x01\x00\x1a|/\x00\x01|\x02\x00\x01}\x07\x00\x01|\x01\x00\x01\xc2\x80\x02\x00\x01|\x05\x00\x17|\x01\x00\x1f|\x01\x00\u01ca|\x04\x00\x0c|\x0e\x00\x05|\x07\x00\x01|\x01\x00\x01|\x11\x00p}\x05|\x01\x00\x02|\x02\x00\x04|\x01\xc2\x81\x07\x00\x01|\x01\xc2\x80\x03|\x01\x00\x01|\x01\x00\x14|\x01\x00S|\x01\x00\xc2\x8b|\x01\x00\x07}\xc2\x9e|\t\x00&|\x02\x00\x01|\x07\x00'|\x01\x00\x01\xc2\x81\x07\x00-}\x01\x00\x01}\x01\x00\x02}\x01\x00\x02}\x01\x00\x01}\x08\x00\x1b|\x05\x00\x04|\x01\xc2\x80\x0b\x00\x05}\x07\x00\x02\xc2\x81\x02\x00\x0b}\x05\x00+|\x15}\n~\x01\x00\x01~\x01\xc2\x81\x01\x00\x02|\x01}c|\x01\x00\x01|\x07}\x01}\x01\x00\x06}\x02|\x02}\x01\x00\x04}\x02|\n~\x03|\x02\x00\x01|\x0f\x00\x01}\x01|\x01}\x1e|\x1b}\x02\x00Y|\x0b}\x01|\x0e\x00\n~!|\t}\x02|\x02\x00\x01\xc2\x81\x01\x00\x01|\x05\x00\x16|\x04}\x01|\t}\x01|\x03}\x01|\x05}\x12\x00\x19|\x03}D\x00\x01|\x01\x00\x0b|7\x00\x1b}\x01\x00\x04}6|\x03}\x01|\x12}\x01|\x07}\n|\x02}\x02\x00\n~\x01\x00\x07|\x01\x00\x07|\x01\x00\x03}\x01\x00\x08|\x02\x00\x02|\x02\x00\x16|\x01\x00\x07|\x01\x00\x01|\x03\x00\x04|\x02\x00\x01}\x01|\x07}\x02\x00\x02}\x02\x00\x03}\x01|\x08\x00\x01}\x04\x00\x02|\x01\x00\x03|\x02}\x02\x00\n~\x02|\x0f\x00\x03}\x01\x00\x06|\x04\x00\x02|\x02\x00\x16|\x01\x00\x07|\x01\x00\x02|\x01\x00\x02|\x01\x00\x02|\x02\x00\x01}\x01\x00\x05}\x04\x00\x02}\x02\x00\x03}\x03\x00\x01}\x07\x00\x04|\x01\x00\x01|\x07\x00\n~\x02}\x03|\x01}\x0b\x00\x03}\x01\x00\t|\x01\x00\x03|\x01\x00\x16|\x01\x00\x07|\x01\x00\x02|\x01\x00\x05|\x02\x00\x01}\x01|\x08}\x01\x00\x03}\x01\x00\x03}\x02\x00\x01|\x0f\x00\x02|\x02}\x02\x00\n~\x11\x00\x03}\x01\x00\x08|\x02\x00\x02|\x02\x00\x16|\x01\x00\x07|\x01\x00\x02|\x01\x00\x05|\x02\x00\x01}\x01|\x07}\x02\x00\x02}\x02\x00\x03}\x08\x00\x02}\x04\x00\x02|\x01\x00\x03|\x02}\x02\x00\n~\x01\x00\x01|\x10\x00\x01}\x01|\x01\x00\x06|\x03\x00\x03|\x01\x00\x04|\x03\x00\x02|\x01\x00\x01|\x01\x00\x02|\x03\x00\x02|\x03\x00\x03|\x03\x00\x0c|\x04\x00\x05}\x03\x00\x03}\x01\x00\x04}\x02\x00\x01|\x06\x00\x01}\x0e\x00\n~\x11\x00\x03}\x01\x00\x08|\x01\x00\x03|\x01\x00\x17|\x01\x00\n|\x01\x00\x05|\x03\x00\x01|\x07}\x01\x00\x03}\x01\x00\x04}\x07\x00\x02}\x01\x00\x02|\x06\x00\x02|\x02}\x02\x00\n~\x12\x00\x02}\x01\x00\x08|\x01\x00\x03|\x01\x00\x17|\x01\x00\n|\x01\x00\x05|\x02\x00\x01}\x01|\x07}\x01\x00\x03}\x01\x00\x04}\x07\x00\x02}\x07\x00\x01|\x01\x00\x02|\x02}\x02\x00\n~\x01\x00\x02|\x0f\x00\x02}\x01\x00\x08|\x01\x00\x03|\x01\x00)|\x02\x00\x01|\x07}\x01\x00\x03}\x01\x00\x04}\x01|\x08\x00\x01}\x08\x00\x02|\x02}\x02\x00\n~\n\x00\x06|\x02\x00\x02}\x01\x00\x12|\x03\x00\x18|\x01\x00\t|\x01\x00\x01|\x02\x00\x07|\x03\x00\x01}\x04\x00\x06}\x01\x00\x01}\x01\x00\x08}\x12\x00\x02}\x0d\x00""0\xc2\x84\x01\xc2\x85\x02\xc2\x84\x07\xc2\x85\x05\x00\x07\xc2\x84\x08\xc2\x85\x01\x00\n~'\x00\x02\xc2\x84\x01\x00\x01\xc2\x84\x02\x00\x02\xc2\x84\x01\x00\x01\xc2\x84\x02\x00\x01\xc2\x84\x06\x00\x04\xc2\x84\x01\x00\x07\xc2\x84\x01\x00\x03\xc2\x84\x01\x00\x01\xc2\x84\x01\x00\x01\xc2\x84\x02\x00\x02\xc2\x84\x01\x00\x04\xc2\x84\x01\xc2\x85\x02\xc2\x84\x06\xc2\x85\x01\x00\x02\xc2\x85\x01\xc2\x84\x02\x00\x05\xc2\x84\x01\x00\x01\xc2\x84\x01\x00\x06\xc2\x85\x02\x00\n~\x02\x00\x04\xc2\x84 \x00\x01|\x17\x00\x02}\x06\x00\n~\x0b\x00\x01}\x01\x00\x01}\x01\x00\x01}\x04\x00\x02}\x08|\x01\x00$|\x04\x00\x14}\x01\x00\x02}\x05|\x0b}\x01\x00$}\t\x00\x01}9\x00+\xc2\x84\x14\xc2\x85\x01\xc2\x84\n~\x06\x00\x06\xc2\x84\x04\xc2\x85\x04\xc2\x84\x03\xc2\x85\x01\xc2\x84\x03\xc2\x85\x02\xc2\x84\x07\xc2\x85\x03\xc2\x84\x04\xc2\x85\x0d\xc2\x84\x0c\xc2\x85\x01\xc2\x84\x01\xc2\x85\n~\x04\xc2\x85\x02\xc2\x84&|\x01\x00\x01|\x05\x00\x01|\x02\x00+|\x01\x00\x04|\u0100\xc2\x88I|\x01\x00\x04|\x02\x00\x07|\x01\x00\x01|\x01\x00\x04|\x02\x00)|\x01\x00\x04|\x02\x00!|\x01\x00\x04|\x02\x00\x07|\x01\x00\x01|\x01\x00\x04|\x02\x00\x0f|\x01\x00""9|\x01\x00\x04|\x02\x00""C|\x02\x00\x03} \x00\x10|\x10\x00U|\x0c\x00\u026c|\x02\x00\x11|\x01\x00\x1a|\x05\x00K|\x03\x00\x03|\x0f\x00\x0d|\x01\x00\x04|\x03}\x0b\x00\x12|\x03}\x0b\x00\x12|\x02}\x0c\x00\x0d|\x01\x00\x03|\x01\x00\x02}\x0c\x00""4\xc2\x84 \xc2\x85\x03\x00\x01\xc2\x84\x04\x00\x01\xc2\x84\x01\xc2\x85\x02\x00\n~!\x00\x03}\x02\x00\n~\x06\x00X|\x08\x00)|\x01}\x01|\x05\x00""F|\n\x00\x1d|\x03\x00\x0c}\x04\x00\x0c}\n\x00\n~\x1e\xc2\x84\x02\x00\x05\xc2\x84\x0b\x00,\xc2\x84\x04\x00\x11\xc2\x85\x07\xc2\x84\x02\xc2\x85\x06\x00\n~\x01\xc2\x84\x03\x00\x02\xc2\x84 \x00\x17|\x05}\x04\x00""5\xc2\x84\n\xc2\x85\x01\x00\x1d\xc2\x85\x02\x00\x01}\n~\x06\x00\n~\x06\x00\x0e\xc2\x84R\x00\x05}/|\x11}\x07|\x04\x00\n~\x11\x00\t}\x0c\x00\x03}\x1e|\x0d}\x02|\n~,|\x0e}\x0c\x00$|\x14}\x08\x00\n~\x03\x00\x03|\n~$|R\x00\x03}\x01\x00\x15}\x04|\x01}\x04|\x03}\x02|\t\x00\u00c0|'}\x15\x00\x04}\u0116|\x02\x00\x06|\x02\x00&|\x02\x00\x06|\x02\x00\x08|\x01\x00\x01|\x01\x00\x01|\x01\x00\x01|\x01\x00\x1f|\x02\x00""5|\x01\x00\x07|\x01\x00\x01|\x03\x00\x03|\x01\x00\x07|\x03\x00\x04|\x02\x00\x06|\x04\x00\x0d|\x05\x00\x03|\x01\x00\x07|\x0f\x00\x02}\x02}\x08\x00\x02\xc2\x82\n\x00\x01\xc2\x82\x02\x00\x01\xc2\x80\x02\x00\x05}\x10\x00\x02\xc2\x83\x03\x00\x01\xc2\x81\x0f\x00\x01\xc2\x83\x0b\x00\x05}\x05\x00\x06}\x01\x00\x01|\x0d\x00\x01|\x10\x00\x0d|3\x00!}\x11\x00\x01|\x04\x00\x01|\x02\x00\n|\x01\x00\x01|\x03\x00\x05|\x06\x00\x01|\x01\x00\x01|\x01\x00\x01|\x01\x00\x04|\x01\x00\x0b|\x02\x00\x04|\x05\x00\x05|\x04\x00\x01|\x11\x00)|\u032d\x00""4|\u0716\x00/|\x01\x00/|\x01\x00\xc2\x85|\x06\x00\x04|\x03}\x02|\x0c\x00&|\x01\x00\x01|\x05\x00\x01|\x02\x00""8|\x07\x00\x01|\x0f\x00\x01}\x17|\t\x00\x07|\x01\x00\x07|\x01\x00\x07|\x01\x00\x07|\x01\x00\x07|\x01\x00\x07|\x01\x00\x07|\x01\x00\x07|\x01\x00 }/\x00\x01|P\x00\x1a\xc2\x86\x01\x00Y\xc2\x86\x0c\x00\u00d6\xc2\x86/\x00\x01|\x01\x00\x01\xc2\x86\x19\x00\t\xc2\x86\x04}\x02}\x01\x00\x05\x7f\x02\x00\x03\xc2\x86\x01|\x01|\x04\x00V\xc2\x87\x02\x00\x02}\x02\x7f\x03\xc2\x87[\x7f\x01\x00\x04\x7f\x05\x00)|\x03\x00^\xc2\x88\x11\x00\x1b|5\x00\x10\x7f\x1f\x00""A\x00\x1f\x00Q\x00/\x7f\x01\x00X\x7f\u00a8\x00\u19b6\xc2\x86J\x00\u51cd\xc2\x86""3\x00\u048d|C\x00.|\x02\x00\u010d|\x03\x00\x10|\n~\x02|\x14\x00/|\x04}\x01\x00\n}\x01\x00\x19|\x07\x00\x01}P|\x02}%\x00\t|\x02\x00g|\x02\x00\x04|\x01\x00\x04|\x0c\x00\x0b|M\x00\n|\x01}\x03|\x01}\x04|\x01}\x17|\x05}\x18\x00""4|\x0c\x00\x02}2|\x11}\x0b\x00\n~\x06\x00\x12}\x06|\x03\x00\x01|\x04\x00\n~\x1c|\x08}\x02\x00\x17|\x0d}\x0c\x00\x1d\xc2\x88\x03\x00\x04}/|\x0e}\x0e\x00\x01|\n~&\x00)|\x0e}\t\x00\x03|\x01}\x08|\x02}\x02\x00\n~\x06\x00\x1b\xc2\x84\x01\xc2\x85\x04\x00""0\xc2\x84\x01\xc2\x85\x01\xc2\x84\x03\xc2\x85\x02\xc2\x84\x02\xc2\x85\x05\xc2\x84\x02\xc2\x85\x01\xc2\x84\x01\xc2\x85\x01\xc2\x84\x18\x00\x05\xc2\x84\x0b|\x05}\x02\x00\x03|\x02}\n\x00\x06|\x02\x00\x06|\x02\x00\x06|\t\x00\x07|\x01\x00\x07|\xc2\x91\x00#|\x08}\x01\x00\x02}\x02\x00\n~\x06\x00\u2ba4\xc2\x88\x0c\x00\x17\xc2\x88\x04\x00""1\xc2\x88\x04\x00\x01$\x01 \x01""7\x01""4\x01\x1b\x01\x18\x02\x00\x01\x14\x01\x11\x02\x00\x01\x0f\x01\x0d\x0c\x00\x01\x03\x01\x06\x10\x00\x01n\x07\x00\x01I\x01\x08\x05\x00\x01\x01\x01z\x03\x00\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01t\x01s\x01s\x01s\x01x\x01v\x0f\x00\x01p\u02c1\x00\x01L\u00bf\x00\x01o\x01M\x01\x0e\x03w\x02""2\x01w\x01""2\x02w\x01\x1e\x11w\x02""F\x07O\x01N\x07O\x07""B\x01\x1f\x01""B\x01X\x02""6\x01""5\x01X\x01""6\x01""5\x08X\x02G\x05""C\x02=\x05""C\x01\x12\x08+\x05\x13\x03!\ng\x10!\x03""3\x1a#\x01\"\x02""1\x02l\x01m\x02l\x02m\x02l\x01m\x03""1\x01""0\x02""1\nH\x01V\x01(\x01%\x01H\x06(\x01%\x0b(\x19""1\x07(\nh\x01(\x05\x0b\x03W\x03""A\x01@\x04""A\x02@\x08""A\x01@\x07\x1d\x01\x1c\x02\x1d\x07""A\x0eW\x01""a\x04j\x01\x04\x04i\x01\x04\x05`\x01_\x01`\x03_\x07`\x01_\x13`\x05K\x03`\x06K\x02K\x06J\x05J\x03\\\x02""A\x07[\x1e""A\x04[\x05""A\x05W\x06U\x02W\x01U\x04\x1d\x0b^\ni\x16^\x0d\x0b\x01]\x02\x0b\x01{\x03""b\x01\x0b\x02""b\x05q\x04""b\x04r\x01q\x03r\x01q\x05r\x02""8\x01;\x02""8\x01;\x01""8\x02;\x01""8\x01;\n8\x01;\x04\x05\x01""d\x01""c\x01""e\x01\n\x03u\x01""e\x02u\x01Y\x02Z\x02u\x01\n\x01u\x01\n\x01u\x01\n\x01u\x03\n\x01u\x02\n\x01u\x01\n\x02u\x01\n\x01u\x01\n\x01u\x01\n\x01u\x01\n\x01u\x01\n\x01>\x02:\x01>\x01:\x02>\x04:\x01>\x07:\x01>\x04:\x01>\x04:\x01u\x01\n\x01u\n\x19\x01/\x11\x19\x01/\x03\x1a\x01/\x03\x19\x01/\x01\x19\x02\x02\x02\x19\x01/\x0dT\x04'\x04,\x01""f\x01.\x08""f\x07,\x06u\x04\x15\x01\x17\x1f\x15\x01\x17\x04\x15\x15""E\x01y\tE\x11\x16\x05""E\x01\x07\n-\x05""E\x06""D\x04>\x01?\x01\x16\x05S\nQ\x0fS\x01<\x03""9\x0cP\x01\t\t&\x01*\x05&\x04R\x0b)\x02\x0c\t&\x01*\x19&\x01*\x04\t\x04&\x02*\x02k\x01\x10\x05k*\x10\u1900\x00\u016e\xc2\x86\x02\x00j\xc2\x86&\x00\x07|\x0c\x00\x05|\x05\x00\x01|\x01}\n|\x01\x00\x0d|\x01\x00\x05|\x01\x00\x01|\x01\x00\x02|\x01\x00\x02|\x01\x00l|!\x00\u016b|\x12\x00@|\x02\x00""6|(\x00\x0c|\x04\x00\x10}\x01\xc2\x81\x02\x00\x01\xc2\x80\x01\xc2\x81\x0b\x00\x07}\x0c\x00\x02\xc2\x83\x18\x00\x03\xc2\x83\x01\xc2\x81\x01\x00\x01\xc2\x82\x01\x00\x01\xc2\x81\x01\xc2\x80\x1a\x00\x05|\x01\x00\xc2\x87|\x02\x00\x01}\x07\x00\x01\xc2\x82\x04\x00\x01\xc2\x81\x01\x00\x01\xc2\x82\x01\x00\n~\x01\xc2\x80\x01\xc2\x81\x05\x00\x1a|\x04\x00\x01\xc2\x83\x01\x00\x1a|\x0b\x00""8\x7f\x02}\x1f\xc2\x88\x03\x00\x06\xc2\x88\x02\x00\x06\xc2\x88\x02\x00\x06\xc2\x88\x02\x00\x03\xc2\x88\x1c\x00\x03}\x04\x00";
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_CMAP_PACKED_, NSString *)

static IOSCharArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_CMAP_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_CMAP_, IOSCharArray *)

static IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ACTION_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_ACTION_, IOSIntArray *)

static NSString *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ACTION_PACKED_0_ = @"\x01\x00\x16\x01\x01\x02\x01\x03\x01\x04\x01\x01\x01\x05\x01\x06\x01\x07\x01\x08\x10\x00\x01\x02\x01\x00\x01\x02\n\x00\x01\x03\x11\x00\x01\x02M\x00";
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_ACTION_PACKED_0_, NSString *)

static IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ROWMAP_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_ROWMAP_, IOSIntArray *)

static NSString *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ROWMAP_PACKED_0_ = @"\x00\x00\x00\xc2\x89\x00\u0112\x00\u019b\x00\u0224\x00\u02ad\x00\u0336\x00\u03bf\x00\u0448\x00\u04d1\x00\u055a\x00\u05e3\x00\u066c\x00\u06f5\x00\u077e\x00\u0807\x00\u0890\x00\u0919\x00\u09a2\x00\u0a2b\x00\u0ab4\x00\u0b3d\x00\u0bc6\x00\u0c4f\x00\u0cd8\x00\u0d61\x00\u0dea\x00\u0e73\x00\u0efc\x00\u0f85\x00\u100e\x00\u0112\x00\u019b\x00\u1097\x00\u1120\x00\u0336\x00\u03bf\x00\u0448\x00\u04d1\x00\u11a9\x00\u1232\x00\u12bb\x00\u1344\x00\u077e\x00\u13cd\x00\u1456\x00\u14df\x00\u1568\x00\u15f1\x00\u167a\x00\u1703\x00\u02ad\x00\u178c\x00\u1815\x00\u066c\x00\u189e\x00\u1927\x00\u19b0\x00\u1a39\x00\u1ac2\x00\u1b4b\x00\u1bd4\x00\u1c5d\x00\u1ce6\x00\u1d6f\x00\u1df8\x00\u1e81\x00\u1f0a\x00\u1f93\x00\u201c\x00\u20a5\x00\u212e\x00\u21b7\x00\u2240\x00\u22c9\x00\u2352\x00\u23db\x00\u0dea\x00\u2464\x00\u24ed\x00\u2576\x00\u25ff\x00\u2688\x00\u2711\x00\u279a\x00\u2823\x00\u28ac\x00\u2935\x00\u29be\x00\u2a47\x00\u2ad0\x00\u2b59\x00\u2be2\x00\u2c6b\x00\u2cf4\x00\u2d7d\x00\u2e06\x00\u2e8f\x00\u2f18\x00\u2fa1\x00\u302a\x00\u30b3\x00\u313c\x00\u31c5\x00\u324e\x00\u32d7\x00\u3360\x00\u33e9\x00\u3472\x00\u34fb\x00\u3584\x00\u360d\x00\u3696\x00\u371f\x00\u37a8\x00\u3831\x00\u38ba\x00\u3943\x00\u39cc\x00\u3a55\x00\u3ade\x00\u3b67\x00\u3bf0\x00\u3c79\x00\u3d02\x00\u3d8b\x00\u3e14\x00\u3e9d\x00\u3f26\x00\u3faf\x00\u4038\x00\u40c1\x00\u414a\x00\u41d3\x00\u425c\x00\u42e5\x00\u436e\x00\u43f7\x00\u4480\x00\u4509\x00\u4592\x00\u461b\x00\u46a4\x00\u472d\x00\u47b6\x00\u483f\x00\u48c8\x00\u4951\x00\u49da\x00\u4a63\x00\u4aec\x00\u4b75\x00\u4bfe\x00\u4c87\x00\u4d10\x00\u4d99";
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_ROWMAP_PACKED_0_, NSString *)

static IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_TRANS_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_TRANS_, IOSIntArray *)

static NSString *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_TRANS_PACKED_0_ = @"\x01\x02\x01\x03\x01\x02\x01\x04\x02\x02\x01\x05\x01\x02\x01\x06\x04\x02\x01\x07\x01\x02\x01\x08\x01\x02\x01\t\x02\x02\x01\n\x03\x02\x01\x0b\x02\x02\x01\x0c\x04\x02\x01\x0d\x03\x02\x01\x0e\x0f\x02\x01\x0f\x02\x02\x01\x10""6\x02\x01\x11\x01\x02\x01\x12\x02\x02\x01\x13\x01\x14\x01\x02\x01\x15\x01\x02\x01\x16\x01\x02\x01\x17\x01\x02\x01\x18\x01\x02\x01\x19\x01\x1a\x03\x02\x01\x1b\x02\x1c\x01\x1d\x01\x1e\x01\x1f\xc2\x8b\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x0e\x00\x01\x18\x0d\x00\x01\x18\x10\x00\x01\x18\x01\x00\x01\x18\x19\x00\x01\x18\x04\x00\x01\x18\x08\x00\x02\x18\x0d\x00\x02\x18\x08\x00\x01\x18\x11\x00\x02\x18\x05\x00\x01\x18\x02\x00\x01\x18\x03\x00\x02\x18\x08\x00\x04\x18\x01\x00\x03\x18\x01\x00\x01\x18\x02\x00\x01\x18\x02\x00\x01\x18\x04\x00\x04\x18\x01\x00\x02\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x02\x00\x04\x18\x02\x00\x03\x18\x01\x00\x02\x18\x01\x00\x03\x18\x05\x00\x04\x18\x02\x00\x08\x18\x01\x00\x01\x18\x02\x00\x04\x18\x01\x00\x02\x18\x01\x00\x01\x18\x01\x00\x02\x18\x04\x00\x01\x18\x03\x00\x01\x18\x14\x00\x01\x18\x04\x00\x01\x18\t\x00\x01\x18\x12\x00\x01\x18\x03\x00\x01\x18\x17\x00\x01\x18""3\x00\x01\x18\x14\x00\x01\x18\x03\x00\x04\x18\x01\x00\x01\x18\x01\x00\x01\x19\x02\x00\x01\x18\x01\x00\x02\x18\x02\x00\x02\x18\x02\x00\x03\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x04\x18\x01\x00\x03\x18\x01\x00\x01\x18\x01\x00\x03\x18\x01\x00\x02\x18\x01\x00\x04\x18\x01\x00\x02\x18\x02\x00\x08\x18\x01\x00\x02\x18\x01\x00\t\x18\x01\x00\x08\x18\x01\x00\x0b\x18\x01\x19\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x02\x18\x02\x00\x01\x18\x01\x00\x01\x18\x03\x00\x01\x18\x1b\x00\x01\x18\x0f\x00\x01\x18\x13\x00\x01\x18\x13\x00\x01\x18\x06\x00\x03\x18\x1f\x00\x01\x18\x07\x00\x01\x18\x13\x00\x01\x18\x01\x00\x02\x18\x01\x00\x01\x18\x01\x00\x04\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x02\x18\x01\x00\x03\x18\x01\x00\x02\x18\x01\x00\x04\x18\x01\x00\x03\x18\x01\x00\x0f\x18\x01\x00\x02\x18\x01\x00\x11\x18\x01\x00\x02\x18\x01\x00!\x18\x01\x00\x01\x18\x01\x00\x02\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x1b\x00\x01\x18\x03\x00\x02\x18\n\x00\x02\x18\x0b\x00\x01\x18\x06\x00\x01\x18\x02\x00\x02\x18\x06\x00\x01\x18\x04\x00\x02\x18\x02\x00\x02\x18\x05\x00\x03\x18\x08\x00\x01\x18\x16\x00\x01\x18\x07\x00\x01\x18\x13\x00\x01\x18\x01\x00\x02\x18\x01\x00\x01\x18\x02\x00\x02\x18\x02\x00\x01\x18\x03\x00\x02\x18\x01\x00\x03\x18\x01\x00\x02\x18\x01\x00\x04\x18\x01\x00\x03\x18\x01\x00\x01\x18\x01\x00\x02\x18\x02\x00\t\x18\x01\x00\x02\x18\x01\x00\x01\x18\x01\x00\x02\x18\x01\x00\x0c\x18\x01\x00\x02\x18\x01\x00\x03\x18\x01\x00\x01\x18\x01\x00\x18\x18\x01\x00\x02\x18\x01\x00\x01\x18\x01\x00\x02\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x0f\x00\x01\x18\x16\x00\x02\x18\x13\x00\x01\x19\x01\x18""6\x00\x01\x19&\x00\x01\x19\x17\x00\x04\x18\x02\x00\x02\x18\x0c\x00\x03\x18\x0d\x00\x03\x18\x03\x00\x01\x18\x07\x00\x02\x18\x0b\x00\x01\x18\x0b\x00\x04\x19\x01\x00\x02\x18\t\x00\x01\x18\x1f\x00\x01\x18\x03\x00\x02\x18\n\x00\x02\x18\x01\x00\x03\x18\x07\x00\x01\x18\x06\x00\x02\x18\x01\x00\x02\x18\x06\x00\x01\x18\x04\x00\x02\x18\x02\x00\x02\x18\x05\x00\x03\x18\x08\x00\x01\x18\x0e\x00\x01\x18\x04\x00\x02\x19\x01\x00\x01\x18\x07\x00\x01\x18\x13\x00\x01\x18\x04\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x06\x00\x01\x18\x05\x00\x01\x18\x02\x00\x02\x18\x01\x00\x0f\x18\x02\x00\x01\x18\x0b\x00\x07\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x06\x00\x02\x18\x05\x00\x01\x18\x01\x00\x01\x18\x02\x00\x03\x18\x01\x00\x01\x18\x07\x00\x01\x18\x01\x00\x01\x18\x1d\x00\x01\x18\x0f\x00\x02\x18\x12\x00\x01\x18\x02\x00\x02\x18\x0b\x00\x01\x18\x03\x00\x02\x18\x05\x00\x03\x18\x08\x00\x01\x18\x16\x00\x01\x18\x07\x00\x01\x18\x18\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x03\x00\x01\x18\x07\x00\x01\x18\x19\x00\x10\x18\x05\x00\x03\x18\x03\x00\x01\x18\x03\x00\x02\x18\x02\x00\x02\x18\x04\x00\x01\x18\x08\x00\x01\x18\x04\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18Z\x00\x01\x1e!\x00\x01\x1a\x1d\x00\x01\x1d\x06\x00\x01\x1d\x02\x00\x01\x1d\x03\x00\x02\x1d\x08\x00\x04\x1d\x01\x00\x03\x1d\x01\x00\x01\x1d\x02\x00\x01\x1d\x02\x00\x01\x1d\x04\x00\x04\x1d\x01\x00\x02\x1d\x06\x00\x01\x1d\x02\x00\x04\x1d\x02\x00\x03\x1d\x01\x00\x02\x1d\x01\x00\x03\x1d\x05\x00\x04\x1d\x02\x00\x08\x1d\x04\x00\x04\x1d\x01\x00\x02\x1d\x01\x00\x01\x1d\x01\x00\x02\x1d\x04\x00\x01\x1d\x03\x00\x01\x1d\x0f\x00\x01\x1d\x01\x00\x02\x1d\x01\x00\x01\x1d\x01\x00\x04\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\x01\x00\x02\x1d\x01\x00\x03\x1d\x01\x00\x02\x1d\x01\x00\x04\x1d\x01\x00\x03\x1d\x01\x00\x0f\x1d\x01\x00\x02\x1d\x01\x00\x11\x1d\x01\x00\x02\x1d\x01\x00!\x1d\x01\x00\x01\x1d\x01\x00\x02\x1d\x02\x00\x01\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\x0f\x00\x01\x1d\x01\x00\x02\x1d\x01\x00\x01\x1d\x01\x00\x04\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\x01\x00\x02\x1d\x02\x00\x01\x1d\x02\x00\x02\x1d\x01\x00\x04\x1d\x01\x00\x03\x1d\x01\x00\x0f\x1d\x01\x00\x02\x1d\x01\x00\x11\x1d\x01\x00\x02\x1d\x01\x00!\x1d\x01\x00\x01\x1d\x01\x00\x02\x1d\x02\x00\x01\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\x1b\x00\x01\x1d\x0f\x00\x01\x1d\x13\x00\x01\x1d\x1a\x00\x01\x1d!\x00\x01\x1d\x07\x00\x01\x1d\x13\x00\x01\x1d\x01\x00\x02\x1d\x03\x00\x04\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\x01\x00\x02\x1d\x01\x00\x03\x1d\x01\x00\x02\x1d\x01\x00\x04\x1d\x01\x00\x03\x1d\x01\x00\x08\x1d\x01\x00\x06\x1d\x01\x00\x02\x1d\x01\x00\x11\x1d\x01\x00\x02\x1d\x01\x00!\x1d\x01\x00\x01\x1d\x01\x00\x02\x1d\x02\x00\x01\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\xc2\x88\x00\x01\x1e\x0e\x00\x01 \x01\x00\x01!\x02\x00\x01\"\x01\x00\x01#\x04\x00\x01$\x01\x00\x01%\x01\x00\x01&\x02\x00\x01'\x03\x00\x01(\x02\x00\x01)\x04\x00\x01*\x03\x00\x01+\x0f\x00\x01,\x02\x00\x01-\x11\x00\x01.\x02\x00\x01//\x00\x02\x18\x01""0\x01\x00\x01""1\x01\x00\x01""1\x01""2\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01 \x01\x00\x01!\x02\x00\x01""3\x01\x00\x01""4\x04\x00\x01$\x01\x00\x01%\x01\x00\x01&\x02\x00\x01'\x03\x00\x01""5\x02\x00\x01""6\x04\x00\x01""7\x03\x00\x01""8\x0f\x00\x01,\x02\x00\x01""9\x11\x00\x01:\x02\x00\x01;/\x00\x01\x18\x02\x19\x02\x00\x02<\x01=\x01\x00\x01\x19\x02\x00\x01\x18\x06\x00\x01>\x11\x00\x01?\x02\x00\x01@\x08\x00\x01""A\x12\x00\x01""B\x11\x00\x01""C\x02\x00\x01""D!\x00\x01""E\x0e\x00\x01\x1a\x01\x00\x01\x1a\x03\x00\x01""2\x01\x00\x01\x1a\x04\x00\x01 \x01\x00\x01!\x02\x00\x01""F\x01\x00\x01""4\x04\x00\x01$\x01\x00\x01%\x01\x00\x01&\x02\x00\x01'\x03\x00\x01G\x02\x00\x01H\x04\x00\x01""7\x03\x00\x01I\x0f\x00\x01,\x02\x00\x01J\x11\x00\x01K\x02\x00\x01L!\x00\x01M\x0d\x00\x01\x18\x01N\x01\x19\x01O\x03\x00\x01N\x01\x00\x01N\x02\x00\x01\x18\xc2\x84\x00\x02\x1c\t\x00\x01P\x11\x00\x01Q\x02\x00\x01R\x08\x00\x01S\x12\x00\x01T\x11\x00\x01U\x02\x00\x01V0\x00\x01\x1d\x07\x00\x01\x1d\t\x00\x01W\x11\x00\x01X\x02\x00\x01Y\x08\x00\x01Z\x12\x00\x01[\x11\x00\x01\\\x02\x00\x01]0\x00\x01\x1e\x07\x00\x01\x1e\x04\x00\x01 \x01\x00\x01!\x02\x00\x01^\x01\x00\x01#\x04\x00\x01$\x01\x00\x01%\x01\x00\x01&\x02\x00\x01'\x03\x00\x01_\x02\x00\x01`\x04\x00\x01*\x03\x00\x01""a\x0f\x00\x01,\x02\x00\x01""b\x11\x00\x01""c\x02\x00\x01""d/\x00\x01\x18\x01\x1f\x01""0\x01\x00\x01""1\x01\x00\x01""1\x01""2\x01\x00\x01\x1f\x02\x00\x01\x1f\x07\x00\x01\x18\x04\x00\x01\x18\t\x00\x01\x18\x12\x00\x01\x18\x03\x00\x01\x18\x0b\x00\x01\x18\x02\x00\x01\x18\x08\x00\x01\x18\n\x00\x04\x18%\x00\x01\x18\x14\x00\x01\x18\x03\x00\x04\x18\x01\x00\x01\x18\x01\x00\x01""0\x02\x00\x01\x18\x01\x00\x02\x18\x02\x00\x02\x18\x02\x00\x03\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x04\x18\x01\x00\x03\x18\x01\x00\x01\x18\x01\x00\x03\x18\x01\x00\x02\x18\x01\x00\x04\x18\x01\x00\x02\x18\x02\x00\x08\x18\x01\x00\x02\x18\x01\x00\t\x18\x01\x00\x08\x18\x01\x00\x0b\x18\x01""0\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x02\x18\x02\x00\x01\x18\x01\x00\x01\x18\x03\x00\x01\x18\x0f\x00\x01\x18\x16\x00\x02\x18\x13\x00\x01""0\x01\x18$\x00\x01\x18\x11\x00\x01""0&\x00\x01""0\t\x00\x01\x18\x0d\x00\x04\x18\x02\x00\x02\x18\x0c\x00\x04\x18\x01\x00\x02\x18\t\x00\x03\x18\x03\x00\x01\x18\x01\x00\x01\x18\x04\x00\x03\x18\x05\x00\x04\x18\x02\x00\x02\x18\n\x00\x04""0\x01\x00\x02\x18\x01\x00\x01\x18\x07\x00\x01\x18\x1f\x00\x01\x18\x03\x00\x02\x18\n\x00\x02\x18\x01\x00\x03\x18\x07\x00\x01\x18\x06\x00\x02\x18\x01\x00\x02\x18\x06\x00\x01\x18\x04\x00\x02\x18\x02\x00\x02\x18\x05\x00\x03\x18\x08\x00\x01\x18\x0e\x00\x01\x18\x04\x00\x02""0\x01\x00\x01\x18\x07\x00\x01\x18\x13\x00\x01\x18\x04\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x06\x00\x01\x18\x05\x00\x01\x18\x02\x00\x02\x18\x01\x00\x0f\x18\x02\x00\x01\x18\x0b\x00\x07\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x04\x00\x01\x18\x01\x00\x02\x18\x05\x00\x01\x18\x01\x00\x01\x18\x02\x00\x03\x18\x01\x00\x01\x18\x07\x00\x01\x18\x01\x00\x01\x18\x16\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x03\x00\x01\x18\x07\x00\x01\x18\x19\x00\x10\x18\x05\x00\x03\x18\x03\x00\x01\x18\x03\x00\x02\x18\x02\x00\x02\x18\x04\x00\x05\x18\x04\x00\x01\x18\x04\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18W\x00\x02\x18\x0d\x00\x04\x18""0\x00\x01\x18\x0d\x00\x02\x18\x08\x00\x02\x18\x01\x00\x01\x18\x01\x00\x01\x18\t\x00\x01\x18\t\x00\x02\x18\x06\x00\x01\x18\x02\x00\x04\x18\x03\x00\x01\x18\x02\x00\x02\x18\x01\x00\x03\x18\x05\x00\x01\x18\x01\x00\x02\x18\x02\x00\x02\x18\x01\x00\x04\x18\x05\x00\x01\x18\x01\x00\x02\x18\x1f\x00\x01 \x01\x00\x01!\x02\x00\x01""e\x01\x00\x01#\x04\x00\x01$\x01\x00\x01%\x01\x00\x01&\x02\x00\x01'\x03\x00\x01""f\x02\x00\x01g\x04\x00\x01*\x03\x00\x01h\x0f\x00\x01,\x02\x00\x01i\x11\x00\x01j\x02\x00\x01k/\x00\x01\x18\x02""0\x02\x00\x02l\x01""2\x01\x00\x01""0\x02\x00\x01\x18\x01\x00\x01 \x01\x00\x01!\x02\x00\x01m\x01\x00\x01n\x04\x00\x01$\x01\x00\x01%\x01\x00\x01&\x02\x00\x01'\x03\x00\x01o\x02\x00\x01p\x04\x00\x01q\x03\x00\x01r\x0f\x00\x01,\x02\x00\x01s\x11\x00\x01t\x02\x00\x01u/\x00\x01\x18\x01""1\x07\x00\x01""1\x02\x00\x01\x18\x01\x00\x01 \x01\x00\x01!\x02\x00\x01v\x01\x00\x01#\x04\x00\x01$\x01\x00\x01%\x01\x00\x01&\x02\x00\x01'\x03\x00\x01w\x02\x00\x01x\x04\x00\x01*\x03\x00\x01y\x0f\x00\x01,\x02\x00\x01z\x11\x00\x01{\x02\x00\x01|!\x00\x01M\x0d\x00\x01\x18\x01""2\x01""0\x01O\x03\x00\x01""2\x01\x00\x01""2\x02\x00\x01\x18\x07\x00\x01\x18\x04\x00\x01\x18\t\x00\x01\x18\x12\x00\x01\x18\x03\x00\x01\x18\x0b\x00\x01\x19\x02\x00\x01\x19\x08\x00\x01\x18\n\x00\x04\x19%\x00\x01\x18\x11\x00\x01\x18\x16\x00\x02\x18\x13\x00\x01\x19\x01\x18$\x00\x01\x19\x11\x00\x01\x19&\x00\x01\x19\t\x00\x01\x19\x0d\x00\x04\x18\x02\x00\x02\x18\x0c\x00\x03\x18\x01\x19\x01\x00\x02\x19\t\x00\x03\x18\x03\x00\x01\x18\x01\x00\x01\x19\x04\x00\x01\x19\x02\x18\x05\x00\x04\x19\x02\x00\x01\x18\x01\x19\n\x00\x04\x19\x01\x00\x02\x18\x01\x00\x01\x19\x07\x00\x01\x18\x13\x00\x01\x18\x04\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x06\x00\x01\x18\x05\x00\x01\x18\x02\x00\x02\x18\x01\x00\x0f\x18\x02\x00\x01\x18\x0b\x00\x07\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x04\x00\x01\x19\x01\x00\x02\x18\x05\x00\x01\x18\x01\x00\x01\x18\x02\x00\x03\x18\x01\x00\x01\x18\x07\x00\x01\x18\x01\x00\x01\x18\x16\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x03\x00\x01\x18\x07\x00\x01\x18\x19\x00\x10\x18\x05\x00\x03\x18\x03\x00\x01\x18\x03\x00\x02\x18\x02\x00\x02\x18\x04\x00\x01\x18\x04\x19\x04\x00\x01\x18\x04\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18W\x00\x02\x19\x0d\x00\x04\x19""0\x00\x01\x19\x0d\x00\x02\x19\x08\x00\x02\x19\x01\x00\x01\x19\x01\x00\x01\x19\t\x00\x01\x19\t\x00\x02\x19\x06\x00\x01\x19\x02\x00\x04\x19\x03\x00\x01\x19\x02\x00\x02\x19\x01\x00\x03\x19\x05\x00\x01\x19\x01\x00\x02\x19\x02\x00\x02\x19\x01\x00\x04\x19\x05\x00\x01\x19\x01\x00\x02\x19$\x00\x01}\x01\x00\x01~\x0f\x00\x01\x7f\x02\x00\x01\xc2\x80\x04\x00\x01\xc2\x81\x03\x00\x01\xc2\x82\x12\x00\x01\xc2\x83\x11\x00\x01\xc2\x84\x02\x00\x01\xc2\x85""0\x00\x01<\x01\x19\x06\x00\x01<\x04\x00\x01 \x01\x00\x01!\x02\x00\x01\xc2\x86\x01\x00\x01""4\x04\x00\x01$\x01\x00\x01%\x01\x00\x01&\x02\x00\x01'\x03\x00\x01\xc2\x87\x02\x00\x01\xc2\x88\x04\x00\x01""7\x03\x00\x01\xc2\x89\x0f\x00\x01,\x02\x00\x01\xc2\x8a\x11\x00\x01\xc2\x8b\x02\x00\x01\xc2\x8c!\x00\x01M\x0d\x00\x01\x18\x01=\x01\x19\x01O\x03\x00\x01=\x01\x00\x01=\x02\x00\x01\x18""9\x00\x01\x1a\x02\x00\x01\x1a\x13\x00\x04\x1a\xc2\x89\x00\x01\x1a""B\x00\x01\x1a$\x00\x01\x1a\x01\x00\x02\x1a\x11\x00\x01\x1a\x04\x00\x01\x1a\x07\x00\x04\x1a\x03\x00\x01\x1a\x12\x00\x01\x1av\x00\x01\x1a\xc2\x8d\x00\x04\x1am\x00\x02\x1a\x0d\x00\x04\x1a""0\x00\x01\x1a\x0d\x00\x02\x1a\x08\x00\x02\x1a\x01\x00\x01\x1a\x01\x00\x01\x1a\t\x00\x01\x1a\t\x00\x02\x1a\x06\x00\x01\x1a\x02\x00\x04\x1a\x03\x00\x01\x1a\x02\x00\x02\x1a\x01\x00\x03\x1a\x05\x00\x01\x1a\x01\x00\x02\x1a\x02\x00\x02\x1a\x01\x00\x04\x1a\x05\x00\x01\x1a\x01\x00\x02\x1a\xc2\x8d\x00\x01\x1a \x00\x01\x18\x04\x00\x01\x18\t\x00\x01\x18\x12\x00\x01\x18\x03\x00\x01\x18\x0b\x00\x01N\x02\x00\x01N\x08\x00\x01\x18\n\x00\x04N%\x00\x01\x18\x11\x00\x01\x18\x16\x00\x02\x18\x13\x00\x01\x19\x01\x18$\x00\x01N\x11\x00\x01\x19&\x00\x01\x19\t\x00\x01N\x0d\x00\x04\x18\x02\x00\x02\x18\x0c\x00\x03\x18\x01N\x01\x00\x02N\t\x00\x03\x18\x03\x00\x01\x18\x01\x00\x01N\x04\x00\x01N\x02\x18\x05\x00\x04N\x02\x00\x01\x18\x01N\n\x00\x04\x19\x01\x00\x02\x18\x01\x00\x01N\x07\x00\x01\x18\x13\x00\x01\x18\x04\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x06\x00\x01\x18\x05\x00\x01\x18\x02\x00\x02\x18\x01\x00\x0f\x18\x02\x00\x01\x18\x0b\x00\x07\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x04\x00\x01N\x01\x00\x02\x18\x05\x00\x01\x18\x01\x00\x01\x18\x02\x00\x03\x18\x01\x00\x01\x18\x07\x00\x01\x18\x01\x00\x01\x18\x16\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x03\x00\x01\x18\x07\x00\x01\x18\x19\x00\x10\x18\x05\x00\x03\x18\x03\x00\x01\x18\x03\x00\x02\x18\x02\x00\x02\x18\x04\x00\x01\x18\x04N\x04\x00\x01\x18\x04\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18W\x00\x02N\x0d\x00\x04N0\x00\x01N\x0d\x00\x02N\x08\x00\x02N\x01\x00\x01N\x01\x00\x01N\t\x00\x01N\t\x00\x02N\x06\x00\x01N\x02\x00\x04N\x03\x00\x01N\x02\x00\x02N\x01\x00\x03N\x05\x00\x01N\x01\x00\x02N\x02\x00\x02N\x01\x00\x04N\x05\x00\x01N\x01\x00\x02N\xc2\x8d\x00\x01O\x1f\x00\x01\xc2\x8d\x11\x00\x01\xc2\x8e\x02\x00\x01\xc2\x8f\x08\x00\x01\xc2\x90\x12\x00\x01\xc2\x91\x11\x00\x01\xc2\x92\x02\x00\x01\xc2\x93!\x00\x01M\x0e\x00\x01O\x01\x00\x01O\x03\x00\x01""2\x01\x00\x01O<\x00\x01\x1d\x02\x00\x01\x1d\x13\x00\x04\x1d\xc2\x89\x00\x01\x1d""B\x00\x01\x1d$\x00\x01\x1d\x01\x00\x02\x1d\x11\x00\x01\x1d\x04\x00\x01\x1d\x07\x00\x04\x1d\x03\x00\x01\x1d\x12\x00\x01\x1dv\x00\x01\x1d\xc2\x8d\x00\x04\x1dm\x00\x02\x1d\x0d\x00\x04\x1d""0\x00\x01\x1d\x0d\x00\x02\x1d\x08\x00\x02\x1d\x01\x00\x01\x1d\x01\x00\x01\x1d\t\x00\x01\x1d\t\x00\x02\x1d\x06\x00\x01\x1d\x02\x00\x04\x1d\x03\x00\x01\x1d\x02\x00\x02\x1d\x01\x00\x03\x1d\x05\x00\x01\x1d\x01\x00\x02\x1d\x02\x00\x02\x1d\x01\x00\x04\x1d\x05\x00\x01\x1d\x01\x00\x02\x1dW\x00\x01\x1e\x02\x00\x01\x1e\x13\x00\x04\x1e\xc2\x89\x00\x01\x1e""B\x00\x01\x1e$\x00\x01\x1e\x01\x00\x02\x1e\x11\x00\x01\x1e\x04\x00\x01\x1e\x07\x00\x04\x1e\x03\x00\x01\x1e\x12\x00\x01\x1ev\x00\x01\x1e\xc2\x8d\x00\x04\x1em\x00\x02\x1e\x0d\x00\x04\x1e""0\x00\x01\x1e\x0d\x00\x02\x1e\x08\x00\x02\x1e\x01\x00\x01\x1e\x01\x00\x01\x1e\t\x00\x01\x1e\t\x00\x02\x1e\x06\x00\x01\x1e\x02\x00\x04\x1e\x03\x00\x01\x1e\x02\x00\x02\x1e\x01\x00\x03\x1e\x05\x00\x01\x1e\x01\x00\x02\x1e\x02\x00\x02\x1e\x01\x00\x04\x1e\x05\x00\x01\x1e\x01\x00\x02\x1e%\x00\x01\x18\x04\x00\x01\x18\t\x00\x01\x18\x12\x00\x01\x18\x03\x00\x01\x18\x0b\x00\x01\x1f\x02\x00\x01\x1f\x08\x00\x01\x18\n\x00\x04\x1f%\x00\x01\x18\x11\x00\x01\x18\x16\x00\x02\x18\x13\x00\x01""0\x01\x18$\x00\x01\x1f\x11\x00\x01""0&\x00\x01""0\t\x00\x01\x1f\x0d\x00\x04\x18\x02\x00\x02\x18\x0c\x00\x03\x18\x01\x1f\x01\x00\x02\x1f\t\x00\x03\x18\x03\x00\x01\x18\x01\x00\x01\x1f\x04\x00\x01\x1f\x02\x18\x05\x00\x04\x1f\x02\x00\x01\x18\x01\x1f\n\x00\x04""0\x01\x00\x02\x18\x01\x00\x01\x1f\x07\x00\x01\x18\x13\x00\x01\x18\x04\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x06\x00\x01\x18\x05\x00\x01\x18\x02\x00\x02\x18\x01\x00\x0f\x18\x02\x00\x01\x18\x0b\x00\x07\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x04\x00\x01\x1f\x01\x00\x02\x18\x05\x00\x01\x18\x01\x00\x01\x18\x02\x00\x03\x18\x01\x00\x01\x18\x07\x00\x01\x18\x01\x00\x01\x18\x16\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x03\x00\x01\x18\x07\x00\x01\x18\x19\x00\x10\x18\x05\x00\x03\x18\x03\x00\x01\x18\x03\x00\x02\x18\x02\x00\x02\x18\x04\x00\x01\x18\x04\x1f\x04\x00\x01\x18\x04\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18W\x00\x02\x1f\x0d\x00\x04\x1f""0\x00\x01\x1f\x0d\x00\x02\x1f\x08\x00\x02\x1f\x01\x00\x01\x1f\x01\x00\x01\x1f\t\x00\x01\x1f\t\x00\x02\x1f\x06\x00\x01\x1f\x02\x00\x04\x1f\x03\x00\x01\x1f\x02\x00\x02\x1f\x01\x00\x03\x1f\x05\x00\x01\x1f\x01\x00\x02\x1f\x02\x00\x02\x1f\x01\x00\x04\x1f\x05\x00\x01\x1f\x01\x00\x02\x1f%\x00\x01\x18\x04\x00\x01\x18\t\x00\x01\x18\x12\x00\x01\x18\x03\x00\x01\x18\x0b\x00\x01""0\x02\x00\x01""0\x08\x00\x01\x18\n\x00\x04""0%\x00\x01\x18\x11\x00\x01\x18\x16\x00\x02\x18\x13\x00\x01""0\x01\x18$\x00\x01""0\x11\x00\x01""0&\x00\x01""0\t\x00\x01""0\x0d\x00\x04\x18\x02\x00\x02\x18\x0c\x00\x03\x18\x01""0\x01\x00\x02""0\t\x00\x03\x18\x03\x00\x01\x18\x01\x00\x01""0\x04\x00\x01""0\x02\x18\x05\x00\x04""0\x02\x00\x01\x18\x01""0\n\x00\x04""0\x01\x00\x02\x18\x01\x00\x01""0\x07\x00\x01\x18\x13\x00\x01\x18\x04\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x06\x00\x01\x18\x05\x00\x01\x18\x02\x00\x02\x18\x01\x00\x0f\x18\x02\x00\x01\x18\x0b\x00\x07\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x04\x00\x01""0\x01\x00\x02\x18\x05\x00\x01\x18\x01\x00\x01\x18\x02\x00\x03\x18\x01\x00\x01\x18\x07\x00\x01\x18\x01\x00\x01\x18\x16\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x03\x00\x01\x18\x07\x00\x01\x18\x19\x00\x10\x18\x05\x00\x03\x18\x03\x00\x01\x18\x03\x00\x02\x18\x02\x00\x02\x18\x04\x00\x01\x18\x04""0\x04\x00\x01\x18\x04\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18W\x00\x02""0\x0d\x00\x04""00\x00\x01""0\x0d\x00\x02""0\x08\x00\x02""0\x01\x00\x01""0\x01\x00\x01""0\t\x00\x01""0\t\x00\x02""0\x06\x00\x01""0\x02\x00\x04""0\x03\x00\x01""0\x02\x00\x02""0\x01\x00\x03""0\x05\x00\x01""0\x01\x00\x02""0\x02\x00\x02""0\x01\x00\x04""0\x05\x00\x01""0\x01\x00\x02""0$\x00\x01\xc2\x94\x01\x00\x01\xc2\x95\x0f\x00\x01\xc2\x96\x02\x00\x01\xc2\x97\x04\x00\x01\xc2\x98\x03\x00\x01\xc2\x99\x12\x00\x01\xc2\x9a\x11\x00\x01\xc2\x9b\x02\x00\x01\xc2\x9c""0\x00\x01l\x01""0\x06\x00\x01l\n\x00\x01\x18\x04\x00\x01\x18\t\x00\x01\x18\x12\x00\x01\x18\x03\x00\x01\x18\x0b\x00\x01""1\x02\x00\x01""1\x08\x00\x01\x18\n\x00\x04""1%\x00\x01\x18\x14\x00\x01\x18\x03\x00\x04\x18\x01\x00\x01\x18\x04\x00\x01\x18\x01\x00\x02\x18\x02\x00\x02\x18\x02\x00\x03\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x04\x18\x01\x00\x03\x18\x01\x00\x01\x18\x01\x00\x03\x18\x01\x00\x02\x18\x01\x00\x04\x18\x01\x00\x02\x18\x02\x00\x08\x18\x01\x00\x02\x18\x01\x00\t\x18\x01\x00\x08\x18\x01\x00\x0b\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x02\x18\x02\x00\x01\x18\x01\x00\x01\x18\x03\x00\x01\x18\x0f\x00\x01\x18\x16\x00\x02\x18\x14\x00\x01\x18$\x00\x01""1B\x00\x01""1\x0d\x00\x04\x18\x02\x00\x02\x18\x0c\x00\x03\x18\x01""1\x01\x00\x02""1\t\x00\x03\x18\x03\x00\x01\x18\x01\x00\x01""1\x04\x00\x01""1\x02\x18\x05\x00\x04""1\x02\x00\x01\x18\x01""1\x0f\x00\x02\x18\x01\x00\x01""1\x07\x00\x01\x18\x1f\x00\x01\x18\x03\x00\x02\x18\n\x00\x02\x18\x01\x00\x03\x18\x07\x00\x01\x18\x06\x00\x02\x18\x01\x00\x02\x18\x06\x00\x01\x18\x04\x00\x02\x18\x02\x00\x02\x18\x05\x00\x03\x18\x08\x00\x01\x18\x0e\x00\x01\x18\x07\x00\x01\x18\x07\x00\x01\x18\x13\x00\x01\x18\x04\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x06\x00\x01\x18\x05\x00\x01\x18\x02\x00\x02\x18\x01\x00\x0f\x18\x02\x00\x01\x18\x0b\x00\x07\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x04\x00\x01""1\x01\x00\x02\x18\x05\x00\x01\x18\x01\x00\x01\x18\x02\x00\x03\x18\x01\x00\x01\x18\x07\x00\x01\x18\x01\x00\x01\x18\x16\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x03\x00\x01\x18\x07\x00\x01\x18\x19\x00\x10\x18\x05\x00\x03\x18\x03\x00\x01\x18\x03\x00\x02\x18\x02\x00\x02\x18\x04\x00\x01\x18\x04""1\x04\x00\x01\x18\x04\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18W\x00\x02""1\x0d\x00\x04""10\x00\x01""1\x0d\x00\x02""1\x08\x00\x02""1\x01\x00\x01""1\x01\x00\x01""1\t\x00\x01""1\t\x00\x02""1\x06\x00\x01""1\x02\x00\x04""1\x03\x00\x01""1\x02\x00\x02""1\x01\x00\x03""1\x05\x00\x01""1\x01\x00\x02""1\x02\x00\x02""1\x01\x00\x04""1\x05\x00\x01""1\x01\x00\x02""1%\x00\x01\x18\x04\x00\x01\x18\t\x00\x01\x18\x12\x00\x01\x18\x03\x00\x01\x18\x0b\x00\x01""2\x02\x00\x01""2\x08\x00\x01\x18\n\x00\x04""2%\x00\x01\x18\x11\x00\x01\x18\x16\x00\x02\x18\x13\x00\x01""0\x01\x18$\x00\x01""2\x11\x00\x01""0&\x00\x01""0\t\x00\x01""2\x0d\x00\x04\x18\x02\x00\x02\x18\x0c\x00\x03\x18\x01""2\x01\x00\x02""2\t\x00\x03\x18\x03\x00\x01\x18\x01\x00\x01""2\x04\x00\x01""2\x02\x18\x05\x00\x04""2\x02\x00\x01\x18\x01""2\n\x00\x04""0\x01\x00\x02\x18\x01\x00\x01""2\x07\x00\x01\x18\x13\x00\x01\x18\x04\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x06\x00\x01\x18\x05\x00\x01\x18\x02\x00\x02\x18\x01\x00\x0f\x18\x02\x00\x01\x18\x0b\x00\x07\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x04\x00\x01""2\x01\x00\x02\x18\x05\x00\x01\x18\x01\x00\x01\x18\x02\x00\x03\x18\x01\x00\x01\x18\x07\x00\x01\x18\x01\x00\x01\x18\x16\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x03\x00\x01\x18\x07\x00\x01\x18\x19\x00\x10\x18\x05\x00\x03\x18\x03\x00\x01\x18\x03\x00\x02\x18\x02\x00\x02\x18\x04\x00\x01\x18\x04""2\x04\x00\x01\x18\x04\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18W\x00\x02""2\x0d\x00\x04""20\x00\x01""2\x0d\x00\x02""2\x08\x00\x02""2\x01\x00\x01""2\x01\x00\x01""2\t\x00\x01""2\t\x00\x02""2\x06\x00\x01""2\x02\x00\x04""2\x03\x00\x01""2\x02\x00\x02""2\x01\x00\x03""2\x05\x00\x01""2\x01\x00\x02""2\x02\x00\x02""2\x01\x00\x04""2\x05\x00\x01""2\x01\x00\x02""2W\x00\x01<\x02\x00\x01<\x13\x00\x04<E\x00\x01\x19Z\x00\x01\x19K\x00\x01\x19%\x00\x01<\x11\x00\x01\x19&\x00\x01\x19\t\x00\x01<$\x00\x01<\x01\x00\x02<\x11\x00\x01<\x04\x00\x01<\x07\x00\x04<\x03\x00\x01<\n\x00\x04\x19\x04\x00\x01<\xc2\x85\x00\x02\x19x\x00\x01<\xc2\x8d\x00\x04<m\x00\x02<\x0d\x00\x04<0\x00\x01<\x0d\x00\x02<\x08\x00\x02<\x01\x00\x01<\x01\x00\x01<\t\x00\x01<\t\x00\x02<\x06\x00\x01<\x02\x00\x04<\x03\x00\x01<\x02\x00\x02<\x01\x00\x03<\x05\x00\x01<\x01\x00\x02<\x02\x00\x02<\x01\x00\x04<\x05\x00\x01<\x01\x00\x02<%\x00\x01\x18\x04\x00\x01\x18\t\x00\x01\x18\x12\x00\x01\x18\x03\x00\x01\x18\x0b\x00\x01=\x02\x00\x01=\x08\x00\x01\x18\n\x00\x04=%\x00\x01\x18\x11\x00\x01\x18\x16\x00\x02\x18\x13\x00\x01\x19\x01\x18$\x00\x01=\x11\x00\x01\x19&\x00\x01\x19\t\x00\x01=\x0d\x00\x04\x18\x02\x00\x02\x18\x0c\x00\x03\x18\x01=\x01\x00\x02=\t\x00\x03\x18\x03\x00\x01\x18\x01\x00\x01=\x04\x00\x01=\x02\x18\x05\x00\x04=\x02\x00\x01\x18\x01=\n\x00\x04\x19\x01\x00\x02\x18\x01\x00\x01=\x07\x00\x01\x18\x13\x00\x01\x18\x04\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x06\x00\x01\x18\x05\x00\x01\x18\x02\x00\x02\x18\x01\x00\x0f\x18\x02\x00\x01\x18\x0b\x00\x07\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x02\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18\x04\x00\x01=\x01\x00\x02\x18\x05\x00\x01\x18\x01\x00\x01\x18\x02\x00\x03\x18\x01\x00\x01\x18\x07\x00\x01\x18\x01\x00\x01\x18\x16\x00\x01\x18\x06\x00\x01\x18\x03\x00\x01\x18\x03\x00\x01\x18\x07\x00\x01\x18\x19\x00\x10\x18\x05\x00\x03\x18\x03\x00\x01\x18\x03\x00\x02\x18\x02\x00\x02\x18\x04\x00\x01\x18\x04=\x04\x00\x01\x18\x04\x00\x01\x18\x02\x00\x01\x18\x04\x00\x01\x18\x01\x00\x01\x18\x01\x00\x01\x18W\x00\x02=\x0d\x00\x04=0\x00\x01=\x0d\x00\x02=\x08\x00\x02=\x01\x00\x01=\x01\x00\x01=\t\x00\x01=\t\x00\x02=\x06\x00\x01=\x02\x00\x04=\x03\x00\x01=\x02\x00\x02=\x01\x00\x03=\x05\x00\x01=\x01\x00\x02=\x02\x00\x02=\x01\x00\x04=\x05\x00\x01=\x01\x00\x02=W\x00\x01O\x02\x00\x01O\x13\x00\x04O\xc2\x89\x00\x01OB\x00\x01O$\x00\x01O\x01\x00\x02O\x11\x00\x01O\x04\x00\x01O\x07\x00\x04O\x03\x00\x01O\x12\x00\x01Ov\x00\x01O\xc2\x8d\x00\x04Om\x00\x02O\x0d\x00\x04O0\x00\x01O\x0d\x00\x02O\x08\x00\x02O\x01\x00\x01O\x01\x00\x01O\t\x00\x01O\t\x00\x02O\x06\x00\x01O\x02\x00\x04O\x03\x00\x01O\x02\x00\x02O\x01\x00\x03O\x05\x00\x01O\x01\x00\x02O\x02\x00\x02O\x01\x00\x04O\x05\x00\x01O\x01\x00\x02OW\x00\x01l\x02\x00\x01l\x13\x00\x04lE\x00\x01""0Z\x00\x01""0K\x00\x01""0%\x00\x01l\x11\x00\x01""0&\x00\x01""0\t\x00\x01l$\x00\x01l\x01\x00\x02l\x11\x00\x01l\x04\x00\x01l\x07\x00\x04l\x03\x00\x01l\n\x00\x04""0\x04\x00\x01l\xc2\x85\x00\x02""0x\x00\x01l\xc2\x8d\x00\x04lm\x00\x02l\x0d\x00\x04l0\x00\x01l\x0d\x00\x02l\x08\x00\x02l\x01\x00\x01l\x01\x00\x01l\t\x00\x01l\t\x00\x02l\x06\x00\x01l\x02\x00\x04l\x03\x00\x01l\x02\x00\x02l\x01\x00\x03l\x05\x00\x01l\x01\x00\x02l\x02\x00\x02l\x01\x00\x04l\x05\x00\x01l\x01\x00\x02l\x1e\x00";
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_TRANS_PACKED_0_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_UNKNOWN_ERROR, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_NO_MATCH, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_PUSHBACK_2BIG, jint)

static IOSObjectArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ERROR_MSG_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_ERROR_MSG_, IOSObjectArray *)

static IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ATTRIBUTE_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_ATTRIBUTE_, IOSIntArray *)

static NSString *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ATTRIBUTE_PACKED_0_ = @"\x01\x00\x01\t\x1d\x01\x10\x00\x01\x01\x01\x00\x01\x01\n\x00\x01\x01\x11\x00\x01\x01M\x00";
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40, ZZ_ATTRIBUTE_PACKED_0_, NSString *)

__attribute__((unused)) static IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAction();

__attribute__((unused)) static jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackActionWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result);

__attribute__((unused)) static IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackRowMap();

__attribute__((unused)) static jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackRowMapWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result);

__attribute__((unused)) static IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackTrans();

__attribute__((unused)) static jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackTransWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result);

__attribute__((unused)) static IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAttribute();

__attribute__((unused)) static jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAttributeWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result);

__attribute__((unused)) static IOSCharArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackCMapWithNSString_(NSString *packed);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzRefill(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *self);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_yylength(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzScanErrorWithInt_(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *self, jint errorCode);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40)

@implementation OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40

+ (IOSIntArray *)zzUnpackAction {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAction();
}

+ (jint)zzUnpackActionWithNSString:(NSString *)packed
                           withInt:(jint)offset
                      withIntArray:(IOSIntArray *)result {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackActionWithNSString_withInt_withIntArray_(packed, offset, result);
}

+ (IOSIntArray *)zzUnpackRowMap {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackRowMap();
}

+ (jint)zzUnpackRowMapWithNSString:(NSString *)packed
                           withInt:(jint)offset
                      withIntArray:(IOSIntArray *)result {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackRowMapWithNSString_withInt_withIntArray_(packed, offset, result);
}

+ (IOSIntArray *)zzUnpackTrans {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackTrans();
}

+ (jint)zzUnpackTransWithNSString:(NSString *)packed
                          withInt:(jint)offset
                     withIntArray:(IOSIntArray *)result {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackTransWithNSString_withInt_withIntArray_(packed, offset, result);
}

+ (IOSIntArray *)zzUnpackAttribute {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAttribute();
}

+ (jint)zzUnpackAttributeWithNSString:(NSString *)packed
                              withInt:(jint)offset
                         withIntArray:(IOSIntArray *)result {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAttributeWithNSString_withInt_withIntArray_(packed, offset, result);
}

- (jint)yychar {
  return yychar_;
}

- (void)getTextWithOrgApacheLuceneAnalysisTokenattributesCharTermAttribute:(id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)t {
  [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(t)) copyBufferWithCharArray:zzBuffer_ withInt:zzStartRead_ withInt:zzMarkedPos_ - zzStartRead_];
}

- (void)setBufferSizeWithInt:(jint)numChars {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (instancetype)initWithJavaIoReader:(JavaIoReader *)inArg {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initWithJavaIoReader_(self, inArg);
  return self;
}

+ (IOSCharArray *)zzUnpackCMapWithNSString:(NSString *)packed {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackCMapWithNSString_(packed);
}

- (jboolean)zzRefill {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzRefill(self);
}

- (void)yyclose {
  zzAtEOF_ = YES;
  zzEndRead_ = zzStartRead_;
  if (zzReader_ != nil) [zzReader_ close];
}

- (void)yyresetWithJavaIoReader:(JavaIoReader *)reader {
  JreStrongAssign(&zzReader_, reader);
  zzAtBOL_ = YES;
  zzAtEOF_ = NO;
  zzEOFDone_ = NO;
  zzEndRead_ = zzStartRead_ = 0;
  zzCurrentPos_ = zzMarkedPos_ = 0;
  yyline_ = yychar_ = yycolumn_ = 0;
  zzLexicalState_ = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_YYINITIAL;
  if (((IOSCharArray *) nil_chk(zzBuffer_))->size_ > OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_BUFFERSIZE) JreStrongAssignAndConsume(&zzBuffer_, [IOSCharArray newArrayWithLength:OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_BUFFERSIZE]);
}

- (jint)yystate {
  return zzLexicalState_;
}

- (void)yybeginWithInt:(jint)newState {
  zzLexicalState_ = newState;
}

- (NSString *)yytext {
  return [NSString stringWithCharacters:zzBuffer_ offset:zzStartRead_ length:zzMarkedPos_ - zzStartRead_];
}

- (jchar)yycharatWithInt:(jint)pos {
  return IOSCharArray_Get(nil_chk(zzBuffer_), zzStartRead_ + pos);
}

- (jint)yylength {
  return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_yylength(self);
}

- (void)zzScanErrorWithInt:(jint)errorCode {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzScanErrorWithInt_(self, errorCode);
}

- (void)yypushbackWithInt:(jint)number {
  if (number > OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_yylength(self)) OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzScanErrorWithInt_(self, OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_PUSHBACK_2BIG);
  zzMarkedPos_ -= number;
}

- (jint)getNextToken {
  jint zzInput;
  jint zzAction;
  jint zzCurrentPosL;
  jint zzMarkedPosL;
  jint zzEndReadL = zzEndRead_;
  IOSCharArray *zzBufferL = zzBuffer_;
  IOSCharArray *zzCMapL = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_CMAP_;
  IOSIntArray *zzTransL = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_TRANS_;
  IOSIntArray *zzRowMapL = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ROWMAP_;
  IOSIntArray *zzAttrL = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ATTRIBUTE_;
  while (YES) {
    zzMarkedPosL = zzMarkedPos_;
    yychar_ += zzMarkedPosL - zzStartRead_;
    zzAction = -1;
    zzCurrentPosL = zzCurrentPos_ = zzStartRead_ = zzMarkedPosL;
    zzState_ = IOSIntArray_Get(nil_chk(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_LEXSTATE_), zzLexicalState_);
    jint zzAttributes = IOSIntArray_Get(nil_chk(zzAttrL), zzState_);
    if ((zzAttributes & 1) == 1) {
      zzAction = zzState_;
    }
    {
      while (YES) {
        if (zzCurrentPosL < zzEndReadL) zzInput = IOSCharArray_Get(nil_chk(zzBufferL), zzCurrentPosL++);
        else if (zzAtEOF_) {
          zzInput = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_YYEOF;
          goto break_zzForAction;
        }
        else {
          zzCurrentPos_ = zzCurrentPosL;
          zzMarkedPos_ = zzMarkedPosL;
          jboolean eof = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzRefill(self);
          zzCurrentPosL = zzCurrentPos_;
          zzMarkedPosL = zzMarkedPos_;
          zzBufferL = zzBuffer_;
          zzEndReadL = zzEndRead_;
          if (eof) {
            zzInput = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_YYEOF;
            goto break_zzForAction;
          }
          else {
            zzInput = IOSCharArray_Get(nil_chk(zzBufferL), zzCurrentPosL++);
          }
        }
        jint zzNext = IOSIntArray_Get(nil_chk(zzTransL), IOSIntArray_Get(nil_chk(zzRowMapL), zzState_) + IOSCharArray_Get(nil_chk(zzCMapL), zzInput));
        if (zzNext == -1) goto break_zzForAction;
        zzState_ = zzNext;
        zzAttributes = IOSIntArray_Get(zzAttrL, zzState_);
        if ((zzAttributes & 1) == 1) {
          zzAction = zzState_;
          zzMarkedPosL = zzCurrentPosL;
          if ((zzAttributes & 8) == 8) goto break_zzForAction;
        }
      }
    }
    break_zzForAction: ;
    zzMarkedPos_ = zzMarkedPosL;
    switch (zzAction < 0 ? zzAction : IOSIntArray_Get(nil_chk(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ACTION_), zzAction)) {
      case 1:
      {
        break;
      }
      case 9:
      break;
      case 2:
      {
        return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_WORD_TYPE;
      }
      case 10:
      break;
      case 3:
      {
        return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_NUMERIC_TYPE;
      }
      case 11:
      break;
      case 4:
      {
        return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_KATAKANA_TYPE;
      }
      case 12:
      break;
      case 5:
      {
        return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_SOUTH_EAST_ASIAN_TYPE;
      }
      case 13:
      break;
      case 6:
      {
        return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_IDEOGRAPHIC_TYPE;
      }
      case 14:
      break;
      case 7:
      {
        return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_HIRAGANA_TYPE;
      }
      case 15:
      break;
      case 8:
      {
        return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_HANGUL_TYPE;
      }
      case 16:
      break;
      default:
      if (zzInput == OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_YYEOF && zzStartRead_ == zzCurrentPos_) {
        zzAtEOF_ = YES;
        {
          return OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_YYEOF;
        }
      }
      else {
        OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzScanErrorWithInt_(self, OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_NO_MATCH);
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(zzReader_);
  RELEASE_(zzBuffer_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_LEXSTATE_, [IOSIntArray newArrayWithInts:(jint[]){ 0, 0 } count:2]);
    JreStrongAssign(&OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_CMAP_, OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackCMapWithNSString_(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_CMAP_PACKED_));
    JreStrongAssign(&OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ACTION_, OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAction());
    JreStrongAssign(&OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ROWMAP_, OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackRowMap());
    JreStrongAssign(&OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_TRANS_, OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackTrans());
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ERROR_MSG_, [IOSObjectArray newArrayWithObjects:(id[]){ @"Unkown internal scanner error", @"Error: could not match input", @"Error: pushback value was too large" } count:3 type:NSString_class_()]);
    JreStrongAssign(&OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ATTRIBUTE_, OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAttribute());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40)
  }
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "zzUnpackAction", NULL, "[I", 0xa, NULL, NULL },
    { "zzUnpackActionWithNSString:withInt:withIntArray:", "zzUnpackAction", "I", 0xa, NULL, NULL },
    { "zzUnpackRowMap", NULL, "[I", 0xa, NULL, NULL },
    { "zzUnpackRowMapWithNSString:withInt:withIntArray:", "zzUnpackRowMap", "I", 0xa, NULL, NULL },
    { "zzUnpackTrans", NULL, "[I", 0xa, NULL, NULL },
    { "zzUnpackTransWithNSString:withInt:withIntArray:", "zzUnpackTrans", "I", 0xa, NULL, NULL },
    { "zzUnpackAttribute", NULL, "[I", 0xa, NULL, NULL },
    { "zzUnpackAttributeWithNSString:withInt:withIntArray:", "zzUnpackAttribute", "I", 0xa, NULL, NULL },
    { "yychar", NULL, "I", 0x11, NULL, NULL },
    { "getTextWithOrgApacheLuceneAnalysisTokenattributesCharTermAttribute:", "getText", "V", 0x11, NULL, NULL },
    { "setBufferSizeWithInt:", "setBufferSize", "V", 0x11, NULL, NULL },
    { "initWithJavaIoReader:", "StandardTokenizerImpl40", NULL, 0x1, NULL, NULL },
    { "zzUnpackCMapWithNSString:", "zzUnpackCMap", "[C", 0xa, NULL, NULL },
    { "zzRefill", NULL, "Z", 0x2, "Ljava.io.IOException;", NULL },
    { "yyclose", NULL, "V", 0x11, "Ljava.io.IOException;", NULL },
    { "yyresetWithJavaIoReader:", "yyreset", "V", 0x11, NULL, NULL },
    { "yystate", NULL, "I", 0x11, NULL, NULL },
    { "yybeginWithInt:", "yybegin", "V", 0x11, NULL, NULL },
    { "yytext", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "yycharatWithInt:", "yycharat", "C", 0x11, NULL, NULL },
    { "yylength", NULL, "I", 0x11, NULL, NULL },
    { "zzScanErrorWithInt:", "zzScanError", "V", 0x2, NULL, NULL },
    { "yypushbackWithInt:", "yypushback", "V", 0x1, NULL, NULL },
    { "getNextToken", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "YYEOF", "YYEOF", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_YYEOF },
    { "ZZ_BUFFERSIZE", "ZZ_BUFFERSIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_BUFFERSIZE },
    { "YYINITIAL", "YYINITIAL", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_YYINITIAL },
    { "ZZ_LEXSTATE_", NULL, 0x1a, "[I", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_LEXSTATE_, NULL, .constantValue.asLong = 0 },
    { "ZZ_CMAP_PACKED_", NULL, 0x1a, "Ljava.lang.String;", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_CMAP_PACKED_, NULL, .constantValue.asLong = 0 },
    { "ZZ_CMAP_", NULL, 0x1a, "[C", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_CMAP_, NULL, .constantValue.asLong = 0 },
    { "ZZ_ACTION_", NULL, 0x1a, "[I", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ACTION_, NULL, .constantValue.asLong = 0 },
    { "ZZ_ACTION_PACKED_0_", NULL, 0x1a, "Ljava.lang.String;", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ACTION_PACKED_0_, NULL, .constantValue.asLong = 0 },
    { "ZZ_ROWMAP_", NULL, 0x1a, "[I", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ROWMAP_, NULL, .constantValue.asLong = 0 },
    { "ZZ_ROWMAP_PACKED_0_", NULL, 0x1a, "Ljava.lang.String;", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ROWMAP_PACKED_0_, NULL, .constantValue.asLong = 0 },
    { "ZZ_TRANS_", NULL, 0x1a, "[I", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_TRANS_, NULL, .constantValue.asLong = 0 },
    { "ZZ_TRANS_PACKED_0_", NULL, 0x1a, "Ljava.lang.String;", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_TRANS_PACKED_0_, NULL, .constantValue.asLong = 0 },
    { "ZZ_UNKNOWN_ERROR", "ZZ_UNKNOWN_ERROR", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_UNKNOWN_ERROR },
    { "ZZ_NO_MATCH", "ZZ_NO_MATCH", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_NO_MATCH },
    { "ZZ_PUSHBACK_2BIG", "ZZ_PUSHBACK_2BIG", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_PUSHBACK_2BIG },
    { "ZZ_ERROR_MSG_", NULL, 0x1a, "[Ljava.lang.String;", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ERROR_MSG_, NULL, .constantValue.asLong = 0 },
    { "ZZ_ATTRIBUTE_", NULL, 0x1a, "[I", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ATTRIBUTE_, NULL, .constantValue.asLong = 0 },
    { "ZZ_ATTRIBUTE_PACKED_0_", NULL, 0x1a, "Ljava.lang.String;", &OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ATTRIBUTE_PACKED_0_, NULL, .constantValue.asLong = 0 },
    { "zzReader_", NULL, 0x2, "Ljava.io.Reader;", NULL, NULL, .constantValue.asLong = 0 },
    { "zzState_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "zzLexicalState_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "zzBuffer_", NULL, 0x2, "[C", NULL, NULL, .constantValue.asLong = 0 },
    { "zzMarkedPos_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "zzCurrentPos_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "zzStartRead_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "zzEndRead_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "yyline_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "yychar_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "yycolumn_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "zzAtBOL_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "zzAtEOF_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "zzEOFDone_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "WORD_TYPE", "WORD_TYPE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_WORD_TYPE },
    { "NUMERIC_TYPE", "NUMERIC_TYPE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_NUMERIC_TYPE },
    { "SOUTH_EAST_ASIAN_TYPE", "SOUTH_EAST_ASIAN_TYPE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_SOUTH_EAST_ASIAN_TYPE },
    { "IDEOGRAPHIC_TYPE", "IDEOGRAPHIC_TYPE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_IDEOGRAPHIC_TYPE },
    { "HIRAGANA_TYPE", "HIRAGANA_TYPE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_HIRAGANA_TYPE },
    { "KATAKANA_TYPE", "KATAKANA_TYPE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_KATAKANA_TYPE },
    { "HANGUL_TYPE", "HANGUL_TYPE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_HANGUL_TYPE },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 = { 2, "StandardTokenizerImpl40", "org.apache.lucene.analysis.standard.std40", NULL, 0x11, 24, methods, 39, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40;
}

@end

IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAction() {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initialize();
  IOSIntArray *result = [IOSIntArray arrayWithLength:156];
  jint offset = 0;
  offset = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackActionWithNSString_withInt_withIntArray_(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ACTION_PACKED_0_, offset, result);
  return result;
}

jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackActionWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result) {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initialize();
  jint i = 0;
  jint j = offset;
  jint l = ((jint) [((NSString *) nil_chk(packed)) length]);
  while (i < l) {
    jint count = [packed charAtWithInt:i++];
    jint value = [packed charAtWithInt:i++];
    do *IOSIntArray_GetRef(nil_chk(result), j++) = value;
    while (--count > 0);
  }
  return j;
}

IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackRowMap() {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initialize();
  IOSIntArray *result = [IOSIntArray arrayWithLength:156];
  jint offset = 0;
  offset = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackRowMapWithNSString_withInt_withIntArray_(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ROWMAP_PACKED_0_, offset, result);
  return result;
}

jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackRowMapWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result) {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initialize();
  jint i = 0;
  jint j = offset;
  jint l = ((jint) [((NSString *) nil_chk(packed)) length]);
  while (i < l) {
    jint high = JreLShift32([packed charAtWithInt:i++], 16);
    *IOSIntArray_GetRef(nil_chk(result), j++) = high | [packed charAtWithInt:i++];
  }
  return j;
}

IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackTrans() {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initialize();
  IOSIntArray *result = [IOSIntArray arrayWithLength:20002];
  jint offset = 0;
  offset = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackTransWithNSString_withInt_withIntArray_(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_TRANS_PACKED_0_, offset, result);
  return result;
}

jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackTransWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result) {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initialize();
  jint i = 0;
  jint j = offset;
  jint l = ((jint) [((NSString *) nil_chk(packed)) length]);
  while (i < l) {
    jint count = [packed charAtWithInt:i++];
    jint value = [packed charAtWithInt:i++];
    value--;
    do *IOSIntArray_GetRef(nil_chk(result), j++) = value;
    while (--count > 0);
  }
  return j;
}

IOSIntArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAttribute() {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initialize();
  IOSIntArray *result = [IOSIntArray arrayWithLength:156];
  jint offset = 0;
  offset = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAttributeWithNSString_withInt_withIntArray_(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ATTRIBUTE_PACKED_0_, offset, result);
  return result;
}

jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackAttributeWithNSString_withInt_withIntArray_(NSString *packed, jint offset, IOSIntArray *result) {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initialize();
  jint i = 0;
  jint j = offset;
  jint l = ((jint) [((NSString *) nil_chk(packed)) length]);
  while (i < l) {
    jint count = [packed charAtWithInt:i++];
    jint value = [packed charAtWithInt:i++];
    do *IOSIntArray_GetRef(nil_chk(result), j++) = value;
    while (--count > 0);
  }
  return j;
}

void OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initWithJavaIoReader_(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *self, JavaIoReader *inArg) {
  NSObject_init(self);
  self->zzLexicalState_ = OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_YYINITIAL;
  JreStrongAssignAndConsume(&self->zzBuffer_, [IOSCharArray newArrayWithLength:OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_BUFFERSIZE]);
  self->zzAtBOL_ = YES;
  JreStrongAssign(&self->zzReader_, inArg);
}

OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *new_OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initWithJavaIoReader_(JavaIoReader *inArg) {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *self = [OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 alloc];
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initWithJavaIoReader_(self, inArg);
  return self;
}

IOSCharArray *OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzUnpackCMapWithNSString_(NSString *packed) {
  OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_initialize();
  IOSCharArray *map = [IOSCharArray arrayWithLength:(jint) 0x10000];
  jint i = 0;
  jint j = 0;
  while (i < 2848) {
    jint count = [((NSString *) nil_chk(packed)) charAtWithInt:i++];
    jchar value = [packed charAtWithInt:i++];
    do *IOSCharArray_GetRef(map, j++) = value;
    while (--count > 0);
  }
  return map;
}

jboolean OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzRefill(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *self) {
  if (self->zzStartRead_ > 0) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->zzBuffer_, self->zzStartRead_, self->zzBuffer_, 0, self->zzEndRead_ - self->zzStartRead_);
    self->zzEndRead_ -= self->zzStartRead_;
    self->zzCurrentPos_ -= self->zzStartRead_;
    self->zzMarkedPos_ -= self->zzStartRead_;
    self->zzStartRead_ = 0;
  }
  if (self->zzCurrentPos_ >= ((IOSCharArray *) nil_chk(self->zzBuffer_))->size_) {
    IOSCharArray *newBuffer = [IOSCharArray arrayWithLength:self->zzCurrentPos_ * 2];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->zzBuffer_, 0, newBuffer, 0, self->zzBuffer_->size_);
    JreStrongAssign(&self->zzBuffer_, newBuffer);
  }
  jint numRead = [((JavaIoReader *) nil_chk(self->zzReader_)) readWithCharArray:self->zzBuffer_ withInt:self->zzEndRead_ withInt:self->zzBuffer_->size_ - self->zzEndRead_];
  if (numRead > 0) {
    self->zzEndRead_ += numRead;
    return NO;
  }
  if (numRead == 0) {
    jint c = [self->zzReader_ read];
    if (c == -1) {
      return YES;
    }
    else {
      *IOSCharArray_GetRef(self->zzBuffer_, self->zzEndRead_++) = (jchar) c;
      return NO;
    }
  }
  return YES;
}

jint OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_yylength(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *self) {
  return self->zzMarkedPos_ - self->zzStartRead_;
}

void OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_zzScanErrorWithInt_(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40 *self, jint errorCode) {
  NSString *message;
  @try {
    message = IOSObjectArray_Get(nil_chk(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ERROR_MSG_), errorCode);
  }
  @catch (JavaLangArrayIndexOutOfBoundsException *e) {
    message = IOSObjectArray_Get(nil_chk(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_ERROR_MSG_), OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40_ZZ_UNKNOWN_ERROR);
  }
  @throw [new_JavaLangError_initWithNSString_(message) autorelease];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisStandardStd40StandardTokenizerImpl40)
