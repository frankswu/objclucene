//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/compound/Lucene43HyphenationCompoundWordTokenFilter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "org/apache/lucene/analysis/compound/Lucene43HyphenationCompoundWordTokenFilter.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter

- (instancetype)init {
  OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter_init(self);
  return self;
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter = { 2, "Lucene43HyphenationCompoundWordTokenFilter", "org.apache.lucene.analysis.compound", NULL, 0x1, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter;
}

@end

void OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter_init(OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter *new_OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter_init() {
  OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter *self = [OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter alloc];
  OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisCompoundLucene43HyphenationCompoundWordTokenFilter)
