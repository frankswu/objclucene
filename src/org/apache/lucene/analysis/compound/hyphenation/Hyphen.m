//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/Hyphen.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/analysis/compound/hyphenation/Hyphen.h"

@implementation OrgApacheLuceneAnalysisCompoundHyphenationHyphen

- (instancetype)initWithNSString:(NSString *)pre
                    withNSString:(NSString *)no
                    withNSString:(NSString *)post {
  OrgApacheLuceneAnalysisCompoundHyphenationHyphen_initWithNSString_withNSString_withNSString_(self, pre, no, post);
  return self;
}

- (instancetype)initWithNSString:(NSString *)pre {
  OrgApacheLuceneAnalysisCompoundHyphenationHyphen_initWithNSString_(self, pre);
  return self;
}

- (NSString *)description {
  if (noBreak_ == nil && postBreak_ == nil && preBreak_ != nil && [preBreak_ isEqual:@"-"]) {
    return @"-";
  }
  JavaLangStringBuilder *res = [new_JavaLangStringBuilder_initWithNSString_(@"{") autorelease];
  [res appendWithNSString:preBreak_];
  [res appendWithNSString:@"}{"];
  [res appendWithNSString:postBreak_];
  [res appendWithNSString:@"}{"];
  [res appendWithNSString:noBreak_];
  [res appendWithChar:'}'];
  return [res description];
}

- (void)dealloc {
  RELEASE_(preBreak_);
  RELEASE_(noBreak_);
  RELEASE_(postBreak_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSString:", "Hyphen", NULL, 0x0, NULL, NULL },
    { "initWithNSString:", "Hyphen", NULL, 0x0, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "preBreak_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "noBreak_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "postBreak_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisCompoundHyphenationHyphen = { 2, "Hyphen", "org.apache.lucene.analysis.compound.hyphenation", NULL, 0x1, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisCompoundHyphenationHyphen;
}

@end

void OrgApacheLuceneAnalysisCompoundHyphenationHyphen_initWithNSString_withNSString_withNSString_(OrgApacheLuceneAnalysisCompoundHyphenationHyphen *self, NSString *pre, NSString *no, NSString *post) {
  NSObject_init(self);
  JreStrongAssign(&self->preBreak_, pre);
  JreStrongAssign(&self->noBreak_, no);
  JreStrongAssign(&self->postBreak_, post);
}

OrgApacheLuceneAnalysisCompoundHyphenationHyphen *new_OrgApacheLuceneAnalysisCompoundHyphenationHyphen_initWithNSString_withNSString_withNSString_(NSString *pre, NSString *no, NSString *post) {
  OrgApacheLuceneAnalysisCompoundHyphenationHyphen *self = [OrgApacheLuceneAnalysisCompoundHyphenationHyphen alloc];
  OrgApacheLuceneAnalysisCompoundHyphenationHyphen_initWithNSString_withNSString_withNSString_(self, pre, no, post);
  return self;
}

void OrgApacheLuceneAnalysisCompoundHyphenationHyphen_initWithNSString_(OrgApacheLuceneAnalysisCompoundHyphenationHyphen *self, NSString *pre) {
  NSObject_init(self);
  JreStrongAssign(&self->preBreak_, pre);
  JreStrongAssign(&self->noBreak_, nil);
  JreStrongAssign(&self->postBreak_, nil);
}

OrgApacheLuceneAnalysisCompoundHyphenationHyphen *new_OrgApacheLuceneAnalysisCompoundHyphenationHyphen_initWithNSString_(NSString *pre) {
  OrgApacheLuceneAnalysisCompoundHyphenationHyphen *self = [OrgApacheLuceneAnalysisCompoundHyphenationHyphen alloc];
  OrgApacheLuceneAnalysisCompoundHyphenationHyphen_initWithNSString_(self, pre);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisCompoundHyphenationHyphen)
