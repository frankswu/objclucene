//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/compound/hyphenation/TernaryTree.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree

- (instancetype)init {
  OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree_init(self);
  return self;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BLOCK_SIZE", "BLOCK_SIZE", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree_BLOCK_SIZE },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.analysis.compound.hyphenation.TernaryTree$Iterator;"};
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree = { 2, "TernaryTree", "org.apache.lucene.analysis.compound.hyphenation", NULL, 0x1, 1, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree;
}

@end

void OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree_init(OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree *new_OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree_init() {
  OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree *self = [OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree alloc];
  OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisCompoundHyphenationTernaryTree)
