//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilterFactory.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "org/apache/lucene/analysis/charfilter/MappingCharFilter.h"
#include "org/apache/lucene/analysis/charfilter/MappingCharFilterFactory.h"
#include "org/apache/lucene/analysis/charfilter/NormalizeCharMap.h"
#include "org/apache/lucene/analysis/util/AbstractAnalysisFactory.h"
#include "org/apache/lucene/analysis/util/CharFilterFactory.h"
#include "org/apache/lucene/analysis/util/ResourceLoader.h"
#include "org/apache/lucene/util/fst/FST.h"

@interface OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory () {
 @public
  NSString *mapping_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory, mapping_, NSString *)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory)

JavaUtilRegexPattern *OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory_p_;

@implementation OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)args {
  OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory_initWithJavaUtilMap_(self, args);
  return self;
}

- (void)informWithOrgApacheLuceneAnalysisUtilResourceLoader:(id<OrgApacheLuceneAnalysisUtilResourceLoader>)loader {
  if (mapping_ != nil) {
    id<JavaUtilList> wlist = nil;
    id<JavaUtilList> files = [self splitFileNamesWithNSString:mapping_];
    wlist = [new_JavaUtilArrayList_init() autorelease];
    for (NSString * __strong file in nil_chk(files)) {
      id<JavaUtilList> lines = [self getLinesWithOrgApacheLuceneAnalysisUtilResourceLoader:loader withNSString:[((NSString *) nil_chk(file)) trim]];
      [wlist addAllWithJavaUtilCollection:lines];
    }
    OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder *builder = [new_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder_init() autorelease];
    [self parseRulesWithJavaUtilList:wlist withOrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder:builder];
    JreStrongAssign(&normMap_, [builder build]);
    if (((OrgApacheLuceneAnalysisCharfilterNormalizeCharMap *) nil_chk(normMap_))->map_ == nil) {
      JreStrongAssign(&normMap_, nil);
    }
  }
}

- (JavaIoReader *)createWithJavaIoReader:(JavaIoReader *)input {
  return normMap_ == nil ? input : [new_OrgApacheLuceneAnalysisCharfilterMappingCharFilter_initWithOrgApacheLuceneAnalysisCharfilterNormalizeCharMap_withJavaIoReader_(normMap_, input) autorelease];
}

- (void)parseRulesWithJavaUtilList:(id<JavaUtilList>)rules
withOrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder:(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder *)builder {
  for (NSString * __strong rule in nil_chk(rules)) {
    JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory_p_)) matcherWithJavaLangCharSequence:rule];
    if (![((JavaUtilRegexMatcher *) nil_chk(m)) find]) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$$", @"Invalid Mapping Rule : [", rule, @"], file = ", mapping_)) autorelease];
    [((OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder *) nil_chk(builder)) addWithNSString:[self parseStringWithNSString:[m groupWithInt:1]] withNSString:[self parseStringWithNSString:[m groupWithInt:2]]];
  }
}

- (NSString *)parseStringWithNSString:(NSString *)s {
  jint readPos = 0;
  jint len = ((jint) [((NSString *) nil_chk(s)) length]);
  jint writePos = 0;
  while (readPos < len) {
    jchar c = [s charAtWithInt:readPos++];
    if (c == '\\') {
      if (readPos >= len) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$C", @"Invalid escaped char in [", s, ']')) autorelease];
      c = [s charAtWithInt:readPos++];
      switch (c) {
        case '\\':
        c = '\\';
        break;
        case '"':
        c = '"';
        break;
        case 'n':
        c = 0x000a;
        break;
        case 't':
        c = 0x0009;
        break;
        case 'r':
        c = 0x000d;
        break;
        case 'b':
        c = 0x0008;
        break;
        case 'f':
        c = 0x000c;
        break;
        case 'u':
        if (readPos + 3 >= len) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$C", @"Invalid escaped char in [", s, ']')) autorelease];
        c = (jchar) JavaLangInteger_parseIntWithNSString_withInt_([s substring:readPos endIndex:readPos + 4], 16);
        readPos += 4;
        break;
      }
    }
    *IOSCharArray_GetRef(nil_chk(out_), writePos++) = c;
  }
  return [NSString stringWithCharacters:out_ offset:0 length:writePos];
}

- (OrgApacheLuceneAnalysisUtilAbstractAnalysisFactory *)getMultiTermComponent {
  return self;
}

- (void)dealloc {
  RELEASE_(normMap_);
  RELEASE_(mapping_);
  RELEASE_(out_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory class]) {
    JreStrongAssign(&OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory_p_, JavaUtilRegexPattern_compileWithNSString_(@"\"(.*)\"\\s*=>\\s*\"(.*)\"\\s*$"));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilMap:", "MappingCharFilterFactory", NULL, 0x1, NULL, NULL },
    { "informWithOrgApacheLuceneAnalysisUtilResourceLoader:", "inform", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "createWithJavaIoReader:", "create", "Ljava.io.Reader;", 0x1, NULL, NULL },
    { "parseRulesWithJavaUtilList:withOrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder:", "parseRules", "V", 0x4, NULL, NULL },
    { "parseStringWithNSString:", "parseString", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getMultiTermComponent", NULL, "Lorg.apache.lucene.analysis.util.AbstractAnalysisFactory;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "normMap_", NULL, 0x4, "Lorg.apache.lucene.analysis.charfilter.NormalizeCharMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "mapping_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "p_", NULL, 0x8, "Ljava.util.regex.Pattern;", &OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory_p_, NULL, .constantValue.asLong = 0 },
    { "out_", NULL, 0x0, "[C", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory = { 2, "MappingCharFilterFactory", "org.apache.lucene.analysis.charfilter", NULL, 0x1, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory;
}

@end

void OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory *self, id<JavaUtilMap> args) {
  OrgApacheLuceneAnalysisUtilCharFilterFactory_initWithJavaUtilMap_(self, args);
  JreStrongAssignAndConsume(&self->out_, [IOSCharArray newArrayWithLength:256]);
  JreStrongAssign(&self->mapping_, [self getWithJavaUtilMap:args withNSString:@"mapping"]);
  if (![((id<JavaUtilMap>) nil_chk(args)) isEmpty]) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Unknown parameters: ", args)) autorelease];
  }
}

OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory *new_OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) {
  OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory *self = [OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory alloc];
  OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory_initWithJavaUtilMap_(self, args);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisCharfilterMappingCharFilterFactory)
