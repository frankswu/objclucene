//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/de/GermanLightStemmer.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/de/GermanLightStemmer.h"

@interface OrgApacheLuceneAnalysisDeGermanLightStemmer ()

- (jboolean)stEndingWithChar:(jchar)ch;

- (jint)step1WithCharArray:(IOSCharArray *)s
                   withInt:(jint)len;

- (jint)step2WithCharArray:(IOSCharArray *)s
                   withInt:(jint)len;

@end

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisDeGermanLightStemmer_stEndingWithChar_(OrgApacheLuceneAnalysisDeGermanLightStemmer *self, jchar ch);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisDeGermanLightStemmer_step1WithCharArray_withInt_(OrgApacheLuceneAnalysisDeGermanLightStemmer *self, IOSCharArray *s, jint len);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisDeGermanLightStemmer_step2WithCharArray_withInt_(OrgApacheLuceneAnalysisDeGermanLightStemmer *self, IOSCharArray *s, jint len);

@implementation OrgApacheLuceneAnalysisDeGermanLightStemmer

- (jint)stemWithCharArray:(IOSCharArray *)s
                  withInt:(jint)len {
  for (jint i = 0; i < len; i++) switch (IOSCharArray_Get(nil_chk(s), i)) {
    case 0x00e4:
    case 0x00e0:
    case 0x00e1:
    case 0x00e2:
    *IOSCharArray_GetRef(s, i) = 'a';
    break;
    case 0x00f6:
    case 0x00f2:
    case 0x00f3:
    case 0x00f4:
    *IOSCharArray_GetRef(s, i) = 'o';
    break;
    case 0x00ef:
    case 0x00ec:
    case 0x00ed:
    case 0x00ee:
    *IOSCharArray_GetRef(s, i) = 'i';
    break;
    case 0x00fc:
    case 0x00f9:
    case 0x00fa:
    case 0x00fb:
    *IOSCharArray_GetRef(s, i) = 'u';
    break;
  }
  len = OrgApacheLuceneAnalysisDeGermanLightStemmer_step1WithCharArray_withInt_(self, s, len);
  return OrgApacheLuceneAnalysisDeGermanLightStemmer_step2WithCharArray_withInt_(self, s, len);
}

- (jboolean)stEndingWithChar:(jchar)ch {
  return OrgApacheLuceneAnalysisDeGermanLightStemmer_stEndingWithChar_(self, ch);
}

- (jint)step1WithCharArray:(IOSCharArray *)s
                   withInt:(jint)len {
  return OrgApacheLuceneAnalysisDeGermanLightStemmer_step1WithCharArray_withInt_(self, s, len);
}

- (jint)step2WithCharArray:(IOSCharArray *)s
                   withInt:(jint)len {
  return OrgApacheLuceneAnalysisDeGermanLightStemmer_step2WithCharArray_withInt_(self, s, len);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisDeGermanLightStemmer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "stemWithCharArray:withInt:", "stem", "I", 0x1, NULL, NULL },
    { "stEndingWithChar:", "stEnding", "Z", 0x2, NULL, NULL },
    { "step1WithCharArray:withInt:", "step1", "I", 0x2, NULL, NULL },
    { "step2WithCharArray:withInt:", "step2", "I", 0x2, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisDeGermanLightStemmer = { 2, "GermanLightStemmer", "org.apache.lucene.analysis.de", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisDeGermanLightStemmer;
}

@end

jboolean OrgApacheLuceneAnalysisDeGermanLightStemmer_stEndingWithChar_(OrgApacheLuceneAnalysisDeGermanLightStemmer *self, jchar ch) {
  switch (ch) {
    case 'b':
    case 'd':
    case 'f':
    case 'g':
    case 'h':
    case 'k':
    case 'l':
    case 'm':
    case 'n':
    case 't':
    return true;
    default:
    return false;
  }
}

jint OrgApacheLuceneAnalysisDeGermanLightStemmer_step1WithCharArray_withInt_(OrgApacheLuceneAnalysisDeGermanLightStemmer *self, IOSCharArray *s, jint len) {
  if (len > 5 && IOSCharArray_Get(nil_chk(s), len - 3) == 'e' && IOSCharArray_Get(s, len - 2) == 'r' && IOSCharArray_Get(s, len - 1) == 'n') return len - 3;
  if (len > 4 && IOSCharArray_Get(nil_chk(s), len - 2) == 'e') switch (IOSCharArray_Get(s, len - 1)) {
    case 'm':
    case 'n':
    case 'r':
    case 's':
    return len - 2;
  }
  if (len > 3 && IOSCharArray_Get(nil_chk(s), len - 1) == 'e') return len - 1;
  if (len > 3 && IOSCharArray_Get(nil_chk(s), len - 1) == 's' && OrgApacheLuceneAnalysisDeGermanLightStemmer_stEndingWithChar_(self, IOSCharArray_Get(s, len - 2))) return len - 1;
  return len;
}

jint OrgApacheLuceneAnalysisDeGermanLightStemmer_step2WithCharArray_withInt_(OrgApacheLuceneAnalysisDeGermanLightStemmer *self, IOSCharArray *s, jint len) {
  if (len > 5 && IOSCharArray_Get(nil_chk(s), len - 3) == 'e' && IOSCharArray_Get(s, len - 2) == 's' && IOSCharArray_Get(s, len - 1) == 't') return len - 3;
  if (len > 4 && IOSCharArray_Get(nil_chk(s), len - 2) == 'e' && (IOSCharArray_Get(s, len - 1) == 'r' || IOSCharArray_Get(s, len - 1) == 'n')) return len - 2;
  if (len > 4 && IOSCharArray_Get(nil_chk(s), len - 2) == 's' && IOSCharArray_Get(s, len - 1) == 't' && OrgApacheLuceneAnalysisDeGermanLightStemmer_stEndingWithChar_(self, IOSCharArray_Get(s, len - 3))) return len - 2;
  return len;
}

void OrgApacheLuceneAnalysisDeGermanLightStemmer_init(OrgApacheLuceneAnalysisDeGermanLightStemmer *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisDeGermanLightStemmer *new_OrgApacheLuceneAnalysisDeGermanLightStemmer_init() {
  OrgApacheLuceneAnalysisDeGermanLightStemmer *self = [OrgApacheLuceneAnalysisDeGermanLightStemmer alloc];
  OrgApacheLuceneAnalysisDeGermanLightStemmer_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisDeGermanLightStemmer)
