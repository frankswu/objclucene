//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/de/GermanNormalizationFilter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/System.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/de/GermanNormalizationFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/util/StemmerUtil.h"
#include "org/apache/lucene/util/AttributeSource.h"

#define OrgApacheLuceneAnalysisDeGermanNormalizationFilter_N 0
#define OrgApacheLuceneAnalysisDeGermanNormalizationFilter_V 1
#define OrgApacheLuceneAnalysisDeGermanNormalizationFilter_U 2

@interface OrgApacheLuceneAnalysisDeGermanNormalizationFilter () {
 @public
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisDeGermanNormalizationFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisDeGermanNormalizationFilter, N, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisDeGermanNormalizationFilter, V, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisDeGermanNormalizationFilter, U, jint)

@implementation OrgApacheLuceneAnalysisDeGermanNormalizationFilter

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input {
  OrgApacheLuceneAnalysisDeGermanNormalizationFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, input);
  return self;
}

- (jboolean)incrementToken {
  if ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    jint state = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_N;
    IOSCharArray *buffer = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) buffer];
    jint length = [termAtt_ length];
    for (jint i = 0; i < length; i++) {
      jchar c = IOSCharArray_Get(nil_chk(buffer), i);
      switch (c) {
        case 'a':
        case 'o':
        state = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_U;
        break;
        case 'u':
        state = (state == OrgApacheLuceneAnalysisDeGermanNormalizationFilter_N) ? OrgApacheLuceneAnalysisDeGermanNormalizationFilter_U : OrgApacheLuceneAnalysisDeGermanNormalizationFilter_V;
        break;
        case 'e':
        if (state == OrgApacheLuceneAnalysisDeGermanNormalizationFilter_U) length = OrgApacheLuceneAnalysisUtilStemmerUtil_delete__WithCharArray_withInt_withInt_(buffer, i--, length);
        state = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_V;
        break;
        case 'i':
        case 'q':
        case 'y':
        state = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_V;
        break;
        case 0x00e4:
        *IOSCharArray_GetRef(buffer, i) = 'a';
        state = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_V;
        break;
        case 0x00f6:
        *IOSCharArray_GetRef(buffer, i) = 'o';
        state = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_V;
        break;
        case 0x00fc:
        *IOSCharArray_GetRef(buffer, i) = 'u';
        state = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_V;
        break;
        case 0x00df:
        *IOSCharArray_GetRef(buffer, i++) = 's';
        buffer = [termAtt_ resizeBufferWithInt:1 + length];
        if (i < length) JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(buffer, i, buffer, i + 1, (length - i));
        *IOSCharArray_GetRef(nil_chk(buffer), i) = 's';
        length++;
        state = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_N;
        break;
        default:
        state = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_N;
      }
    }
    [termAtt_ setLengthWithInt:length];
    return YES;
  }
  else {
    return NO;
  }
}

- (void)dealloc {
  RELEASE_(termAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisTokenStream:", "GermanNormalizationFilter", NULL, 0x1, NULL, NULL },
    { "incrementToken", NULL, "Z", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "N", "N", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_N },
    { "V", "V", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_V },
    { "U", "U", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneAnalysisDeGermanNormalizationFilter_U },
    { "termAtt_", NULL, 0x12, "Lorg.apache.lucene.analysis.tokenattributes.CharTermAttribute;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisDeGermanNormalizationFilter = { 2, "GermanNormalizationFilter", "org.apache.lucene.analysis.de", NULL, 0x11, 2, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisDeGermanNormalizationFilter;
}

@end

void OrgApacheLuceneAnalysisDeGermanNormalizationFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisDeGermanNormalizationFilter *self, OrgApacheLuceneAnalysisTokenStream *input) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, input);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
}

OrgApacheLuceneAnalysisDeGermanNormalizationFilter *new_OrgApacheLuceneAnalysisDeGermanNormalizationFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *input) {
  OrgApacheLuceneAnalysisDeGermanNormalizationFilter *self = [OrgApacheLuceneAnalysisDeGermanNormalizationFilter alloc];
  OrgApacheLuceneAnalysisDeGermanNormalizationFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, input);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisDeGermanNormalizationFilter)
