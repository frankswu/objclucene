//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Character.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/reverse/ReverseStringFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/util/AttributeSource.h"

#define OrgApacheLuceneAnalysisReverseReverseStringFilter_NOMARKER 0xffff

@interface OrgApacheLuceneAnalysisReverseReverseStringFilter () {
 @public
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
  jchar marker_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisReverseReverseStringFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneAnalysisReverseReverseStringFilter, NOMARKER, jchar)

@implementation OrgApacheLuceneAnalysisReverseReverseStringFilter

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                                  withChar:(jchar)marker {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(self, inArg, marker);
  return self;
}

- (jboolean)incrementToken {
  if ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    jint len = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) length];
    if (marker_ != OrgApacheLuceneAnalysisReverseReverseStringFilter_NOMARKER) {
      len++;
      [termAtt_ resizeBufferWithInt:len];
      *IOSCharArray_GetRef(nil_chk([termAtt_ buffer]), len - 1) = marker_;
    }
    OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_([termAtt_ buffer], 0, len);
    [termAtt_ setLengthWithInt:len];
    return true;
  }
  else {
    return false;
  }
}

+ (NSString *)reverseWithNSString:(NSString *)input {
  return OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithNSString_(input);
}

+ (void)reverseWithCharArray:(IOSCharArray *)buffer {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_(buffer);
}

+ (void)reverseWithCharArray:(IOSCharArray *)buffer
                     withInt:(jint)len {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_(buffer, len);
}

+ (void)reverseWithCharArray:(IOSCharArray *)buffer
                     withInt:(jint)start
                     withInt:(jint)len {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(buffer, start, len);
}

- (void)dealloc {
  RELEASE_(termAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisTokenStream:", "ReverseStringFilter", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneAnalysisTokenStream:withChar:", "ReverseStringFilter", NULL, 0x1, NULL, NULL },
    { "incrementToken", NULL, "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "reverseWithNSString:", "reverse", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "reverseWithCharArray:", "reverse", "V", 0x9, NULL, NULL },
    { "reverseWithCharArray:withInt:", "reverse", "V", 0x9, NULL, NULL },
    { "reverseWithCharArray:withInt:withInt:", "reverse", "V", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "termAtt_", NULL, 0x12, "Lorg.apache.lucene.analysis.tokenattributes.CharTermAttribute;", NULL, NULL, .constantValue.asLong = 0 },
    { "marker_", NULL, 0x12, "C", NULL, NULL, .constantValue.asLong = 0 },
    { "NOMARKER", "NOMARKER", 0x1a, "C", NULL, NULL, .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_NOMARKER },
    { "START_OF_HEADING_MARKER", "START_OF_HEADING_MARKER", 0x19, "C", NULL, NULL, .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_START_OF_HEADING_MARKER },
    { "INFORMATION_SEPARATOR_MARKER", "INFORMATION_SEPARATOR_MARKER", 0x19, "C", NULL, NULL, .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_INFORMATION_SEPARATOR_MARKER },
    { "PUA_EC00_MARKER", "PUA_EC00_MARKER", 0x19, "C", NULL, NULL, .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_PUA_EC00_MARKER },
    { "RTL_DIRECTION_MARKER", "RTL_DIRECTION_MARKER", 0x19, "C", NULL, NULL, .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_RTL_DIRECTION_MARKER },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisReverseReverseStringFilter = { 2, "ReverseStringFilter", "org.apache.lucene.analysis.reverse", NULL, 0x11, 7, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisReverseReverseStringFilter;
}

@end

void OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisReverseReverseStringFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(self, inArg, OrgApacheLuceneAnalysisReverseReverseStringFilter_NOMARKER);
}

OrgApacheLuceneAnalysisReverseReverseStringFilter *new_OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter *self = [OrgApacheLuceneAnalysisReverseReverseStringFilter alloc];
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  return self;
}

void OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(OrgApacheLuceneAnalysisReverseReverseStringFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg, jchar marker) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  self->marker_ = marker;
}

OrgApacheLuceneAnalysisReverseReverseStringFilter *new_OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(OrgApacheLuceneAnalysisTokenStream *inArg, jchar marker) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter *self = [OrgApacheLuceneAnalysisReverseReverseStringFilter alloc];
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(self, inArg, marker);
  return self;
}

NSString *OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithNSString_(NSString *input) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initialize();
  IOSCharArray *charInput = [((NSString *) nil_chk(input)) toCharArray];
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(charInput, 0, ((IOSCharArray *) nil_chk(charInput))->size_);
  return [NSString stringWithCharacters:charInput];
}

void OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_(IOSCharArray *buffer) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initialize();
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(buffer, 0, ((IOSCharArray *) nil_chk(buffer))->size_);
}

void OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_(IOSCharArray *buffer, jint len) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initialize();
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(buffer, 0, len);
}

void OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(IOSCharArray *buffer, jint start, jint len) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initialize();
  if (len < 2) return;
  jint end = (start + len) - 1;
  jchar frontHigh = IOSCharArray_Get(nil_chk(buffer), start);
  jchar endLow = IOSCharArray_Get(buffer, end);
  jboolean allowFrontSur = true, allowEndSur = true;
  jint mid = start + (JreRShift32(len, 1));
  for (jint i = start; i < mid; ++i, --end) {
    jchar frontLow = IOSCharArray_Get(buffer, i + 1);
    jchar endHigh = IOSCharArray_Get(buffer, end - 1);
    jboolean surAtFront = allowFrontSur && JavaLangCharacter_isSurrogatePairWithChar_withChar_(frontHigh, frontLow);
    if (surAtFront && (len < 3)) {
      return;
    }
    jboolean surAtEnd = allowEndSur && JavaLangCharacter_isSurrogatePairWithChar_withChar_(endHigh, endLow);
    allowFrontSur = allowEndSur = true;
    if (surAtFront == surAtEnd) {
      if (surAtFront) {
        *IOSCharArray_GetRef(buffer, end) = frontLow;
        *IOSCharArray_GetRef(buffer, --end) = frontHigh;
        *IOSCharArray_GetRef(buffer, i) = endHigh;
        *IOSCharArray_GetRef(buffer, ++i) = endLow;
        frontHigh = IOSCharArray_Get(buffer, i + 1);
        endLow = IOSCharArray_Get(buffer, end - 1);
      }
      else {
        *IOSCharArray_GetRef(buffer, end) = frontHigh;
        *IOSCharArray_GetRef(buffer, i) = endLow;
        frontHigh = frontLow;
        endLow = endHigh;
      }
    }
    else {
      if (surAtFront) {
        *IOSCharArray_GetRef(buffer, end) = frontLow;
        *IOSCharArray_GetRef(buffer, i) = endLow;
        endLow = endHigh;
        allowFrontSur = false;
      }
      else {
        *IOSCharArray_GetRef(buffer, end) = frontHigh;
        *IOSCharArray_GetRef(buffer, i) = endHigh;
        frontHigh = frontLow;
        allowEndSur = false;
      }
    }
  }
  if ((len & (jint) 0x01) == 1 && !(allowFrontSur && allowEndSur)) {
    *IOSCharArray_GetRef(buffer, end) = allowFrontSur ? endLow : frontHigh;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisReverseReverseStringFilter)
