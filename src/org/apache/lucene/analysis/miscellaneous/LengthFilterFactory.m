//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LengthFilterFactory.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/miscellaneous/LengthFilterFactory.h"

#pragma clang diagnostic ignored "-Wprotocol"

NSString *OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_MIN_KEY_ = @"min";
NSString *OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_MAX_KEY_ = @"max";

@implementation OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory

- (instancetype)init {
  OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MIN_KEY_", NULL, 0x19, "Ljava.lang.String;", &OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_MIN_KEY_, NULL, .constantValue.asLong = 0 },
    { "MAX_KEY_", NULL, 0x19, "Ljava.lang.String;", &OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_MAX_KEY_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory = { 2, "LengthFilterFactory", "org.apache.lucene.analysis.miscellaneous", NULL, 0x1, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory;
}

@end

void OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_init(OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory *new_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_init() {
  OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory *self = [OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory alloc];
  OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory)
