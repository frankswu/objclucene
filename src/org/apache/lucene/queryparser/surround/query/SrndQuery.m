//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndQuery.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Error.h"
#include "java/lang/Float.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/queryparser/surround/query/BasicQueryFactory.h"
#include "org/apache/lucene/queryparser/surround/query/SrndQuery.h"
#include "org/apache/lucene/search/Query.h"

@interface OrgApacheLuceneQueryparserSurroundQuerySrndQuery () {
 @public
  jfloat weight_;
  jboolean weighted_;
}

@end

@implementation OrgApacheLuceneQueryparserSurroundQuerySrndQuery

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserSurroundQuerySrndQuery_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setWeightWithFloat:(jfloat)w {
  weight_ = w;
  weighted_ = true;
}

- (jboolean)isWeighted {
  return weighted_;
}

- (jfloat)getWeight {
  return weight_;
}

- (NSString *)getWeightString {
  return JavaLangFloat_toStringWithFloat_([self getWeight]);
}

- (NSString *)getWeightOperator {
  return @"^";
}

- (void)weightToStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)r {
  if ([self isWeighted]) {
    [((JavaLangStringBuilder *) nil_chk(r)) appendWithNSString:[self getWeightOperator]];
    [r appendWithNSString:[self getWeightString]];
  }
}

- (OrgApacheLuceneSearchQuery *)makeLuceneQueryFieldWithNSString:(NSString *)fieldName
    withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf {
  OrgApacheLuceneSearchQuery *q = [self makeLuceneQueryFieldNoBoostWithNSString:fieldName withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:qf];
  if ([self isWeighted]) {
    [q setBoostWithFloat:[self getWeight] * [((OrgApacheLuceneSearchQuery *) nil_chk(q)) getBoost]];
  }
  return q;
}

- (OrgApacheLuceneSearchQuery *)makeLuceneQueryFieldNoBoostWithNSString:(NSString *)fieldName
           withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isFieldsSubQueryAcceptable {
  return true;
}

- (OrgApacheLuceneQueryparserSurroundQuerySrndQuery *)clone {
  @try {
    return (OrgApacheLuceneQueryparserSurroundQuerySrndQuery *) check_class_cast([super clone], [OrgApacheLuceneQueryparserSurroundQuerySrndQuery class]);
  }
  @catch (JavaLangCloneNotSupportedException *cns) {
    @throw [new_JavaLangError_initWithJavaLangThrowable_(cns) autorelease];
  }
}

- (NSUInteger)hash {
  return ((jint) [[self getClass] hash]) ^ ((jint) [((NSString *) nil_chk([self description])) hash]);
}

- (jboolean)isEqual:(id)obj {
  if (obj == nil) return false;
  if (![[self getClass] isEqual:[nil_chk(obj) getClass]]) return false;
  return [((NSString *) nil_chk([self description])) isEqual:[obj description]];
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SrndQuery", NULL, 0x1, NULL, NULL },
    { "setWeightWithFloat:", "setWeight", "V", 0x1, NULL, NULL },
    { "isWeighted", NULL, "Z", 0x1, NULL, NULL },
    { "getWeight", NULL, "F", 0x1, NULL, NULL },
    { "getWeightString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getWeightOperator", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "weightToStringWithJavaLangStringBuilder:", "weightToString", "V", 0x4, NULL, NULL },
    { "makeLuceneQueryFieldWithNSString:withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:", "makeLuceneQueryField", "Lorg.apache.lucene.search.Query;", 0x1, NULL, NULL },
    { "makeLuceneQueryFieldNoBoostWithNSString:withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:", "makeLuceneQueryFieldNoBoost", "Lorg.apache.lucene.search.Query;", 0x401, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x401, NULL, NULL },
    { "isFieldsSubQueryAcceptable", NULL, "Z", 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.apache.lucene.queryparser.surround.query.SrndQuery;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "weight_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "weighted_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserSurroundQuerySrndQuery = { 2, "SrndQuery", "org.apache.lucene.queryparser.surround.query", NULL, 0x401, 14, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueryparserSurroundQuerySrndQuery;
}

@end

void OrgApacheLuceneQueryparserSurroundQuerySrndQuery_init(OrgApacheLuceneQueryparserSurroundQuerySrndQuery *self) {
  NSObject_init(self);
  self->weight_ = (jfloat) 1.0;
  self->weighted_ = false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserSurroundQuerySrndQuery)
