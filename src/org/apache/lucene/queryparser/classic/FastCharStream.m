//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/classic/FastCharStream.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/lang/System.h"
#include "org/apache/lucene/queryparser/classic/FastCharStream.h"

@interface OrgApacheLuceneQueryparserClassicFastCharStream ()

- (void)refill;

@end

__attribute__((unused)) static jchar OrgApacheLuceneQueryparserClassicFastCharStream_readChar(OrgApacheLuceneQueryparserClassicFastCharStream *self);

__attribute__((unused)) static void OrgApacheLuceneQueryparserClassicFastCharStream_refill(OrgApacheLuceneQueryparserClassicFastCharStream *self);

@implementation OrgApacheLuceneQueryparserClassicFastCharStream

- (instancetype)initWithJavaIoReader:(JavaIoReader *)r {
  OrgApacheLuceneQueryparserClassicFastCharStream_initWithJavaIoReader_(self, r);
  return self;
}

- (jchar)readChar {
  return OrgApacheLuceneQueryparserClassicFastCharStream_readChar(self);
}

- (void)refill {
  OrgApacheLuceneQueryparserClassicFastCharStream_refill(self);
}

- (jchar)BeginToken {
  tokenStart_ = bufferPosition_;
  return OrgApacheLuceneQueryparserClassicFastCharStream_readChar(self);
}

- (void)backupWithInt:(jint)amount {
  bufferPosition_ -= amount;
}

- (NSString *)GetImage {
  return [NSString stringWithCharacters:buffer_ offset:tokenStart_ length:bufferPosition_ - tokenStart_];
}

- (jint)getEndColumn {
  return bufferStart_ + bufferPosition_;
}

- (jint)getEndLine {
  return 1;
}

- (jint)getBeginColumn {
  return bufferStart_ + tokenStart_;
}

- (jint)getBeginLine {
  return 1;
}

- (void)dealloc {
  RELEASE_(buffer_);
  RELEASE_(input_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoReader:", "FastCharStream", NULL, 0x1, NULL, NULL },
    { "readChar", NULL, "C", 0x11, "Ljava.io.IOException;", NULL },
    { "refill", NULL, "V", 0x12, "Ljava.io.IOException;", NULL },
    { "BeginToken", NULL, "C", 0x11, "Ljava.io.IOException;", NULL },
    { "backupWithInt:", "backup", "V", 0x11, NULL, NULL },
    { "GetImage", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getEndColumn", NULL, "I", 0x11, NULL, NULL },
    { "getEndLine", NULL, "I", 0x11, NULL, NULL },
    { "getBeginColumn", NULL, "I", 0x11, NULL, NULL },
    { "getBeginLine", NULL, "I", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "buffer_", NULL, 0x0, "[C", NULL, NULL, .constantValue.asLong = 0 },
    { "bufferLength_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bufferPosition_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "tokenStart_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bufferStart_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "input_", NULL, 0x0, "Ljava.io.Reader;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserClassicFastCharStream = { 2, "FastCharStream", "org.apache.lucene.queryparser.classic", NULL, 0x11, 10, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueryparserClassicFastCharStream;
}

@end

void OrgApacheLuceneQueryparserClassicFastCharStream_initWithJavaIoReader_(OrgApacheLuceneQueryparserClassicFastCharStream *self, JavaIoReader *r) {
  NSObject_init(self);
  JreStrongAssign(&self->buffer_, nil);
  self->bufferLength_ = 0;
  self->bufferPosition_ = 0;
  self->tokenStart_ = 0;
  self->bufferStart_ = 0;
  JreStrongAssign(&self->input_, r);
}

OrgApacheLuceneQueryparserClassicFastCharStream *new_OrgApacheLuceneQueryparserClassicFastCharStream_initWithJavaIoReader_(JavaIoReader *r) {
  OrgApacheLuceneQueryparserClassicFastCharStream *self = [OrgApacheLuceneQueryparserClassicFastCharStream alloc];
  OrgApacheLuceneQueryparserClassicFastCharStream_initWithJavaIoReader_(self, r);
  return self;
}

jchar OrgApacheLuceneQueryparserClassicFastCharStream_readChar(OrgApacheLuceneQueryparserClassicFastCharStream *self) {
  if (self->bufferPosition_ >= self->bufferLength_) OrgApacheLuceneQueryparserClassicFastCharStream_refill(self);
  return IOSCharArray_Get(nil_chk(self->buffer_), self->bufferPosition_++);
}

void OrgApacheLuceneQueryparserClassicFastCharStream_refill(OrgApacheLuceneQueryparserClassicFastCharStream *self) {
  jint newPosition = self->bufferLength_ - self->tokenStart_;
  if (self->tokenStart_ == 0) {
    if (self->buffer_ == nil) {
      JreStrongAssignAndConsume(&self->buffer_, [IOSCharArray newArrayWithLength:2048]);
    }
    else if (self->bufferLength_ == self->buffer_->size_) {
      IOSCharArray *newBuffer = [IOSCharArray arrayWithLength:self->buffer_->size_ * 2];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->buffer_, 0, newBuffer, 0, self->bufferLength_);
      JreStrongAssign(&self->buffer_, newBuffer);
    }
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->buffer_, self->tokenStart_, self->buffer_, 0, newPosition);
  }
  self->bufferLength_ = newPosition;
  self->bufferPosition_ = newPosition;
  self->bufferStart_ += self->tokenStart_;
  self->tokenStart_ = 0;
  jint charsRead = [((JavaIoReader *) nil_chk(self->input_)) readWithCharArray:self->buffer_ withInt:newPosition withInt:((IOSCharArray *) nil_chk(self->buffer_))->size_ - newPosition];
  if (charsRead == -1) @throw [new_JavaIoIOException_initWithNSString_(@"read past eof") autorelease];
  else self->bufferLength_ += charsRead;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserClassicFastCharStream)
