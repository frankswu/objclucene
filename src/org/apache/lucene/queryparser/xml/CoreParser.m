//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/xml/CoreParser.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "javax/xml/parsers/DocumentBuilder.h"
#include "javax/xml/parsers/DocumentBuilderFactory.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/queryparser/classic/QueryParser.h"
#include "org/apache/lucene/queryparser/xml/CoreParser.h"
#include "org/apache/lucene/queryparser/xml/FilterBuilder.h"
#include "org/apache/lucene/queryparser/xml/FilterBuilderFactory.h"
#include "org/apache/lucene/queryparser/xml/ParserException.h"
#include "org/apache/lucene/queryparser/xml/QueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/QueryBuilderFactory.h"
#include "org/apache/lucene/queryparser/xml/builders/BooleanQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/BoostingTermBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/CachedFilterBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/ConstantScoreQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/DisjunctionMaxQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/FilteredQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/MatchAllDocsQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/NumericRangeFilterBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/NumericRangeQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/RangeQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanFirstBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanNearBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanNotBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanOrBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanOrTermsBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanQueryBuilderFactory.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanTermBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/TermQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/TermsQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder.h"
#include "org/apache/lucene/search/Query.h"
#include "org/w3c/dom/Document.h"
#include "org/w3c/dom/Element.h"

@interface OrgApacheLuceneQueryparserXmlCoreParser ()

+ (id<OrgW3cDomDocument>)parseXMLWithJavaIoInputStream:(JavaIoInputStream *)pXmlFile;

@end

__attribute__((unused)) static id<OrgW3cDomDocument> OrgApacheLuceneQueryparserXmlCoreParser_parseXMLWithJavaIoInputStream_(JavaIoInputStream *pXmlFile);

jint OrgApacheLuceneQueryparserXmlCoreParser_maxNumCachedFilters_ = 20;

@implementation OrgApacheLuceneQueryparserXmlCoreParser

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
       withOrgApacheLuceneQueryparserClassicQueryParser:(OrgApacheLuceneQueryparserClassicQueryParser *)parser {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, analyzer, parser);
  return self;
}

- (instancetype)initWithNSString:(NSString *)defaultField
withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(self, defaultField, analyzer);
  return self;
}

- (instancetype)initWithNSString:(NSString *)defaultField
withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
withOrgApacheLuceneQueryparserClassicQueryParser:(OrgApacheLuceneQueryparserClassicQueryParser *)parser {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, defaultField, analyzer, parser);
  return self;
}

- (OrgApacheLuceneSearchQuery *)parseWithJavaIoInputStream:(JavaIoInputStream *)xmlStream {
  return [self getQueryWithOrgW3cDomElement:[((id<OrgW3cDomDocument>) nil_chk(OrgApacheLuceneQueryparserXmlCoreParser_parseXMLWithJavaIoInputStream_(xmlStream))) getDocumentElement]];
}

- (void)addQueryBuilderWithNSString:(NSString *)nodeName
withOrgApacheLuceneQueryparserXmlQueryBuilder:(id<OrgApacheLuceneQueryparserXmlQueryBuilder>)builder {
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(queryFactory_)) addBuilderWithNSString:nodeName withOrgApacheLuceneQueryparserXmlQueryBuilder:builder];
}

- (void)addFilterBuilderWithNSString:(NSString *)nodeName
withOrgApacheLuceneQueryparserXmlFilterBuilder:(id<OrgApacheLuceneQueryparserXmlFilterBuilder>)builder {
  [((OrgApacheLuceneQueryparserXmlFilterBuilderFactory *) nil_chk(filterFactory_)) addBuilderWithNSString:nodeName withOrgApacheLuceneQueryparserXmlFilterBuilder:builder];
}

+ (id<OrgW3cDomDocument>)parseXMLWithJavaIoInputStream:(JavaIoInputStream *)pXmlFile {
  return OrgApacheLuceneQueryparserXmlCoreParser_parseXMLWithJavaIoInputStream_(pXmlFile);
}

- (OrgApacheLuceneSearchQuery *)getQueryWithOrgW3cDomElement:(id<OrgW3cDomElement>)e {
  return [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(queryFactory_)) getQueryWithOrgW3cDomElement:e];
}

- (void)dealloc {
  RELEASE_(analyzer_);
  RELEASE_(parser_);
  RELEASE_(queryFactory_);
  RELEASE_(filterFactory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneQueryparserClassicQueryParser:", "CoreParser", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withOrgApacheLuceneAnalysisAnalyzer:", "CoreParser", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneQueryparserClassicQueryParser:", "CoreParser", NULL, 0x4, NULL, NULL },
    { "parseWithJavaIoInputStream:", "parse", "Lorg.apache.lucene.search.Query;", 0x1, "Lorg.apache.lucene.queryparser.xml.ParserException;", NULL },
    { "addQueryBuilderWithNSString:withOrgApacheLuceneQueryparserXmlQueryBuilder:", "addQueryBuilder", "V", 0x1, NULL, NULL },
    { "addFilterBuilderWithNSString:withOrgApacheLuceneQueryparserXmlFilterBuilder:", "addFilterBuilder", "V", 0x1, NULL, NULL },
    { "parseXMLWithJavaIoInputStream:", "parseXML", "Lorg.w3c.dom.Document;", 0xa, "Lorg.apache.lucene.queryparser.xml.ParserException;", NULL },
    { "getQueryWithOrgW3cDomElement:", "getQuery", "Lorg.apache.lucene.search.Query;", 0x1, "Lorg.apache.lucene.queryparser.xml.ParserException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "analyzer_", NULL, 0x4, "Lorg.apache.lucene.analysis.Analyzer;", NULL, NULL, .constantValue.asLong = 0 },
    { "parser_", NULL, 0x4, "Lorg.apache.lucene.queryparser.classic.QueryParser;", NULL, NULL, .constantValue.asLong = 0 },
    { "queryFactory_", NULL, 0x4, "Lorg.apache.lucene.queryparser.xml.QueryBuilderFactory;", NULL, NULL, .constantValue.asLong = 0 },
    { "filterFactory_", NULL, 0x4, "Lorg.apache.lucene.queryparser.xml.FilterBuilderFactory;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxNumCachedFilters_", NULL, 0x9, "I", &OrgApacheLuceneQueryparserXmlCoreParser_maxNumCachedFilters_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserXmlCoreParser = { 2, "CoreParser", "org.apache.lucene.queryparser.xml", NULL, 0x1, 8, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueryparserXmlCoreParser;
}

@end

void OrgApacheLuceneQueryparserXmlCoreParser_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(OrgApacheLuceneQueryparserXmlCoreParser *self, OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, nil, analyzer, parser);
}

OrgApacheLuceneQueryparserXmlCoreParser *new_OrgApacheLuceneQueryparserXmlCoreParser_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  OrgApacheLuceneQueryparserXmlCoreParser *self = [OrgApacheLuceneQueryparserXmlCoreParser alloc];
  OrgApacheLuceneQueryparserXmlCoreParser_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, analyzer, parser);
  return self;
}

void OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneQueryparserXmlCoreParser *self, NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, defaultField, analyzer, nil);
}

OrgApacheLuceneQueryparserXmlCoreParser *new_OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneQueryparserXmlCoreParser *self = [OrgApacheLuceneQueryparserXmlCoreParser alloc];
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(self, defaultField, analyzer);
  return self;
}

void OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(OrgApacheLuceneQueryparserXmlCoreParser *self, NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  NSObject_init(self);
  JreStrongAssign(&self->analyzer_, analyzer);
  JreStrongAssign(&self->parser_, parser);
  JreStrongAssignAndConsume(&self->filterFactory_, new_OrgApacheLuceneQueryparserXmlFilterBuilderFactory_init());
  [self->filterFactory_ addBuilderWithNSString:@"RangeFilter" withOrgApacheLuceneQueryparserXmlFilterBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersRangeFilterBuilder_init() autorelease]];
  [self->filterFactory_ addBuilderWithNSString:@"NumericRangeFilter" withOrgApacheLuceneQueryparserXmlFilterBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersNumericRangeFilterBuilder_init() autorelease]];
  JreStrongAssignAndConsume(&self->queryFactory_, new_OrgApacheLuceneQueryparserXmlQueryBuilderFactory_init());
  [self->queryFactory_ addBuilderWithNSString:@"TermQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersTermQueryBuilder_init() autorelease]];
  [self->queryFactory_ addBuilderWithNSString:@"TermsQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersTermsQueryBuilder_initWithOrgApacheLuceneAnalysisAnalyzer_(analyzer) autorelease]];
  [self->queryFactory_ addBuilderWithNSString:@"MatchAllDocsQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersMatchAllDocsQueryBuilder_init() autorelease]];
  [self->queryFactory_ addBuilderWithNSString:@"BooleanQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersBooleanQueryBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilder_(self->queryFactory_) autorelease]];
  [self->queryFactory_ addBuilderWithNSString:@"NumericRangeQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersNumericRangeQueryBuilder_init() autorelease]];
  [self->queryFactory_ addBuilderWithNSString:@"RangeQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersRangeQueryBuilder_init() autorelease]];
  [self->queryFactory_ addBuilderWithNSString:@"DisjunctionMaxQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersDisjunctionMaxQueryBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilder_(self->queryFactory_) autorelease]];
  if (parser != nil) {
    [self->queryFactory_ addBuilderWithNSString:@"UserQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersUserInputQueryBuilder_initWithOrgApacheLuceneQueryparserClassicQueryParser_(parser) autorelease]];
  }
  else {
    [self->queryFactory_ addBuilderWithNSString:@"UserQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersUserInputQueryBuilder_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(defaultField, analyzer) autorelease]];
  }
  [self->queryFactory_ addBuilderWithNSString:@"FilteredQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersFilteredQueryBuilder_initWithOrgApacheLuceneQueryparserXmlFilterBuilder_withOrgApacheLuceneQueryparserXmlQueryBuilder_(self->filterFactory_, self->queryFactory_) autorelease]];
  [self->queryFactory_ addBuilderWithNSString:@"ConstantScoreQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersConstantScoreQueryBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilderFactory_(self->queryFactory_) autorelease]];
  [self->filterFactory_ addBuilderWithNSString:@"CachedFilter" withOrgApacheLuceneQueryparserXmlFilterBuilder:[new_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilderFactory_withOrgApacheLuceneQueryparserXmlFilterBuilderFactory_withInt_(self->queryFactory_, self->filterFactory_, OrgApacheLuceneQueryparserXmlCoreParser_maxNumCachedFilters_) autorelease]];
  OrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilderFactory *sqof = [new_OrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilderFactory_init() autorelease];
  OrgApacheLuceneQueryparserXmlBuildersSpanNearBuilder *snb = [new_OrgApacheLuceneQueryparserXmlBuildersSpanNearBuilder_initWithOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder_(sqof) autorelease];
  [sqof addBuilderWithNSString:@"SpanNear" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:snb];
  [self->queryFactory_ addBuilderWithNSString:@"SpanNear" withOrgApacheLuceneQueryparserXmlQueryBuilder:snb];
  OrgApacheLuceneQueryparserXmlBuildersBoostingTermBuilder *btb = [new_OrgApacheLuceneQueryparserXmlBuildersBoostingTermBuilder_init() autorelease];
  [sqof addBuilderWithNSString:@"BoostingTermQuery" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:btb];
  [self->queryFactory_ addBuilderWithNSString:@"BoostingTermQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:btb];
  OrgApacheLuceneQueryparserXmlBuildersSpanTermBuilder *snt = [new_OrgApacheLuceneQueryparserXmlBuildersSpanTermBuilder_init() autorelease];
  [sqof addBuilderWithNSString:@"SpanTerm" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:snt];
  [self->queryFactory_ addBuilderWithNSString:@"SpanTerm" withOrgApacheLuceneQueryparserXmlQueryBuilder:snt];
  OrgApacheLuceneQueryparserXmlBuildersSpanOrBuilder *sot = [new_OrgApacheLuceneQueryparserXmlBuildersSpanOrBuilder_initWithOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder_(sqof) autorelease];
  [sqof addBuilderWithNSString:@"SpanOr" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:sot];
  [self->queryFactory_ addBuilderWithNSString:@"SpanOr" withOrgApacheLuceneQueryparserXmlQueryBuilder:sot];
  OrgApacheLuceneQueryparserXmlBuildersSpanOrTermsBuilder *sots = [new_OrgApacheLuceneQueryparserXmlBuildersSpanOrTermsBuilder_initWithOrgApacheLuceneAnalysisAnalyzer_(analyzer) autorelease];
  [sqof addBuilderWithNSString:@"SpanOrTerms" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:sots];
  [self->queryFactory_ addBuilderWithNSString:@"SpanOrTerms" withOrgApacheLuceneQueryparserXmlQueryBuilder:sots];
  OrgApacheLuceneQueryparserXmlBuildersSpanFirstBuilder *sft = [new_OrgApacheLuceneQueryparserXmlBuildersSpanFirstBuilder_initWithOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder_(sqof) autorelease];
  [sqof addBuilderWithNSString:@"SpanFirst" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:sft];
  [self->queryFactory_ addBuilderWithNSString:@"SpanFirst" withOrgApacheLuceneQueryparserXmlQueryBuilder:sft];
  OrgApacheLuceneQueryparserXmlBuildersSpanNotBuilder *snot = [new_OrgApacheLuceneQueryparserXmlBuildersSpanNotBuilder_initWithOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder_(sqof) autorelease];
  [sqof addBuilderWithNSString:@"SpanNot" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:snot];
  [self->queryFactory_ addBuilderWithNSString:@"SpanNot" withOrgApacheLuceneQueryparserXmlQueryBuilder:snot];
}

OrgApacheLuceneQueryparserXmlCoreParser *new_OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  OrgApacheLuceneQueryparserXmlCoreParser *self = [OrgApacheLuceneQueryparserXmlCoreParser alloc];
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, defaultField, analyzer, parser);
  return self;
}

id<OrgW3cDomDocument> OrgApacheLuceneQueryparserXmlCoreParser_parseXMLWithJavaIoInputStream_(JavaIoInputStream *pXmlFile) {
  OrgApacheLuceneQueryparserXmlCoreParser_initialize();
  JavaxXmlParsersDocumentBuilderFactory *dbf = JavaxXmlParsersDocumentBuilderFactory_newInstance();
  JavaxXmlParsersDocumentBuilder *db = nil;
  @try {
    db = [((JavaxXmlParsersDocumentBuilderFactory *) nil_chk(dbf)) newDocumentBuilder];
  }
  @catch (JavaLangException *se) {
    @throw [new_OrgApacheLuceneQueryparserXmlParserException_initWithNSString_withJavaLangThrowable_(@"XML Parser configuration error", se) autorelease];
  }
  id<OrgW3cDomDocument> doc = nil;
  @try {
    doc = [((JavaxXmlParsersDocumentBuilder *) nil_chk(db)) parseWithJavaIoInputStream:pXmlFile];
  }
  @catch (JavaLangException *se) {
    @throw [new_OrgApacheLuceneQueryparserXmlParserException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Error parsing XML stream:", se), se) autorelease];
  }
  return doc;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserXmlCoreParser)
