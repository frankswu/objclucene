//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/NumericRangeQueryNode.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/document/FieldType.h"
#include "org/apache/lucene/queryparser/flexible/core/QueryNodeException.h"
#include "org/apache/lucene/queryparser/flexible/core/messages/QueryParserMessages.h"
#include "org/apache/lucene/queryparser/flexible/messages/MessageImpl.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/NumericConfig.h"
#include "org/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/standard/nodes/NumericQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/standard/nodes/NumericRangeQueryNode.h"

@interface OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode ()

+ (OrgApacheLuceneDocumentFieldType_NumericType *)getNumericDataTypeWithNSNumber:(NSNumber *)number;

@end

__attribute__((unused)) static OrgApacheLuceneDocumentFieldType_NumericType *OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_getNumericDataTypeWithNSNumber_(NSNumber *number);

@implementation OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode

- (instancetype)initWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *)lower
                    withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *)upper
                                                                            withBoolean:(jboolean)lowerInclusive
                                                                            withBoolean:(jboolean)upperInclusive
                      withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig:(OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *)numericConfig {
  OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withBoolean_withBoolean_withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_(self, lower, upper, lowerInclusive, upperInclusive, numericConfig);
  return self;
}

+ (OrgApacheLuceneDocumentFieldType_NumericType *)getNumericDataTypeWithNSNumber:(NSNumber *)number {
  return OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_getNumericDataTypeWithNSNumber_(number);
}

- (void)setBoundsWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *)lower
                 withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *)upper
                                                                         withBoolean:(jboolean)lowerInclusive
                                                                         withBoolean:(jboolean)upperInclusive
                   withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig:(OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *)numericConfig {
  if (numericConfig == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"numericConfig cannot be null!");
  }
  OrgApacheLuceneDocumentFieldType_NumericType *lowerNumberType, *upperNumberType;
  if (lower != nil && [lower getValue] != nil) {
    lowerNumberType = OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_getNumericDataTypeWithNSNumber_([lower getValue]);
  }
  else {
    lowerNumberType = nil;
  }
  if (upper != nil && [upper getValue] != nil) {
    upperNumberType = OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_getNumericDataTypeWithNSNumber_([upper getValue]);
  }
  else {
    upperNumberType = nil;
  }
  if (lowerNumberType != nil && ![lowerNumberType isEqual:[numericConfig getType]]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"lower value's type should be the same as numericConfig type: ", lowerNumberType, @" != ", [numericConfig getType]));
  }
  if (upperNumberType != nil && ![upperNumberType isEqual:[numericConfig getType]]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"upper value's type should be the same as numericConfig type: ", upperNumberType, @" != ", [numericConfig getType]));
  }
  [super setBoundsWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldValuePairQueryNode:lower withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldValuePairQueryNode:upper withBoolean:lowerInclusive withBoolean:upperInclusive];
  JreStrongAssign(&self->numericConfig_, numericConfig);
}

- (OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *)getNumericConfig {
  return self->numericConfig_;
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_(@"<numericRange lowerInclusive='");
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithBoolean:[self isLowerInclusive]])) appendWithNSString:@"' upperInclusive='"])) appendWithBoolean:[self isUpperInclusive]])) appendWithNSString:JreStrcat("$I", @"' precisionStep='", [((OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *) nil_chk(numericConfig_)) getPrecisionStep])])) appendWithNSString:JreStrcat("$@", @"' type='", [((OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *) nil_chk(numericConfig_)) getType])])) appendWithNSString:@"'>\n"];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithId:[self getLowerBound]])) appendWithChar:0x000a];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithId:[self getUpperBound]])) appendWithChar:0x000a];
  [sb appendWithNSString:@"</numericRange>"];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(numericConfig_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:withBoolean:withBoolean:withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig:", "NumericRangeQueryNode", NULL, 0x1, "Lorg.apache.lucene.queryparser.flexible.core.QueryNodeException;", NULL },
    { "getNumericDataTypeWithNSNumber:", "getNumericDataType", "Lorg.apache.lucene.document.FieldType$NumericType;", 0xa, "Lorg.apache.lucene.queryparser.flexible.core.QueryNodeException;", NULL },
    { "setBoundsWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:withBoolean:withBoolean:withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig:", "setBounds", "V", 0x1, "Lorg.apache.lucene.queryparser.flexible.core.QueryNodeException;", NULL },
    { "getNumericConfig", NULL, "Lorg.apache.lucene.queryparser.flexible.standard.config.NumericConfig;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "numericConfig_", NULL, 0x1, "Lorg.apache.lucene.queryparser.flexible.standard.config.NumericConfig;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.queryparser.flexible.standard.nodes.NumericQueryNode;"};
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode = { 2, "NumericRangeQueryNode", "org.apache.lucene.queryparser.flexible.standard.nodes", NULL, 0x1, 5, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode<Lorg/apache/lucene/queryparser/flexible/standard/nodes/NumericQueryNode;>;" };
  return &_OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withBoolean_withBoolean_withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode *self, OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *lower, OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *upper, jboolean lowerInclusive, jboolean upperInclusive, OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *numericConfig) {
  OrgApacheLuceneQueryparserFlexibleStandardNodesAbstractRangeQueryNode_init(self);
  [self setBoundsWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:lower withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode:upper withBoolean:lowerInclusive withBoolean:upperInclusive withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig:numericConfig];
}

OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withBoolean_withBoolean_withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *lower, OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *upper, jboolean lowerInclusive, jboolean upperInclusive, OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *numericConfig) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode, initWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withBoolean_withBoolean_withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_, lower, upper, lowerInclusive, upperInclusive, numericConfig)
}

OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withBoolean_withBoolean_withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *lower, OrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode *upper, jboolean lowerInclusive, jboolean upperInclusive, OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *numericConfig) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode, initWithOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withOrgApacheLuceneQueryparserFlexibleStandardNodesNumericQueryNode_withBoolean_withBoolean_withOrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_, lower, upper, lowerInclusive, upperInclusive, numericConfig)
}

OrgApacheLuceneDocumentFieldType_NumericType *OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_getNumericDataTypeWithNSNumber_(NSNumber *number) {
  OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode_initialize();
  if ([number isKindOfClass:[JavaLangLong class]]) {
    return JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, LONG);
  }
  else if ([number isKindOfClass:[JavaLangInteger class]]) {
    return JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, INT);
  }
  else if ([number isKindOfClass:[JavaLangDouble class]]) {
    return JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, DOUBLE);
  }
  else if ([number isKindOfClass:[JavaLangFloat class]]) {
    return JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, FLOAT);
  }
  else {
    @throw create_OrgApacheLuceneQueryparserFlexibleCoreQueryNodeException_initWithOrgApacheLuceneQueryparserFlexibleMessagesMessage_(create_OrgApacheLuceneQueryparserFlexibleMessagesMessageImpl_initWithNSString_withNSObjectArray_(JreLoadStatic(OrgApacheLuceneQueryparserFlexibleCoreMessagesQueryParserMessages, NUMBER_CLASS_NOT_SUPPORTED_BY_NUMERIC_RANGE_QUERY), [IOSObjectArray arrayWithObjects:(id[]){ [((NSNumber *) nil_chk(number)) getClass] } count:1 type:NSObject_class_()]));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardNodesNumericRangeQueryNode)
