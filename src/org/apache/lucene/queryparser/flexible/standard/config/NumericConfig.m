//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/config/NumericConfig.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/text/NumberFormat.h"
#include "org/apache/lucene/document/FieldType.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/NumericConfig.h"

@interface OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig () {
 @public
  jint precisionStep_;
  JavaTextNumberFormat *format_;
  OrgApacheLuceneDocumentFieldType_NumericTypeEnum *type_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig, format_, JavaTextNumberFormat *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig, type_, OrgApacheLuceneDocumentFieldType_NumericTypeEnum *)

@implementation OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig

- (instancetype)initWithInt:(jint)precisionStep
   withJavaTextNumberFormat:(JavaTextNumberFormat *)format
withOrgApacheLuceneDocumentFieldType_NumericTypeEnum:(OrgApacheLuceneDocumentFieldType_NumericTypeEnum *)type {
  OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_initWithInt_withJavaTextNumberFormat_withOrgApacheLuceneDocumentFieldType_NumericTypeEnum_(self, precisionStep, format, type);
  return self;
}

- (jint)getPrecisionStep {
  return precisionStep_;
}

- (void)setPrecisionStepWithInt:(jint)precisionStep {
  self->precisionStep_ = precisionStep;
}

- (JavaTextNumberFormat *)getNumberFormat {
  return format_;
}

- (OrgApacheLuceneDocumentFieldType_NumericTypeEnum *)getType {
  return type_;
}

- (void)setTypeWithOrgApacheLuceneDocumentFieldType_NumericTypeEnum:(OrgApacheLuceneDocumentFieldType_NumericTypeEnum *)type {
  if (type == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"type cannot be null!") autorelease];
  }
  JreStrongAssign(&self->type_, type);
}

- (void)setNumberFormatWithJavaTextNumberFormat:(JavaTextNumberFormat *)format {
  if (format == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"format cannot be null!") autorelease];
  }
  JreStrongAssign(&self->format_, format);
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) return true;
  if ([obj isKindOfClass:[OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig class]]) {
    OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *other = (OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *) check_class_cast(obj, [OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig class]);
    if (self->precisionStep_ == ((OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *) nil_chk(other))->precisionStep_ && self->type_ == other->type_ && (self->format_ == other->format_ || ([((JavaTextNumberFormat *) nil_chk(self->format_)) isEqual:other->format_]))) {
      return true;
    }
  }
  return false;
}

- (void)dealloc {
  RELEASE_(format_);
  RELEASE_(type_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withJavaTextNumberFormat:withOrgApacheLuceneDocumentFieldType_NumericTypeEnum:", "NumericConfig", NULL, 0x1, NULL, NULL },
    { "getPrecisionStep", NULL, "I", 0x1, NULL, NULL },
    { "setPrecisionStepWithInt:", "setPrecisionStep", "V", 0x1, NULL, NULL },
    { "getNumberFormat", NULL, "Ljava.text.NumberFormat;", 0x1, NULL, NULL },
    { "getType", NULL, "Lorg.apache.lucene.document.FieldType$NumericType;", 0x1, NULL, NULL },
    { "setTypeWithOrgApacheLuceneDocumentFieldType_NumericTypeEnum:", "setType", "V", 0x1, NULL, NULL },
    { "setNumberFormatWithJavaTextNumberFormat:", "setNumberFormat", "V", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "precisionStep_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "format_", NULL, 0x2, "Ljava.text.NumberFormat;", NULL, NULL, .constantValue.asLong = 0 },
    { "type_", NULL, 0x2, "Lorg.apache.lucene.document.FieldType$NumericType;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig = { 2, "NumericConfig", "org.apache.lucene.queryparser.flexible.standard.config", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_initWithInt_withJavaTextNumberFormat_withOrgApacheLuceneDocumentFieldType_NumericTypeEnum_(OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *self, jint precisionStep, JavaTextNumberFormat *format, OrgApacheLuceneDocumentFieldType_NumericTypeEnum *type) {
  NSObject_init(self);
  [self setPrecisionStepWithInt:precisionStep];
  [self setNumberFormatWithJavaTextNumberFormat:format];
  [self setTypeWithOrgApacheLuceneDocumentFieldType_NumericTypeEnum:type];
}

OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *new_OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_initWithInt_withJavaTextNumberFormat_withOrgApacheLuceneDocumentFieldType_NumericTypeEnum_(jint precisionStep, JavaTextNumberFormat *format, OrgApacheLuceneDocumentFieldType_NumericTypeEnum *type) {
  OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig *self = [OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig alloc];
  OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig_initWithInt_withJavaTextNumberFormat_withOrgApacheLuceneDocumentFieldType_NumericTypeEnum_(self, precisionStep, format, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardConfigNumericConfig)
