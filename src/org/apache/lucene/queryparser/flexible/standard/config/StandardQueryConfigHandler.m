//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Locale.h"
#include "org/apache/lucene/queryparser/flexible/core/config/AbstractQueryConfig.h"
#include "org/apache/lucene/queryparser/flexible/core/config/ConfigurationKey.h"
#include "org/apache/lucene/queryparser/flexible/core/config/QueryConfigHandler.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/FieldBoostMapFCListener.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/FieldDateResolutionFCListener.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/FuzzyConfig.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/NumericFieldConfigListener.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler.h"
#include "org/apache/lucene/search/MultiTermQuery.h"

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initWithNSString_withInt_(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *self, NSString *__name, jint __ordinal);

@implementation OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "StandardQueryConfigHandler", NULL, 0x1, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$ConfigurationKeys;", "Lorg.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator;"};
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler = { 2, "StandardQueryConfigHandler", "org.apache.lucene.queryparser.flexible.standard.config", NULL, 0x1, 1, methods, 0, NULL, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler *self) {
  OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_init(self);
  [self addFieldConfigListenerWithOrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfigListener:create_OrgApacheLuceneQueryparserFlexibleStandardConfigFieldBoostMapFCListener_initWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_(self)];
  [self addFieldConfigListenerWithOrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfigListener:create_OrgApacheLuceneQueryparserFlexibleStandardConfigFieldDateResolutionFCListener_initWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_(self)];
  [self addFieldConfigListenerWithOrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfigListener:create_OrgApacheLuceneQueryparserFlexibleStandardConfigNumericFieldConfigListener_initWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_(self)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ALLOW_LEADING_WILDCARD) withId:JavaLangBoolean_valueOfWithBoolean_(false)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ANALYZER) withId:nil];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, DEFAULT_OPERATOR) withId:JreLoadEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, OR)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, PHRASE_SLOP) withId:JavaLangInteger_valueOfWithInt_(0)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOWERCASE_EXPANDED_TERMS) withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ENABLE_POSITION_INCREMENTS) withId:JavaLangBoolean_valueOfWithBoolean_(false)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_BOOST_MAP) withId:create_JavaUtilLinkedHashMap_init()];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FUZZY_CONFIG) withId:create_OrgApacheLuceneQueryparserFlexibleStandardConfigFuzzyConfig_init()];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOCALE) withId:JavaUtilLocale_getDefault()];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, MULTI_TERM_REWRITE_METHOD) withId:JreLoadStatic(OrgApacheLuceneSearchMultiTermQuery, CONSTANT_SCORE_REWRITE)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_DATE_RESOLUTION_MAP) withId:create_JavaUtilHashMap_init()];
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler *new_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler, init)
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler *create_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys)

OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ENABLE_POSITION_INCREMENTS;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOWERCASE_EXPANDED_TERMS;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ALLOW_LEADING_WILDCARD;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ANALYZER;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DEFAULT_OPERATOR;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_PHRASE_SLOP;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOCALE;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_TIMEZONE;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_TERM_REWRITE_METHOD;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_FIELDS;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_BOOST_MAP;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_DATE_RESOLUTION_MAP;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FUZZY_CONFIG;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DATE_RESOLUTION;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_BOOST;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG_MAP;

@implementation OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)ENABLE_POSITION_INCREMENTS {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ENABLE_POSITION_INCREMENTS;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)LOWERCASE_EXPANDED_TERMS {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOWERCASE_EXPANDED_TERMS;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)ALLOW_LEADING_WILDCARD {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ALLOW_LEADING_WILDCARD;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)ANALYZER {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ANALYZER;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)DEFAULT_OPERATOR {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DEFAULT_OPERATOR;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)PHRASE_SLOP {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_PHRASE_SLOP;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)LOCALE {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOCALE;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)TIMEZONE {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_TIMEZONE;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)MULTI_TERM_REWRITE_METHOD {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_TERM_REWRITE_METHOD;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)MULTI_FIELDS {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_FIELDS;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)FIELD_BOOST_MAP {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_BOOST_MAP;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)FIELD_DATE_RESOLUTION_MAP {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_DATE_RESOLUTION_MAP;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)FUZZY_CONFIG {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FUZZY_CONFIG;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)DATE_RESOLUTION {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DATE_RESOLUTION;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)BOOST {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_BOOST;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)NUMERIC_CONFIG {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)NUMERIC_CONFIG_MAP {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG_MAP;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys class]) {
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ENABLE_POSITION_INCREMENTS, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOWERCASE_EXPANDED_TERMS, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ALLOW_LEADING_WILDCARD, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ANALYZER, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DEFAULT_OPERATOR, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_PHRASE_SLOP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOCALE, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_TIMEZONE, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_TERM_REWRITE_METHOD, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_FIELDS, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_BOOST_MAP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_DATE_RESOLUTION_MAP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FUZZY_CONFIG, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DATE_RESOLUTION, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_BOOST, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG_MAP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ConfigurationKeys", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ENABLE_POSITION_INCREMENTS", "ENABLE_POSITION_INCREMENTS", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ENABLE_POSITION_INCREMENTS, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/lang/Boolean;>;", .constantValue.asLong = 0 },
    { "LOWERCASE_EXPANDED_TERMS", "LOWERCASE_EXPANDED_TERMS", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOWERCASE_EXPANDED_TERMS, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/lang/Boolean;>;", .constantValue.asLong = 0 },
    { "ALLOW_LEADING_WILDCARD", "ALLOW_LEADING_WILDCARD", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ALLOW_LEADING_WILDCARD, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/lang/Boolean;>;", .constantValue.asLong = 0 },
    { "ANALYZER", "ANALYZER", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ANALYZER, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/analysis/Analyzer;>;", .constantValue.asLong = 0 },
    { "DEFAULT_OPERATOR", "DEFAULT_OPERATOR", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DEFAULT_OPERATOR, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler$Operator;>;", .constantValue.asLong = 0 },
    { "PHRASE_SLOP", "PHRASE_SLOP", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_PHRASE_SLOP, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/lang/Integer;>;", .constantValue.asLong = 0 },
    { "LOCALE", "LOCALE", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOCALE, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/Locale;>;", .constantValue.asLong = 0 },
    { "TIMEZONE", "TIMEZONE", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_TIMEZONE, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/TimeZone;>;", .constantValue.asLong = 0 },
    { "MULTI_TERM_REWRITE_METHOD", "MULTI_TERM_REWRITE_METHOD", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_TERM_REWRITE_METHOD, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/search/MultiTermQuery$RewriteMethod;>;", .constantValue.asLong = 0 },
    { "MULTI_FIELDS", "MULTI_FIELDS", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_FIELDS, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<[Ljava/lang/CharSequence;>;", .constantValue.asLong = 0 },
    { "FIELD_BOOST_MAP", "FIELD_BOOST_MAP", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_BOOST_MAP, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Float;>;>;", .constantValue.asLong = 0 },
    { "FIELD_DATE_RESOLUTION_MAP", "FIELD_DATE_RESOLUTION_MAP", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_DATE_RESOLUTION_MAP, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/Map<Ljava/lang/CharSequence;Lorg/apache/lucene/document/DateTools$Resolution;>;>;", .constantValue.asLong = 0 },
    { "FUZZY_CONFIG", "FUZZY_CONFIG", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FUZZY_CONFIG, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/queryparser/flexible/standard/config/FuzzyConfig;>;", .constantValue.asLong = 0 },
    { "DATE_RESOLUTION", "DATE_RESOLUTION", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DATE_RESOLUTION, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/document/DateTools$Resolution;>;", .constantValue.asLong = 0 },
    { "BOOST", "BOOST", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_BOOST, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/lang/Float;>;", .constantValue.asLong = 0 },
    { "NUMERIC_CONFIG", "NUMERIC_CONFIG", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/queryparser/flexible/standard/config/NumericConfig;>;", .constantValue.asLong = 0 },
    { "NUMERIC_CONFIG_MAP", "NUMERIC_CONFIG_MAP", 0x19, "Lorg.apache.lucene.queryparser.flexible.core.config.ConfigurationKey;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG_MAP, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/queryparser/flexible/standard/config/NumericConfig;>;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys = { 2, "ConfigurationKeys", "org.apache.lucene.queryparser.flexible.standard.config", "StandardQueryConfigHandler", 0x19, 1, methods, 17, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys *self) {
  NSObject_init(self);
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys *new_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, init)
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys *create_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator)

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_[2];

@implementation OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator

+ (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)AND {
  return JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, AND);
}

+ (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)OR {
  return JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, OR);
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values();
}

+ (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_valueOfWithNSString_(name);
}

- (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_Enum)toNSEnum {
  return (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_Enum)[self ordinal];
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 2 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, AND) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initWithNSString_withInt_(e, @"AND", 0);
    (JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, OR) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initWithNSString_withInt_(e, @"OR", 1);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "AND", "AND", 0x4019, "Lorg.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator;", &JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, AND), NULL, .constantValue.asLong = 0 },
    { "OR", "OR", 0x4019, "Lorg.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator;", &JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, OR), NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$Operator;"};
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator = { 2, "Operator", "org.apache.lucene.queryparser.flexible.standard.config", "StandardQueryConfigHandler", 0x4019, 0, NULL, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler$Operator;>;" };
  return &_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initWithNSString_withInt_(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values() {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_ count:2 type:OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_class_()];
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initialize();
  for (int i = 0; i < 2; i++) {
    OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *e = OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator)
