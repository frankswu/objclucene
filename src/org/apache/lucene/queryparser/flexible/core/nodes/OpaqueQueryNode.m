//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/OpaqueQueryNode.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/CloneNotSupportedException.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/OpaqueQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"
#include "org/apache/lucene/queryparser/flexible/core/parser/EscapeQuerySyntax.h"

@interface OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode () {
 @public
  id<JavaLangCharSequence> schema_;
  id<JavaLangCharSequence> value_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode, schema_, id<JavaLangCharSequence>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode, value_, id<JavaLangCharSequence>)

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)schema
                    withJavaLangCharSequence:(id<JavaLangCharSequence>)value {
  OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_(self, schema, value);
  return self;
}

- (NSString *)description {
  return JreStrcat("$@$@$", @"<opaque schema='", self->schema_, @"' value='", self->value_, @"'/>");
}

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escapeSyntaxParser {
  return JreStrcat("C@$@C", '@', self->schema_, @":'", self->value_, '\'');
}

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)cloneTree {
  OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode *clone = (OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode *) check_class_cast([super cloneTree], [OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode class]);
  JreStrongAssign(&((OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode *) nil_chk(clone))->schema_, self->schema_);
  JreStrongAssign(&clone->value_, self->value_);
  return clone;
}

- (id<JavaLangCharSequence>)getSchema {
  return self->schema_;
}

- (id<JavaLangCharSequence>)getValue {
  return self->value_;
}

- (void)dealloc {
  RELEASE_(schema_);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangCharSequence:withJavaLangCharSequence:", "OpaqueQueryNode", NULL, 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:", "toQueryString", "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "cloneTree", NULL, "Lorg.apache.lucene.queryparser.flexible.core.nodes.QueryNode;", 0x1, "Ljava.lang.CloneNotSupportedException;", NULL },
    { "getSchema", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "schema_", NULL, 0x2, "Ljava.lang.CharSequence;", NULL, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x2, "Ljava.lang.CharSequence;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode = { 2, "OpaqueQueryNode", "org.apache.lucene.queryparser.flexible.core.nodes", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_(OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode *self, id<JavaLangCharSequence> schema, id<JavaLangCharSequence> value) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_init(self);
  JreStrongAssign(&self->schema_, nil);
  JreStrongAssign(&self->value_, nil);
  [self setLeafWithBoolean:true];
  JreStrongAssign(&self->schema_, schema);
  JreStrongAssign(&self->value_, value);
}

OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode *new_OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_(id<JavaLangCharSequence> schema, id<JavaLangCharSequence> value) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode *self = [OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode alloc];
  OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_(self, schema, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesOpaqueQueryNode)
