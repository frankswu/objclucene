//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/PathQueryNode.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/PathQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"
#include "org/apache/lucene/queryparser/flexible/core/parser/EscapeQuerySyntax.h"

@interface OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode () {
 @public
  id<JavaUtilList> values_;
}

- (id<JavaLangCharSequence>)getPathString;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode, values_, id<JavaUtilList>)

__attribute__((unused)) static id<JavaLangCharSequence> OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_getPathString(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *self);

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)pathElements {
  OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_initWithJavaUtilList_(self, pathElements);
  return self;
}

- (id<JavaUtilList>)getPathElements {
  return values_;
}

- (void)setPathElementsWithJavaUtilList:(id<JavaUtilList>)elements {
  JreStrongAssign(&self->values_, elements);
}

- (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *)getPathElementWithInt:(jint)index {
  return [((id<JavaUtilList>) nil_chk(values_)) getWithInt:index];
}

- (id<JavaLangCharSequence>)getFirstPathElement {
  return ((OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *) nil_chk([((id<JavaUtilList>) nil_chk(values_)) getWithInt:0]))->value_;
}

- (id<JavaUtilList>)getPathElementsWithInt:(jint)startIndex {
  id<JavaUtilList> rValues = [new_JavaUtilArrayList_init() autorelease];
  for (jint i = startIndex; i < [((id<JavaUtilList>) nil_chk(self->values_)) size]; i++) {
    @try {
      [rValues addWithId:[((OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *) nil_chk([self->values_ getWithInt:i])) clone]];
    }
    @catch (JavaLangCloneNotSupportedException *e) {
    }
  }
  return rValues;
}

- (id<JavaLangCharSequence>)getPathString {
  return OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_getPathString(self);
}

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escaper {
  JavaLangStringBuilder *path = [new_JavaLangStringBuilder_init() autorelease];
  [((JavaLangStringBuilder *) nil_chk([path appendWithNSString:@"/"])) appendWithJavaLangCharSequence:[self getFirstPathElement]];
  for (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText * __strong pathelement in nil_chk([self getPathElementsWithInt:1])) {
    id<JavaLangCharSequence> value = [((id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>) nil_chk(escaper)) escapeWithJavaLangCharSequence:((OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *) nil_chk(pathelement))->value_ withJavaUtilLocale:JavaUtilLocale_getDefault() withOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax_TypeEnum:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax_TypeEnum, STRING)];
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([path appendWithNSString:@"/\""])) appendWithJavaLangCharSequence:value])) appendWithNSString:@"\""];
  }
  return [path description];
}

- (NSString *)description {
  OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *text = [((id<JavaUtilList>) nil_chk(self->values_)) getWithInt:0];
  return JreStrcat("$I$I$@$", @"<path start='", ((OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *) nil_chk(text))->begin_, @"' end='", text->end_, @"' path='", OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_getPathString(self), @"'/>");
}

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)cloneTree {
  OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *clone = (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *) check_class_cast([super cloneTree], [OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode class]);
  if (self->values_ != nil) {
    id<JavaUtilList> localValues = [new_JavaUtilArrayList_init() autorelease];
    for (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText * __strong value in self->values_) {
      [localValues addWithId:[((OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *) nil_chk(value)) clone]];
    }
    JreStrongAssign(&((OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *) nil_chk(clone))->values_, localValues);
  }
  return clone;
}

- (void)dealloc {
  RELEASE_(values_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "PathQueryNode", NULL, 0x1, NULL, NULL },
    { "getPathElements", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "setPathElementsWithJavaUtilList:", "setPathElements", "V", 0x1, NULL, NULL },
    { "getPathElementWithInt:", "getPathElement", "Lorg.apache.lucene.queryparser.flexible.core.nodes.PathQueryNode$QueryText;", 0x1, NULL, NULL },
    { "getFirstPathElement", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "getPathElementsWithInt:", "getPathElements", "Ljava.util.List;", 0x1, NULL, NULL },
    { "getPathString", NULL, "Ljava.lang.CharSequence;", 0x2, NULL, NULL },
    { "toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:", "toQueryString", "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "cloneTree", NULL, "Lorg.apache.lucene.queryparser.flexible.core.nodes.QueryNode;", 0x1, "Ljava.lang.CloneNotSupportedException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "values_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/queryparser/flexible/core/nodes/PathQueryNode$QueryText;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.queryparser.flexible.core.nodes.PathQueryNode$QueryText;"};
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode = { 2, "PathQueryNode", "org.apache.lucene.queryparser.flexible.core.nodes", NULL, 0x1, 10, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_initWithJavaUtilList_(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *self, id<JavaUtilList> pathElements) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_init(self);
  JreStrongAssign(&self->values_, nil);
  JreStrongAssign(&self->values_, pathElements);
  if ([((id<JavaUtilList>) nil_chk(pathElements)) size] <= 1) {
    @throw [new_JavaLangRuntimeException_initWithNSString_(@"PathQuerynode requires more 2 or more path elements.") autorelease];
  }
}

OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *new_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_initWithJavaUtilList_(id<JavaUtilList> pathElements) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *self = [OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode alloc];
  OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_initWithJavaUtilList_(self, pathElements);
  return self;
}

id<JavaLangCharSequence> OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_getPathString(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *self) {
  JavaLangStringBuilder *path = [new_JavaLangStringBuilder_init() autorelease];
  for (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText * __strong pathelement in nil_chk(self->values_)) {
    [((JavaLangStringBuilder *) nil_chk([path appendWithNSString:@"/"])) appendWithJavaLangCharSequence:((OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *) nil_chk(pathelement))->value_];
  }
  return [path description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode)

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)value
                                     withInt:(jint)begin
                                     withInt:(jint)end {
  OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText_initWithJavaLangCharSequence_withInt_withInt_(self, value, begin, end);
  return self;
}

- (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *)clone {
  OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *clone = (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *) check_class_cast([super clone], [OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText class]);
  JreStrongAssign(&((OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *) nil_chk(clone))->value_, self->value_);
  clone->begin_ = self->begin_;
  clone->end_ = self->end_;
  return clone;
}

- (id<JavaLangCharSequence>)getValue {
  return value_;
}

- (jint)getBegin {
  return begin_;
}

- (jint)getEnd {
  return end_;
}

- (NSString *)description {
  return JreStrcat("@$I$I", value_, @", ", begin_, @", ", end_);
}

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangCharSequence:withInt:withInt:", "QueryText", NULL, 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.apache.lucene.queryparser.flexible.core.nodes.PathQueryNode$QueryText;", 0x1, "Ljava.lang.CloneNotSupportedException;", NULL },
    { "getValue", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "getBegin", NULL, "I", 0x1, NULL, NULL },
    { "getEnd", NULL, "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x0, "Ljava.lang.CharSequence;", NULL, NULL, .constantValue.asLong = 0 },
    { "begin_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "end_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText = { 2, "QueryText", "org.apache.lucene.queryparser.flexible.core.nodes", "PathQueryNode", 0x9, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText_initWithJavaLangCharSequence_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *self, id<JavaLangCharSequence> value, jint begin, jint end) {
  NSObject_init(self);
  JreStrongAssign(&self->value_, nil);
  JreStrongAssign(&self->value_, value);
  self->begin_ = begin;
  self->end_ = end;
}

OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *new_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText_initWithJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> value, jint begin, jint end) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *self = [OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText alloc];
  OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText_initWithJavaLangCharSequence_withInt_withInt_(self, value, begin, end);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText)
