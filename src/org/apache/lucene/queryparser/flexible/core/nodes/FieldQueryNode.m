//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/FieldQueryNode.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/util/Locale.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/FieldQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"
#include "org/apache/lucene/queryparser/flexible/core/parser/EscapeQuerySyntax.h"

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)field
                    withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                     withInt:(jint)begin
                                     withInt:(jint)end {
  OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(self, field, text, begin, end);
  return self;
}

- (id<JavaLangCharSequence>)getTermEscapedWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escaper {
  return [((id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>) nil_chk(escaper)) escapeWithJavaLangCharSequence:self->text_ withJavaUtilLocale:JavaUtilLocale_getDefault() withOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax_Type:JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax_Type, NORMAL)];
}

- (id<JavaLangCharSequence>)getTermEscapeQuotedWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escaper {
  return [((id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>) nil_chk(escaper)) escapeWithJavaLangCharSequence:self->text_ withJavaUtilLocale:JavaUtilLocale_getDefault() withOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax_Type:JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax_Type, STRING)];
}

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escaper {
  if ([self isDefaultFieldWithJavaLangCharSequence:self->field_]) {
    return [self getTermEscapedWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:escaper];
  }
  else {
    return JreStrcat("@C@", self->field_, ':', [self getTermEscapedWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:escaper]);
  }
}

- (NSString *)description {
  return JreStrcat("$I$I$@$@$", @"<field start='", self->begin_, @"' end='", self->end_, @"' field='", self->field_, @"' text='", self->text_, @"'/>");
}

- (NSString *)getTextAsString {
  if (self->text_ == nil) return nil;
  else return [self->text_ description];
}

- (NSString *)getFieldAsString {
  if (self->field_ == nil) return nil;
  else return [self->field_ description];
}

- (jint)getBegin {
  return self->begin_;
}

- (void)setBeginWithInt:(jint)begin {
  self->begin_ = begin;
}

- (jint)getEnd {
  return self->end_;
}

- (void)setEndWithInt:(jint)end {
  self->end_ = end;
}

- (id<JavaLangCharSequence>)getField {
  return self->field_;
}

- (void)setFieldWithJavaLangCharSequence:(id<JavaLangCharSequence>)field {
  JreStrongAssign(&self->field_, field);
}

- (jint)getPositionIncrement {
  return self->positionIncrement_;
}

- (void)setPositionIncrementWithInt:(jint)pi {
  self->positionIncrement_ = pi;
}

- (id<JavaLangCharSequence>)getText {
  return self->text_;
}

- (void)setTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  JreStrongAssign(&self->text_, text);
}

- (OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *)cloneTree {
  OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *fqn = (OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *) cast_chk([super cloneTree], [OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode class]);
  ((OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *) nil_chk(fqn))->begin_ = self->begin_;
  fqn->end_ = self->end_;
  JreStrongAssign(&fqn->field_, self->field_);
  JreStrongAssign(&fqn->text_, self->text_);
  fqn->positionIncrement_ = self->positionIncrement_;
  fqn->toQueryStringIgnoreFields_ = self->toQueryStringIgnoreFields_;
  return fqn;
}

- (id<JavaLangCharSequence>)getValue {
  return [self getText];
}

- (void)setValueWithId:(id<JavaLangCharSequence>)value {
  [self setTextWithJavaLangCharSequence:value];
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(text_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangCharSequence:withJavaLangCharSequence:withInt:withInt:", "FieldQueryNode", NULL, 0x1, NULL, NULL },
    { "getTermEscapedWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:", "getTermEscaped", "Ljava.lang.CharSequence;", 0x4, NULL, NULL },
    { "getTermEscapeQuotedWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:", "getTermEscapeQuoted", "Ljava.lang.CharSequence;", 0x4, NULL, NULL },
    { "toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:", "toQueryString", "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTextAsString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getFieldAsString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getBegin", NULL, "I", 0x1, NULL, NULL },
    { "setBeginWithInt:", "setBegin", "V", 0x1, NULL, NULL },
    { "getEnd", NULL, "I", 0x1, NULL, NULL },
    { "setEndWithInt:", "setEnd", "V", 0x1, NULL, NULL },
    { "getField", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "setFieldWithJavaLangCharSequence:", "setField", "V", 0x1, NULL, NULL },
    { "getPositionIncrement", NULL, "I", 0x1, NULL, NULL },
    { "setPositionIncrementWithInt:", "setPositionIncrement", "V", 0x1, NULL, NULL },
    { "getText", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "setTextWithJavaLangCharSequence:", "setText", "V", 0x1, NULL, NULL },
    { "cloneTree", NULL, "Lorg.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;", 0x1, "Ljava.lang.CloneNotSupportedException;", NULL },
    { "getValue", NULL, "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
    { "setValueWithId:", "setValue", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "field_", NULL, 0x4, "Ljava.lang.CharSequence;", NULL, NULL, .constantValue.asLong = 0 },
    { "text_", NULL, 0x4, "Ljava.lang.CharSequence;", NULL, NULL, .constantValue.asLong = 0 },
    { "begin_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "end_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "positionIncrement_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode = { 2, "FieldQueryNode", "org.apache.lucene.queryparser.flexible.core.nodes", NULL, 0x1, 20, methods, 5, fields, 0, NULL, 0, NULL, NULL, "Lorg/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl;Lorg/apache/lucene/queryparser/flexible/core/nodes/FieldValuePairQueryNode<Ljava/lang/CharSequence;>;Lorg/apache/lucene/queryparser/flexible/core/nodes/TextableQueryNode;" };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *self, id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_init(self);
  JreStrongAssign(&self->field_, field);
  JreStrongAssign(&self->text_, text);
  self->begin_ = begin;
  self->end_ = end;
  [self setLeafWithBoolean:true];
}

OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *new_OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode, initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_, field, text, begin, end)
}

OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *create_OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode, initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_, field, text, begin, end)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode)
