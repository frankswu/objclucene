//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/config/AbstractQueryConfig.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/HashMap.h"
#include "org/apache/lucene/queryparser/flexible/core/config/AbstractQueryConfig.h"
#include "org/apache/lucene/queryparser/flexible/core/config/ConfigurationKey.h"

@interface OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig () {
 @public
  JavaUtilHashMap *configMap_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig, configMap_, JavaUtilHashMap *)

@implementation OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:(OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)key {
  if (key == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"key cannot be null!") autorelease];
  }
  return (id) [((JavaUtilHashMap *) nil_chk(self->configMap_)) getWithId:key];
}

- (jboolean)hasWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:(OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)key {
  if (key == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"key cannot be null!") autorelease];
  }
  return [((JavaUtilHashMap *) nil_chk(self->configMap_)) containsKeyWithId:key];
}

- (void)setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:(OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)key
                                                                     withId:(id)value {
  if (key == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"key cannot be null!") autorelease];
  }
  if (value == nil) {
    [self unsetWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:key];
  }
  else {
    [((JavaUtilHashMap *) nil_chk(self->configMap_)) putWithId:key withId:value];
  }
}

- (jboolean)unsetWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:(OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)key {
  if (key == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"key cannot be null!") autorelease];
  }
  return [((JavaUtilHashMap *) nil_chk(self->configMap_)) removeWithId:key] != nil;
}

- (void)dealloc {
  RELEASE_(configMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractQueryConfig", NULL, 0x0, NULL, NULL },
    { "getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:", "get", "TT;", 0x1, NULL, "<T:Ljava/lang/Object;>(Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<TT;>;)TT;" },
    { "hasWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:", "has", "Z", 0x1, NULL, "<T:Ljava/lang/Object;>(Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<TT;>;)Z" },
    { "setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:withId:", "set", "V", 0x1, NULL, "<T:Ljava/lang/Object;>(Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<TT;>;TT;)V" },
    { "unsetWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:", "unset", "Z", 0x1, NULL, "<T:Ljava/lang/Object;>(Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<TT;>;)Z" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "configMap_", NULL, 0x12, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<*>;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig = { 2, "AbstractQueryConfig", "org.apache.lucene.queryparser.flexible.core.config", NULL, 0x401, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig_init(OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->configMap_, new_JavaUtilHashMap_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig)
