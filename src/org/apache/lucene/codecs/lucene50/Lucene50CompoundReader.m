//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/lucene50/Lucene50CompoundReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50CompoundFormat.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50CompoundReader.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/store/ChecksumIndexInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/Lock.h"
#include "org/apache/lucene/util/IOUtils.h"

@interface OrgApacheLuceneCodecsLucene50Lucene50CompoundReader () {
 @public
  OrgApacheLuceneStoreDirectory *directory_;
  NSString *segmentName_;
  id<JavaUtilMap> entries_;
  OrgApacheLuceneStoreIndexInput *handle_;
  jint version__;
}

- (id<JavaUtilMap>)readEntriesWithByteArray:(IOSByteArray *)segmentID
          withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                               withNSString:(NSString *)entriesFileName;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader, directory_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader, segmentName_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader, entries_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader, handle_, OrgApacheLuceneStoreIndexInput *)

__attribute__((unused)) static id<JavaUtilMap> OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_readEntriesWithByteArray_withOrgApacheLuceneStoreDirectory_withNSString_(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader *self, IOSByteArray *segmentID, OrgApacheLuceneStoreDirectory *dir, NSString *entriesFileName);

@implementation OrgApacheLuceneCodecsLucene50Lucene50CompoundReader

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)directory
                  withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)si
                    withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIOContext_(self, directory, si, context);
  return self;
}

- (id<JavaUtilMap>)readEntriesWithByteArray:(IOSByteArray *)segmentID
          withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                               withNSString:(NSString *)entriesFileName {
  return OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_readEntriesWithByteArray_withOrgApacheLuceneStoreDirectory_withNSString_(self, segmentID, dir, entriesFileName);
}

- (void)close {
  OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ handle_ } count:1 type:JavaIoCloseable_class_()]);
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name
                        withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  [self ensureOpen];
  NSString *id_ = OrgApacheLuceneIndexIndexFileNames_stripSegmentNameWithNSString_(name);
  OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry *entry_ = [((id<JavaUtilMap>) nil_chk(entries_)) getWithId:id_];
  if (entry_ == nil) {
    @throw [new_JavaIoFileNotFoundException_initWithNSString_(JreStrcat("$$$$$@C", @"No sub-file with id ", id_, @" found (fileName=", name, @" files: ", [entries_ keySet], ')')) autorelease];
  }
  return [((OrgApacheLuceneStoreIndexInput *) nil_chk(handle_)) sliceWithNSString:name withLong:((OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry *) nil_chk(entry_))->offset_ withLong:entry_->length_];
}

- (IOSObjectArray *)listAll {
  [self ensureOpen];
  IOSObjectArray *res = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(entries_)) keySet])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[entries_ size] type:NSString_class_()]];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(res))->size_; i++) {
    IOSObjectArray_Set(res, i, JreStrcat("$$", segmentName_, IOSObjectArray_Get(res, i)));
  }
  return res;
}

- (void)deleteFileWithNSString:(NSString *)name {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (void)renameFileWithNSString:(NSString *)from
                  withNSString:(NSString *)to {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (jlong)fileLengthWithNSString:(NSString *)name {
  [self ensureOpen];
  OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry *e = [((id<JavaUtilMap>) nil_chk(entries_)) getWithId:OrgApacheLuceneIndexIndexFileNames_stripSegmentNameWithNSString_(name)];
  if (e == nil) @throw [new_JavaIoFileNotFoundException_initWithNSString_(name) autorelease];
  return ((OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry *) nil_chk(e))->length_;
}

- (OrgApacheLuceneStoreIndexOutput *)createOutputWithNSString:(NSString *)name
                            withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (void)syncWithJavaUtilCollection:(id<JavaUtilCollection>)names {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (OrgApacheLuceneStoreLock *)obtainLockWithNSString:(NSString *)name {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (NSString *)description {
  return JreStrcat("$$$@C", @"CompoundFileDirectory(segment=\"", segmentName_, @"\" in dir=", directory_, ')');
}

- (void)dealloc {
  RELEASE_(directory_);
  RELEASE_(segmentName_);
  RELEASE_(entries_);
  RELEASE_(handle_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentInfo:withOrgApacheLuceneStoreIOContext:", "Lucene50CompoundReader", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "readEntriesWithByteArray:withOrgApacheLuceneStoreDirectory:withNSString:", "readEntries", "Ljava.util.Map;", 0x12, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "openInputWithNSString:withOrgApacheLuceneStoreIOContext:", "openInput", "Lorg.apache.lucene.store.IndexInput;", 0x1, "Ljava.io.IOException;", NULL },
    { "listAll", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "deleteFileWithNSString:", "deleteFile", "V", 0x1, NULL, NULL },
    { "renameFileWithNSString:withNSString:", "renameFile", "V", 0x1, NULL, NULL },
    { "fileLengthWithNSString:", "fileLength", "J", 0x1, "Ljava.io.IOException;", NULL },
    { "createOutputWithNSString:withOrgApacheLuceneStoreIOContext:", "createOutput", "Lorg.apache.lucene.store.IndexOutput;", 0x1, "Ljava.io.IOException;", NULL },
    { "syncWithJavaUtilCollection:", "sync", "V", 0x1, NULL, NULL },
    { "obtainLockWithNSString:", "obtainLock", "Lorg.apache.lucene.store.Lock;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "directory_", NULL, 0x12, "Lorg.apache.lucene.store.Directory;", NULL, NULL, .constantValue.asLong = 0 },
    { "segmentName_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "entries_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/codecs/lucene50/Lucene50CompoundReader$FileEntry;>;", .constantValue.asLong = 0 },
    { "handle_", NULL, 0x12, "Lorg.apache.lucene.store.IndexInput;", NULL, NULL, .constantValue.asLong = 0 },
    { "version__", "version", 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.lucene50.Lucene50CompoundReader$FileEntry;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsLucene50Lucene50CompoundReader = { 2, "Lucene50CompoundReader", "org.apache.lucene.codecs.lucene50", NULL, 0x10, 12, methods, 5, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsLucene50Lucene50CompoundReader;
}

@end

void OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader *self, OrgApacheLuceneStoreDirectory *directory, OrgApacheLuceneIndexSegmentInfo *si, OrgApacheLuceneStoreIOContext *context) {
  OrgApacheLuceneStoreDirectory_init(self);
  JreStrongAssign(&self->directory_, directory);
  JreStrongAssign(&self->segmentName_, ((OrgApacheLuceneIndexSegmentInfo *) nil_chk(si))->name_);
  NSString *dataFileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(self->segmentName_, @"", OrgApacheLuceneCodecsLucene50Lucene50CompoundFormat_DATA_EXTENSION_);
  NSString *entriesFileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(self->segmentName_, @"", OrgApacheLuceneCodecsLucene50Lucene50CompoundFormat_ENTRIES_EXTENSION_);
  JreStrongAssign(&self->entries_, OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_readEntriesWithByteArray_withOrgApacheLuceneStoreDirectory_withNSString_(self, [si getId], directory, entriesFileName));
  jboolean success = false;
  JreStrongAssign(&self->handle_, [((OrgApacheLuceneStoreDirectory *) nil_chk(directory)) openInputWithNSString:dataFileName withOrgApacheLuceneStoreIOContext:context]);
  @try {
    OrgApacheLuceneCodecsCodecUtil_checkIndexHeaderWithOrgApacheLuceneStoreDataInput_withNSString_withInt_withInt_withByteArray_withNSString_(self->handle_, OrgApacheLuceneCodecsLucene50Lucene50CompoundFormat_DATA_CODEC_, self->version__, self->version__, [si getId], @"");
    OrgApacheLuceneCodecsCodecUtil_retrieveChecksumWithOrgApacheLuceneStoreIndexInput_(self->handle_);
    success = true;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self->handle_ } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneCodecsLucene50Lucene50CompoundReader *new_OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneStoreDirectory *directory, OrgApacheLuceneIndexSegmentInfo *si, OrgApacheLuceneStoreIOContext *context) {
  OrgApacheLuceneCodecsLucene50Lucene50CompoundReader *self = [OrgApacheLuceneCodecsLucene50Lucene50CompoundReader alloc];
  OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIOContext_(self, directory, si, context);
  return self;
}

id<JavaUtilMap> OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_readEntriesWithByteArray_withOrgApacheLuceneStoreDirectory_withNSString_(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader *self, IOSByteArray *segmentID, OrgApacheLuceneStoreDirectory *dir, NSString *entriesFileName) {
  id<JavaUtilMap> mapping = nil;
  {
    OrgApacheLuceneStoreChecksumIndexInput *entriesStream = [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) openChecksumInputWithNSString:entriesFileName withOrgApacheLuceneStoreIOContext:JreLoadStatic(OrgApacheLuceneStoreIOContext, READONCE_)];
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      JavaLangThrowable *priorE = nil;
      @try {
        self->version__ = OrgApacheLuceneCodecsCodecUtil_checkIndexHeaderWithOrgApacheLuceneStoreDataInput_withNSString_withInt_withInt_withByteArray_withNSString_(entriesStream, OrgApacheLuceneCodecsLucene50Lucene50CompoundFormat_ENTRY_CODEC_, OrgApacheLuceneCodecsLucene50Lucene50CompoundFormat_VERSION_START, OrgApacheLuceneCodecsLucene50Lucene50CompoundFormat_VERSION_CURRENT, segmentID, @"");
        jint numEntries = [((OrgApacheLuceneStoreChecksumIndexInput *) nil_chk(entriesStream)) readVInt];
        mapping = [new_JavaUtilHashMap_initWithInt_(numEntries) autorelease];
        for (jint i = 0; i < numEntries; i++) {
          OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry *fileEntry = [new_OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry_init() autorelease];
          NSString *id_ = [entriesStream readString];
          OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry *previous = [mapping putWithId:id_ withId:fileEntry];
          if (previous != nil) {
            @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$$$", @"Duplicate cfs entry id=", id_, @" in CFS "), entriesStream) autorelease];
          }
          fileEntry->offset_ = [entriesStream readLong];
          fileEntry->length_ = [entriesStream readLong];
        }
      }
      @catch (JavaLangThrowable *exception) {
        priorE = exception;
      }
      @finally {
        OrgApacheLuceneCodecsCodecUtil_checkFooterWithOrgApacheLuceneStoreChecksumIndexInput_withJavaLangThrowable_(entriesStream, priorE);
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (entriesStream != nil) {
        if (__primaryException1 != nil) {
          @try {
            [entriesStream close];
          } @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        } else {
          [entriesStream close];
        }
      }
    }
  }
  return JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(mapping);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader)

@implementation OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "offset_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "length_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry = { 2, "FileEntry", "org.apache.lucene.codecs.lucene50", "Lucene50CompoundReader", 0x19, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry;
}

@end

void OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry_init(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry *self) {
  NSObject_init(self);
}

OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry *new_OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry_init() {
  OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry *self = [OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry alloc];
  OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsLucene50Lucene50CompoundReader_FileEntry)
