//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipReader.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/util/Arrays.h"
#include "org/apache/lucene/codecs/MultiLevelSkipListReader.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50PostingsFormat.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50SkipReader.h"
#include "org/apache/lucene/store/IndexInput.h"

@interface OrgApacheLuceneCodecsLucene50Lucene50SkipReader () {
 @public
  IOSLongArray *docPointer_;
  IOSLongArray *posPointer_;
  IOSLongArray *payPointer_;
  IOSIntArray *posBufferUpto_;
  IOSIntArray *payloadByteUpto_;
  jlong lastPosPointer_;
  jlong lastPayPointer_;
  jint lastPayloadByteUpto_;
  jlong lastDocPointer_;
  jint lastPosBufferUpto_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsLucene50Lucene50SkipReader, docPointer_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsLucene50Lucene50SkipReader, posPointer_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsLucene50Lucene50SkipReader, payPointer_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsLucene50Lucene50SkipReader, posBufferUpto_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsLucene50Lucene50SkipReader, payloadByteUpto_, IOSIntArray *)

@implementation OrgApacheLuceneCodecsLucene50Lucene50SkipReader

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)skipStream
                                               withInt:(jint)maxSkipLevels
                                           withBoolean:(jboolean)hasPos
                                           withBoolean:(jboolean)hasOffsets
                                           withBoolean:(jboolean)hasPayloads {
  OrgApacheLuceneCodecsLucene50Lucene50SkipReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withBoolean_withBoolean_withBoolean_(self, skipStream, maxSkipLevels, hasPos, hasOffsets, hasPayloads);
  return self;
}

- (jint)trimWithInt:(jint)df {
  return df % OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_BLOCK_SIZE == 0 ? df - 1 : df;
}

- (void)init__WithLong:(jlong)skipPointer
              withLong:(jlong)docBasePointer
              withLong:(jlong)posBasePointer
              withLong:(jlong)payBasePointer
               withInt:(jint)df {
  [super init__WithLong:skipPointer withInt:[self trimWithInt:df]];
  lastDocPointer_ = docBasePointer;
  lastPosPointer_ = posBasePointer;
  lastPayPointer_ = payBasePointer;
  JavaUtilArrays_fillWithLongArray_withLong_(docPointer_, docBasePointer);
  if (posPointer_ != nil) {
    JavaUtilArrays_fillWithLongArray_withLong_(posPointer_, posBasePointer);
    if (payPointer_ != nil) {
      JavaUtilArrays_fillWithLongArray_withLong_(payPointer_, payBasePointer);
    }
  }
  else {
    JreAssert((posBasePointer == 0), (@"org/apache/lucene/codecs/lucene50/Lucene50SkipReader.java:115 condition failed: assert posBasePointer == 0;"));
  }
}

- (jlong)getDocPointer {
  return lastDocPointer_;
}

- (jlong)getPosPointer {
  return lastPosPointer_;
}

- (jint)getPosBufferUpto {
  return lastPosBufferUpto_;
}

- (jlong)getPayPointer {
  return lastPayPointer_;
}

- (jint)getPayloadByteUpto {
  return lastPayloadByteUpto_;
}

- (jint)getNextSkipDoc {
  return IOSIntArray_Get(nil_chk(skipDoc_), 0);
}

- (void)seekChildWithInt:(jint)level {
  [super seekChildWithInt:level];
  *IOSLongArray_GetRef(nil_chk(docPointer_), level) = lastDocPointer_;
  if (posPointer_ != nil) {
    *IOSLongArray_GetRef(posPointer_, level) = lastPosPointer_;
    *IOSIntArray_GetRef(nil_chk(posBufferUpto_), level) = lastPosBufferUpto_;
    if (payloadByteUpto_ != nil) {
      *IOSIntArray_GetRef(payloadByteUpto_, level) = lastPayloadByteUpto_;
    }
    if (payPointer_ != nil) {
      *IOSLongArray_GetRef(payPointer_, level) = lastPayPointer_;
    }
  }
}

- (void)setLastSkipDataWithInt:(jint)level {
  [super setLastSkipDataWithInt:level];
  lastDocPointer_ = IOSLongArray_Get(nil_chk(docPointer_), level);
  if (posPointer_ != nil) {
    lastPosPointer_ = IOSLongArray_Get(posPointer_, level);
    lastPosBufferUpto_ = IOSIntArray_Get(nil_chk(posBufferUpto_), level);
    if (payPointer_ != nil) {
      lastPayPointer_ = IOSLongArray_Get(payPointer_, level);
    }
    if (payloadByteUpto_ != nil) {
      lastPayloadByteUpto_ = IOSIntArray_Get(payloadByteUpto_, level);
    }
  }
}

- (jint)readSkipDataWithInt:(jint)level
withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)skipStream {
  jint delta = [((OrgApacheLuceneStoreIndexInput *) nil_chk(skipStream)) readVInt];
  *IOSLongArray_GetRef(nil_chk(docPointer_), level) += [skipStream readVLong];
  if (posPointer_ != nil) {
    *IOSLongArray_GetRef(posPointer_, level) += [skipStream readVLong];
    *IOSIntArray_GetRef(nil_chk(posBufferUpto_), level) = [skipStream readVInt];
    if (payloadByteUpto_ != nil) {
      *IOSIntArray_GetRef(payloadByteUpto_, level) = [skipStream readVInt];
    }
    if (payPointer_ != nil) {
      *IOSLongArray_GetRef(payPointer_, level) += [skipStream readVLong];
    }
  }
  return delta;
}

- (void)dealloc {
  RELEASE_(docPointer_);
  RELEASE_(posPointer_);
  RELEASE_(payPointer_);
  RELEASE_(posBufferUpto_);
  RELEASE_(payloadByteUpto_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreIndexInput:withInt:withBoolean:withBoolean:withBoolean:", "Lucene50SkipReader", NULL, 0x1, NULL, NULL },
    { "trimWithInt:", "trim", "I", 0x4, NULL, NULL },
    { "init__WithLong:withLong:withLong:withLong:withInt:", "init", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getDocPointer", NULL, "J", 0x1, NULL, NULL },
    { "getPosPointer", NULL, "J", 0x1, NULL, NULL },
    { "getPosBufferUpto", NULL, "I", 0x1, NULL, NULL },
    { "getPayPointer", NULL, "J", 0x1, NULL, NULL },
    { "getPayloadByteUpto", NULL, "I", 0x1, NULL, NULL },
    { "getNextSkipDoc", NULL, "I", 0x1, NULL, NULL },
    { "seekChildWithInt:", "seekChild", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "setLastSkipDataWithInt:", "setLastSkipData", "V", 0x4, NULL, NULL },
    { "readSkipDataWithInt:withOrgApacheLuceneStoreIndexInput:", "readSkipData", "I", 0x4, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "docPointer_", NULL, 0x2, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "posPointer_", NULL, 0x2, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "payPointer_", NULL, 0x2, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "posBufferUpto_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloadByteUpto_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastPosPointer_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "lastPayPointer_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "lastPayloadByteUpto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastDocPointer_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "lastPosBufferUpto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsLucene50Lucene50SkipReader = { 2, "Lucene50SkipReader", "org.apache.lucene.codecs.lucene50", NULL, 0x10, 12, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsLucene50Lucene50SkipReader;
}

@end

void OrgApacheLuceneCodecsLucene50Lucene50SkipReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneCodecsLucene50Lucene50SkipReader *self, OrgApacheLuceneStoreIndexInput *skipStream, jint maxSkipLevels, jboolean hasPos, jboolean hasOffsets, jboolean hasPayloads) {
  OrgApacheLuceneCodecsMultiLevelSkipListReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_withInt_(self, skipStream, maxSkipLevels, OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_BLOCK_SIZE, 8);
  JreStrongAssignAndConsume(&self->docPointer_, [IOSLongArray newArrayWithLength:maxSkipLevels]);
  if (hasPos) {
    JreStrongAssignAndConsume(&self->posPointer_, [IOSLongArray newArrayWithLength:maxSkipLevels]);
    JreStrongAssignAndConsume(&self->posBufferUpto_, [IOSIntArray newArrayWithLength:maxSkipLevels]);
    if (hasPayloads) {
      JreStrongAssignAndConsume(&self->payloadByteUpto_, [IOSIntArray newArrayWithLength:maxSkipLevels]);
    }
    else {
      JreStrongAssign(&self->payloadByteUpto_, nil);
    }
    if (hasOffsets || hasPayloads) {
      JreStrongAssignAndConsume(&self->payPointer_, [IOSLongArray newArrayWithLength:maxSkipLevels]);
    }
    else {
      JreStrongAssign(&self->payPointer_, nil);
    }
  }
  else {
    JreStrongAssign(&self->posPointer_, nil);
  }
}

OrgApacheLuceneCodecsLucene50Lucene50SkipReader *new_OrgApacheLuceneCodecsLucene50Lucene50SkipReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneStoreIndexInput *skipStream, jint maxSkipLevels, jboolean hasPos, jboolean hasOffsets, jboolean hasPayloads) {
  OrgApacheLuceneCodecsLucene50Lucene50SkipReader *self = [OrgApacheLuceneCodecsLucene50Lucene50SkipReader alloc];
  OrgApacheLuceneCodecsLucene50Lucene50SkipReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withBoolean_withBoolean_withBoolean_(self, skipStream, maxSkipLevels, hasPos, hasOffsets, hasPayloads);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsLucene50Lucene50SkipReader)
