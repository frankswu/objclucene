//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesConsumer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/NoSuchElementException.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/DocValuesConsumer.h"
#include "org/apache/lucene/codecs/memory/MemoryDocValuesConsumer.h"
#include "org/apache/lucene/codecs/memory/MemoryDocValuesFormat.h"
#include "org/apache/lucene/codecs/memory/MemoryDocValuesProducer.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/store/ByteArrayDataOutput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/MathUtil.h"
#include "org/apache/lucene/util/fst/Builder.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/PositiveIntOutputs.h"
#include "org/apache/lucene/util/fst/Util.h"
#include "org/apache/lucene/util/packed/BlockPackedWriter.h"
#include "org/apache/lucene/util/packed/MonotonicBlockPackedWriter.h"
#include "org/apache/lucene/util/packed/PackedInts.h"

@interface OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer ()

- (void)writeFSTWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                             withJavaLangIterable:(id<JavaLangIterable>)values;

@end

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_writeFSTWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values);

@interface OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator ()

- (void)encodeValuesWithInt:(jint)count;

@end

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator_encodeValuesWithInt_(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator *self, jint count);

@interface OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1 : NSObject < JavaLangIterable > {
 @public
  id<JavaLangIterable> val$docToOrdCount_;
  id<JavaLangIterable> val$ords_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0
                    withJavaLangIterable:(id<JavaLangIterable>)capture$1;


@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1, val$docToOrdCount_, id<JavaLangIterable>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1, val$ords_, id<JavaLangIterable>)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1_initWithJavaLangIterable_withJavaLangIterable_(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1 *self, id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1 *new_OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1_initWithJavaLangIterable_withJavaLangIterable_(id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1)

@implementation OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer

- (instancetype)initWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state
                                                 withNSString:(NSString *)dataCodec
                                                 withNSString:(NSString *)dataExtension
                                                 withNSString:(NSString *)metaCodec
                                                 withNSString:(NSString *)metaExtension
                                                    withFloat:(jfloat)acceptableOverheadRatio {
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_initWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_withFloat_(self, state, dataCodec, dataExtension, metaCodec, metaExtension, acceptableOverheadRatio);
  return self;
}

- (void)addNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                    withJavaLangIterable:(id<JavaLangIterable>)values {
  [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:values withBoolean:YES];
}

- (void)addNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                    withJavaLangIterable:(id<JavaLangIterable>)values
                                             withBoolean:(jboolean)optimizeStorage {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_NUMBER];
  [meta_ writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) getFilePointer]];
  jlong minValue = JavaLangLong_MAX_VALUE;
  jlong maxValue = JavaLangLong_MIN_VALUE;
  jlong blockSum = 0;
  jlong gcd = 0;
  jboolean missing = NO;
  JavaUtilHashSet *uniqueValues = nil;
  jlong count = 0;
  if (optimizeStorage) {
    uniqueValues = [new_JavaUtilHashSet_init() autorelease];
    jlong currentBlockMin = JavaLangLong_MAX_VALUE;
    jlong currentBlockMax = JavaLangLong_MIN_VALUE;
    for (NSNumber * __strong nv in nil_chk(values)) {
      jlong v;
      if (nv == nil) {
        v = 0;
        missing = YES;
      }
      else {
        v = [nv longLongValue];
      }
      if (gcd != 1) {
        if (v < JavaLangLong_MIN_VALUE / 2 || v > JavaLangLong_MAX_VALUE / 2) {
          gcd = 1;
        }
        else if (count != 0) {
          gcd = OrgApacheLuceneUtilMathUtil_gcdWithLong_withLong_(gcd, v - minValue);
        }
      }
      currentBlockMin = JavaLangMath_minWithLong_withLong_(minValue, v);
      currentBlockMax = JavaLangMath_maxWithLong_withLong_(maxValue, v);
      minValue = JavaLangMath_minWithLong_withLong_(minValue, v);
      maxValue = JavaLangMath_maxWithLong_withLong_(maxValue, v);
      if (uniqueValues != nil) {
        if ([uniqueValues addWithId:JavaLangLong_valueOfWithLong_(v)]) {
          if ([uniqueValues size] > 256) {
            uniqueValues = nil;
          }
        }
      }
      ++count;
      if (count % OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_SIZE == 0) {
        jlong blockDelta = currentBlockMax - currentBlockMin;
        jint blockDeltaRequired = OrgApacheLuceneUtilPackedPackedInts_unsignedBitsRequiredWithLong_(blockDelta);
        jint blockBPV = ((OrgApacheLuceneUtilPackedPackedInts_FormatAndBits *) nil_chk(OrgApacheLuceneUtilPackedPackedInts_fastestFormatAndBitsWithInt_withInt_withFloat_(OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_SIZE, blockDeltaRequired, acceptableOverheadRatio_)))->bitsPerValue_;
        blockSum += blockBPV;
        currentBlockMax = JavaLangLong_MIN_VALUE;
        currentBlockMin = JavaLangLong_MAX_VALUE;
      }
    }
  }
  else {
    for (NSNumber * __strong nv in nil_chk(values)) {
      jlong v = [((NSNumber *) nil_chk(nv)) longLongValue];
      maxValue = JavaLangMath_maxWithLong_withLong_(v, maxValue);
      minValue = JavaLangMath_minWithLong_withLong_(v, minValue);
      count++;
    }
  }
  if (missing) {
    jlong start = [data_ getFilePointer];
    [self writeMissingBitsetWithJavaLangIterable:values];
    [meta_ writeLongWithLong:start];
    [meta_ writeLongWithLong:[data_ getFilePointer] - start];
  }
  else {
    [meta_ writeLongWithLong:-1LL];
  }
  jlong delta = maxValue - minValue;
  jint deltaRequired = delta < 0 ? 64 : OrgApacheLuceneUtilPackedPackedInts_bitsRequiredWithLong_(delta);
  OrgApacheLuceneUtilPackedPackedInts_FormatAndBits *deltaBPV = OrgApacheLuceneUtilPackedPackedInts_fastestFormatAndBitsWithInt_withInt_withFloat_(maxDoc_, deltaRequired, acceptableOverheadRatio_);
  OrgApacheLuceneUtilPackedPackedInts_FormatAndBits *tableBPV;
  if (count < JavaLangInteger_MAX_VALUE && uniqueValues != nil) {
    tableBPV = OrgApacheLuceneUtilPackedPackedInts_fastestFormatAndBitsWithInt_withInt_withFloat_(maxDoc_, OrgApacheLuceneUtilPackedPackedInts_bitsRequiredWithLong_([uniqueValues size] - 1), acceptableOverheadRatio_);
  }
  else {
    tableBPV = nil;
  }
  OrgApacheLuceneUtilPackedPackedInts_FormatAndBits *gcdBPV;
  if (count < JavaLangInteger_MAX_VALUE && gcd != 0 && gcd != 1) {
    jlong gcdDelta = (maxValue - minValue) / gcd;
    jint gcdRequired = gcdDelta < 0 ? 64 : OrgApacheLuceneUtilPackedPackedInts_bitsRequiredWithLong_(gcdDelta);
    gcdBPV = OrgApacheLuceneUtilPackedPackedInts_fastestFormatAndBitsWithInt_withInt_withFloat_(maxDoc_, gcdRequired, acceptableOverheadRatio_);
  }
  else {
    gcdBPV = nil;
  }
  jboolean doBlock = NO;
  if (blockSum != 0) {
    jint numBlocks = maxDoc_ / OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_SIZE;
    jfloat avgBPV = blockSum / (jfloat) numBlocks;
    if (numBlocks >= 4 && (avgBPV + avgBPV * acceptableOverheadRatio_) < ((OrgApacheLuceneUtilPackedPackedInts_FormatAndBits *) nil_chk(deltaBPV))->bitsPerValue_) {
      doBlock = YES;
    }
  }
  if (count >= JavaLangInteger_MAX_VALUE) {
    doBlock = YES;
  }
  if (tableBPV != nil && (tableBPV->bitsPerValue_ + tableBPV->bitsPerValue_ * acceptableOverheadRatio_) < ((OrgApacheLuceneUtilPackedPackedInts_FormatAndBits *) nil_chk(deltaBPV))->bitsPerValue_) {
    [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_TABLE_COMPRESSED];
    IOSObjectArray *decode = [uniqueValues toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((JavaUtilHashSet *) nil_chk(uniqueValues)) size] type:JavaLangLong_class_()]];
    JavaUtilHashMap *encode = [new_JavaUtilHashMap_init() autorelease];
    jint length = JreLShift32(1, tableBPV->bitsPerValue_);
    [data_ writeVIntWithInt:length];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(decode))->size_; i++) {
      [data_ writeLongWithLong:[((JavaLangLong *) nil_chk(IOSObjectArray_Get(decode, i))) longLongValue]];
      [encode putWithId:IOSObjectArray_Get(decode, i) withId:JavaLangInteger_valueOfWithInt_(i)];
    }
    for (jint i = decode->size_; i < length; i++) {
      [data_ writeLongWithLong:0];
    }
    [meta_ writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
    [meta_ writeLongWithLong:count];
    [data_ writeVIntWithInt:[((OrgApacheLuceneUtilPackedPackedInts_FormatEnum *) nil_chk(tableBPV->format_)) getId]];
    [data_ writeVIntWithInt:tableBPV->bitsPerValue_];
    OrgApacheLuceneUtilPackedPackedInts_Writer *writer = OrgApacheLuceneUtilPackedPackedInts_getWriterNoHeaderWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilPackedPackedInts_FormatEnum_withInt_withInt_withInt_(data_, tableBPV->format_, (jint) count, tableBPV->bitsPerValue_, OrgApacheLuceneUtilPackedPackedInts_DEFAULT_BUFFER_SIZE);
    for (NSNumber * __strong nv in nil_chk(values)) {
      [((OrgApacheLuceneUtilPackedPackedInts_Writer *) nil_chk(writer)) addWithLong:[((JavaLangInteger *) nil_chk([encode getWithId:JavaLangLong_valueOfWithLong_(nv == nil ? 0 : [nv longLongValue])])) intValue]];
    }
    [((OrgApacheLuceneUtilPackedPackedInts_Writer *) nil_chk(writer)) finish];
  }
  else if (gcdBPV != nil && (gcdBPV->bitsPerValue_ + gcdBPV->bitsPerValue_ * acceptableOverheadRatio_) < ((OrgApacheLuceneUtilPackedPackedInts_FormatAndBits *) nil_chk(deltaBPV))->bitsPerValue_) {
    [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_GCD_COMPRESSED];
    [meta_ writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
    [meta_ writeLongWithLong:count];
    [data_ writeLongWithLong:minValue];
    [data_ writeLongWithLong:gcd];
    [data_ writeVIntWithInt:[((OrgApacheLuceneUtilPackedPackedInts_FormatEnum *) nil_chk(gcdBPV->format_)) getId]];
    [data_ writeVIntWithInt:gcdBPV->bitsPerValue_];
    OrgApacheLuceneUtilPackedPackedInts_Writer *writer = OrgApacheLuceneUtilPackedPackedInts_getWriterNoHeaderWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilPackedPackedInts_FormatEnum_withInt_withInt_withInt_(data_, gcdBPV->format_, (jint) count, gcdBPV->bitsPerValue_, OrgApacheLuceneUtilPackedPackedInts_DEFAULT_BUFFER_SIZE);
    for (NSNumber * __strong nv in nil_chk(values)) {
      jlong value = nv == nil ? 0 : [nv longLongValue];
      [((OrgApacheLuceneUtilPackedPackedInts_Writer *) nil_chk(writer)) addWithLong:(value - minValue) / gcd];
    }
    [((OrgApacheLuceneUtilPackedPackedInts_Writer *) nil_chk(writer)) finish];
  }
  else if (doBlock) {
    [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_COMPRESSED];
    [meta_ writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
    [meta_ writeLongWithLong:count];
    [data_ writeVIntWithInt:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_SIZE];
    OrgApacheLuceneUtilPackedBlockPackedWriter *writer = [new_OrgApacheLuceneUtilPackedBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(data_, OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_SIZE) autorelease];
    for (NSNumber * __strong nv in nil_chk(values)) {
      [writer addWithLong:nv == nil ? 0 : [nv longLongValue]];
    }
    [writer finish];
  }
  else {
    [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_DELTA_COMPRESSED];
    [meta_ writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
    [meta_ writeLongWithLong:count];
    jlong minDelta = ((OrgApacheLuceneUtilPackedPackedInts_FormatAndBits *) nil_chk(deltaBPV))->bitsPerValue_ == 64 ? 0 : minValue;
    [data_ writeLongWithLong:minDelta];
    [data_ writeVIntWithInt:[((OrgApacheLuceneUtilPackedPackedInts_FormatEnum *) nil_chk(deltaBPV->format_)) getId]];
    [data_ writeVIntWithInt:deltaBPV->bitsPerValue_];
    OrgApacheLuceneUtilPackedPackedInts_Writer *writer = OrgApacheLuceneUtilPackedPackedInts_getWriterNoHeaderWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilPackedPackedInts_FormatEnum_withInt_withInt_withInt_(data_, deltaBPV->format_, (jint) count, deltaBPV->bitsPerValue_, OrgApacheLuceneUtilPackedPackedInts_DEFAULT_BUFFER_SIZE);
    for (NSNumber * __strong nv in nil_chk(values)) {
      jlong v = nv == nil ? 0 : [nv longLongValue];
      [((OrgApacheLuceneUtilPackedPackedInts_Writer *) nil_chk(writer)) addWithLong:v - minDelta];
    }
    [((OrgApacheLuceneUtilPackedPackedInts_Writer *) nil_chk(writer)) finish];
  }
}

- (void)close {
  jboolean success = NO;
  @try {
    if (meta_ != nil) {
      [meta_ writeVIntWithInt:-1];
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(meta_);
    }
    if (data_ != nil) {
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(data_);
    }
    success = YES;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ data_, meta_ } count:2 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ data_, meta_ } count:2 type:JavaIoCloseable_class_()]);
    }
    JreStrongAssign(&data_, JreStrongAssign(&meta_, nil));
  }
}

- (void)addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                   withJavaLangIterable:(id<JavaLangIterable>)values {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BYTES];
  jint minLength = JavaLangInteger_MAX_VALUE;
  jint maxLength = JavaLangInteger_MIN_VALUE;
  jlong startFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) getFilePointer];
  jboolean missing = NO;
  jint upto = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong v in nil_chk(values)) {
    jint length;
    if (v == nil) {
      length = 0;
      missing = YES;
    }
    else {
      length = v->length_;
    }
    if (length > OrgApacheLuceneCodecsMemoryMemoryDocValuesFormat_MAX_BINARY_FIELD_LENGTH) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$I$I$@$I$@", @"DocValuesField \"", field->name_, @"\" is too large, must be <= ", OrgApacheLuceneCodecsMemoryMemoryDocValuesFormat_MAX_BINARY_FIELD_LENGTH, @" but got length=", length, @" v=", v, @"; upto=", upto, @" values=", values)) autorelease];
    }
    upto++;
    minLength = JavaLangMath_minWithInt_withInt_(minLength, length);
    maxLength = JavaLangMath_maxWithInt_withInt_(maxLength, length);
    if (v != nil) {
      [data_ writeBytesWithByteArray:v->bytes_ withInt:v->offset_ withInt:v->length_];
    }
  }
  [meta_ writeLongWithLong:startFP];
  [meta_ writeLongWithLong:[data_ getFilePointer] - startFP];
  if (missing) {
    jlong start = [data_ getFilePointer];
    [self writeMissingBitsetWithJavaLangIterable:values];
    [meta_ writeLongWithLong:start];
    [meta_ writeLongWithLong:[data_ getFilePointer] - start];
  }
  else {
    [meta_ writeLongWithLong:-1LL];
  }
  [meta_ writeVIntWithInt:minLength];
  [meta_ writeVIntWithInt:maxLength];
  if (minLength != maxLength) {
    [meta_ writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
    [meta_ writeVIntWithInt:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_SIZE];
    OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *writer = [new_OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(data_, OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_SIZE) autorelease];
    jlong addr = 0;
    for (OrgApacheLuceneUtilBytesRef * __strong v in values) {
      if (v != nil) {
        addr += v->length_;
      }
      [writer addWithLong:addr];
    }
    [writer finish];
  }
}

- (void)writeFSTWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                             withJavaLangIterable:(id<JavaLangIterable>)values {
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_writeFSTWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
}

- (void)writeMissingBitsetWithJavaLangIterable:(id<JavaLangIterable>)values {
  jlong bits = 0;
  jint count = 0;
  for (id __strong v in nil_chk(values)) {
    if (count == 64) {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) writeLongWithLong:bits];
      count = 0;
      bits = 0;
    }
    if (v != nil) {
      bits |= JreLShift64(1LL, (count & (jint) 0x3f));
    }
    count++;
  }
  if (count > 0) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) writeLongWithLong:bits];
  }
}

- (void)addSortedFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                   withJavaLangIterable:(id<JavaLangIterable>)values
                                   withJavaLangIterable:(id<JavaLangIterable>)docToOrd {
  [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:docToOrd withBoolean:NO];
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_writeFSTWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
}

- (void)addSortedNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                          withJavaLangIterable:(id<JavaLangIterable>)docToValueCount
                                          withJavaLangIterable:(id<JavaLangIterable>)values {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  if (OrgApacheLuceneCodecsDocValuesConsumer_isSingleValuedWithJavaLangIterable_(docToValueCount)) {
    [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_SORTED_NUMERIC_SINGLETON];
    [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:OrgApacheLuceneCodecsDocValuesConsumer_singletonViewWithJavaLangIterable_withJavaLangIterable_withNSNumber_(docToValueCount, values, nil) withBoolean:YES];
  }
  else {
    [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_SORTED_NUMERIC];
    [meta_ writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
    [meta_ writeVIntWithInt:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_SIZE];
    [meta_ writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) getFilePointer]];
    OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *writer = [new_OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(data_, OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_BLOCK_SIZE) autorelease];
    jlong addr = 0;
    [writer addWithLong:addr];
    for (NSNumber * __strong v in nil_chk(docToValueCount)) {
      addr += [((NSNumber *) nil_chk(v)) longLongValue];
      [writer addWithLong:addr];
    }
    [writer finish];
    jlong valueCount = [writer ord];
    [meta_ writeLongWithLong:valueCount];
    [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:values withBoolean:YES];
  }
}

- (void)addSortedSetFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                      withJavaLangIterable:(id<JavaLangIterable>)values
                                      withJavaLangIterable:(id<JavaLangIterable>)docToOrdCount
                                      withJavaLangIterable:(id<JavaLangIterable>)ords {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  if (OrgApacheLuceneCodecsDocValuesConsumer_isSingleValuedWithJavaLangIterable_(docToOrdCount)) {
    [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_SORTED_SET_SINGLETON];
    [self addSortedFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:values withJavaLangIterable:OrgApacheLuceneCodecsDocValuesConsumer_singletonViewWithJavaLangIterable_withJavaLangIterable_withNSNumber_(docToOrdCount, ords, JavaLangLong_valueOfWithLong_(-1LL))];
  }
  else {
    [meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_SORTED_SET];
    [self addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:[new_OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1_initWithJavaLangIterable_withJavaLangIterable_(docToOrdCount, ords) autorelease]];
    OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_writeFSTWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
  }
}

- (void)dealloc {
  RELEASE_(data_);
  RELEASE_(meta_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexSegmentWriteState:withNSString:withNSString:withNSString:withNSString:withFloat:", "MemoryDocValuesConsumer", NULL, 0x0, "Ljava.io.IOException;", NULL },
    { "addNumericFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:", "addNumericField", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "addNumericFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withBoolean:", "addNumericField", "V", 0x0, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:", "addBinaryField", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "writeFSTWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:", "writeFST", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "writeMissingBitsetWithJavaLangIterable:", "writeMissingBitset", "V", 0x0, "Ljava.io.IOException;", NULL },
    { "addSortedFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:", "addSortedField", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "addSortedNumericFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:", "addSortedNumericField", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "addSortedSetFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:withJavaLangIterable:", "addSortedSetField", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "data_", NULL, 0x0, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "meta_", NULL, 0x0, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxDoc_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "acceptableOverheadRatio_", NULL, 0x10, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.MemoryDocValuesConsumer$SortedSetIterator;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer = { 2, "MemoryDocValuesConsumer", "org.apache.lucene.codecs.memory", NULL, 0x0, 10, methods, 4, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_initWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_withFloat_(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer *self, OrgApacheLuceneIndexSegmentWriteState *state, NSString *dataCodec, NSString *dataExtension, NSString *metaCodec, NSString *metaExtension, jfloat acceptableOverheadRatio) {
  OrgApacheLuceneCodecsDocValuesConsumer_init(self);
  self->acceptableOverheadRatio_ = acceptableOverheadRatio;
  self->maxDoc_ = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state))->segmentInfo_)) maxDoc];
  jboolean success = NO;
  @try {
    NSString *dataName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(state->segmentInfo_->name_, state->segmentSuffix_, dataExtension);
    JreStrongAssign(&self->data_, [((OrgApacheLuceneStoreDirectory *) nil_chk(state->directory_)) createOutputWithNSString:dataName withOrgApacheLuceneStoreIOContext:state->context_]);
    OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(self->data_, dataCodec, OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    NSString *metaName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(state->segmentInfo_->name_, state->segmentSuffix_, metaExtension);
    JreStrongAssign(&self->meta_, [state->directory_ createOutputWithNSString:metaName withOrgApacheLuceneStoreIOContext:state->context_]);
    OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(self->meta_, metaCodec, OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    success = YES;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer *new_OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_initWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_withFloat_(OrgApacheLuceneIndexSegmentWriteState *state, NSString *dataCodec, NSString *dataExtension, NSString *metaCodec, NSString *metaExtension, jfloat acceptableOverheadRatio) {
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer *self = [OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer alloc];
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_initWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_withFloat_(self, state, dataCodec, dataExtension, metaCodec, metaExtension, acceptableOverheadRatio);
  return self;
}

void OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_writeFSTWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values) {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  [self->meta_ writeByteWithByte:OrgApacheLuceneCodecsMemoryMemoryDocValuesProducer_FST];
  [self->meta_ writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) getFilePointer]];
  OrgApacheLuceneUtilFstPositiveIntOutputs *outputs = OrgApacheLuceneUtilFstPositiveIntOutputs_getSingleton();
  OrgApacheLuceneUtilFstBuilder *builder = [new_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withOrgApacheLuceneUtilFstOutputs_(JreLoadStatic(OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum, BYTE1), outputs) autorelease];
  OrgApacheLuceneUtilIntsRefBuilder *scratch = [new_OrgApacheLuceneUtilIntsRefBuilder_init() autorelease];
  jlong ord = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong v in nil_chk(values)) {
    [builder addWithOrgApacheLuceneUtilIntsRef:OrgApacheLuceneUtilFstUtil_toIntsRefWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilIntsRefBuilder_(v, scratch) withId:JavaLangLong_valueOfWithLong_(ord)];
    ord++;
  }
  OrgApacheLuceneUtilFstFST *fst = [builder finish];
  if (fst != nil) {
    [fst saveWithOrgApacheLuceneStoreDataOutput:self->data_];
  }
  [self->meta_ writeVLongWithLong:ord];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer)

@implementation OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)counts
                    withJavaUtilIterator:(id<JavaUtilIterator>)ords {
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator_initWithJavaUtilIterator_withJavaUtilIterator_(self, counts, ords);
  return self;
}

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(counts_)) hasNext];
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if (![self hasNext]) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  jint count = [((NSNumber *) nil_chk([((id<JavaUtilIterator>) nil_chk(counts_)) next])) intValue];
  jint maxSize = count * 9;
  if (maxSize > ((IOSByteArray *) nil_chk(buffer_))->size_) {
    JreStrongAssign(&buffer_, OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(buffer_, maxSize));
  }
  @try {
    OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator_encodeValuesWithInt_(self, count);
  }
  @catch (JavaIoIOException *bogus) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(bogus) autorelease];
  }
  JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(ref_))->bytes_, buffer_);
  ref_->offset_ = 0;
  ref_->length_ = [((OrgApacheLuceneStoreByteArrayDataOutput *) nil_chk(out_)) getPosition];
  return ref_;
}

- (void)encodeValuesWithInt:(jint)count {
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator_encodeValuesWithInt_(self, count);
}

- (void)remove {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (void)dealloc {
  RELEASE_(buffer_);
  RELEASE_(out_);
  RELEASE_(ref_);
  RELEASE_(counts_);
  RELEASE_(ords_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilIterator:withJavaUtilIterator:", "SortedSetIterator", NULL, 0x0, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "encodeValuesWithInt:", "encodeValues", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "buffer_", NULL, 0x0, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "out_", NULL, 0x0, "Lorg.apache.lucene.store.ByteArrayDataOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "ref_", NULL, 0x0, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "counts_", NULL, 0x10, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Ljava/lang/Number;>;", .constantValue.asLong = 0 },
    { "ords_", NULL, 0x10, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Ljava/lang/Number;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator = { 2, "SortedSetIterator", "org.apache.lucene.codecs.memory", "MemoryDocValuesConsumer", 0x8, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Iterator<Lorg/apache/lucene/util/BytesRef;>;" };
  return &_OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator_initWithJavaUtilIterator_withJavaUtilIterator_(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator *self, id<JavaUtilIterator> counts, id<JavaUtilIterator> ords) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->buffer_, [IOSByteArray newArrayWithLength:10]);
  JreStrongAssignAndConsume(&self->out_, new_OrgApacheLuceneStoreByteArrayDataOutput_init());
  JreStrongAssignAndConsume(&self->ref_, new_OrgApacheLuceneUtilBytesRef_init());
  JreStrongAssign(&self->counts_, counts);
  JreStrongAssign(&self->ords_, ords);
}

OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator *new_OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator_initWithJavaUtilIterator_withJavaUtilIterator_(id<JavaUtilIterator> counts, id<JavaUtilIterator> ords) {
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator *self = [OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator alloc];
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator_initWithJavaUtilIterator_withJavaUtilIterator_(self, counts, ords);
  return self;
}

void OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator_encodeValuesWithInt_(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator *self, jint count) {
  [((OrgApacheLuceneStoreByteArrayDataOutput *) nil_chk(self->out_)) resetWithByteArray:self->buffer_];
  jlong lastOrd = 0;
  for (jint i = 0; i < count; i++) {
    jlong ord = [((NSNumber *) nil_chk([((id<JavaUtilIterator>) nil_chk(self->ords_)) next])) longLongValue];
    [self->out_ writeVLongWithLong:ord - lastOrd];
    lastOrd = ord;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator)

@implementation OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1

- (id<JavaUtilIterator>)iterator {
  return [new_OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_SortedSetIterator_initWithJavaUtilIterator_withJavaUtilIterator_([((id<JavaLangIterable>) nil_chk(val$docToOrdCount_)) iterator], [((id<JavaLangIterable>) nil_chk(val$ords_)) iterator]) autorelease];
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0
                    withJavaLangIterable:(id<JavaLangIterable>)capture$1 {
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1_initWithJavaLangIterable_withJavaLangIterable_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$docToOrdCount_);
  RELEASE_(val$ords_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "initWithJavaLangIterable:withJavaLangIterable:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$docToOrdCount_", NULL, 0x1012, "Ljava.lang.Iterable;", NULL, "Ljava/lang/Iterable<Ljava/lang/Number;>;", .constantValue.asLong = 0 },
    { "val$ords_", NULL, 0x1012, "Ljava.lang.Iterable;", NULL, "Ljava/lang/Iterable<Ljava/lang/Number;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer", "addSortedSetFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:withJavaLangIterable:" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1 = { 2, "", "org.apache.lucene.codecs.memory", "MemoryDocValuesConsumer", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/lang/Iterable<Lorg/apache/lucene/util/BytesRef;>;" };
  return &_OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1_initWithJavaLangIterable_withJavaLangIterable_(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1 *self, id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1) {
  JreStrongAssign(&self->val$docToOrdCount_, capture$0);
  JreStrongAssign(&self->val$ords_, capture$1);
  NSObject_init(self);
}

OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1 *new_OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1_initWithJavaLangIterable_withJavaLangIterable_(id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1) {
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1 *self = [OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1 alloc];
  OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1_initWithJavaLangIterable_withJavaLangIterable_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryDocValuesConsumer_$1)
