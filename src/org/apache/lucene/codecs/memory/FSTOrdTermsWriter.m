//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/memory/FSTOrdTermsWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/codecs/BlockTermState.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/FieldsConsumer.h"
#include "org/apache/lucene/codecs/PostingsWriterBase.h"
#include "org/apache/lucene/codecs/memory/FSTOrdTermsWriter.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/RAMOutputStream.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/FixedBitSet.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/fst/Builder.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/PositiveIntOutputs.h"
#include "org/apache/lucene/util/fst/Util.h"

@interface OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter ()

- (void)writeTrailerWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
                                               withLong:(jlong)dirStart;

@end

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_writeTrailerWithOrgApacheLuceneStoreIndexOutput_withLong_(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *self, OrgApacheLuceneStoreIndexOutput *outArg, jlong dirStart);

@interface OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData : NSObject {
 @public
  OrgApacheLuceneIndexFieldInfo *fieldInfo_;
  jlong numTerms_;
  jlong sumTotalTermFreq_;
  jlong sumDocFreq_;
  jint docCount_;
  jint longsSize_;
  OrgApacheLuceneUtilFstFST *dict_;
  OrgApacheLuceneStoreRAMOutputStream *skipOut_;
  OrgApacheLuceneStoreRAMOutputStream *statsOut_;
  OrgApacheLuceneStoreRAMOutputStream *metaLongsOut_;
  OrgApacheLuceneStoreRAMOutputStream *metaBytesOut_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData, fieldInfo_, OrgApacheLuceneIndexFieldInfo *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData, dict_, OrgApacheLuceneUtilFstFST *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData, skipOut_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData, statsOut_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData, metaLongsOut_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData, metaBytesOut_, OrgApacheLuceneStoreRAMOutputStream *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData_init(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData *self);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData *new_OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData)

@interface OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter () {
 @public
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *this$0_;
  OrgApacheLuceneUtilFstBuilder *builder_;
  OrgApacheLuceneUtilFstPositiveIntOutputs *outputs_;
  OrgApacheLuceneIndexFieldInfo *fieldInfo_;
  jint longsSize_;
  jlong numTerms_;
  OrgApacheLuceneUtilIntsRefBuilder *scratchTerm_;
  OrgApacheLuceneStoreRAMOutputStream *statsOut_;
  OrgApacheLuceneStoreRAMOutputStream *metaLongsOut_;
  OrgApacheLuceneStoreRAMOutputStream *metaBytesOut_;
  OrgApacheLuceneStoreRAMOutputStream *skipOut_;
  jlong lastBlockStatsFP_;
  jlong lastBlockMetaLongsFP_;
  jlong lastBlockMetaBytesFP_;
  IOSLongArray *lastBlockLongs_;
  IOSLongArray *lastLongs_;
  jlong lastMetaBytesFP_;
}

- (void)bufferSkip;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, this$0_, OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, builder_, OrgApacheLuceneUtilFstBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, outputs_, OrgApacheLuceneUtilFstPositiveIntOutputs *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, fieldInfo_, OrgApacheLuceneIndexFieldInfo *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, scratchTerm_, OrgApacheLuceneUtilIntsRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, statsOut_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, metaLongsOut_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, metaBytesOut_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, skipOut_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, lastBlockLongs_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter, lastLongs_, IOSLongArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter_bufferSkip(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter *self);

NSString *OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_INDEX_EXTENSION_ = @"tix";
NSString *OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_BLOCK_EXTENSION_ = @"tbk";
NSString *OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_CODEC_NAME_ = @"FSTOrdTerms";
NSString *OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_INDEX_CODEC_NAME_ = @"FSTOrdIndex";

@implementation OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter

- (instancetype)initWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state
                  withOrgApacheLuceneCodecsPostingsWriterBase:(OrgApacheLuceneCodecsPostingsWriterBase *)postingsWriter {
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_(self, state, postingsWriter);
  return self;
}

- (void)writeWithOrgApacheLuceneIndexFields:(OrgApacheLuceneIndexFields *)fields {
  for (NSString * __strong field in nil_chk(fields)) {
    OrgApacheLuceneIndexTerms *terms = [fields termsWithNSString:field];
    if (terms == nil) {
      continue;
    }
    OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(fieldInfos_)) fieldInfoWithNSString:field];
    jboolean hasFreq = [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS)] >= 0;
    OrgApacheLuceneIndexTermsEnum *termsEnum = [((OrgApacheLuceneIndexTerms *) nil_chk(terms)) iterator];
    OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter *termsWriter = [new_OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_withOrgApacheLuceneIndexFieldInfo_(self, fieldInfo) autorelease];
    jlong sumTotalTermFreq = 0;
    jlong sumDocFreq = 0;
    OrgApacheLuceneUtilFixedBitSet *docsSeen = [new_OrgApacheLuceneUtilFixedBitSet_initWithInt_(maxDoc_) autorelease];
    while (YES) {
      OrgApacheLuceneUtilBytesRef *term = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) next];
      if (term == nil) {
        break;
      }
      OrgApacheLuceneCodecsBlockTermState *termState = [((OrgApacheLuceneCodecsPostingsWriterBase *) nil_chk(postingsWriter_)) writeTermWithOrgApacheLuceneUtilBytesRef:term withOrgApacheLuceneIndexTermsEnum:termsEnum withOrgApacheLuceneUtilFixedBitSet:docsSeen];
      if (termState != nil) {
        [termsWriter finishTermWithOrgApacheLuceneUtilBytesRef:term withOrgApacheLuceneCodecsBlockTermState:termState];
        sumTotalTermFreq += termState->totalTermFreq_;
        sumDocFreq += termState->docFreq_;
      }
    }
    [termsWriter finishWithLong:hasFreq ? sumTotalTermFreq : -1 withLong:sumDocFreq withInt:[docsSeen cardinality]];
  }
}

- (void)close {
  if (blockOut_ != nil) {
    jboolean success = NO;
    @try {
      jlong blockDirStart = [blockOut_ getFilePointer];
      [blockOut_ writeVIntWithInt:[((id<JavaUtilList>) nil_chk(fields_)) size]];
      for (OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData * __strong field in fields_) {
        [blockOut_ writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(((OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData *) nil_chk(field))->fieldInfo_))->number_];
        [blockOut_ writeVLongWithLong:field->numTerms_];
        if ([field->fieldInfo_ getIndexOptions] != JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)) {
          [blockOut_ writeVLongWithLong:field->sumTotalTermFreq_];
        }
        [blockOut_ writeVLongWithLong:field->sumDocFreq_];
        [blockOut_ writeVIntWithInt:field->docCount_];
        [blockOut_ writeVIntWithInt:field->longsSize_];
        [blockOut_ writeVLongWithLong:[((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(field->statsOut_)) getFilePointer]];
        [blockOut_ writeVLongWithLong:[((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(field->metaLongsOut_)) getFilePointer]];
        [blockOut_ writeVLongWithLong:[((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(field->metaBytesOut_)) getFilePointer]];
        [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(field->skipOut_)) writeToWithOrgApacheLuceneStoreDataOutput:blockOut_];
        [field->statsOut_ writeToWithOrgApacheLuceneStoreDataOutput:blockOut_];
        [field->metaLongsOut_ writeToWithOrgApacheLuceneStoreDataOutput:blockOut_];
        [field->metaBytesOut_ writeToWithOrgApacheLuceneStoreDataOutput:blockOut_];
        [((OrgApacheLuceneUtilFstFST *) nil_chk(field->dict_)) saveWithOrgApacheLuceneStoreDataOutput:indexOut_];
      }
      OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_writeTrailerWithOrgApacheLuceneStoreIndexOutput_withLong_(self, blockOut_, blockDirStart);
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(indexOut_);
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(blockOut_);
      success = YES;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ blockOut_, indexOut_, postingsWriter_ } count:3 type:JavaIoCloseable_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ blockOut_, indexOut_, postingsWriter_ } count:3 type:JavaIoCloseable_class_()]);
      }
      JreStrongAssign(&blockOut_, nil);
    }
  }
}

- (void)writeTrailerWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
                                               withLong:(jlong)dirStart {
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_writeTrailerWithOrgApacheLuceneStoreIndexOutput_withLong_(self, outArg, dirStart);
}

- (void)dealloc {
  RELEASE_(postingsWriter_);
  RELEASE_(fieldInfos_);
  RELEASE_(fields_);
  RELEASE_(blockOut_);
  RELEASE_(indexOut_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexSegmentWriteState:withOrgApacheLuceneCodecsPostingsWriterBase:", "FSTOrdTermsWriter", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "writeWithOrgApacheLuceneIndexFields:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "writeTrailerWithOrgApacheLuceneStoreIndexOutput:withLong:", "writeTrailer", "V", 0x2, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TERMS_INDEX_EXTENSION_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_INDEX_EXTENSION_, NULL, .constantValue.asLong = 0 },
    { "TERMS_BLOCK_EXTENSION_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_BLOCK_EXTENSION_, NULL, .constantValue.asLong = 0 },
    { "TERMS_CODEC_NAME_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_CODEC_NAME_, NULL, .constantValue.asLong = 0 },
    { "TERMS_INDEX_CODEC_NAME_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_INDEX_CODEC_NAME_, NULL, .constantValue.asLong = 0 },
    { "VERSION_START", "VERSION_START", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_VERSION_START },
    { "VERSION_CURRENT", "VERSION_CURRENT", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_VERSION_CURRENT },
    { "SKIP_INTERVAL", "SKIP_INTERVAL", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_SKIP_INTERVAL },
    { "postingsWriter_", NULL, 0x10, "Lorg.apache.lucene.codecs.PostingsWriterBase;", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldInfos_", NULL, 0x10, "Lorg.apache.lucene.index.FieldInfos;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxDoc_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fields_", NULL, 0x10, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/codecs/memory/FSTOrdTermsWriter$FieldMetaData;>;", .constantValue.asLong = 0 },
    { "blockOut_", NULL, 0x0, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "indexOut_", NULL, 0x0, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.FSTOrdTermsWriter$FieldMetaData;", "Lorg.apache.lucene.codecs.memory.FSTOrdTermsWriter$TermsWriter;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter = { 2, "FSTOrdTermsWriter", "org.apache.lucene.codecs.memory", NULL, 0x1, 4, methods, 13, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter;
}

@end

void OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *self, OrgApacheLuceneIndexSegmentWriteState *state, OrgApacheLuceneCodecsPostingsWriterBase *postingsWriter) {
  OrgApacheLuceneCodecsFieldsConsumer_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->blockOut_, nil);
  JreStrongAssign(&self->indexOut_, nil);
  NSString *termsIndexFileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state))->segmentInfo_))->name_, state->segmentSuffix_, OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_INDEX_EXTENSION_);
  NSString *termsBlockFileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(state->segmentInfo_->name_, state->segmentSuffix_, OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_BLOCK_EXTENSION_);
  JreStrongAssign(&self->postingsWriter_, postingsWriter);
  JreStrongAssign(&self->fieldInfos_, state->fieldInfos_);
  self->maxDoc_ = [state->segmentInfo_ maxDoc];
  jboolean success = NO;
  @try {
    JreStrongAssign(&self->indexOut_, [((OrgApacheLuceneStoreDirectory *) nil_chk(state->directory_)) createOutputWithNSString:termsIndexFileName withOrgApacheLuceneStoreIOContext:state->context_]);
    JreStrongAssign(&self->blockOut_, [state->directory_ createOutputWithNSString:termsBlockFileName withOrgApacheLuceneStoreIOContext:state->context_]);
    OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(self->indexOut_, OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_INDEX_CODEC_NAME_, OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(self->blockOut_, OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TERMS_CODEC_NAME_, OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    [((OrgApacheLuceneCodecsPostingsWriterBase *) nil_chk(self->postingsWriter_)) init__WithOrgApacheLuceneStoreIndexOutput:self->blockOut_ withOrgApacheLuceneIndexSegmentWriteState:state];
    success = YES;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self->indexOut_, self->blockOut_ } count:2 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *new_OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_(OrgApacheLuceneIndexSegmentWriteState *state, OrgApacheLuceneCodecsPostingsWriterBase *postingsWriter) {
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *self = [OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter alloc];
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_(self, state, postingsWriter);
  return self;
}

void OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_writeTrailerWithOrgApacheLuceneStoreIndexOutput_withLong_(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *self, OrgApacheLuceneStoreIndexOutput *outArg, jlong dirStart) {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(outArg)) writeLongWithLong:dirStart];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter)

@implementation OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData

- (instancetype)init {
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(fieldInfo_);
  RELEASE_(dict_);
  RELEASE_(skipOut_);
  RELEASE_(statsOut_);
  RELEASE_(metaLongsOut_);
  RELEASE_(metaBytesOut_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fieldInfo_", NULL, 0x1, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "numTerms_", NULL, 0x1, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "sumTotalTermFreq_", NULL, 0x1, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "sumDocFreq_", NULL, 0x1, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "docCount_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "longsSize_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "dict_", NULL, 0x1, "Lorg.apache.lucene.util.fst.FST;", NULL, "Lorg/apache/lucene/util/fst/FST<Ljava/lang/Long;>;", .constantValue.asLong = 0 },
    { "skipOut_", NULL, 0x1, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "statsOut_", NULL, 0x1, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "metaLongsOut_", NULL, 0x1, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "metaBytesOut_", NULL, 0x1, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData = { 2, "FieldMetaData", "org.apache.lucene.codecs.memory", "FSTOrdTermsWriter", 0xa, 1, methods, 11, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData;
}

@end

void OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData_init(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData *self) {
  NSObject_init(self);
}

OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData *new_OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData_init() {
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData *self = [OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData alloc];
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData)

@implementation OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTOrdTermsWriter:(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *)outer$
                                   withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo {
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_withOrgApacheLuceneIndexFieldInfo_(self, outer$, fieldInfo);
  return self;
}

- (void)finishTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
          withOrgApacheLuceneCodecsBlockTermState:(OrgApacheLuceneCodecsBlockTermState *)state {
  if (numTerms_ > 0 && numTerms_ % OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_SKIP_INTERVAL == 0) {
    OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter_bufferSkip(self);
  }
  IOSLongArray *longs = [IOSLongArray arrayWithLength:longsSize_];
  jlong delta = ((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state))->totalTermFreq_ - state->docFreq_;
  if (state->totalTermFreq_ > 0) {
    if (delta == 0) {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(statsOut_)) writeVIntWithInt:(JreLShift32(state->docFreq_, 1)) | 1];
    }
    else {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(statsOut_)) writeVIntWithInt:JreLShift32(state->docFreq_, 1)];
      [statsOut_ writeVLongWithLong:state->totalTermFreq_ - state->docFreq_];
    }
  }
  else {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(statsOut_)) writeVIntWithInt:state->docFreq_];
  }
  [((OrgApacheLuceneCodecsPostingsWriterBase *) nil_chk(this$0_->postingsWriter_)) encodeTermWithLongArray:longs withOrgApacheLuceneStoreDataOutput:metaBytesOut_ withOrgApacheLuceneIndexFieldInfo:fieldInfo_ withOrgApacheLuceneCodecsBlockTermState:state withBoolean:YES];
  for (jint i = 0; i < longsSize_; i++) {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(metaLongsOut_)) writeVLongWithLong:IOSLongArray_Get(longs, i) - IOSLongArray_Get(nil_chk(lastLongs_), i)];
    *IOSLongArray_GetRef(lastLongs_, i) = IOSLongArray_Get(longs, i);
  }
  [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(metaLongsOut_)) writeVLongWithLong:[((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(metaBytesOut_)) getFilePointer] - lastMetaBytesFP_];
  [((OrgApacheLuceneUtilFstBuilder *) nil_chk(builder_)) addWithOrgApacheLuceneUtilIntsRef:OrgApacheLuceneUtilFstUtil_toIntsRefWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilIntsRefBuilder_(text, scratchTerm_) withId:JavaLangLong_valueOfWithLong_(numTerms_)];
  numTerms_++;
  lastMetaBytesFP_ = [metaBytesOut_ getFilePointer];
}

- (void)finishWithLong:(jlong)sumTotalTermFreq
              withLong:(jlong)sumDocFreq
               withInt:(jint)docCount {
  if (numTerms_ > 0) {
    OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData *metadata = [new_OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_FieldMetaData_init() autorelease];
    JreStrongAssign(&metadata->fieldInfo_, fieldInfo_);
    metadata->numTerms_ = numTerms_;
    metadata->sumTotalTermFreq_ = sumTotalTermFreq;
    metadata->sumDocFreq_ = sumDocFreq;
    metadata->docCount_ = docCount;
    metadata->longsSize_ = longsSize_;
    JreStrongAssign(&metadata->skipOut_, skipOut_);
    JreStrongAssign(&metadata->statsOut_, statsOut_);
    JreStrongAssign(&metadata->metaLongsOut_, metaLongsOut_);
    JreStrongAssign(&metadata->metaBytesOut_, metaBytesOut_);
    JreStrongAssign(&metadata->dict_, [((OrgApacheLuceneUtilFstBuilder *) nil_chk(builder_)) finish]);
    [((id<JavaUtilList>) nil_chk(this$0_->fields_)) addWithId:metadata];
  }
}

- (void)bufferSkip {
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter_bufferSkip(self);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(builder_);
  RELEASE_(outputs_);
  RELEASE_(fieldInfo_);
  RELEASE_(scratchTerm_);
  RELEASE_(statsOut_);
  RELEASE_(metaLongsOut_);
  RELEASE_(metaBytesOut_);
  RELEASE_(skipOut_);
  RELEASE_(lastBlockLongs_);
  RELEASE_(lastLongs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryFSTOrdTermsWriter:withOrgApacheLuceneIndexFieldInfo:", "TermsWriter", NULL, 0x0, NULL, NULL },
    { "finishTermWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneCodecsBlockTermState:", "finishTerm", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "finishWithLong:withLong:withInt:", "finish", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "bufferSkip", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.FSTOrdTermsWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "builder_", NULL, 0x12, "Lorg.apache.lucene.util.fst.Builder;", NULL, "Lorg/apache/lucene/util/fst/Builder<Ljava/lang/Long;>;", .constantValue.asLong = 0 },
    { "outputs_", NULL, 0x12, "Lorg.apache.lucene.util.fst.PositiveIntOutputs;", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldInfo_", NULL, 0x12, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "longsSize_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "numTerms_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "scratchTerm_", NULL, 0x12, "Lorg.apache.lucene.util.IntsRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "statsOut_", NULL, 0x12, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "metaLongsOut_", NULL, 0x12, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "metaBytesOut_", NULL, 0x12, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "skipOut_", NULL, 0x12, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastBlockStatsFP_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "lastBlockMetaLongsFP_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "lastBlockMetaBytesFP_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "lastBlockLongs_", NULL, 0x2, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "lastLongs_", NULL, 0x2, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "lastMetaBytesFP_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter = { 2, "TermsWriter", "org.apache.lucene.codecs.memory", "FSTOrdTermsWriter", 0x10, 4, methods, 17, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter;
}

@end

void OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_withOrgApacheLuceneIndexFieldInfo_(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter *self, OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->scratchTerm_, new_OrgApacheLuceneUtilIntsRefBuilder_init());
  JreStrongAssignAndConsume(&self->statsOut_, new_OrgApacheLuceneStoreRAMOutputStream_init());
  JreStrongAssignAndConsume(&self->metaLongsOut_, new_OrgApacheLuceneStoreRAMOutputStream_init());
  JreStrongAssignAndConsume(&self->metaBytesOut_, new_OrgApacheLuceneStoreRAMOutputStream_init());
  JreStrongAssignAndConsume(&self->skipOut_, new_OrgApacheLuceneStoreRAMOutputStream_init());
  self->numTerms_ = 0;
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  self->longsSize_ = [((OrgApacheLuceneCodecsPostingsWriterBase *) nil_chk(outer$->postingsWriter_)) setFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo];
  JreStrongAssign(&self->outputs_, OrgApacheLuceneUtilFstPositiveIntOutputs_getSingleton());
  JreStrongAssignAndConsume(&self->builder_, new_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withOrgApacheLuceneUtilFstOutputs_(JreLoadStatic(OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum, BYTE1), self->outputs_));
  self->lastBlockStatsFP_ = 0;
  self->lastBlockMetaLongsFP_ = 0;
  self->lastBlockMetaBytesFP_ = 0;
  JreStrongAssignAndConsume(&self->lastBlockLongs_, [IOSLongArray newArrayWithLength:self->longsSize_]);
  JreStrongAssignAndConsume(&self->lastLongs_, [IOSLongArray newArrayWithLength:self->longsSize_]);
  self->lastMetaBytesFP_ = 0;
}

OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter *new_OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_withOrgApacheLuceneIndexFieldInfo_(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo) {
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter *self = [OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter alloc];
  OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_withOrgApacheLuceneIndexFieldInfo_(self, outer$, fieldInfo);
  return self;
}

void OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter_bufferSkip(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter *self) {
  [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(self->skipOut_)) writeVLongWithLong:[((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(self->statsOut_)) getFilePointer] - self->lastBlockStatsFP_];
  [self->skipOut_ writeVLongWithLong:[((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(self->metaLongsOut_)) getFilePointer] - self->lastBlockMetaLongsFP_];
  [self->skipOut_ writeVLongWithLong:[((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(self->metaBytesOut_)) getFilePointer] - self->lastBlockMetaBytesFP_];
  for (jint i = 0; i < self->longsSize_; i++) {
    [self->skipOut_ writeVLongWithLong:IOSLongArray_Get(nil_chk(self->lastLongs_), i) - IOSLongArray_Get(nil_chk(self->lastBlockLongs_), i)];
  }
  self->lastBlockStatsFP_ = [self->statsOut_ getFilePointer];
  self->lastBlockMetaLongsFP_ = [self->metaLongsOut_ getFilePointer];
  self->lastBlockMetaBytesFP_ = [self->metaBytesOut_ getFilePointer];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->lastLongs_, 0, self->lastBlockLongs_, 0, self->longsSize_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTOrdTermsWriter_TermsWriter)
