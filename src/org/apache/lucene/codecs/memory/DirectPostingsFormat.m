//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"
#include "org/apache/lucene/codecs/FieldsConsumer.h"
#include "org/apache/lucene/codecs/FieldsProducer.h"
#include "org/apache/lucene/codecs/PostingsFormat.h"
#include "org/apache/lucene/codecs/memory/DirectPostingsFormat.h"
#include "org/apache/lucene/index/DocsAndPositionsEnum.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/OrdTermState.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/SegmentReadState.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/index/TermState.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/RAMOutputStream.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/automaton/Automaton.h"
#include "org/apache/lucene/util/automaton/ByteRunAutomaton.h"
#include "org/apache/lucene/util/automaton/CompiledAutomaton.h"
#include "org/apache/lucene/util/automaton/RunAutomaton.h"
#include "org/apache/lucene/util/automaton/Transition.h"

#pragma clang diagnostic ignored "-Wprotocol"

#define OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DEFAULT_MIN_SKIP_COUNT 8
#define OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DEFAULT_LOW_FREQ_CUTOFF 32

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat () {
 @public
  jint minSkipCount_;
  jint lowFreqCutoff_;
}

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat, DEFAULT_MIN_SKIP_COUNT, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat, DEFAULT_LOW_FREQ_CUTOFF, jint)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields : OrgApacheLuceneCodecsFieldsProducer {
 @public
  id<JavaUtilMap> fields_;
}

- (instancetype)initWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state
                              withOrgApacheLuceneIndexFields:(OrgApacheLuceneIndexFields *)fields
                                                     withInt:(jint)minSkipCount
                                                     withInt:(jint)lowFreqCutoff;

- (id<JavaUtilIterator>)iterator;

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field;

- (jint)size;

- (void)close;

- (jlong)ramBytesUsed;

- (id<JavaUtilCollection>)getChildResources;

- (void)checkIntegrity;

- (NSString *)description;


@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields, fields_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneIndexFields_withInt_withInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields *self, OrgApacheLuceneIndexSegmentReadState *state, OrgApacheLuceneIndexFields *fields, jint minSkipCount, jint lowFreqCutoff);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneIndexFields_withInt_withInt_(OrgApacheLuceneIndexSegmentReadState *state, OrgApacheLuceneIndexFields *fields, jint minSkipCount, jint lowFreqCutoff) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField : OrgApacheLuceneIndexTerms < OrgApacheLuceneUtilAccountable > {
 @public
  IOSByteArray *termBytes_;
  IOSIntArray *termOffsets_;
  IOSIntArray *skips_;
  IOSIntArray *skipOffsets_;
  IOSObjectArray *terms_;
  jboolean hasFreq_;
  jboolean hasPos_;
  jboolean hasOffsets_;
  jboolean hasPayloads_;
  jlong sumTotalTermFreq_;
  jint docCount_;
  jlong sumDocFreq_;
  jint skipCount_;
  jint count_;
  IOSIntArray *sameCounts_;
  jint minSkipCount_;
}

- (instancetype)initWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state
                                                withNSString:(NSString *)field
                               withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)termsIn
                                                     withInt:(jint)minSkipCount
                                                     withInt:(jint)lowFreqCutoff;

- (jlong)ramBytesUsed;

- (id<JavaUtilCollection>)getChildResources;

- (NSString *)description;

- (jint)compareWithInt:(jint)ord
withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)other;

- (void)setSkipsWithInt:(jint)termOrd
          withByteArray:(IOSByteArray *)termBytes;

- (void)finishSkips;

- (void)saveSkipWithInt:(jint)ord
                withInt:(jint)backCount;

- (OrgApacheLuceneIndexTermsEnum *)iterator;

- (OrgApacheLuceneIndexTermsEnum *)intersectWithOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)compiled
                                                              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)startTerm;

- (jlong)size;

- (jlong)getSumTotalTermFreq;

- (jlong)getSumDocFreq;

- (jint)getDocCount;

- (jboolean)hasFreqs;

- (jboolean)hasOffsets;

- (jboolean)hasPositions;

- (jboolean)hasPayloads;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField, termBytes_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField, termOffsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField, skips_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField, skipOffsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField, terms_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField, sameCounts_, IOSIntArray *)

static jlong OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_BASE_RAM_BYTES_USED_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField, BASE_RAM_BYTES_USED_, jlong)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_initWithOrgApacheLuceneIndexSegmentReadState_withNSString_withOrgApacheLuceneIndexTerms_withInt_withInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *self, OrgApacheLuceneIndexSegmentReadState *state, NSString *field, OrgApacheLuceneIndexTerms *termsIn, jint minSkipCount, jint lowFreqCutoff);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_initWithOrgApacheLuceneIndexSegmentReadState_withNSString_withOrgApacheLuceneIndexTerms_withInt_withInt_(OrgApacheLuceneIndexSegmentReadState *state, NSString *field, OrgApacheLuceneIndexTerms *termsIn, jint minSkipCount, jint lowFreqCutoff) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_setSkipsWithInt_withByteArray_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *self, jint termOrd, IOSByteArray *termBytes);

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_finishSkips(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *self);

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_saveSkipWithInt_withInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *self, jint ord, jint backCount);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip : NSObject < OrgApacheLuceneUtilAccountable > {
 @public
  IOSIntArray *skips_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip, skips_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm : OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip {
 @public
  IOSIntArray *postings_;
  IOSByteArray *payloads_;
  jint docFreq_;
  jint totalTermFreq_;
}

- (instancetype)initWithIntArray:(IOSIntArray *)postings
                   withByteArray:(IOSByteArray *)payloads
                         withInt:(jint)docFreq
                         withInt:(jint)totalTermFreq;

- (jlong)ramBytesUsed;

- (id<JavaUtilCollection>)getChildResources;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm, postings_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm, payloads_, IOSByteArray *)

static jlong OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_BASE_RAM_BYTES_USED_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm, BASE_RAM_BYTES_USED_, jlong)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_initWithIntArray_withByteArray_withInt_withInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *self, IOSIntArray *postings, IOSByteArray *payloads, jint docFreq, jint totalTermFreq);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_initWithIntArray_withByteArray_withInt_withInt_(IOSIntArray *postings, IOSByteArray *payloads, jint docFreq, jint totalTermFreq) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm : OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip {
 @public
  jlong totalTermFreq_;
  IOSIntArray *docIDs_;
  IOSIntArray *freqs_;
  IOSObjectArray *positions_;
  IOSObjectArray *payloads_;
}

- (instancetype)initWithIntArray:(IOSIntArray *)docIDs
                    withIntArray:(IOSIntArray *)freqs
                   withIntArray2:(IOSObjectArray *)positions
                  withByteArray3:(IOSObjectArray *)payloads
                        withLong:(jlong)totalTermFreq;

- (jlong)ramBytesUsed;

- (id<JavaUtilCollection>)getChildResources;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm, docIDs_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm, freqs_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm, positions_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm, payloads_, IOSObjectArray *)

static jlong OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_BASE_RAM_BYTES_USED_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm, BASE_RAM_BYTES_USED_, jlong)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_initWithIntArray_withIntArray_withIntArray2_withByteArray3_withLong_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *self, IOSIntArray *docIDs, IOSIntArray *freqs, IOSObjectArray *positions, IOSObjectArray *payloads, jlong totalTermFreq);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_initWithIntArray_withIntArray_withIntArray2_withByteArray3_withLong_(IOSIntArray *docIDs, IOSIntArray *freqs, IOSObjectArray *positions, IOSObjectArray *payloads, jlong totalTermFreq) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter : NSObject {
 @public
  IOSIntArray *ints_;
  jint upto_;
}

- (void)addWithInt:(jint)value;

- (IOSIntArray *)get;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter, ints_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter *self);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum : OrgApacheLuceneIndexTermsEnum {
 @public
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *this$0_;
  OrgApacheLuceneUtilBytesRef *scratch_;
  jint termOrd_;
}

- (instancetype)initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField:(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *)outer$;

- (OrgApacheLuceneUtilBytesRef *)setTerm;

- (OrgApacheLuceneUtilBytesRef *)next;

- (OrgApacheLuceneIndexTermState *)termState;

- (jint)findTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

- (jboolean)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

- (void)seekExactWithLong:(jlong)ord;

- (void)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term
               withOrgApacheLuceneIndexTermState:(OrgApacheLuceneIndexTermState *)state;

- (OrgApacheLuceneUtilBytesRef *)term;

- (jlong)ord;

- (jint)docFreq;

- (jlong)totalTermFreq;

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum, this$0_, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum, scratch_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum *self, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *outer$);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_setTerm(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum *self);

__attribute__((unused)) static jint OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_findTermWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum *self, OrgApacheLuceneUtilBytesRef *term);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum : OrgApacheLuceneIndexTermsEnum {
 @public
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *this$0_;
  OrgApacheLuceneUtilAutomatonRunAutomaton *runAutomaton_;
  OrgApacheLuceneUtilAutomatonCompiledAutomaton *compiledAutomaton_;
  jint termOrd_;
  OrgApacheLuceneUtilBytesRef *scratch_;
  IOSObjectArray *states_;
  jint stateUpto_;
}

- (instancetype)initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField:(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *)outer$
                                  withOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)compiled
                                                    withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)startTerm;

- (void)grow;

- (OrgApacheLuceneUtilBytesRef *)next;

- (OrgApacheLuceneIndexTermState *)termState;

- (OrgApacheLuceneUtilBytesRef *)term;

- (jlong)ord;

- (jint)docFreq;

- (jlong)totalTermFreq;

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags;

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

- (void)seekExactWithLong:(jlong)ord;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum, this$0_, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum, runAutomaton_, OrgApacheLuceneUtilAutomatonRunAutomaton *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum, compiledAutomaton_, OrgApacheLuceneUtilAutomatonCompiledAutomaton *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum, scratch_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum, states_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *self, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *outer$, OrgApacheLuceneUtilAutomatonCompiledAutomaton *compiled, OrgApacheLuceneUtilBytesRef *startTerm);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *outer$, OrgApacheLuceneUtilAutomatonCompiledAutomaton *compiled, OrgApacheLuceneUtilBytesRef *startTerm) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_grow(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State : NSObject {
 @public
  jint changeOrd_;
  jint state_;
  jint transitionUpto_;
  jint transitionCount_;
  jint transitionMax_;
  jint transitionMin_;
  OrgApacheLuceneUtilAutomatonTransition *transition_;
}

- (instancetype)initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum:(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State, transition_, OrgApacheLuceneUtilAutomatonTransition *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *self, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *outer$);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF : OrgApacheLuceneIndexPostingsEnum {
 @public
  IOSIntArray *postings_;
  jint upto_;
}

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)postings;

- (jint)nextDoc;

- (jint)docID;

- (jint)freq;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jint)advanceWithInt:(jint)target;

- (jlong)cost;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF, postings_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *self);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos : OrgApacheLuceneIndexPostingsEnum {
 @public
  IOSIntArray *postings_;
  jint upto_;
}

- (instancetype)init;

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)postings;

- (jint)nextDoc;

- (jint)docID;

- (jint)freq;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jint)advanceWithInt:(jint)target;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos, postings_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *self);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  IOSIntArray *postings_;
  jint posMult_;
  jint upto_;
  jint freq_;
}

- (instancetype)initWithInt:(jint)posMult;

- (jboolean)canReuseWithInt:(jint)posMult;

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)postings;

- (jint)nextDoc;

- (jint)docID;

- (jint)freq;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jint)advanceWithInt:(jint)target;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum, postings_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum_initWithInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *self, jint posMult);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum_initWithInt_(jint posMult) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  IOSIntArray *postings_;
  jint posMult_;
  jboolean hasOffsets_;
  jboolean hasPayloads_;
  OrgApacheLuceneUtilBytesRef *payload_;
  jint upto_;
  jint docID_;
  jint freq_;
  jint skipPositions_;
  jint pos_;
  jint startOffset_;
  jint endOffset_;
  jint lastPayloadOffset_;
  jint payloadOffset_;
  jint payloadLength_;
  IOSByteArray *payloadBytes_;
}

- (instancetype)initWithBoolean:(jboolean)hasOffsets
                    withBoolean:(jboolean)hasPayloads;

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)postings
                                          withByteArray:(IOSByteArray *)payloadBytes;

- (jint)nextDoc;

- (jint)docID;

- (jint)freq;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (jint)advanceWithInt:(jint)target;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum, postings_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum, payload_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum, payloadBytes_, IOSByteArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum_initWithBoolean_withBoolean_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum *self, jboolean hasOffsets, jboolean hasPayloads);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum_initWithBoolean_withBoolean_(jboolean hasOffsets, jboolean hasPayloads) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  IOSIntArray *docIDs_;
  IOSIntArray *freqs_;
  jint upto_;
  jint docID_;
}

- (instancetype)init;

- (IOSIntArray *)getDocIDs;

- (IOSIntArray *)getFreqs;

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)docIDs
                                           withIntArray:(IOSIntArray *)freqs;

- (jint)nextDoc;

- (jint)docID;

- (jint)freq;

- (jint)advanceWithInt:(jint)target;

- (jlong)cost;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum, docIDs_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum, freqs_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *self);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum)

@interface OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  IOSIntArray *docIDs_;
  IOSIntArray *freqs_;
  IOSObjectArray *positions_;
  IOSObjectArray *payloads_;
  jboolean hasOffsets_;
  jint posJump_;
  jint upto_;
  jint docID_;
  jint posUpto_;
  IOSIntArray *curPositions_;
  OrgApacheLuceneUtilBytesRef *payload_;
}

- (instancetype)initWithBoolean:(jboolean)hasOffsets;

- (IOSIntArray *)getDocIDs;

- (IOSObjectArray *)getPositions;

- (jint)getPosJump;

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)docIDs
                                           withIntArray:(IOSIntArray *)freqs
                                          withIntArray2:(IOSObjectArray *)positions
                                         withByteArray3:(IOSObjectArray *)payloads;

- (jint)nextDoc;

- (jint)freq;

- (jint)docID;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (jint)advanceWithInt:(jint)target;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum, docIDs_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum, freqs_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum, positions_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum, payloads_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum, curPositions_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum, payload_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum_initWithBoolean_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum *self, jboolean hasOffsets);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum_initWithBoolean_(jboolean hasOffsets) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat

- (instancetype)init {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)minSkipCount
                    withInt:(jint)lowFreqCutoff {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_initWithInt_withInt_(self, minSkipCount, lowFreqCutoff);
  return self;
}

- (OrgApacheLuceneCodecsFieldsConsumer *)fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state {
  return [((OrgApacheLuceneCodecsPostingsFormat *) nil_chk(OrgApacheLuceneCodecsPostingsFormat_forNameWithNSString_(@"Lucene50"))) fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:state];
}

- (OrgApacheLuceneCodecsFieldsProducer *)fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state {
  OrgApacheLuceneCodecsFieldsProducer *postings = [((OrgApacheLuceneCodecsPostingsFormat *) nil_chk(OrgApacheLuceneCodecsPostingsFormat_forNameWithNSString_(@"Lucene50"))) fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:state];
  if (((OrgApacheLuceneStoreIOContext *) nil_chk(((OrgApacheLuceneIndexSegmentReadState *) nil_chk(state))->context_))->context_ != JreLoadStatic(OrgApacheLuceneStoreIOContext_ContextEnum, MERGE)) {
    OrgApacheLuceneCodecsFieldsProducer *loadedPostings;
    @try {
      [((OrgApacheLuceneCodecsFieldsProducer *) nil_chk(postings)) checkIntegrity];
      loadedPostings = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneIndexFields_withInt_withInt_(state, postings, minSkipCount_, lowFreqCutoff_) autorelease];
    }
    @finally {
      [((OrgApacheLuceneCodecsFieldsProducer *) nil_chk(postings)) close];
    }
    return loadedPostings;
  }
  else {
    return postings;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DirectPostingsFormat", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:", "DirectPostingsFormat", NULL, 0x1, NULL, NULL },
    { "fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:", "fieldsConsumer", "Lorg.apache.lucene.codecs.FieldsConsumer;", 0x1, "Ljava.io.IOException;", NULL },
    { "fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:", "fieldsProducer", "Lorg.apache.lucene.codecs.FieldsProducer;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "minSkipCount_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "lowFreqCutoff_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_MIN_SKIP_COUNT", "DEFAULT_MIN_SKIP_COUNT", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DEFAULT_MIN_SKIP_COUNT },
    { "DEFAULT_LOW_FREQ_CUTOFF", "DEFAULT_LOW_FREQ_CUTOFF", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DEFAULT_LOW_FREQ_CUTOFF },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectFields;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$LowFreqDocsEnumNoTF;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$LowFreqDocsEnumNoPos;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$LowFreqDocsEnum;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$LowFreqPostingsEnum;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$HighFreqDocsEnum;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$HighFreqPostingsEnum;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat = { 2, "DirectPostingsFormat", "org.apache.lucene.codecs.memory", NULL, 0x11, 4, methods, 4, fields, 0, NULL, 8, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat *self) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_initWithInt_withInt_(self, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DEFAULT_MIN_SKIP_COUNT, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DEFAULT_LOW_FREQ_CUTOFF);
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_init() {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_init(self);
  return self;
}

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_initWithInt_withInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat *self, jint minSkipCount, jint lowFreqCutoff) {
  OrgApacheLuceneCodecsPostingsFormat_initWithNSString_(self, @"Direct");
  self->minSkipCount_ = minSkipCount;
  self->lowFreqCutoff_ = lowFreqCutoff;
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_initWithInt_withInt_(jint minSkipCount, jint lowFreqCutoff) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_initWithInt_withInt_(self, minSkipCount, lowFreqCutoff);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields

- (instancetype)initWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state
                              withOrgApacheLuceneIndexFields:(OrgApacheLuceneIndexFields *)fields
                                                     withInt:(jint)minSkipCount
                                                     withInt:(jint)lowFreqCutoff {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneIndexFields_withInt_withInt_(self, state, fields, minSkipCount, lowFreqCutoff);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilSet>) nil_chk(JavaUtilCollections_unmodifiableSetWithJavaUtilSet_([((id<JavaUtilMap>) nil_chk(fields_)) keySet]))) iterator];
}

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field {
  return [((id<JavaUtilMap>) nil_chk(fields_)) getWithId:field];
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(fields_)) size];
}

- (void)close {
}

- (jlong)ramBytesUsed {
  jlong sizeInBytes = 0;
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(fields_)) entrySet])) {
    sizeInBytes += ((jint) [((NSString *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey])) length]) * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_CHAR;
    sizeInBytes += [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *) nil_chk([entry_ getValue])) ramBytesUsed];
  }
  return sizeInBytes;
}

- (id<JavaUtilCollection>)getChildResources {
  return OrgApacheLuceneUtilAccountables_namedAccountablesWithNSString_withJavaUtilMap_(@"field", fields_);
}

- (void)checkIntegrity {
}

- (NSString *)description {
  return JreStrcat("$$IC", [[self getClass] getSimpleName], @"(fields=", [((id<JavaUtilMap>) nil_chk(fields_)) size], ')');
}

- (void)dealloc {
  RELEASE_(fields_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexSegmentReadState:withOrgApacheLuceneIndexFields:withInt:withInt:", "DirectFields", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "termsWithNSString:", "terms", "Lorg.apache.lucene.index.Terms;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "checkIntegrity", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fields_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/codecs/memory/DirectPostingsFormat$DirectField;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields = { 2, "DirectFields", "org.apache.lucene.codecs.memory", "DirectPostingsFormat", 0x1a, 9, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneIndexFields_withInt_withInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields *self, OrgApacheLuceneIndexSegmentReadState *state, OrgApacheLuceneIndexFields *fields, jint minSkipCount, jint lowFreqCutoff) {
  OrgApacheLuceneCodecsFieldsProducer_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_JavaUtilTreeMap_init());
  for (NSString * __strong field in nil_chk(fields)) {
    [self->fields_ putWithId:field withId:[new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_initWithOrgApacheLuceneIndexSegmentReadState_withNSString_withOrgApacheLuceneIndexTerms_withInt_withInt_(state, field, [fields termsWithNSString:field], minSkipCount, lowFreqCutoff) autorelease]];
  }
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneIndexFields_withInt_withInt_(OrgApacheLuceneIndexSegmentReadState *state, OrgApacheLuceneIndexFields *fields, jint minSkipCount, jint lowFreqCutoff) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneIndexFields_withInt_withInt_(self, state, fields, minSkipCount, lowFreqCutoff);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectFields)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField

- (instancetype)initWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state
                                                withNSString:(NSString *)field
                               withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)termsIn
                                                     withInt:(jint)minSkipCount
                                                     withInt:(jint)lowFreqCutoff {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_initWithOrgApacheLuceneIndexSegmentReadState_withNSString_withOrgApacheLuceneIndexTerms_withInt_withInt_(self, state, field, termsIn, minSkipCount, lowFreqCutoff);
  return self;
}

- (jlong)ramBytesUsed {
  jlong sizeInBytes = OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_BASE_RAM_BYTES_USED_;
  sizeInBytes += ((termBytes_ != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithByteArray_(termBytes_) : 0);
  sizeInBytes += ((termOffsets_ != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(termOffsets_) : 0);
  sizeInBytes += ((skips_ != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(skips_) : 0);
  sizeInBytes += ((skipOffsets_ != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(skipOffsets_) : 0);
  sizeInBytes += ((sameCounts_ != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(sameCounts_) : 0);
  if (terms_ != nil) {
    sizeInBytes += OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(terms_);
    {
      IOSObjectArray *a__ = terms_;
      OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip * const *b__ = a__->buffer_;
      OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *termAndSkip = *b__++;
        sizeInBytes += (termAndSkip != nil) ? [termAndSkip ramBytesUsed] : 0;
      }
    }
  }
  return sizeInBytes;
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (NSString *)description {
  return JreStrcat("$I$J$J$IC", @"DirectTerms(terms=", ((IOSObjectArray *) nil_chk(terms_))->size_, @",postings=", sumDocFreq_, @",positions=", sumTotalTermFreq_, @",docs=", docCount_, ')');
}

- (jint)compareWithInt:(jint)ord
withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)other {
  IOSByteArray *otherBytes = ((OrgApacheLuceneUtilBytesRef *) nil_chk(other))->bytes_;
  jint upto = IOSIntArray_Get(nil_chk(termOffsets_), ord);
  jint termLen = IOSIntArray_Get(termOffsets_, 1 + ord) - upto;
  jint otherUpto = other->offset_;
  jint stop = upto + JavaLangMath_minWithInt_withInt_(termLen, other->length_);
  while (upto < stop) {
    jint diff = (IOSByteArray_Get(nil_chk(termBytes_), upto++) & (jint) 0xFF) - (IOSByteArray_Get(nil_chk(otherBytes), otherUpto++) & (jint) 0xFF);
    if (diff != 0) {
      return diff;
    }
  }
  return termLen - other->length_;
}

- (void)setSkipsWithInt:(jint)termOrd
          withByteArray:(IOSByteArray *)termBytes {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_setSkipsWithInt_withByteArray_(self, termOrd, termBytes);
}

- (void)finishSkips {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_finishSkips(self);
}

- (void)saveSkipWithInt:(jint)ord
                withInt:(jint)backCount {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_saveSkipWithInt_withInt_(self, ord, backCount);
}

- (OrgApacheLuceneIndexTermsEnum *)iterator {
  return [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_(self) autorelease];
}

- (OrgApacheLuceneIndexTermsEnum *)intersectWithOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)compiled
                                                              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)startTerm {
  return [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(self, compiled, startTerm) autorelease];
}

- (jlong)size {
  return ((IOSObjectArray *) nil_chk(terms_))->size_;
}

- (jlong)getSumTotalTermFreq {
  return sumTotalTermFreq_;
}

- (jlong)getSumDocFreq {
  return sumDocFreq_;
}

- (jint)getDocCount {
  return docCount_;
}

- (jboolean)hasFreqs {
  return hasFreq_;
}

- (jboolean)hasOffsets {
  return hasOffsets_;
}

- (jboolean)hasPositions {
  return hasPos_;
}

- (jboolean)hasPayloads {
  return hasPayloads_;
}

- (void)dealloc {
  RELEASE_(termBytes_);
  RELEASE_(termOffsets_);
  RELEASE_(skips_);
  RELEASE_(skipOffsets_);
  RELEASE_(terms_);
  RELEASE_(sameCounts_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField class]) {
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_BASE_RAM_BYTES_USED_ = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexSegmentReadState:withNSString:withOrgApacheLuceneIndexTerms:withInt:withInt:", "DirectField", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "compareWithInt:withOrgApacheLuceneUtilBytesRef:", "compare", "I", 0x0, NULL, NULL },
    { "setSkipsWithInt:withByteArray:", "setSkips", "V", 0x2, NULL, NULL },
    { "finishSkips", NULL, "V", 0x2, NULL, NULL },
    { "saveSkipWithInt:withInt:", "saveSkip", "V", 0x2, NULL, NULL },
    { "iterator", NULL, "Lorg.apache.lucene.index.TermsEnum;", 0x1, NULL, NULL },
    { "intersectWithOrgApacheLuceneUtilAutomatonCompiledAutomaton:withOrgApacheLuceneUtilBytesRef:", "intersect", "Lorg.apache.lucene.index.TermsEnum;", 0x1, NULL, NULL },
    { "size", NULL, "J", 0x1, NULL, NULL },
    { "getSumTotalTermFreq", NULL, "J", 0x1, NULL, NULL },
    { "getSumDocFreq", NULL, "J", 0x1, NULL, NULL },
    { "getDocCount", NULL, "I", 0x1, NULL, NULL },
    { "hasFreqs", NULL, "Z", 0x1, NULL, NULL },
    { "hasOffsets", NULL, "Z", 0x1, NULL, NULL },
    { "hasPositions", NULL, "Z", 0x1, NULL, NULL },
    { "hasPayloads", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED_", NULL, 0x1a, "J", &OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_BASE_RAM_BYTES_USED_, NULL, .constantValue.asLong = 0 },
    { "termBytes_", NULL, 0x12, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "termOffsets_", NULL, 0x12, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "skips_", NULL, 0x12, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "skipOffsets_", NULL, 0x12, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "terms_", NULL, 0x12, "[Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField$TermAndSkip;", NULL, NULL, .constantValue.asLong = 0 },
    { "hasFreq_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hasPos_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hasOffsets_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hasPayloads_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "sumTotalTermFreq_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "docCount_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "sumDocFreq_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "skipCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "count_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "sameCounts_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "minSkipCount_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField$TermAndSkip;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField$LowFreqTerm;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField$HighFreqTerm;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField$IntArrayWriter;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField$DirectTermsEnum;", "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField$DirectIntersectTermsEnum;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField = { 2, "DirectField", "org.apache.lucene.codecs.memory", "DirectPostingsFormat", 0x1a, 18, methods, 17, fields, 0, NULL, 6, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_initWithOrgApacheLuceneIndexSegmentReadState_withNSString_withOrgApacheLuceneIndexTerms_withInt_withInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *self, OrgApacheLuceneIndexSegmentReadState *state, NSString *field, OrgApacheLuceneIndexTerms *termsIn, jint minSkipCount, jint lowFreqCutoff) {
  OrgApacheLuceneIndexTerms_init(self);
  JreStrongAssignAndConsume(&self->sameCounts_, [IOSIntArray newArrayWithLength:10]);
  OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(((OrgApacheLuceneIndexSegmentReadState *) nil_chk(state))->fieldInfos_)) fieldInfoWithNSString:field];
  self->sumTotalTermFreq_ = [((OrgApacheLuceneIndexTerms *) nil_chk(termsIn)) getSumTotalTermFreq];
  self->sumDocFreq_ = [termsIn getSumDocFreq];
  self->docCount_ = [termsIn getDocCount];
  jint numTerms = (jint) [termsIn size];
  if (numTerms == -1) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"codec does not provide Terms.size()") autorelease];
  }
  JreStrongAssignAndConsume(&self->terms_, [IOSObjectArray newArrayWithLength:numTerms type:OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip_class_()]);
  JreStrongAssignAndConsume(&self->termOffsets_, [IOSIntArray newArrayWithLength:1 + numTerms]);
  IOSByteArray *termBytes = [IOSByteArray arrayWithLength:1024];
  self->minSkipCount_ = minSkipCount;
  self->hasFreq_ = ([((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)] > 0);
  self->hasPos_ = ([((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([fieldInfo getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS)] > 0);
  self->hasOffsets_ = ([((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([fieldInfo getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)] > 0);
  self->hasPayloads_ = [fieldInfo hasPayloads];
  OrgApacheLuceneUtilBytesRef *term;
  OrgApacheLuceneIndexPostingsEnum *postingsEnum = nil;
  OrgApacheLuceneIndexPostingsEnum *docsAndPositionsEnum = nil;
  OrgApacheLuceneIndexTermsEnum *termsEnum = [termsIn iterator];
  jint termOffset = 0;
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter *scratch = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter_init() autorelease];
  OrgApacheLuceneStoreRAMOutputStream *ros = [new_OrgApacheLuceneStoreRAMOutputStream_init() autorelease];
  while ((term = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) next]) != nil) {
    jint docFreq = [termsEnum docFreq];
    jlong totalTermFreq = [termsEnum totalTermFreq];
    *IOSIntArray_GetRef(self->termOffsets_, self->count_) = termOffset;
    if (termBytes->size_ < (termOffset + ((OrgApacheLuceneUtilBytesRef *) nil_chk(term))->length_)) {
      termBytes = OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(termBytes, termOffset + term->length_);
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(term->bytes_, term->offset_, termBytes, termOffset, term->length_);
    termOffset += term->length_;
    *IOSIntArray_GetRef(self->termOffsets_, self->count_ + 1) = termOffset;
    if (self->hasPos_) {
      docsAndPositionsEnum = [termsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:docsAndPositionsEnum withInt:OrgApacheLuceneIndexPostingsEnum_ALL];
    }
    else {
      postingsEnum = [termsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:postingsEnum];
    }
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *ent;
    OrgApacheLuceneIndexPostingsEnum *postingsEnum2;
    if (self->hasPos_) {
      postingsEnum2 = docsAndPositionsEnum;
    }
    else {
      postingsEnum2 = postingsEnum;
    }
    jint docID;
    if (docFreq <= lowFreqCutoff) {
      [ros reset];
      while ((docID = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum2)) nextDoc]) != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
        [scratch addWithInt:docID];
        if (self->hasFreq_) {
          jint freq = [postingsEnum2 freq];
          [scratch addWithInt:freq];
          if (self->hasPos_) {
            for (jint pos = 0; pos < freq; pos++) {
              [scratch addWithInt:[((OrgApacheLuceneIndexPostingsEnum *) nil_chk(docsAndPositionsEnum)) nextPosition]];
              if (self->hasOffsets_) {
                [scratch addWithInt:[docsAndPositionsEnum startOffset]];
                [scratch addWithInt:[docsAndPositionsEnum endOffset]];
              }
              if (self->hasPayloads_) {
                OrgApacheLuceneUtilBytesRef *payload = [docsAndPositionsEnum getPayload];
                if (payload != nil) {
                  [scratch addWithInt:payload->length_];
                  [ros writeBytesWithByteArray:payload->bytes_ withInt:payload->offset_ withInt:payload->length_];
                }
                else {
                  [scratch addWithInt:0];
                }
              }
            }
          }
        }
      }
      IOSByteArray *payloads;
      if (self->hasPayloads_) {
        payloads = [IOSByteArray arrayWithLength:(jint) [ros getFilePointer]];
        [ros writeToWithByteArray:payloads withInt:0];
      }
      else {
        payloads = nil;
      }
      IOSIntArray *postings = [scratch get];
      ent = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_initWithIntArray_withByteArray_withInt_withInt_(postings, payloads, docFreq, (jint) totalTermFreq) autorelease];
    }
    else {
      IOSIntArray *docs = [IOSIntArray arrayWithLength:docFreq];
      IOSIntArray *freqs;
      IOSObjectArray *positions;
      IOSObjectArray *payloads;
      if (self->hasFreq_) {
        freqs = [IOSIntArray arrayWithLength:docFreq];
        if (self->hasPos_) {
          positions = [IOSObjectArray arrayWithLength:docFreq type:IOSClass_intArray(1)];
          if (self->hasPayloads_) {
            payloads = [IOSObjectArray arrayWithLength:docFreq type:IOSClass_byteArray(2)];
          }
          else {
            payloads = nil;
          }
        }
        else {
          positions = nil;
          payloads = nil;
        }
      }
      else {
        freqs = nil;
        positions = nil;
        payloads = nil;
      }
      jint upto = 0;
      while ((docID = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum2)) nextDoc]) != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
        *IOSIntArray_GetRef(docs, upto) = docID;
        if (self->hasFreq_) {
          jint freq = [postingsEnum2 freq];
          *IOSIntArray_GetRef(nil_chk(freqs), upto) = freq;
          if (self->hasPos_) {
            jint mult;
            if (self->hasOffsets_) {
              mult = 3;
            }
            else {
              mult = 1;
            }
            if (self->hasPayloads_) {
              IOSObjectArray_SetAndConsume(nil_chk(payloads), upto, [IOSObjectArray newArrayWithLength:freq type:IOSClass_byteArray(1)]);
            }
            IOSObjectArray_SetAndConsume(nil_chk(positions), upto, [IOSIntArray newArrayWithLength:mult * freq]);
            jint posUpto = 0;
            for (jint pos = 0; pos < freq; pos++) {
              *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(positions, upto)), posUpto) = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(docsAndPositionsEnum)) nextPosition];
              if (self->hasPayloads_) {
                OrgApacheLuceneUtilBytesRef *payload = [docsAndPositionsEnum getPayload];
                if (payload != nil) {
                  IOSByteArray *payloadBytes = [IOSByteArray arrayWithLength:payload->length_];
                  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(payload->bytes_, payload->offset_, payloadBytes, 0, payload->length_);
                  IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(nil_chk(payloads), upto)), pos, payloadBytes);
                }
              }
              posUpto++;
              if (self->hasOffsets_) {
                *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(positions, upto)), posUpto++) = [docsAndPositionsEnum startOffset];
                *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(positions, upto)), posUpto++) = [docsAndPositionsEnum endOffset];
              }
            }
          }
        }
        upto++;
      }
      JreAssert((upto == docFreq), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:493 condition failed: assert upto == docFreq;"));
      ent = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_initWithIntArray_withIntArray_withIntArray2_withByteArray3_withLong_(docs, freqs, positions, payloads, totalTermFreq) autorelease];
    }
    IOSObjectArray_Set(self->terms_, self->count_, ent);
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_setSkipsWithInt_withByteArray_(self, self->count_, termBytes);
    self->count_++;
  }
  *IOSIntArray_GetRef(self->termOffsets_, self->count_) = termOffset;
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_finishSkips(self);
  JreStrongAssignAndConsume(&self->termBytes_, [IOSByteArray newArrayWithLength:termOffset]);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(termBytes, 0, self->termBytes_, 0, termOffset);
  JreStrongAssignAndConsume(&self->skips_, [IOSIntArray newArrayWithLength:self->skipCount_]);
  JreStrongAssignAndConsume(&self->skipOffsets_, [IOSIntArray newArrayWithLength:1 + numTerms]);
  jint skipOffset = 0;
  for (jint i = 0; i < numTerms; i++) {
    IOSIntArray *termSkips = ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *) nil_chk(IOSObjectArray_Get(self->terms_, i)))->skips_;
    *IOSIntArray_GetRef(self->skipOffsets_, i) = skipOffset;
    if (termSkips != nil) {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(termSkips, 0, self->skips_, skipOffset, termSkips->size_);
      skipOffset += termSkips->size_;
      JreStrongAssign(&((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *) nil_chk(IOSObjectArray_Get(self->terms_, i)))->skips_, nil);
    }
  }
  *IOSIntArray_GetRef(self->skipOffsets_, numTerms) = skipOffset;
  JreAssert((skipOffset == self->skipCount_), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:527 condition failed: assert skipOffset == skipCount;"));
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_initWithOrgApacheLuceneIndexSegmentReadState_withNSString_withOrgApacheLuceneIndexTerms_withInt_withInt_(OrgApacheLuceneIndexSegmentReadState *state, NSString *field, OrgApacheLuceneIndexTerms *termsIn, jint minSkipCount, jint lowFreqCutoff) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_initWithOrgApacheLuceneIndexSegmentReadState_withNSString_withOrgApacheLuceneIndexTerms_withInt_withInt_(self, state, field, termsIn, minSkipCount, lowFreqCutoff);
  return self;
}

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_setSkipsWithInt_withByteArray_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *self, jint termOrd, IOSByteArray *termBytes) {
  jint termLength = IOSIntArray_Get(nil_chk(self->termOffsets_), termOrd + 1) - IOSIntArray_Get(self->termOffsets_, termOrd);
  if (((IOSIntArray *) nil_chk(self->sameCounts_))->size_ < termLength) {
    JreStrongAssign(&self->sameCounts_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(self->sameCounts_, termLength));
  }
  if (termOrd > 0) {
    jint lastTermLength = IOSIntArray_Get(self->termOffsets_, termOrd) - IOSIntArray_Get(self->termOffsets_, termOrd - 1);
    jint limit = JavaLangMath_minWithInt_withInt_(termLength, lastTermLength);
    jint lastTermOffset = IOSIntArray_Get(self->termOffsets_, termOrd - 1);
    jint termOffset = IOSIntArray_Get(self->termOffsets_, termOrd);
    jint i = 0;
    for (; i < limit; i++) {
      if (IOSByteArray_Get(nil_chk(termBytes), lastTermOffset++) == IOSByteArray_Get(termBytes, termOffset++)) {
        (*IOSIntArray_GetRef(nil_chk(self->sameCounts_), i))++;
      }
      else {
        for (; i < limit; i++) {
          if (IOSIntArray_Get(nil_chk(self->sameCounts_), i) >= self->minSkipCount_) {
            OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_saveSkipWithInt_withInt_(self, termOrd, IOSIntArray_Get(self->sameCounts_, i));
          }
          *IOSIntArray_GetRef(self->sameCounts_, i) = 1;
        }
        break;
      }
    }
    for (; i < lastTermLength; i++) {
      if (IOSIntArray_Get(nil_chk(self->sameCounts_), i) >= self->minSkipCount_) {
        OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_saveSkipWithInt_withInt_(self, termOrd, IOSIntArray_Get(self->sameCounts_, i));
      }
      *IOSIntArray_GetRef(self->sameCounts_, i) = 0;
    }
    for (jint j = limit; j < termLength; j++) {
      *IOSIntArray_GetRef(nil_chk(self->sameCounts_), j) = 1;
    }
  }
  else {
    for (jint i = 0; i < termLength; i++) {
      (*IOSIntArray_GetRef(nil_chk(self->sameCounts_), i))++;
    }
  }
}

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_finishSkips(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *self) {
  JreAssert((self->count_ == ((IOSObjectArray *) nil_chk(self->terms_))->size_), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:629 condition failed: assert count == terms.length;"));
  jint lastTermOffset = IOSIntArray_Get(nil_chk(self->termOffsets_), self->count_ - 1);
  jint lastTermLength = IOSIntArray_Get(self->termOffsets_, self->count_) - lastTermOffset;
  for (jint i = 0; i < lastTermLength; i++) {
    if (IOSIntArray_Get(nil_chk(self->sameCounts_), i) >= self->minSkipCount_) {
      OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_saveSkipWithInt_withInt_(self, self->count_, IOSIntArray_Get(self->sameCounts_, i));
    }
  }
  for (jint termID = 0; termID < self->terms_->size_; termID++) {
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *term = IOSObjectArray_Get(self->terms_, termID);
    if (((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *) nil_chk(term))->skips_ != nil && term->skips_->size_ > 1) {
      for (jint pos = 0; pos < term->skips_->size_ / 2; pos++) {
        jint otherPos = term->skips_->size_ - pos - 1;
        jint temp = IOSIntArray_Get(term->skips_, pos);
        *IOSIntArray_GetRef(term->skips_, pos) = IOSIntArray_Get(term->skips_, otherPos);
        *IOSIntArray_GetRef(term->skips_, otherPos) = temp;
      }
    }
  }
}

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_saveSkipWithInt_withInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *self, jint ord, jint backCount) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *term = IOSObjectArray_Get(nil_chk(self->terms_), ord - backCount);
  self->skipCount_++;
  if (((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *) nil_chk(term))->skips_ == nil) {
    JreStrongAssignAndConsume(&term->skips_, [IOSIntArray newArrayWithInts:(jint[]){ ord } count:1]);
  }
  else {
    IOSIntArray *newSkips = [IOSIntArray arrayWithLength:term->skips_->size_ + 1];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(term->skips_, 0, newSkips, 0, term->skips_->size_);
    JreStrongAssign(&term->skips_, newSkips);
    *IOSIntArray_GetRef(term->skips_, term->skips_->size_ - 1) = ord;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip

- (instancetype)init {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(skips_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "skips_", NULL, 0x1, "[I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip = { 2, "TermAndSkip", "org.apache.lucene.codecs.memory", "DirectPostingsFormat$DirectField", 0x40a, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm

- (instancetype)initWithIntArray:(IOSIntArray *)postings
                   withByteArray:(IOSByteArray *)payloads
                         withInt:(jint)docFreq
                         withInt:(jint)totalTermFreq {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_initWithIntArray_withByteArray_withInt_withInt_(self, postings, payloads, docFreq, totalTermFreq);
  return self;
}

- (jlong)ramBytesUsed {
  return OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_BASE_RAM_BYTES_USED_ + ((postings_ != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(postings_) : 0) + ((payloads_ != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithByteArray_(payloads_) : 0);
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (void)dealloc {
  RELEASE_(postings_);
  RELEASE_(payloads_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]) {
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_BASE_RAM_BYTES_USED_ = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIntArray:withByteArray:withInt:withInt:", "LowFreqTerm", NULL, 0x1, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED_", NULL, 0x1a, "J", &OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_BASE_RAM_BYTES_USED_, NULL, .constantValue.asLong = 0 },
    { "postings_", NULL, 0x11, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloads_", NULL, 0x11, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "docFreq_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "totalTermFreq_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm = { 2, "LowFreqTerm", "org.apache.lucene.codecs.memory", "DirectPostingsFormat$DirectField", 0x1a, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_initWithIntArray_withByteArray_withInt_withInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *self, IOSIntArray *postings, IOSByteArray *payloads, jint docFreq, jint totalTermFreq) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip_init(self);
  JreStrongAssign(&self->postings_, postings);
  JreStrongAssign(&self->payloads_, payloads);
  self->docFreq_ = docFreq;
  self->totalTermFreq_ = totalTermFreq;
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_initWithIntArray_withByteArray_withInt_withInt_(IOSIntArray *postings, IOSByteArray *payloads, jint docFreq, jint totalTermFreq) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm_initWithIntArray_withByteArray_withInt_withInt_(self, postings, payloads, docFreq, totalTermFreq);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm

- (instancetype)initWithIntArray:(IOSIntArray *)docIDs
                    withIntArray:(IOSIntArray *)freqs
                   withIntArray2:(IOSObjectArray *)positions
                  withByteArray3:(IOSObjectArray *)payloads
                        withLong:(jlong)totalTermFreq {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_initWithIntArray_withIntArray_withIntArray2_withByteArray3_withLong_(self, docIDs, freqs, positions, payloads, totalTermFreq);
  return self;
}

- (jlong)ramBytesUsed {
  jlong sizeInBytes = OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_BASE_RAM_BYTES_USED_;
  sizeInBytes += (docIDs_ != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(docIDs_) : 0;
  sizeInBytes += (freqs_ != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(freqs_) : 0;
  if (positions_ != nil) {
    sizeInBytes += OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(positions_);
    {
      IOSObjectArray *a__ = positions_;
      IOSIntArray * const *b__ = a__->buffer_;
      IOSIntArray * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        IOSIntArray *position = *b__++;
        sizeInBytes += (position != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(position) : 0;
      }
    }
  }
  if (payloads_ != nil) {
    sizeInBytes += OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(payloads_);
    {
      IOSObjectArray *a__ = payloads_;
      IOSObjectArray * const *b__ = a__->buffer_;
      IOSObjectArray * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        IOSObjectArray *payload = *b__++;
        if (payload != nil) {
          sizeInBytes += OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(payload);
          {
            IOSObjectArray *a__ = payload;
            IOSByteArray * const *b__ = a__->buffer_;
            IOSByteArray * const *e__ = b__ + a__->size_;
            while (b__ < e__) {
              IOSByteArray *pload = *b__++;
              sizeInBytes += (pload != nil) ? OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithByteArray_(pload) : 0;
            }
          }
        }
      }
    }
  }
  return sizeInBytes;
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (void)dealloc {
  RELEASE_(docIDs_);
  RELEASE_(freqs_);
  RELEASE_(positions_);
  RELEASE_(payloads_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm class]) {
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_BASE_RAM_BYTES_USED_ = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIntArray:withIntArray:withIntArray2:withByteArray3:withLong:", "HighFreqTerm", NULL, 0x1, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED_", NULL, 0x1a, "J", &OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_BASE_RAM_BYTES_USED_, NULL, .constantValue.asLong = 0 },
    { "totalTermFreq_", NULL, 0x11, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "docIDs_", NULL, 0x11, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "freqs_", NULL, 0x11, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "positions_", NULL, 0x11, "[[I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloads_", NULL, 0x11, "[[[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm = { 2, "HighFreqTerm", "org.apache.lucene.codecs.memory", "DirectPostingsFormat$DirectField", 0x1a, 3, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_initWithIntArray_withIntArray_withIntArray2_withByteArray3_withLong_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *self, IOSIntArray *docIDs, IOSIntArray *freqs, IOSObjectArray *positions, IOSObjectArray *payloads, jlong totalTermFreq) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_TermAndSkip_init(self);
  JreStrongAssign(&self->docIDs_, docIDs);
  JreStrongAssign(&self->freqs_, freqs);
  JreStrongAssign(&self->positions_, positions);
  JreStrongAssign(&self->payloads_, payloads);
  self->totalTermFreq_ = totalTermFreq;
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_initWithIntArray_withIntArray_withIntArray2_withByteArray3_withLong_(IOSIntArray *docIDs, IOSIntArray *freqs, IOSObjectArray *positions, IOSObjectArray *payloads, jlong totalTermFreq) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm_initWithIntArray_withIntArray_withIntArray2_withByteArray3_withLong_(self, docIDs, freqs, positions, payloads, totalTermFreq);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter

- (void)addWithInt:(jint)value {
  if (((IOSIntArray *) nil_chk(ints_))->size_ == upto_) {
    JreStrongAssign(&ints_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_(ints_));
  }
  *IOSIntArray_GetRef(nil_chk(ints_), upto_++) = value;
}

- (IOSIntArray *)get {
  IOSIntArray *arr = [IOSIntArray arrayWithLength:upto_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(ints_, 0, arr, 0, upto_);
  upto_ = 0;
  return arr;
}

- (instancetype)init {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(ints_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithInt:", "add", "V", 0x1, NULL, NULL },
    { "get", NULL, "[I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ints_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "upto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter = { 2, "IntArrayWriter", "org.apache.lucene.codecs.memory", "DirectPostingsFormat$DirectField", 0x1a, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->ints_, [IOSIntArray newArrayWithLength:10]);
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter_init() {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_IntArrayWriter)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum

- (instancetype)initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField:(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *)outer$ {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_(self, outer$);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)setTerm {
  return OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_setTerm(self);
}

- (OrgApacheLuceneUtilBytesRef *)next {
  termOrd_++;
  if (termOrd_ < ((IOSObjectArray *) nil_chk(this$0_->terms_))->size_) {
    return OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_setTerm(self);
  }
  else {
    return nil;
  }
}

- (OrgApacheLuceneIndexTermState *)termState {
  OrgApacheLuceneIndexOrdTermState *state = [new_OrgApacheLuceneIndexOrdTermState_init() autorelease];
  state->ord_ = termOrd_;
  return state;
}

- (jint)findTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  return OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_findTermWithOrgApacheLuceneUtilBytesRef_(self, term);
}

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  jint ord = OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_findTermWithOrgApacheLuceneUtilBytesRef_(self, term);
  if (ord >= 0) {
    termOrd_ = ord;
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_setTerm(self);
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND);
  }
  else if (ord == -((IOSObjectArray *) nil_chk(this$0_->terms_))->size_ - 1) {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END);
  }
  else {
    termOrd_ = -ord - 1;
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_setTerm(self);
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, NOT_FOUND);
  }
}

- (jboolean)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  jint ord = OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_findTermWithOrgApacheLuceneUtilBytesRef_(self, term);
  if (ord >= 0) {
    termOrd_ = ord;
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_setTerm(self);
    return YES;
  }
  else {
    return NO;
  }
}

- (void)seekExactWithLong:(jlong)ord {
  termOrd_ = (jint) ord;
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_setTerm(self);
}

- (void)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term
               withOrgApacheLuceneIndexTermState:(OrgApacheLuceneIndexTermState *)state {
  termOrd_ = (jint) ((OrgApacheLuceneIndexOrdTermState *) nil_chk(((OrgApacheLuceneIndexOrdTermState *) check_class_cast(state, [OrgApacheLuceneIndexOrdTermState class]))))->ord_;
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_setTerm(self);
  JreAssert(([((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) isEqual:scratch_]), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:828 condition failed: assert term.equals(scratch);"));
}

- (OrgApacheLuceneUtilBytesRef *)term {
  return scratch_;
}

- (jlong)ord {
  return termOrd_;
}

- (jint)docFreq {
  if ([IOSObjectArray_Get(nil_chk(this$0_->terms_), termOrd_) isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]]) {
    return ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]))))->docFreq_;
  }
  else {
    return ((IOSIntArray *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm class]))))->docIDs_))->size_;
  }
}

- (jlong)totalTermFreq {
  if ([IOSObjectArray_Get(nil_chk(this$0_->terms_), termOrd_) isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]]) {
    return ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]))))->totalTermFreq_;
  }
  else {
    return ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm class]))))->totalTermFreq_;
  }
}

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags {
  if (OrgApacheLuceneIndexPostingsEnum_featureRequestedWithInt_withShort_(flags, OrgApacheLuceneIndexDocsAndPositionsEnum_OLD_NULL_SEMANTICS)) {
    if (!this$0_->hasPos_) {
      return nil;
    }
  }
  if (OrgApacheLuceneIndexPostingsEnum_featureRequestedWithInt_withShort_(flags, OrgApacheLuceneIndexPostingsEnum_POSITIONS)) {
    if ([IOSObjectArray_Get(nil_chk(this$0_->terms_), termOrd_) isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]]) {
      OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *term = ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]));
      IOSIntArray *postings = ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) nil_chk(term))->postings_;
      if (this$0_->hasFreq_ == NO) {
        OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *docsEnum;
        if ([reuse isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF class]]) {
          docsEnum = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *) check_class_cast(reuse, [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF class]);
        }
        else {
          docsEnum = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF_init() autorelease];
        }
        return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *) nil_chk(docsEnum)) resetWithIntArray:postings];
      }
      else if (this$0_->hasPos_ == NO) {
        OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *docsEnum;
        if ([reuse isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos class]]) {
          docsEnum = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *) check_class_cast(reuse, [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos class]);
        }
        else {
          docsEnum = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos_init() autorelease];
        }
        return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *) nil_chk(docsEnum)) resetWithIntArray:postings];
      }
      IOSByteArray *payloads = term->payloads_;
      return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum *) [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum_initWithBoolean_withBoolean_(this$0_->hasOffsets_, this$0_->hasPayloads_) autorelease]) resetWithIntArray:postings withByteArray:payloads];
    }
    else {
      OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *term = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm class]);
      if (this$0_->hasPos_ == NO) {
        return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *) [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum_init() autorelease]) resetWithIntArray:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) nil_chk(term))->docIDs_ withIntArray:term->freqs_];
      }
      else {
        return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum *) [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum_initWithBoolean_(this$0_->hasOffsets_) autorelease]) resetWithIntArray:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) nil_chk(term))->docIDs_ withIntArray:term->freqs_ withIntArray2:term->positions_ withByteArray3:term->payloads_];
      }
    }
  }
  if ([IOSObjectArray_Get(nil_chk(this$0_->terms_), termOrd_) isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]]) {
    IOSIntArray *postings = ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]))))->postings_;
    if (this$0_->hasFreq_) {
      if (this$0_->hasPos_) {
        jint posLen;
        if (this$0_->hasOffsets_) {
          posLen = 3;
        }
        else {
          posLen = 1;
        }
        if (this$0_->hasPayloads_) {
          posLen++;
        }
        OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *docsEnum;
        if ([reuse isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum class]]) {
          docsEnum = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *) check_class_cast(reuse, [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum class]);
          if (![((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *) nil_chk(docsEnum)) canReuseWithInt:posLen]) {
            docsEnum = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum_initWithInt_(posLen) autorelease];
          }
        }
        else {
          docsEnum = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum_initWithInt_(posLen) autorelease];
        }
        return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *) nil_chk(docsEnum)) resetWithIntArray:postings];
      }
      else {
        OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *docsEnum;
        if ([reuse isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos class]]) {
          docsEnum = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *) check_class_cast(reuse, [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos class]);
        }
        else {
          docsEnum = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos_init() autorelease];
        }
        return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *) nil_chk(docsEnum)) resetWithIntArray:postings];
      }
    }
    else {
      OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *docsEnum;
      if ([reuse isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF class]]) {
        docsEnum = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *) check_class_cast(reuse, [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF class]);
      }
      else {
        docsEnum = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF_init() autorelease];
      }
      return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *) nil_chk(docsEnum)) resetWithIntArray:postings];
    }
  }
  else {
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *term = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm class]);
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *docsEnum;
    if ([reuse isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum class]]) {
      docsEnum = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *) check_class_cast(reuse, [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum class]);
    }
    else {
      docsEnum = [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum_init() autorelease];
    }
    return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *) nil_chk(docsEnum)) resetWithIntArray:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) nil_chk(term))->docIDs_ withIntArray:term->freqs_];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(scratch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField:", "DirectTermsEnum", NULL, 0x2, NULL, NULL },
    { "setTerm", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x2, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "termState", NULL, "Lorg.apache.lucene.index.TermState;", 0x1, NULL, NULL },
    { "findTermWithOrgApacheLuceneUtilBytesRef:", "findTerm", "I", 0x2, NULL, NULL },
    { "seekCeilWithOrgApacheLuceneUtilBytesRef:", "seekCeil", "Lorg.apache.lucene.index.TermsEnum$SeekStatus;", 0x1, NULL, NULL },
    { "seekExactWithOrgApacheLuceneUtilBytesRef:", "seekExact", "Z", 0x1, NULL, NULL },
    { "seekExactWithLong:", "seekExact", "V", 0x1, NULL, NULL },
    { "seekExactWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneIndexTermState:", "seekExact", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "term", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "ord", NULL, "J", 0x1, NULL, NULL },
    { "docFreq", NULL, "I", 0x1, NULL, NULL },
    { "totalTermFreq", NULL, "J", 0x1, NULL, NULL },
    { "postingsWithOrgApacheLuceneIndexPostingsEnum:withInt:", "postings", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField;", NULL, NULL, .constantValue.asLong = 0 },
    { "scratch_", NULL, 0x12, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "termOrd_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum = { 2, "DirectTermsEnum", "org.apache.lucene.codecs.memory", "DirectPostingsFormat$DirectField", 0x12, 14, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum *self, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexTermsEnum_init(self);
  JreStrongAssignAndConsume(&self->scratch_, new_OrgApacheLuceneUtilBytesRef_init());
  self->termOrd_ = -1;
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *outer$) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_(self, outer$);
  return self;
}

OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_setTerm(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum *self) {
  JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(self->scratch_))->bytes_, self->this$0_->termBytes_);
  self->scratch_->offset_ = IOSIntArray_Get(nil_chk(self->this$0_->termOffsets_), self->termOrd_);
  self->scratch_->length_ = IOSIntArray_Get(self->this$0_->termOffsets_, self->termOrd_ + 1) - IOSIntArray_Get(self->this$0_->termOffsets_, self->termOrd_);
  return self->scratch_;
}

jint OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum_findTermWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum *self, OrgApacheLuceneUtilBytesRef *term) {
  jint low = 0;
  jint high = ((IOSObjectArray *) nil_chk(self->this$0_->terms_))->size_ - 1;
  while (low <= high) {
    jint mid = JreURShift32((low + high), 1);
    jint cmp = [self->this$0_ compareWithInt:mid withOrgApacheLuceneUtilBytesRef:term];
    if (cmp < 0) {
      low = mid + 1;
    }
    else if (cmp > 0) {
      high = mid - 1;
    }
    else {
      return mid;
    }
  }
  return -(low + 1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectTermsEnum)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum

- (instancetype)initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField:(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *)outer$
                                  withOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)compiled
                                                    withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)startTerm {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(self, outer$, compiled, startTerm);
  return self;
}

- (void)grow {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_grow(self);
}

- (OrgApacheLuceneUtilBytesRef *)next {
  termOrd_++;
  jint skipUpto = 0;
  if (termOrd_ == 0 && IOSIntArray_Get(nil_chk(this$0_->termOffsets_), 1) == 0) {
    JreAssert((stateUpto_ == 0), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1171 condition failed: assert stateUpto == 0;"));
    if ([((OrgApacheLuceneUtilAutomatonRunAutomaton *) nil_chk(runAutomaton_)) isAcceptWithInt:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(nil_chk(states_), 0)))->state_]) {
      JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(scratch_))->bytes_, this$0_->termBytes_);
      scratch_->offset_ = 0;
      scratch_->length_ = 0;
      return scratch_;
    }
    termOrd_++;
  }
  while (YES) {
    {
      if (termOrd_ == ((IOSObjectArray *) nil_chk(this$0_->terms_))->size_) {
        return nil;
      }
      OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *state = IOSObjectArray_Get(nil_chk(states_), stateUpto_);
      if (termOrd_ == ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(state))->changeOrd_) {
        stateUpto_--;
        continue;
      }
      jint termOffset = IOSIntArray_Get(nil_chk(this$0_->termOffsets_), termOrd_);
      jint termLength = IOSIntArray_Get(this$0_->termOffsets_, termOrd_ + 1) - termOffset;
      jint skipOffset = IOSIntArray_Get(nil_chk(this$0_->skipOffsets_), termOrd_);
      jint numSkips = IOSIntArray_Get(this$0_->skipOffsets_, termOrd_ + 1) - skipOffset;
      JreAssert((termOrd_ < state->changeOrd_), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1227 condition failed: assert termOrd < state.changeOrd;"));
      JreAssert((stateUpto_ <= termLength), (JreStrcat("$I$I", @"term.length=", termLength, @"; stateUpto=", stateUpto_)));
      jint label = IOSByteArray_Get(nil_chk(this$0_->termBytes_), termOffset + stateUpto_) & (jint) 0xFF;
      while (label > state->transitionMax_) {
        state->transitionUpto_++;
        if (state->transitionUpto_ == state->transitionCount_) {
          if (stateUpto_ == 0) {
            termOrd_ = this$0_->terms_->size_;
            return nil;
          }
          else {
            JreAssert((state->changeOrd_ > termOrd_), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1243 condition failed: assert state.changeOrd > termOrd;"));
            termOrd_ = ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(states_, stateUpto_)))->changeOrd_;
            skipUpto = 0;
            stateUpto_--;
          }
          goto continue_nextTerm;
        }
        [((OrgApacheLuceneUtilAutomatonAutomaton *) nil_chk(((OrgApacheLuceneUtilAutomatonCompiledAutomaton *) nil_chk(compiledAutomaton_))->automaton_)) getNextTransitionWithOrgApacheLuceneUtilAutomatonTransition:state->transition_];
        JreAssert((state->transitionUpto_ < state->transitionCount_), (JreStrcat("$I$I", @" state.transitionUpto=", state->transitionUpto_, @" vs ", state->transitionCount_)));
        state->transitionMin_ = ((OrgApacheLuceneUtilAutomatonTransition *) nil_chk(state->transition_))->min_;
        state->transitionMax_ = state->transition_->max_;
        JreAssert((state->transitionMin_ >= 0), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1258 condition failed: assert state.transitionMin >= 0;"));
        JreAssert((state->transitionMin_ <= 255), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1259 condition failed: assert state.transitionMin <= 255;"));
        JreAssert((state->transitionMax_ >= 0), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1260 condition failed: assert state.transitionMax >= 0;"));
        JreAssert((state->transitionMax_ <= 255), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1261 condition failed: assert state.transitionMax <= 255;"));
      }
      jint targetLabel = state->transitionMin_;
      if ((IOSByteArray_Get(this$0_->termBytes_, termOffset + stateUpto_) & (jint) 0xFF) < targetLabel) {
        jint low = termOrd_ + 1;
        jint high = state->changeOrd_ - 1;
        while (YES) {
          if (low > high) {
            termOrd_ = low;
            skipUpto = 0;
            goto continue_nextTerm;
          }
          jint mid = JreURShift32((low + high), 1);
          jint cmp = (IOSByteArray_Get(this$0_->termBytes_, IOSIntArray_Get(this$0_->termOffsets_, mid) + stateUpto_) & (jint) 0xFF) - targetLabel;
          if (cmp < 0) {
            low = mid + 1;
          }
          else if (cmp > 0) {
            high = mid - 1;
          }
          else {
            while (mid > termOrd_ && (IOSByteArray_Get(this$0_->termBytes_, IOSIntArray_Get(this$0_->termOffsets_, mid - 1) + stateUpto_) & (jint) 0xFF) == targetLabel) {
              mid--;
            }
            termOrd_ = mid;
            skipUpto = 0;
            goto continue_nextTerm;
          }
        }
      }
      jint nextState = [((OrgApacheLuceneUtilAutomatonRunAutomaton *) nil_chk(runAutomaton_)) stepWithInt:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(states_, stateUpto_)))->state_ withInt:label];
      if (nextState == -1) {
        if (skipUpto < numSkips) {
          termOrd_ = IOSIntArray_Get(nil_chk(this$0_->skips_), skipOffset + skipUpto);
        }
        else {
          termOrd_++;
        }
        skipUpto = 0;
      }
      else if (skipUpto < numSkips) {
        OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_grow(self);
        stateUpto_++;
        ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(states_, stateUpto_)))->state_ = nextState;
        ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(states_, stateUpto_)))->changeOrd_ = IOSIntArray_Get(nil_chk(this$0_->skips_), skipOffset + skipUpto++);
        ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(states_, stateUpto_)))->transitionCount_ = [((OrgApacheLuceneUtilAutomatonAutomaton *) nil_chk(((OrgApacheLuceneUtilAutomatonCompiledAutomaton *) nil_chk(compiledAutomaton_))->automaton_)) getNumTransitionsWithInt:nextState];
        [compiledAutomaton_->automaton_ initTransitionWithInt:nextState withOrgApacheLuceneUtilAutomatonTransition:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(states_, stateUpto_)))->transition_];
        ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(states_, stateUpto_)))->transitionUpto_ = -1;
        ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(states_, stateUpto_)))->transitionMax_ = -1;
        if (stateUpto_ == termLength) {
          if ([runAutomaton_ isAcceptWithInt:nextState]) {
            JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(scratch_))->bytes_, this$0_->termBytes_);
            scratch_->offset_ = IOSIntArray_Get(this$0_->termOffsets_, termOrd_);
            scratch_->length_ = IOSIntArray_Get(this$0_->termOffsets_, 1 + termOrd_) - scratch_->offset_;
            return scratch_;
          }
          else {
            termOrd_++;
            skipUpto = 0;
          }
        }
      }
      else {
        if (((OrgApacheLuceneUtilAutomatonCompiledAutomaton *) nil_chk(compiledAutomaton_))->commonSuffixRef_ != nil) {
          JreAssert((compiledAutomaton_->commonSuffixRef_->offset_ == 0), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1390 condition failed: assert compiledAutomaton.commonSuffixRef.offset == 0;"));
          if (termLength < compiledAutomaton_->commonSuffixRef_->length_) {
            termOrd_++;
            skipUpto = 0;
            goto continue_nextTerm;
          }
          jint offset = termOffset + termLength - compiledAutomaton_->commonSuffixRef_->length_;
          for (jint suffix = 0; suffix < compiledAutomaton_->commonSuffixRef_->length_; suffix++) {
            if (IOSByteArray_Get(this$0_->termBytes_, offset + suffix) != IOSByteArray_Get(nil_chk(compiledAutomaton_->commonSuffixRef_->bytes_), suffix)) {
              termOrd_++;
              skipUpto = 0;
              goto continue_nextTerm;
            }
          }
        }
        jint upto = stateUpto_ + 1;
        while (upto < termLength) {
          nextState = [runAutomaton_ stepWithInt:nextState withInt:IOSByteArray_Get(this$0_->termBytes_, termOffset + upto) & (jint) 0xFF];
          if (nextState == -1) {
            termOrd_++;
            skipUpto = 0;
            goto continue_nextTerm;
          }
          upto++;
        }
        if ([runAutomaton_ isAcceptWithInt:nextState]) {
          JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(scratch_))->bytes_, this$0_->termBytes_);
          scratch_->offset_ = IOSIntArray_Get(this$0_->termOffsets_, termOrd_);
          scratch_->length_ = IOSIntArray_Get(this$0_->termOffsets_, 1 + termOrd_) - scratch_->offset_;
          return scratch_;
        }
        else {
          termOrd_++;
          skipUpto = 0;
        }
      }
    }
    continue_nextTerm: ;
  }
}

- (OrgApacheLuceneIndexTermState *)termState {
  OrgApacheLuceneIndexOrdTermState *state = [new_OrgApacheLuceneIndexOrdTermState_init() autorelease];
  state->ord_ = termOrd_;
  return state;
}

- (OrgApacheLuceneUtilBytesRef *)term {
  return scratch_;
}

- (jlong)ord {
  return termOrd_;
}

- (jint)docFreq {
  if ([IOSObjectArray_Get(nil_chk(this$0_->terms_), termOrd_) isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]]) {
    return ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]))))->docFreq_;
  }
  else {
    return ((IOSIntArray *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm class]))))->docIDs_))->size_;
  }
}

- (jlong)totalTermFreq {
  if ([IOSObjectArray_Get(nil_chk(this$0_->terms_), termOrd_) isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]]) {
    return ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]))))->totalTermFreq_;
  }
  else {
    return ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm class]))))->totalTermFreq_;
  }
}

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags {
  if (OrgApacheLuceneIndexPostingsEnum_featureRequestedWithInt_withShort_(flags, OrgApacheLuceneIndexDocsAndPositionsEnum_OLD_NULL_SEMANTICS)) {
    if (!this$0_->hasPos_) {
      return nil;
    }
  }
  if (this$0_->hasPos_ && OrgApacheLuceneIndexPostingsEnum_featureRequestedWithInt_withShort_(flags, OrgApacheLuceneIndexPostingsEnum_POSITIONS)) {
    if ([IOSObjectArray_Get(nil_chk(this$0_->terms_), termOrd_) isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]]) {
      OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *term = ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]));
      IOSIntArray *postings = ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) nil_chk(term))->postings_;
      IOSByteArray *payloads = term->payloads_;
      return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum *) [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum_initWithBoolean_withBoolean_(this$0_->hasOffsets_, this$0_->hasPayloads_) autorelease]) resetWithIntArray:postings withByteArray:payloads];
    }
    else {
      OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *term = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm class]);
      return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum *) [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum_initWithBoolean_(this$0_->hasOffsets_) autorelease]) resetWithIntArray:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) nil_chk(term))->docIDs_ withIntArray:term->freqs_ withIntArray2:term->positions_ withByteArray3:term->payloads_];
    }
  }
  if ([IOSObjectArray_Get(nil_chk(this$0_->terms_), termOrd_) isKindOfClass:[OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]]) {
    IOSIntArray *postings = ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_LowFreqTerm class]))))->postings_;
    if (this$0_->hasFreq_) {
      if (this$0_->hasPos_) {
        jint posLen;
        if (this$0_->hasOffsets_) {
          posLen = 3;
        }
        else {
          posLen = 1;
        }
        if (this$0_->hasPayloads_) {
          posLen++;
        }
        return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *) [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum_initWithInt_(posLen) autorelease]) resetWithIntArray:postings];
      }
      else {
        return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *) [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos_init() autorelease]) resetWithIntArray:postings];
      }
    }
    else {
      return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *) [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF_init() autorelease]) resetWithIntArray:postings];
    }
  }
  else {
    OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *term = (OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) check_class_cast(IOSObjectArray_Get(this$0_->terms_, termOrd_), [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm class]);
    return [((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *) [new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum_init() autorelease]) resetWithIntArray:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_HighFreqTerm *) nil_chk(term))->docIDs_ withIntArray:term->freqs_];
  }
}

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (void)seekExactWithLong:(jlong)ord {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(runAutomaton_);
  RELEASE_(compiledAutomaton_);
  RELEASE_(scratch_);
  RELEASE_(states_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField:withOrgApacheLuceneUtilAutomatonCompiledAutomaton:withOrgApacheLuceneUtilBytesRef:", "DirectIntersectTermsEnum", NULL, 0x1, NULL, NULL },
    { "grow", NULL, "V", 0x2, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "termState", NULL, "Lorg.apache.lucene.index.TermState;", 0x1, NULL, NULL },
    { "term", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "ord", NULL, "J", 0x1, NULL, NULL },
    { "docFreq", NULL, "I", 0x1, NULL, NULL },
    { "totalTermFreq", NULL, "J", 0x1, NULL, NULL },
    { "postingsWithOrgApacheLuceneIndexPostingsEnum:withInt:", "postings", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, NULL, NULL },
    { "seekCeilWithOrgApacheLuceneUtilBytesRef:", "seekCeil", "Lorg.apache.lucene.index.TermsEnum$SeekStatus;", 0x1, NULL, NULL },
    { "seekExactWithLong:", "seekExact", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField;", NULL, NULL, .constantValue.asLong = 0 },
    { "runAutomaton_", NULL, 0x12, "Lorg.apache.lucene.util.automaton.RunAutomaton;", NULL, NULL, .constantValue.asLong = 0 },
    { "compiledAutomaton_", NULL, 0x12, "Lorg.apache.lucene.util.automaton.CompiledAutomaton;", NULL, NULL, .constantValue.asLong = 0 },
    { "termOrd_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "scratch_", NULL, 0x12, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "states_", NULL, 0x2, "[Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField$DirectIntersectTermsEnum$State;", NULL, NULL, .constantValue.asLong = 0 },
    { "stateUpto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.DirectPostingsFormat$DirectField$DirectIntersectTermsEnum$State;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum = { 2, "DirectIntersectTermsEnum", "org.apache.lucene.codecs.memory", "DirectPostingsFormat$DirectField", 0x12, 11, methods, 7, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *self, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *outer$, OrgApacheLuceneUtilAutomatonCompiledAutomaton *compiled, OrgApacheLuceneUtilBytesRef *startTerm) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexTermsEnum_init(self);
  JreStrongAssignAndConsume(&self->scratch_, new_OrgApacheLuceneUtilBytesRef_init());
  JreStrongAssign(&self->runAutomaton_, ((OrgApacheLuceneUtilAutomatonCompiledAutomaton *) nil_chk(compiled))->runAutomaton_);
  JreStrongAssign(&self->compiledAutomaton_, compiled);
  self->termOrd_ = -1;
  JreStrongAssignAndConsume(&self->states_, [IOSObjectArray newArrayWithLength:1 type:OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_class_()]);
  IOSObjectArray_SetAndConsume(self->states_, 0, new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_(self));
  ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, 0)))->changeOrd_ = ((IOSObjectArray *) nil_chk(outer$->terms_))->size_;
  ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, 0)))->state_ = [((OrgApacheLuceneUtilAutomatonRunAutomaton *) nil_chk(self->runAutomaton_)) getInitialState];
  ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, 0)))->transitionCount_ = [((OrgApacheLuceneUtilAutomatonAutomaton *) nil_chk(self->compiledAutomaton_->automaton_)) getNumTransitionsWithInt:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, 0)))->state_];
  [self->compiledAutomaton_->automaton_ initTransitionWithInt:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, 0)))->state_ withOrgApacheLuceneUtilAutomatonTransition:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, 0)))->transition_];
  ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, 0)))->transitionUpto_ = -1;
  ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, 0)))->transitionMax_ = -1;
  if (startTerm != nil) {
    jint skipUpto = 0;
    if (startTerm->length_ == 0) {
      if (outer$->terms_->size_ > 0 && IOSIntArray_Get(nil_chk(outer$->termOffsets_), 1) == 0) {
        self->termOrd_ = 0;
      }
    }
    else {
      self->termOrd_++;
      for (jint i = 0; i < startTerm->length_; i++) {
        {
          jint label = IOSByteArray_Get(nil_chk(startTerm->bytes_), startTerm->offset_ + i) & (jint) 0xFF;
          while (label > ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionMax_) {
            ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionUpto_++;
            JreAssert((((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionUpto_ < ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionCount_), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1020 condition failed: assert states[i].transitionUpto < states[i].transitionCount;"));
            [self->compiledAutomaton_->automaton_ getNextTransitionWithOrgApacheLuceneUtilAutomatonTransition:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transition_];
            ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionMin_ = ((OrgApacheLuceneUtilAutomatonTransition *) nil_chk(((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transition_))->min_;
            ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionMax_ = ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transition_->max_;
            JreAssert((((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionMin_ >= 0), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1024 condition failed: assert states[i].transitionMin >= 0;"));
            JreAssert((((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionMin_ <= 255), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1025 condition failed: assert states[i].transitionMin <= 255;"));
            JreAssert((((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionMax_ >= 0), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1026 condition failed: assert states[i].transitionMax >= 0;"));
            JreAssert((((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, i)))->transitionMax_ <= 255), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1027 condition failed: assert states[i].transitionMax <= 255;"));
          }
          while (self->termOrd_ < outer$->terms_->size_) {
            jint skipOffset = IOSIntArray_Get(nil_chk(outer$->skipOffsets_), self->termOrd_);
            jint numSkips = IOSIntArray_Get(outer$->skipOffsets_, self->termOrd_ + 1) - skipOffset;
            jint termOffset = IOSIntArray_Get(nil_chk(outer$->termOffsets_), self->termOrd_);
            jint termLength = IOSIntArray_Get(outer$->termOffsets_, 1 + self->termOrd_) - termOffset;
            if (self->termOrd_ == ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, self->stateUpto_)))->changeOrd_) {
              self->stateUpto_--;
              self->termOrd_--;
              return;
            }
            if (termLength == i) {
              self->termOrd_++;
              skipUpto = 0;
            }
            else if (label < (IOSByteArray_Get(nil_chk(outer$->termBytes_), termOffset + i) & (jint) 0xFF)) {
              self->termOrd_--;
              self->stateUpto_ -= skipUpto;
              JreAssert((self->stateUpto_ >= 0), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1063 condition failed: assert stateUpto >= 0;"));
              return;
            }
            else if (label == (IOSByteArray_Get(outer$->termBytes_, termOffset + i) & (jint) 0xFF)) {
              if (skipUpto < numSkips) {
                OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_grow(self);
                jint nextState = [self->runAutomaton_ stepWithInt:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, self->stateUpto_)))->state_ withInt:label];
                JreAssert((nextState != -1), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1075 condition failed: assert nextState != -1;"));
                self->stateUpto_++;
                ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, self->stateUpto_)))->changeOrd_ = IOSIntArray_Get(nil_chk(outer$->skips_), skipOffset + skipUpto++);
                ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, self->stateUpto_)))->state_ = nextState;
                ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, self->stateUpto_)))->transitionCount_ = [self->compiledAutomaton_->automaton_ getNumTransitionsWithInt:nextState];
                [self->compiledAutomaton_->automaton_ initTransitionWithInt:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, self->stateUpto_)))->state_ withOrgApacheLuceneUtilAutomatonTransition:((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, self->stateUpto_)))->transition_];
                ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, self->stateUpto_)))->transitionUpto_ = -1;
                ((OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *) nil_chk(IOSObjectArray_Get(self->states_, self->stateUpto_)))->transitionMax_ = -1;
                goto continue_nextLabel;
              }
              else {
                jint startTermOrd = self->termOrd_;
                while (self->termOrd_ < outer$->terms_->size_ && [outer$ compareWithInt:self->termOrd_ withOrgApacheLuceneUtilBytesRef:startTerm] <= 0) {
                  JreAssert((self->termOrd_ == startTermOrd || IOSIntArray_Get(outer$->skipOffsets_, self->termOrd_) == IOSIntArray_Get(outer$->skipOffsets_, self->termOrd_ + 1)), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1101 condition failed: assert termOrd == startTermOrd || skipOffsets[termOrd] == skipOffsets[termOrd+1];"));
                  self->termOrd_++;
                }
                JreAssert((self->termOrd_ - startTermOrd < outer$->minSkipCount_), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1104 condition failed: assert termOrd - startTermOrd < minSkipCount;"));
                self->termOrd_--;
                self->stateUpto_ -= skipUpto;
                return;
              }
            }
            else {
              if (skipUpto < numSkips) {
                self->termOrd_ = IOSIntArray_Get(nil_chk(outer$->skips_), skipOffset + skipUpto);
              }
              else {
                self->termOrd_++;
              }
              skipUpto = 0;
            }
          }
          self->termOrd_--;
          return;
        }
        continue_nextLabel: ;
      }
    }
    jint termOffset = IOSIntArray_Get(nil_chk(outer$->termOffsets_), self->termOrd_);
    jint termLen = IOSIntArray_Get(outer$->termOffsets_, 1 + self->termOrd_) - termOffset;
    if (self->termOrd_ >= 0 && ![startTerm isEqual:[new_OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_(outer$->termBytes_, termOffset, termLen) autorelease]]) {
      self->stateUpto_ -= skipUpto;
      self->termOrd_--;
    }
  }
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField *outer$, OrgApacheLuceneUtilAutomatonCompiledAutomaton *compiled, OrgApacheLuceneUtilBytesRef *startTerm) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(self, outer$, compiled, startTerm);
  return self;
}

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_grow(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *self) {
  if (((IOSObjectArray *) nil_chk(self->states_))->size_ == 1 + self->stateUpto_) {
    IOSObjectArray *newStates = [IOSObjectArray arrayWithLength:self->states_->size_ + 1 type:OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->states_, 0, newStates, 0, self->states_->size_);
    IOSObjectArray_SetAndConsume(newStates, self->states_->size_, new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_(self));
    JreStrongAssign(&self->states_, newStates);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State

- (instancetype)initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum:(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *)outer$ {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(transition_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "changeOrd_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "transitionUpto_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "transitionCount_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "transitionMax_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "transitionMin_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "transition_", NULL, 0x10, "Lorg.apache.lucene.util.automaton.Transition;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State = { 2, "State", "org.apache.lucene.codecs.memory", "DirectPostingsFormat$DirectField$DirectIntersectTermsEnum", 0x12, 1, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *self, OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *outer$) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->transition_, new_OrgApacheLuceneUtilAutomatonTransition_init());
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum *outer$) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State_initWithOrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_DirectField_DirectIntersectTermsEnum_State)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)postings {
  JreStrongAssign(&self->postings_, postings);
  upto_ = -1;
  return self;
}

- (jint)nextDoc {
  upto_++;
  if (upto_ < ((IOSIntArray *) nil_chk(postings_))->size_) {
    return IOSIntArray_Get(postings_, upto_);
  }
  return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

- (jint)docID {
  if (upto_ < 0) {
    return -1;
  }
  else if (upto_ < ((IOSIntArray *) nil_chk(postings_))->size_) {
    return IOSIntArray_Get(postings_, upto_);
  }
  else {
    return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
}

- (jint)freq {
  return 1;
}

- (jint)nextPosition {
  return -1;
}

- (jint)startOffset {
  return -1;
}

- (jint)endOffset {
  return -1;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return nil;
}

- (jint)advanceWithInt:(jint)target {
  return [self slowAdvanceWithInt:target];
}

- (jlong)cost {
  return ((IOSIntArray *) nil_chk(postings_))->size_;
}

- (instancetype)init {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(postings_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "resetWithIntArray:", "reset", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "freq", NULL, "I", 0x1, NULL, NULL },
    { "nextPosition", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "startOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "endOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "postings_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "upto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF = { 2, "LowFreqDocsEnumNoTF", "org.apache.lucene.codecs.memory", "DirectPostingsFormat", 0x1a, 11, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *self) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF_init() {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoTF)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos

- (instancetype)init {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos_init(self);
  return self;
}

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)postings {
  JreStrongAssign(&self->postings_, postings);
  upto_ = -2;
  return self;
}

- (jint)nextDoc {
  upto_ += 2;
  if (upto_ < ((IOSIntArray *) nil_chk(postings_))->size_) {
    return IOSIntArray_Get(postings_, upto_);
  }
  return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

- (jint)docID {
  if (upto_ < 0) {
    return -1;
  }
  else if (upto_ < ((IOSIntArray *) nil_chk(postings_))->size_) {
    return IOSIntArray_Get(postings_, upto_);
  }
  else {
    return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
}

- (jint)freq {
  return IOSIntArray_Get(nil_chk(postings_), upto_ + 1);
}

- (jint)nextPosition {
  return -1;
}

- (jint)startOffset {
  return -1;
}

- (jint)endOffset {
  return -1;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return nil;
}

- (jint)advanceWithInt:(jint)target {
  return [self slowAdvanceWithInt:target];
}

- (jlong)cost {
  return ((IOSIntArray *) nil_chk(postings_))->size_ / 2;
}

- (void)dealloc {
  RELEASE_(postings_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "LowFreqDocsEnumNoPos", NULL, 0x1, NULL, NULL },
    { "resetWithIntArray:", "reset", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "freq", NULL, "I", 0x1, NULL, NULL },
    { "nextPosition", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "startOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "endOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "postings_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "upto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos = { 2, "LowFreqDocsEnumNoPos", "org.apache.lucene.codecs.memory", "DirectPostingsFormat", 0x1a, 11, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *self) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos_init() {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnumNoPos)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum

- (instancetype)initWithInt:(jint)posMult {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum_initWithInt_(self, posMult);
  return self;
}

- (jboolean)canReuseWithInt:(jint)posMult {
  return self->posMult_ == posMult;
}

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)postings {
  JreStrongAssign(&self->postings_, postings);
  upto_ = -2;
  freq_ = 0;
  return self;
}

- (jint)nextDoc {
  upto_ += 2 + freq_ * posMult_;
  if (upto_ < ((IOSIntArray *) nil_chk(postings_))->size_) {
    freq_ = IOSIntArray_Get(postings_, upto_ + 1);
    JreAssert((freq_ > 0), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1717 condition failed: assert freq > 0;"));
    return IOSIntArray_Get(postings_, upto_);
  }
  return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

- (jint)docID {
  if (upto_ < 0) {
    return -1;
  }
  else if (upto_ < ((IOSIntArray *) nil_chk(postings_))->size_) {
    return IOSIntArray_Get(postings_, upto_);
  }
  else {
    return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
}

- (jint)freq {
  return freq_;
}

- (jint)nextPosition {
  return -1;
}

- (jint)startOffset {
  return -1;
}

- (jint)endOffset {
  return -1;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return nil;
}

- (jint)advanceWithInt:(jint)target {
  return [self slowAdvanceWithInt:target];
}

- (jlong)cost {
  return ((IOSIntArray *) nil_chk(postings_))->size_ / 2;
}

- (void)dealloc {
  RELEASE_(postings_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "LowFreqDocsEnum", NULL, 0x1, NULL, NULL },
    { "canReuseWithInt:", "canReuse", "Z", 0x1, NULL, NULL },
    { "resetWithIntArray:", "reset", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "freq", NULL, "I", 0x1, NULL, NULL },
    { "nextPosition", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "startOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "endOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "postings_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "posMult_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "upto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "freq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum = { 2, "LowFreqDocsEnum", "org.apache.lucene.codecs.memory", "DirectPostingsFormat", 0x1a, 12, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum_initWithInt_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *self, jint posMult) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  self->posMult_ = posMult;
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum_initWithInt_(jint posMult) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum_initWithInt_(self, posMult);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqDocsEnum)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum

- (instancetype)initWithBoolean:(jboolean)hasOffsets
                    withBoolean:(jboolean)hasPayloads {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum_initWithBoolean_withBoolean_(self, hasOffsets, hasPayloads);
  return self;
}

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)postings
                                          withByteArray:(IOSByteArray *)payloadBytes {
  JreStrongAssign(&self->postings_, postings);
  upto_ = 0;
  skipPositions_ = 0;
  pos_ = -1;
  startOffset_ = -1;
  endOffset_ = -1;
  docID_ = -1;
  payloadLength_ = 0;
  JreStrongAssign(&self->payloadBytes_, payloadBytes);
  return self;
}

- (jint)nextDoc {
  pos_ = -1;
  if (hasPayloads_) {
    for (jint i = 0; i < skipPositions_; i++) {
      upto_++;
      if (hasOffsets_) {
        upto_ += 2;
      }
      payloadOffset_ += IOSIntArray_Get(nil_chk(postings_), upto_++);
    }
  }
  else {
    upto_ += posMult_ * skipPositions_;
  }
  if (upto_ < ((IOSIntArray *) nil_chk(postings_))->size_) {
    docID_ = IOSIntArray_Get(postings_, upto_++);
    freq_ = IOSIntArray_Get(postings_, upto_++);
    skipPositions_ = freq_;
    return docID_;
  }
  return docID_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

- (jint)docID {
  return docID_;
}

- (jint)freq {
  return freq_;
}

- (jint)nextPosition {
  JreAssert((skipPositions_ > 0), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:1859 condition failed: assert skipPositions > 0;"));
  skipPositions_--;
  pos_ = IOSIntArray_Get(nil_chk(postings_), upto_++);
  if (hasOffsets_) {
    startOffset_ = IOSIntArray_Get(postings_, upto_++);
    endOffset_ = IOSIntArray_Get(postings_, upto_++);
  }
  if (hasPayloads_) {
    payloadLength_ = IOSIntArray_Get(postings_, upto_++);
    lastPayloadOffset_ = payloadOffset_;
    payloadOffset_ += payloadLength_;
  }
  return pos_;
}

- (jint)startOffset {
  return startOffset_;
}

- (jint)endOffset {
  return endOffset_;
}

- (jint)advanceWithInt:(jint)target {
  return [self slowAdvanceWithInt:target];
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  if (payloadLength_ > 0) {
    JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(payload_))->bytes_, payloadBytes_);
    payload_->offset_ = lastPayloadOffset_;
    payload_->length_ = payloadLength_;
    return payload_;
  }
  else {
    return nil;
  }
}

- (jlong)cost {
  return ((IOSIntArray *) nil_chk(postings_))->size_ / 2;
}

- (void)dealloc {
  RELEASE_(postings_);
  RELEASE_(payload_);
  RELEASE_(payloadBytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:withBoolean:", "LowFreqPostingsEnum", NULL, 0x1, NULL, NULL },
    { "resetWithIntArray:withByteArray:", "reset", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "freq", NULL, "I", 0x1, NULL, NULL },
    { "nextPosition", NULL, "I", 0x1, NULL, NULL },
    { "startOffset", NULL, "I", 0x1, NULL, NULL },
    { "endOffset", NULL, "I", 0x1, NULL, NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "postings_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "posMult_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "hasOffsets_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hasPayloads_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "payload_", NULL, 0x12, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "upto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "docID_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "freq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "skipPositions_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "pos_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "startOffset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "endOffset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastPayloadOffset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloadOffset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloadLength_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloadBytes_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum = { 2, "LowFreqPostingsEnum", "org.apache.lucene.codecs.memory", "DirectPostingsFormat", 0x1a, 11, methods, 16, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum_initWithBoolean_withBoolean_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum *self, jboolean hasOffsets, jboolean hasPayloads) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  JreStrongAssignAndConsume(&self->payload_, new_OrgApacheLuceneUtilBytesRef_init());
  self->hasOffsets_ = hasOffsets;
  self->hasPayloads_ = hasPayloads;
  if (hasOffsets) {
    if (hasPayloads) {
      self->posMult_ = 4;
    }
    else {
      self->posMult_ = 3;
    }
  }
  else if (hasPayloads) {
    self->posMult_ = 2;
  }
  else {
    self->posMult_ = 1;
  }
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum_initWithBoolean_withBoolean_(jboolean hasOffsets, jboolean hasPayloads) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum_initWithBoolean_withBoolean_(self, hasOffsets, hasPayloads);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_LowFreqPostingsEnum)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum

- (instancetype)init {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum_init(self);
  return self;
}

- (IOSIntArray *)getDocIDs {
  return docIDs_;
}

- (IOSIntArray *)getFreqs {
  return freqs_;
}

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)docIDs
                                           withIntArray:(IOSIntArray *)freqs {
  JreStrongAssign(&self->docIDs_, docIDs);
  JreStrongAssign(&self->freqs_, freqs);
  docID_ = upto_ = -1;
  return self;
}

- (jint)nextDoc {
  upto_++;
  @try {
    return docID_ = IOSIntArray_Get(nil_chk(docIDs_), upto_);
  }
  @catch (JavaLangArrayIndexOutOfBoundsException *e) {
  }
  return docID_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

- (jint)docID {
  return docID_;
}

- (jint)freq {
  if (freqs_ == nil) {
    return 1;
  }
  else {
    return IOSIntArray_Get(freqs_, upto_);
  }
}

- (jint)advanceWithInt:(jint)target {
  upto_++;
  if (upto_ == ((IOSIntArray *) nil_chk(docIDs_))->size_) {
    return docID_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
  jint inc = 10;
  jint nextUpto = upto_ + 10;
  jint low;
  jint high;
  while (YES) {
    if (nextUpto >= docIDs_->size_) {
      low = nextUpto - inc;
      high = docIDs_->size_ - 1;
      break;
    }
    if (target <= IOSIntArray_Get(docIDs_, nextUpto)) {
      low = nextUpto - inc;
      high = nextUpto;
      break;
    }
    inc *= 2;
    nextUpto += inc;
  }
  while (YES) {
    if (low > high) {
      upto_ = low;
      break;
    }
    jint mid = JreURShift32((low + high), 1);
    jint cmp = IOSIntArray_Get(docIDs_, mid) - target;
    if (cmp < 0) {
      low = mid + 1;
    }
    else if (cmp > 0) {
      high = mid - 1;
    }
    else {
      upto_ = mid;
      break;
    }
  }
  if (upto_ == docIDs_->size_) {
    return docID_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
  else {
    return docID_ = IOSIntArray_Get(docIDs_, upto_);
  }
}

- (jlong)cost {
  return ((IOSIntArray *) nil_chk(docIDs_))->size_;
}

- (jint)nextPosition {
  return -1;
}

- (jint)startOffset {
  return -1;
}

- (jint)endOffset {
  return -1;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return nil;
}

- (void)dealloc {
  RELEASE_(docIDs_);
  RELEASE_(freqs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "HighFreqDocsEnum", NULL, 0x1, NULL, NULL },
    { "getDocIDs", NULL, "[I", 0x1, NULL, NULL },
    { "getFreqs", NULL, "[I", 0x1, NULL, NULL },
    { "resetWithIntArray:withIntArray:", "reset", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "freq", NULL, "I", 0x1, NULL, NULL },
    { "advanceWithInt:", "advance", "I", 0x1, NULL, NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
    { "nextPosition", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "startOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "endOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "docIDs_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "freqs_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "upto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "docID_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum = { 2, "HighFreqDocsEnum", "org.apache.lucene.codecs.memory", "DirectPostingsFormat", 0x1a, 13, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum_init(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *self) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  self->docID_ = -1;
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum_init() {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqDocsEnum)

@implementation OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum

- (instancetype)initWithBoolean:(jboolean)hasOffsets {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum_initWithBoolean_(self, hasOffsets);
  return self;
}

- (IOSIntArray *)getDocIDs {
  return docIDs_;
}

- (IOSObjectArray *)getPositions {
  return positions_;
}

- (jint)getPosJump {
  return posJump_;
}

- (OrgApacheLuceneIndexPostingsEnum *)resetWithIntArray:(IOSIntArray *)docIDs
                                           withIntArray:(IOSIntArray *)freqs
                                          withIntArray2:(IOSObjectArray *)positions
                                         withByteArray3:(IOSObjectArray *)payloads {
  JreStrongAssign(&self->docIDs_, docIDs);
  JreStrongAssign(&self->freqs_, freqs);
  JreStrongAssign(&self->positions_, positions);
  JreStrongAssign(&self->payloads_, payloads);
  upto_ = -1;
  return self;
}

- (jint)nextDoc {
  upto_++;
  if (upto_ < ((IOSIntArray *) nil_chk(docIDs_))->size_) {
    posUpto_ = -posJump_;
    JreStrongAssign(&curPositions_, IOSObjectArray_Get(nil_chk(positions_), upto_));
    return docID_ = IOSIntArray_Get(docIDs_, upto_);
  }
  return docID_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

- (jint)freq {
  return IOSIntArray_Get(nil_chk(freqs_), upto_);
}

- (jint)docID {
  return docID_;
}

- (jint)nextPosition {
  posUpto_ += posJump_;
  JreAssert((posUpto_ < ((IOSIntArray *) nil_chk(curPositions_))->size_), (@"org/apache/lucene/codecs/memory/DirectPostingsFormat.java:2146 condition failed: assert posUpto < curPositions.length;"));
  return IOSIntArray_Get(curPositions_, posUpto_);
}

- (jint)startOffset {
  if (hasOffsets_) {
    return IOSIntArray_Get(nil_chk(curPositions_), posUpto_ + 1);
  }
  else {
    return -1;
  }
}

- (jint)endOffset {
  if (hasOffsets_) {
    return IOSIntArray_Get(nil_chk(curPositions_), posUpto_ + 2);
  }
  else {
    return -1;
  }
}

- (jint)advanceWithInt:(jint)target {
  upto_++;
  if (upto_ == ((IOSIntArray *) nil_chk(docIDs_))->size_) {
    return docID_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
  jint inc = 10;
  jint nextUpto = upto_ + 10;
  jint low;
  jint high;
  while (YES) {
    if (nextUpto >= docIDs_->size_) {
      low = nextUpto - inc;
      high = docIDs_->size_ - 1;
      break;
    }
    if (target <= IOSIntArray_Get(docIDs_, nextUpto)) {
      low = nextUpto - inc;
      high = nextUpto;
      break;
    }
    inc *= 2;
    nextUpto += inc;
  }
  while (YES) {
    if (low > high) {
      upto_ = low;
      break;
    }
    jint mid = JreURShift32((low + high), 1);
    jint cmp = IOSIntArray_Get(docIDs_, mid) - target;
    if (cmp < 0) {
      low = mid + 1;
    }
    else if (cmp > 0) {
      high = mid - 1;
    }
    else {
      upto_ = mid;
      break;
    }
  }
  if (upto_ == docIDs_->size_) {
    return docID_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
  else {
    posUpto_ = -posJump_;
    JreStrongAssign(&curPositions_, IOSObjectArray_Get(nil_chk(positions_), upto_));
    return docID_ = IOSIntArray_Get(docIDs_, upto_);
  }
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  if (payloads_ == nil) {
    return nil;
  }
  else {
    IOSByteArray *payloadBytes = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(payloads_, upto_)), posUpto_ / (hasOffsets_ ? 3 : 1));
    if (payloadBytes == nil) {
      return nil;
    }
    JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(payload_))->bytes_, payloadBytes);
    payload_->length_ = ((IOSByteArray *) nil_chk(payloadBytes))->size_;
    payload_->offset_ = 0;
    return payload_;
  }
}

- (jlong)cost {
  return ((IOSIntArray *) nil_chk(docIDs_))->size_;
}

- (void)dealloc {
  RELEASE_(docIDs_);
  RELEASE_(freqs_);
  RELEASE_(positions_);
  RELEASE_(payloads_);
  RELEASE_(curPositions_);
  RELEASE_(payload_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:", "HighFreqPostingsEnum", NULL, 0x1, NULL, NULL },
    { "getDocIDs", NULL, "[I", 0x1, NULL, NULL },
    { "getPositions", NULL, "[[I", 0x1, NULL, NULL },
    { "getPosJump", NULL, "I", 0x1, NULL, NULL },
    { "resetWithIntArray:withIntArray:withIntArray2:withByteArray3:", "reset", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "freq", NULL, "I", 0x1, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "nextPosition", NULL, "I", 0x1, NULL, NULL },
    { "startOffset", NULL, "I", 0x1, NULL, NULL },
    { "endOffset", NULL, "I", 0x1, NULL, NULL },
    { "advanceWithInt:", "advance", "I", 0x1, NULL, NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "docIDs_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "freqs_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "positions_", NULL, 0x2, "[[I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloads_", NULL, 0x2, "[[[B", NULL, NULL, .constantValue.asLong = 0 },
    { "hasOffsets_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "posJump_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "upto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "docID_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "posUpto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "curPositions_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "payload_", NULL, 0x12, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum = { 2, "HighFreqPostingsEnum", "org.apache.lucene.codecs.memory", "DirectPostingsFormat", 0x1a, 14, methods, 11, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum_initWithBoolean_(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum *self, jboolean hasOffsets) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  self->docID_ = -1;
  JreStrongAssignAndConsume(&self->payload_, new_OrgApacheLuceneUtilBytesRef_init());
  self->hasOffsets_ = hasOffsets;
  self->posJump_ = hasOffsets ? 3 : 1;
}

OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum *new_OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum_initWithBoolean_(jboolean hasOffsets) {
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum *self = [OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum alloc];
  OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum_initWithBoolean_(self, hasOffsets);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryDirectPostingsFormat_HighFreqPostingsEnum)
