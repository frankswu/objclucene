//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/FieldsConsumer.h"
#include "org/apache/lucene/codecs/FieldsProducer.h"
#include "org/apache/lucene/codecs/PostingsFormat.h"
#include "org/apache/lucene/codecs/TermStats.h"
#include "org/apache/lucene/codecs/memory/MemoryPostingsFormat.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/DocsAndPositionsEnum.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentReadState.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/store/ByteArrayDataInput.h"
#include "org/apache/lucene/store/ChecksumIndexInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/RAMOutputStream.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/FixedBitSet.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/fst/Builder.h"
#include "org/apache/lucene/util/fst/ByteSequenceOutputs.h"
#include "org/apache/lucene/util/fst/BytesRefFSTEnum.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/Util.h"
#include "org/apache/lucene/util/packed/PackedInts.h"

@class OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter;

#define OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_VERSION_START 1
#define OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_VERSION_CURRENT 1

@interface OrgApacheLuceneCodecsMemoryMemoryPostingsFormat () {
 @public
  jboolean doPackFST_;
  jfloat acceptableOverheadRatio_;
}

@end

static NSString *OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_EXTENSION_ = @"ram";
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat, EXTENSION_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat, EXTENSION_, NSString *)

static NSString *OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_CODEC_NAME_ = @"MemoryPostings";
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat, CODEC_NAME_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat, VERSION_START, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat, VERSION_CURRENT, jint)

@interface OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter : NSObject {
 @public
  OrgApacheLuceneStoreIndexOutput *out_;
  OrgApacheLuceneIndexFieldInfo *field_;
  OrgApacheLuceneUtilFstBuilder *builder_;
  OrgApacheLuceneUtilFstByteSequenceOutputs *outputs_;
  jboolean doPackFST_;
  jfloat acceptableOverheadRatio_;
  jint termCount_;
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *postingsWriter_;
  OrgApacheLuceneStoreRAMOutputStream *buffer2_;
  OrgApacheLuceneUtilBytesRef *spare_;
  IOSByteArray *finalBuffer_;
  OrgApacheLuceneUtilIntsRefBuilder *scratchIntsRef_;
}

- (instancetype)initWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
                      withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                            withBoolean:(jboolean)doPackFST
                                              withFloat:(jfloat)acceptableOverheadRatio;

- (void)finishTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
               withOrgApacheLuceneCodecsTermStats:(OrgApacheLuceneCodecsTermStats *)stats;

- (void)finishWithLong:(jlong)sumTotalTermFreq
              withLong:(jlong)sumDocFreq
               withInt:(jint)docCount;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter, out_, OrgApacheLuceneStoreIndexOutput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter, field_, OrgApacheLuceneIndexFieldInfo *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter, builder_, OrgApacheLuceneUtilFstBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter, outputs_, OrgApacheLuceneUtilFstByteSequenceOutputs *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter, postingsWriter_, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter, buffer2_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter, spare_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter, finalBuffer_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter, scratchIntsRef_, OrgApacheLuceneUtilIntsRefBuilder *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_initWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneIndexFieldInfo_withBoolean_withFloat_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *self, OrgApacheLuceneStoreIndexOutput *outArg, OrgApacheLuceneIndexFieldInfo *field, jboolean doPackFST, jfloat acceptableOverheadRatio);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_initWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneIndexFieldInfo_withBoolean_withFloat_(OrgApacheLuceneStoreIndexOutput *outArg, OrgApacheLuceneIndexFieldInfo *field, jboolean doPackFST, jfloat acceptableOverheadRatio) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_finishTermWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneCodecsTermStats_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *self, OrgApacheLuceneUtilBytesRef *text, OrgApacheLuceneCodecsTermStats *stats);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter)

@interface OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter : NSObject {
 @public
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *this$0_;
  jint lastDocID_;
  jint lastPos_;
  jint lastPayloadLen_;
  jint docCount_;
  OrgApacheLuceneStoreRAMOutputStream *buffer_;
  jint lastOffsetLength_;
  jint lastOffset_;
}

- (void)startDocWithInt:(jint)docID
                withInt:(jint)termDocFreq;

- (void)addPositionWithInt:(jint)pos
withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload
                   withInt:(jint)startOffset
                   withInt:(jint)endOffset;

- (OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *)reset;

- (instancetype)initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter:(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter, this$0_, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter, buffer_, OrgApacheLuceneStoreRAMOutputStream *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *self, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *outer$);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter)

@interface OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer : OrgApacheLuceneCodecsFieldsConsumer {
 @public
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *this$0_;
  OrgApacheLuceneIndexSegmentWriteState *state_;
  OrgApacheLuceneStoreIndexOutput *out_;
  jboolean closed_;
}

- (instancetype)initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat:(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *)outer$
                              withOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state;

- (void)writeWithOrgApacheLuceneIndexFields:(OrgApacheLuceneIndexFields *)fields;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer, this$0_, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer, state_, OrgApacheLuceneIndexSegmentWriteState *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer, out_, OrgApacheLuceneStoreIndexOutput *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_withOrgApacheLuceneIndexSegmentWriteState_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer *self, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *outer$, OrgApacheLuceneIndexSegmentWriteState *state);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_withOrgApacheLuceneIndexSegmentWriteState_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *outer$, OrgApacheLuceneIndexSegmentWriteState *state) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer)

@interface OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  OrgApacheLuceneIndexIndexOptionsEnum *indexOptions_;
  jboolean storePayloads_;
  IOSByteArray *buffer_;
  OrgApacheLuceneStoreByteArrayDataInput *in_;
  jint docUpto_;
  jint docID_;
  jint accum_;
  jint freq_;
  jint payloadLen_;
  jint numDocs_;
}

- (instancetype)initWithOrgApacheLuceneIndexIndexOptionsEnum:(OrgApacheLuceneIndexIndexOptionsEnum *)indexOptions
                                                 withBoolean:(jboolean)storePayloads;

- (jboolean)canReuseWithOrgApacheLuceneIndexIndexOptionsEnum:(OrgApacheLuceneIndexIndexOptionsEnum *)indexOptions
                                                 withBoolean:(jboolean)storePayloads;

- (OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *)resetWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bufferIn
                                                                                              withInt:(jint)numDocs;

- (jint)nextDoc;

- (jint)docID;

- (jint)advanceWithInt:(jint)target;

- (jint)freq;

- (jlong)cost;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum, indexOptions_, OrgApacheLuceneIndexIndexOptionsEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum, buffer_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum, in_, OrgApacheLuceneStoreByteArrayDataInput *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum_initWithOrgApacheLuceneIndexIndexOptionsEnum_withBoolean_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *self, OrgApacheLuceneIndexIndexOptionsEnum *indexOptions, jboolean storePayloads);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum_initWithOrgApacheLuceneIndexIndexOptionsEnum_withBoolean_(OrgApacheLuceneIndexIndexOptionsEnum *indexOptions, jboolean storePayloads) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum)

@interface OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  jboolean storePayloads_;
  IOSByteArray *buffer_;
  OrgApacheLuceneStoreByteArrayDataInput *in_;
  jint docUpto_;
  jint docID_;
  jint accum_;
  jint freq_;
  jint numDocs_;
  jint posPending_;
  jint payloadLength_;
  jboolean storeOffsets_;
  jint offsetLength_;
  jint startOffset_;
  jint pos_;
  OrgApacheLuceneUtilBytesRef *payload_;
}

- (instancetype)initWithBoolean:(jboolean)storePayloads
                    withBoolean:(jboolean)storeOffsets;

- (jboolean)canReuseWithBoolean:(jboolean)storePayloads
                    withBoolean:(jboolean)storeOffsets;

- (OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *)resetWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bufferIn
                                                                                                  withInt:(jint)numDocs;

- (jint)nextDoc;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jint)docID;

- (jint)advanceWithInt:(jint)target;

- (jint)freq;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum, buffer_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum, in_, OrgApacheLuceneStoreByteArrayDataInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum, payload_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum_initWithBoolean_withBoolean_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *self, jboolean storePayloads, jboolean storeOffsets);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum_initWithBoolean_withBoolean_(jboolean storePayloads, jboolean storeOffsets) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum)

@interface OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum : OrgApacheLuceneIndexTermsEnum {
 @public
  OrgApacheLuceneIndexFieldInfo *field_;
  OrgApacheLuceneUtilFstBytesRefFSTEnum *fstEnum_;
  OrgApacheLuceneStoreByteArrayDataInput *buffer_;
  jboolean didDecode_;
  jint docFreq_;
  jlong totalTermFreq_;
  OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *current_;
  OrgApacheLuceneUtilBytesRef *postingsSpare_;
}

- (instancetype)initWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                        withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst;

- (void)decodeMetaData;

- (jboolean)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text;

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text;

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags;

- (OrgApacheLuceneUtilBytesRef *)term;

- (OrgApacheLuceneUtilBytesRef *)next;

- (jint)docFreq;

- (jlong)totalTermFreq;

- (void)seekExactWithLong:(jlong)ord;

- (jlong)ord;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum, field_, OrgApacheLuceneIndexFieldInfo *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum, fstEnum_, OrgApacheLuceneUtilFstBytesRefFSTEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum, buffer_, OrgApacheLuceneStoreByteArrayDataInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum, current_, OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum, postingsSpare_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_initWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilFstFST_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum *self, OrgApacheLuceneIndexFieldInfo *field, OrgApacheLuceneUtilFstFST *fst);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_initWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilFstFST_(OrgApacheLuceneIndexFieldInfo *field, OrgApacheLuceneUtilFstFST *fst) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_decodeMetaData(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum)

@interface OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader : OrgApacheLuceneIndexTerms < OrgApacheLuceneUtilAccountable > {
 @public
  jlong sumTotalTermFreq_;
  jlong sumDocFreq_;
  jint docCount_;
  jint termCount_;
  OrgApacheLuceneUtilFstFST *fst_;
  OrgApacheLuceneUtilFstByteSequenceOutputs *outputs_;
  OrgApacheLuceneIndexFieldInfo *field_;
}

- (instancetype)initWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos
                    withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg
                                               withInt:(jint)termCount;

- (jlong)getSumTotalTermFreq;

- (jlong)getSumDocFreq;

- (jint)getDocCount;

- (jlong)size;

- (OrgApacheLuceneIndexTermsEnum *)iterator;

- (jboolean)hasFreqs;

- (jboolean)hasOffsets;

- (jboolean)hasPositions;

- (jboolean)hasPayloads;

- (jlong)ramBytesUsed;

- (id<JavaUtilCollection>)getChildResources;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader, fst_, OrgApacheLuceneUtilFstFST *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader, outputs_, OrgApacheLuceneUtilFstByteSequenceOutputs *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader, field_, OrgApacheLuceneIndexFieldInfo *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader_initWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIndexInput_withInt_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader *self, OrgApacheLuceneIndexFieldInfos *fieldInfos, OrgApacheLuceneStoreIndexInput *inArg, jint termCount);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader_initWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIndexInput_withInt_(OrgApacheLuceneIndexFieldInfos *fieldInfos, OrgApacheLuceneStoreIndexInput *inArg, jint termCount) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader)

@interface OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1 : OrgApacheLuceneCodecsFieldsProducer {
 @public
  id<JavaUtilSortedMap> val$fields_;
}

- (id<JavaUtilIterator>)iterator;

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field;

- (jint)size;

- (void)close;

- (jlong)ramBytesUsed;

- (id<JavaUtilCollection>)getChildResources;

- (NSString *)description;

- (void)checkIntegrity;

- (instancetype)initWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)capture$0;


@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1, val$fields_, id<JavaUtilSortedMap>)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1_initWithJavaUtilSortedMap_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1 *self, id<JavaUtilSortedMap> capture$0);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1 *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1_initWithJavaUtilSortedMap_(id<JavaUtilSortedMap> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1)

@implementation OrgApacheLuceneCodecsMemoryMemoryPostingsFormat

- (instancetype)init {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_init(self);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)doPackFST
                      withFloat:(jfloat)acceptableOverheadRatio {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_initWithBoolean_withFloat_(self, doPackFST, acceptableOverheadRatio);
  return self;
}

- (NSString *)description {
  return JreStrcat("$$$ZC", @"PostingsFormat(name=", [self getName], @" doPackFST= ", doPackFST_, ')');
}

- (OrgApacheLuceneCodecsFieldsConsumer *)fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state {
  return [new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_withOrgApacheLuceneIndexSegmentWriteState_(self, state) autorelease];
}

- (OrgApacheLuceneCodecsFieldsProducer *)fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state {
  NSString *fileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentReadState *) nil_chk(state))->segmentInfo_))->name_, state->segmentSuffix_, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_EXTENSION_);
  id<JavaUtilSortedMap> fields = [new_JavaUtilTreeMap_init() autorelease];
  {
    JavaLangThrowable *__mainException = nil;
    OrgApacheLuceneStoreChecksumIndexInput *in = [((OrgApacheLuceneStoreDirectory *) nil_chk(state->directory_)) openChecksumInputWithNSString:fileName withOrgApacheLuceneStoreIOContext:JreLoadStatic(OrgApacheLuceneStoreIOContext, READONCE_)];
    @try {
      JavaLangThrowable *priorE = nil;
      @try {
        OrgApacheLuceneCodecsCodecUtil_checkIndexHeaderWithOrgApacheLuceneStoreDataInput_withNSString_withInt_withInt_withByteArray_withNSString_(in, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_CODEC_NAME_, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_VERSION_START, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
        while (YES) {
          jint termCount = [((OrgApacheLuceneStoreChecksumIndexInput *) nil_chk(in)) readVInt];
          if (termCount == 0) {
            break;
          }
          OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader *termsReader = [new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader_initWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIndexInput_withInt_(state->fieldInfos_, in, termCount) autorelease];
          [fields putWithId:((OrgApacheLuceneIndexFieldInfo *) nil_chk(termsReader->field_))->name_ withId:termsReader];
        }
      }
      @catch (JavaLangThrowable *exception) {
        priorE = exception;
      }
      @finally {
        OrgApacheLuceneCodecsCodecUtil_checkFooterWithOrgApacheLuceneStoreChecksumIndexInput_withJavaLangThrowable_(in, priorE);
      }
    }
    @finally {
      @try {
        [in close];
      }
      @catch (JavaLangThrowable *e) {
        if (__mainException) {
          [__mainException addSuppressedWithJavaLangThrowable:e];
        } else {
          __mainException = e;
        }
      }
      if (__mainException) {
        @throw __mainException;
      }
    }
  }
  return [new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1_initWithJavaUtilSortedMap_(fields) autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MemoryPostingsFormat", NULL, 0x1, NULL, NULL },
    { "initWithBoolean:withFloat:", "MemoryPostingsFormat", NULL, 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:", "fieldsConsumer", "Lorg.apache.lucene.codecs.FieldsConsumer;", 0x1, "Ljava.io.IOException;", NULL },
    { "fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:", "fieldsProducer", "Lorg.apache.lucene.codecs.FieldsProducer;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "doPackFST_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "acceptableOverheadRatio_", NULL, 0x12, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "EXTENSION_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_EXTENSION_, NULL, .constantValue.asLong = 0 },
    { "CODEC_NAME_", NULL, 0x1a, "Ljava.lang.String;", &OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_CODEC_NAME_, NULL, .constantValue.asLong = 0 },
    { "VERSION_START", "VERSION_START", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_VERSION_START },
    { "VERSION_CURRENT", "VERSION_CURRENT", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_VERSION_CURRENT },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$TermsWriter;", "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$MemoryFieldsConsumer;", "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$FSTDocsEnum;", "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$FSTPostingsEnum;", "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$FSTTermsEnum;", "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$TermsReader;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryPostingsFormat = { 2, "MemoryPostingsFormat", "org.apache.lucene.codecs.memory", NULL, 0x11, 5, methods, 6, fields, 0, NULL, 6, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_init(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *self) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_initWithBoolean_withFloat_(self, NO, OrgApacheLuceneUtilPackedPackedInts_DEFAULT);
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_init() {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_init(self);
  return self;
}

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_initWithBoolean_withFloat_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *self, jboolean doPackFST, jfloat acceptableOverheadRatio) {
  OrgApacheLuceneCodecsPostingsFormat_initWithNSString_(self, @"Memory");
  self->doPackFST_ = doPackFST;
  self->acceptableOverheadRatio_ = acceptableOverheadRatio;
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_initWithBoolean_withFloat_(jboolean doPackFST, jfloat acceptableOverheadRatio) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_initWithBoolean_withFloat_(self, doPackFST, acceptableOverheadRatio);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat)

@implementation OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter

- (instancetype)initWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
                      withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                            withBoolean:(jboolean)doPackFST
                                              withFloat:(jfloat)acceptableOverheadRatio {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_initWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneIndexFieldInfo_withBoolean_withFloat_(self, outArg, field, doPackFST, acceptableOverheadRatio);
  return self;
}

- (void)finishTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
               withOrgApacheLuceneCodecsTermStats:(OrgApacheLuceneCodecsTermStats *)stats {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_finishTermWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneCodecsTermStats_(self, text, stats);
}

- (void)finishWithLong:(jlong)sumTotalTermFreq
              withLong:(jlong)sumDocFreq
               withInt:(jint)docCount {
  if (termCount_ > 0) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(out_)) writeVIntWithInt:termCount_];
    [out_ writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field_))->number_];
    if ([field_ getIndexOptions] != JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)) {
      [out_ writeVLongWithLong:sumTotalTermFreq];
    }
    [out_ writeVLongWithLong:sumDocFreq];
    [out_ writeVIntWithInt:docCount];
    OrgApacheLuceneUtilFstFST *fst = [((OrgApacheLuceneUtilFstBuilder *) nil_chk(builder_)) finish];
    [((OrgApacheLuceneUtilFstFST *) nil_chk(fst)) saveWithOrgApacheLuceneStoreDataOutput:out_];
  }
}

- (void)dealloc {
  RELEASE_(out_);
  RELEASE_(field_);
  RELEASE_(builder_);
  RELEASE_(outputs_);
  RELEASE_(postingsWriter_);
  RELEASE_(buffer2_);
  RELEASE_(spare_);
  RELEASE_(finalBuffer_);
  RELEASE_(scratchIntsRef_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreIndexOutput:withOrgApacheLuceneIndexFieldInfo:withBoolean:withFloat:", "TermsWriter", NULL, 0x1, NULL, NULL },
    { "finishTermWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneCodecsTermStats:", "finishTerm", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "finishWithLong:withLong:withInt:", "finish", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "out_", NULL, 0x12, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "field_", NULL, 0x12, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "builder_", NULL, 0x12, "Lorg.apache.lucene.util.fst.Builder;", NULL, "Lorg/apache/lucene/util/fst/Builder<Lorg/apache/lucene/util/BytesRef;>;", .constantValue.asLong = 0 },
    { "outputs_", NULL, 0x12, "Lorg.apache.lucene.util.fst.ByteSequenceOutputs;", NULL, NULL, .constantValue.asLong = 0 },
    { "doPackFST_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "acceptableOverheadRatio_", NULL, 0x12, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "termCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "postingsWriter_", NULL, 0x10, "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$TermsWriter$PostingsWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "buffer2_", NULL, 0x12, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "spare_", NULL, 0x12, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "finalBuffer_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "scratchIntsRef_", NULL, 0x12, "Lorg.apache.lucene.util.IntsRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$TermsWriter$PostingsWriter;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter = { 2, "TermsWriter", "org.apache.lucene.codecs.memory", "MemoryPostingsFormat", 0x1a, 3, methods, 12, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_initWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneIndexFieldInfo_withBoolean_withFloat_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *self, OrgApacheLuceneStoreIndexOutput *outArg, OrgApacheLuceneIndexFieldInfo *field, jboolean doPackFST, jfloat acceptableOverheadRatio) {
  NSObject_init(self);
  JreStrongAssign(&self->outputs_, OrgApacheLuceneUtilFstByteSequenceOutputs_getSingleton());
  JreStrongAssignAndConsume(&self->postingsWriter_, new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_(self));
  JreStrongAssignAndConsume(&self->buffer2_, new_OrgApacheLuceneStoreRAMOutputStream_init());
  JreStrongAssignAndConsume(&self->spare_, new_OrgApacheLuceneUtilBytesRef_init());
  JreStrongAssignAndConsume(&self->finalBuffer_, [IOSByteArray newArrayWithLength:128]);
  JreStrongAssignAndConsume(&self->scratchIntsRef_, new_OrgApacheLuceneUtilIntsRefBuilder_init());
  JreStrongAssign(&self->out_, outArg);
  JreStrongAssign(&self->field_, field);
  self->doPackFST_ = doPackFST;
  self->acceptableOverheadRatio_ = acceptableOverheadRatio;
  JreStrongAssignAndConsume(&self->builder_, new_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withInt_withInt_withBoolean_withBoolean_withInt_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withBoolean_withInt_(JreLoadStatic(OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum, BYTE1), 0, 0, YES, YES, JavaLangInteger_MAX_VALUE, self->outputs_, doPackFST, acceptableOverheadRatio, YES, 15));
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_initWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneIndexFieldInfo_withBoolean_withFloat_(OrgApacheLuceneStoreIndexOutput *outArg, OrgApacheLuceneIndexFieldInfo *field, jboolean doPackFST, jfloat acceptableOverheadRatio) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_initWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneIndexFieldInfo_withBoolean_withFloat_(self, outArg, field, doPackFST, acceptableOverheadRatio);
  return self;
}

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_finishTermWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneCodecsTermStats_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *self, OrgApacheLuceneUtilBytesRef *text, OrgApacheLuceneCodecsTermStats *stats) {
  if (((OrgApacheLuceneCodecsTermStats *) nil_chk(stats))->docFreq_ == 0) {
    return;
  }
  JreAssert((((OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *) nil_chk(self->postingsWriter_))->docCount_ == stats->docFreq_), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:231 condition failed: assert postingsWriter.docCount == stats.docFreq;"));
  JreAssert(([((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(self->buffer2_)) getFilePointer] == 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:233 condition failed: assert buffer2.getFilePointer() == 0;"));
  [self->buffer2_ writeVIntWithInt:stats->docFreq_];
  if ([((OrgApacheLuceneIndexFieldInfo *) nil_chk(self->field_)) getIndexOptions] != JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)) {
    [self->buffer2_ writeVLongWithLong:stats->totalTermFreq_ - stats->docFreq_];
  }
  jint pos = (jint) [self->buffer2_ getFilePointer];
  [self->buffer2_ writeToWithByteArray:self->finalBuffer_ withInt:0];
  [self->buffer2_ reset];
  jint totalBytes = pos + (jint) [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(self->postingsWriter_->buffer_)) getFilePointer];
  if (totalBytes > ((IOSByteArray *) nil_chk(self->finalBuffer_))->size_) {
    JreStrongAssign(&self->finalBuffer_, OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(self->finalBuffer_, totalBytes));
  }
  [self->postingsWriter_->buffer_ writeToWithByteArray:self->finalBuffer_ withInt:pos];
  [self->postingsWriter_->buffer_ reset];
  JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(self->spare_))->bytes_, self->finalBuffer_);
  self->spare_->length_ = totalBytes;
  [((OrgApacheLuceneUtilFstBuilder *) nil_chk(self->builder_)) addWithOrgApacheLuceneUtilIntsRef:OrgApacheLuceneUtilFstUtil_toIntsRefWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilIntsRefBuilder_(text, self->scratchIntsRef_) withId:OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(self->spare_)];
  self->termCount_++;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter)

@implementation OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter

- (void)startDocWithInt:(jint)docID
                withInt:(jint)termDocFreq {
  jint delta = docID - lastDocID_;
  JreAssert((docID == 0 || delta > 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:145 condition failed: assert docID == 0 || delta > 0;"));
  lastDocID_ = docID;
  docCount_++;
  if ([((OrgApacheLuceneIndexFieldInfo *) nil_chk(this$0_->field_)) getIndexOptions] == JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)) {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) writeVIntWithInt:delta];
  }
  else if (termDocFreq == 1) {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) writeVIntWithInt:(JreLShift32(delta, 1)) | 1];
  }
  else {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) writeVIntWithInt:JreLShift32(delta, 1)];
    JreAssert((termDocFreq > 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:155 condition failed: assert termDocFreq > 0;"));
    [buffer_ writeVIntWithInt:termDocFreq];
  }
  lastPos_ = 0;
  lastOffset_ = 0;
}

- (void)addPositionWithInt:(jint)pos
withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload
                   withInt:(jint)startOffset
                   withInt:(jint)endOffset {
  JreAssert((payload == nil || [((OrgApacheLuceneIndexFieldInfo *) nil_chk(this$0_->field_)) hasPayloads]), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:164 condition failed: assert payload == null || field.hasPayloads();"));
  jint delta = pos - lastPos_;
  JreAssert((delta >= 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:169 condition failed: assert delta >= 0;"));
  lastPos_ = pos;
  jint payloadLen = 0;
  if ([((OrgApacheLuceneIndexFieldInfo *) nil_chk(this$0_->field_)) hasPayloads]) {
    payloadLen = payload == nil ? 0 : payload->length_;
    if (payloadLen != lastPayloadLen_) {
      lastPayloadLen_ = payloadLen;
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) writeVIntWithInt:(JreLShift32(delta, 1)) | 1];
      [buffer_ writeVIntWithInt:payloadLen];
    }
    else {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) writeVIntWithInt:JreLShift32(delta, 1)];
    }
  }
  else {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) writeVIntWithInt:delta];
  }
  if ([((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([this$0_->field_ getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS)] >= 0) {
    jint offsetDelta = startOffset - lastOffset_;
    jint offsetLength = endOffset - startOffset;
    if (offsetLength != lastOffsetLength_) {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) writeVIntWithInt:(JreLShift32(offsetDelta, 1)) | 1];
      [buffer_ writeVIntWithInt:offsetLength];
    }
    else {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) writeVIntWithInt:JreLShift32(offsetDelta, 1)];
    }
    lastOffset_ = startOffset;
    lastOffsetLength_ = offsetLength;
  }
  if (payloadLen > 0) {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) writeBytesWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(payload))->bytes_ withInt:payload->offset_ withInt:payloadLen];
  }
}

- (OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *)reset {
  JreAssert(([((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(buffer_)) getFilePointer] == 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:208 condition failed: assert buffer.getFilePointer() == 0;"));
  lastDocID_ = 0;
  docCount_ = 0;
  lastPayloadLen_ = 0;
  lastOffsetLength_ = -1;
  return self;
}

- (instancetype)initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter:(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *)outer$ {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "startDocWithInt:withInt:", "startDoc", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "addPositionWithInt:withOrgApacheLuceneUtilBytesRef:withInt:withInt:", "addPosition", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "reset", NULL, "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$TermsWriter$PostingsWriter;", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$TermsWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastDocID_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastPos_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastPayloadLen_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "docCount_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "buffer_", NULL, 0x0, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastOffsetLength_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastOffset_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter = { 2, "PostingsWriter", "org.apache.lucene.codecs.memory", "MemoryPostingsFormat$TermsWriter", 0x2, 4, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *self, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->buffer_, new_OrgApacheLuceneStoreRAMOutputStream_init());
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *outer$) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter)

@implementation OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer

- (instancetype)initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat:(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *)outer$
                              withOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_withOrgApacheLuceneIndexSegmentWriteState_(self, outer$, state);
  return self;
}

- (void)writeWithOrgApacheLuceneIndexFields:(OrgApacheLuceneIndexFields *)fields {
  for (NSString * __strong field in nil_chk(fields)) {
    OrgApacheLuceneIndexTerms *terms = [fields termsWithNSString:field];
    if (terms == nil) {
      continue;
    }
    OrgApacheLuceneIndexTermsEnum *termsEnum = [((OrgApacheLuceneIndexTerms *) nil_chk(terms)) iterator];
    OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state_))->fieldInfos_)) fieldInfoWithNSString:field];
    OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter *termsWriter = [new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_initWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneIndexFieldInfo_withBoolean_withFloat_(out_, fieldInfo, this$0_->doPackFST_, this$0_->acceptableOverheadRatio_) autorelease];
    OrgApacheLuceneUtilFixedBitSet *docsSeen = [new_OrgApacheLuceneUtilFixedBitSet_initWithInt_([((OrgApacheLuceneIndexSegmentInfo *) nil_chk(state_->segmentInfo_)) maxDoc]) autorelease];
    jlong sumTotalTermFreq = 0;
    jlong sumDocFreq = 0;
    OrgApacheLuceneIndexPostingsEnum *postingsEnum = nil;
    OrgApacheLuceneIndexPostingsEnum *posEnum = nil;
    jint enumFlags;
    OrgApacheLuceneIndexIndexOptionsEnum *indexOptions = [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) getIndexOptions];
    jboolean writeFreqs = [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk(indexOptions)) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS)] >= 0;
    jboolean writePositions = [indexOptions compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)] >= 0;
    jboolean writeOffsets = [indexOptions compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS)] >= 0;
    jboolean writePayloads = [fieldInfo hasPayloads];
    if (writeFreqs == NO) {
      enumFlags = 0;
    }
    else if (writePositions == NO) {
      enumFlags = OrgApacheLuceneIndexPostingsEnum_FREQS;
    }
    else if (writeOffsets == NO) {
      if (writePayloads) {
        enumFlags = OrgApacheLuceneIndexPostingsEnum_PAYLOADS;
      }
      else {
        enumFlags = OrgApacheLuceneIndexPostingsEnum_POSITIONS;
      }
    }
    else {
      if (writePayloads) {
        enumFlags = OrgApacheLuceneIndexPostingsEnum_PAYLOADS | OrgApacheLuceneIndexPostingsEnum_OFFSETS;
      }
      else {
        enumFlags = OrgApacheLuceneIndexPostingsEnum_OFFSETS;
      }
    }
    while (YES) {
      OrgApacheLuceneUtilBytesRef *term = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) next];
      if (term == nil) {
        break;
      }
      [((OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_PostingsWriter *) nil_chk(termsWriter->postingsWriter_)) reset];
      if (writePositions) {
        posEnum = [termsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:posEnum withInt:enumFlags];
        postingsEnum = posEnum;
      }
      else {
        postingsEnum = [termsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:postingsEnum withInt:enumFlags];
        posEnum = nil;
      }
      jint docFreq = 0;
      jlong totalTermFreq = 0;
      while (YES) {
        jint docID = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum)) nextDoc];
        if (docID == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
          break;
        }
        [docsSeen setWithInt:docID];
        docFreq++;
        jint freq;
        if (writeFreqs) {
          freq = [postingsEnum freq];
          totalTermFreq += freq;
        }
        else {
          freq = -1;
        }
        [termsWriter->postingsWriter_ startDocWithInt:docID withInt:freq];
        if (writePositions) {
          for (jint i = 0; i < freq; i++) {
            jint pos = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(posEnum)) nextPosition];
            OrgApacheLuceneUtilBytesRef *payload = writePayloads ? [posEnum getPayload] : nil;
            jint startOffset;
            jint endOffset;
            if (writeOffsets) {
              startOffset = [posEnum startOffset];
              endOffset = [posEnum endOffset];
            }
            else {
              startOffset = -1;
              endOffset = -1;
            }
            [termsWriter->postingsWriter_ addPositionWithInt:pos withOrgApacheLuceneUtilBytesRef:payload withInt:startOffset withInt:endOffset];
          }
        }
      }
      OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsWriter_finishTermWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneCodecsTermStats_(termsWriter, term, [new_OrgApacheLuceneCodecsTermStats_initWithInt_withLong_(docFreq, totalTermFreq) autorelease]);
      sumDocFreq += docFreq;
      sumTotalTermFreq += totalTermFreq;
    }
    [termsWriter finishWithLong:sumTotalTermFreq withLong:sumDocFreq withInt:[docsSeen cardinality]];
  }
}

- (void)close {
  if (closed_) {
    return;
  }
  closed_ = YES;
  {
    JavaLangThrowable *__mainException = nil;
    OrgApacheLuceneStoreIndexOutput *out = self->out_;
    @try {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(out)) writeVIntWithInt:0];
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(out);
    }
    @finally {
      @try {
        [out close];
      }
      @catch (JavaLangThrowable *e) {
        if (__mainException) {
          [__mainException addSuppressedWithJavaLangThrowable:e];
        } else {
          __mainException = e;
        }
      }
      if (__mainException) {
        @throw __mainException;
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(state_);
  RELEASE_(out_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat:withOrgApacheLuceneIndexSegmentWriteState:", "MemoryFieldsConsumer", NULL, 0x2, NULL, NULL },
    { "writeWithOrgApacheLuceneIndexFields:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat;", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x12, "Lorg.apache.lucene.index.SegmentWriteState;", NULL, NULL, .constantValue.asLong = 0 },
    { "out_", NULL, 0x12, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "closed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer = { 2, "MemoryFieldsConsumer", "org.apache.lucene.codecs.memory", "MemoryPostingsFormat", 0x2, 3, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_withOrgApacheLuceneIndexSegmentWriteState_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer *self, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *outer$, OrgApacheLuceneIndexSegmentWriteState *state) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneCodecsFieldsConsumer_init(self);
  NSString *fileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state))->segmentInfo_))->name_, state->segmentSuffix_, JreLoadStatic(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat, EXTENSION_));
  JreStrongAssign(&self->out_, [((OrgApacheLuceneStoreDirectory *) nil_chk(state->directory_)) createOutputWithNSString:fileName withOrgApacheLuceneStoreIOContext:state->context_]);
  jboolean success = NO;
  @try {
    OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(self->out_, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_CODEC_NAME_, OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    success = YES;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self->out_ } count:1 type:JavaIoCloseable_class_()]);
    }
  }
  JreStrongAssign(&self->state_, state);
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_withOrgApacheLuceneIndexSegmentWriteState_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat *outer$, OrgApacheLuceneIndexSegmentWriteState *state) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer_initWithOrgApacheLuceneCodecsMemoryMemoryPostingsFormat_withOrgApacheLuceneIndexSegmentWriteState_(self, outer$, state);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_MemoryFieldsConsumer)

@implementation OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum

- (instancetype)initWithOrgApacheLuceneIndexIndexOptionsEnum:(OrgApacheLuceneIndexIndexOptionsEnum *)indexOptions
                                                 withBoolean:(jboolean)storePayloads {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum_initWithOrgApacheLuceneIndexIndexOptionsEnum_withBoolean_(self, indexOptions, storePayloads);
  return self;
}

- (jboolean)canReuseWithOrgApacheLuceneIndexIndexOptionsEnum:(OrgApacheLuceneIndexIndexOptionsEnum *)indexOptions
                                                 withBoolean:(jboolean)storePayloads {
  return indexOptions == self->indexOptions_ && storePayloads == self->storePayloads_;
}

- (OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *)resetWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bufferIn
                                                                                              withInt:(jint)numDocs {
  JreAssert((numDocs > 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:454 condition failed: assert numDocs > 0;"));
  if (((IOSByteArray *) nil_chk(buffer_))->size_ < ((OrgApacheLuceneUtilBytesRef *) nil_chk(bufferIn))->length_) {
    JreStrongAssign(&buffer_, OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(buffer_, bufferIn->length_));
  }
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(in_)) resetWithByteArray:buffer_ withInt:0 withInt:bufferIn->length_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bufferIn->bytes_, bufferIn->offset_, buffer_, 0, bufferIn->length_);
  docID_ = -1;
  accum_ = 0;
  docUpto_ = 0;
  freq_ = 1;
  payloadLen_ = 0;
  self->numDocs_ = numDocs;
  return self;
}

- (jint)nextDoc {
  if (docUpto_ == numDocs_) {
    return docID_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
  docUpto_++;
  if (indexOptions_ == JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)) {
    accum_ += [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(in_)) readVInt];
  }
  else {
    jint code = [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(in_)) readVInt];
    accum_ += JreURShift32(code, 1);
    if ((code & 1) != 0) {
      freq_ = 1;
    }
    else {
      freq_ = [in_ readVInt];
      JreAssert((freq_ > 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:487 condition failed: assert freq > 0;"));
    }
    if (indexOptions_ == JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)) {
      for (jint posUpto = 0; posUpto < freq_; posUpto++) {
        if (!storePayloads_) {
          [in_ readVInt];
        }
        else {
          jint posCode = [in_ readVInt];
          if ((posCode & 1) != 0) {
            payloadLen_ = [in_ readVInt];
          }
          [in_ skipBytesWithLong:payloadLen_];
        }
      }
    }
    else if (indexOptions_ == JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS)) {
      for (jint posUpto = 0; posUpto < freq_; posUpto++) {
        jint posCode = [in_ readVInt];
        if (storePayloads_ && ((posCode & 1) != 0)) {
          payloadLen_ = [in_ readVInt];
        }
        if (([in_ readVInt] & 1) != 0) {
          [in_ readVInt];
        }
        if (storePayloads_) {
          [in_ skipBytesWithLong:payloadLen_];
        }
      }
    }
  }
  return (docID_ = accum_);
}

- (jint)docID {
  return docID_;
}

- (jint)advanceWithInt:(jint)target {
  return [self slowAdvanceWithInt:target];
}

- (jint)freq {
  return freq_;
}

- (jlong)cost {
  return numDocs_;
}

- (jint)nextPosition {
  return -1;
}

- (jint)startOffset {
  return -1;
}

- (jint)endOffset {
  return -1;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return nil;
}

- (void)dealloc {
  RELEASE_(indexOptions_);
  RELEASE_(buffer_);
  RELEASE_(in_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexIndexOptionsEnum:withBoolean:", "FSTDocsEnum", NULL, 0x1, NULL, NULL },
    { "canReuseWithOrgApacheLuceneIndexIndexOptionsEnum:withBoolean:", "canReuse", "Z", 0x1, NULL, NULL },
    { "resetWithOrgApacheLuceneUtilBytesRef:withInt:", "reset", "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$FSTDocsEnum;", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "freq", NULL, "I", 0x1, NULL, NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
    { "nextPosition", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "startOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "endOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "indexOptions_", NULL, 0x12, "Lorg.apache.lucene.index.IndexOptions;", NULL, NULL, .constantValue.asLong = 0 },
    { "storePayloads_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "buffer_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "in_", NULL, 0x12, "Lorg.apache.lucene.store.ByteArrayDataInput;", NULL, NULL, .constantValue.asLong = 0 },
    { "docUpto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "docID_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "accum_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "freq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloadLen_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "numDocs_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum = { 2, "FSTDocsEnum", "org.apache.lucene.codecs.memory", "MemoryPostingsFormat", 0x1a, 12, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum_initWithOrgApacheLuceneIndexIndexOptionsEnum_withBoolean_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *self, OrgApacheLuceneIndexIndexOptionsEnum *indexOptions, jboolean storePayloads) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  JreStrongAssignAndConsume(&self->buffer_, [IOSByteArray newArrayWithLength:16]);
  JreStrongAssignAndConsume(&self->in_, new_OrgApacheLuceneStoreByteArrayDataInput_initWithByteArray_(self->buffer_));
  self->docID_ = -1;
  JreStrongAssign(&self->indexOptions_, indexOptions);
  self->storePayloads_ = storePayloads;
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum_initWithOrgApacheLuceneIndexIndexOptionsEnum_withBoolean_(OrgApacheLuceneIndexIndexOptionsEnum *indexOptions, jboolean storePayloads) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum_initWithOrgApacheLuceneIndexIndexOptionsEnum_withBoolean_(self, indexOptions, storePayloads);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum)

@implementation OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum

- (instancetype)initWithBoolean:(jboolean)storePayloads
                    withBoolean:(jboolean)storeOffsets {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum_initWithBoolean_withBoolean_(self, storePayloads, storeOffsets);
  return self;
}

- (jboolean)canReuseWithBoolean:(jboolean)storePayloads
                    withBoolean:(jboolean)storeOffsets {
  return storePayloads == self->storePayloads_ && storeOffsets == self->storeOffsets_;
}

- (OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *)resetWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bufferIn
                                                                                                  withInt:(jint)numDocs {
  JreAssert((numDocs > 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:599 condition failed: assert numDocs > 0;"));
  if (((IOSByteArray *) nil_chk(buffer_))->size_ < ((OrgApacheLuceneUtilBytesRef *) nil_chk(bufferIn))->length_) {
    JreStrongAssign(&buffer_, OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(buffer_, bufferIn->length_));
  }
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(in_)) resetWithByteArray:buffer_ withInt:0 withInt:bufferIn->length_ - bufferIn->offset_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bufferIn->bytes_, bufferIn->offset_, buffer_, 0, bufferIn->length_);
  docID_ = -1;
  accum_ = 0;
  docUpto_ = 0;
  JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(payload_))->bytes_, buffer_);
  payloadLength_ = 0;
  self->numDocs_ = numDocs;
  posPending_ = 0;
  startOffset_ = storeOffsets_ ? 0 : -1;
  offsetLength_ = 0;
  return self;
}

- (jint)nextDoc {
  while (posPending_ > 0) {
    [self nextPosition];
  }
  while (YES) {
    if (docUpto_ == numDocs_) {
      return docID_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
    }
    docUpto_++;
    jint code = [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(in_)) readVInt];
    accum_ += JreURShift32(code, 1);
    if ((code & 1) != 0) {
      freq_ = 1;
    }
    else {
      freq_ = [in_ readVInt];
      JreAssert((freq_ > 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:642 condition failed: assert freq > 0;"));
    }
    pos_ = 0;
    startOffset_ = storeOffsets_ ? 0 : -1;
    posPending_ = freq_;
    return (docID_ = accum_);
  }
}

- (jint)nextPosition {
  JreAssert((posPending_ > 0), (@"org/apache/lucene/codecs/memory/MemoryPostingsFormat.java:656 condition failed: assert posPending > 0;"));
  posPending_--;
  if (!storePayloads_) {
    pos_ += [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(in_)) readVInt];
  }
  else {
    jint code = [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(in_)) readVInt];
    pos_ += JreURShift32(code, 1);
    if ((code & 1) != 0) {
      payloadLength_ = [in_ readVInt];
    }
  }
  if (storeOffsets_) {
    jint offsetCode = [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(in_)) readVInt];
    if ((offsetCode & 1) != 0) {
      offsetLength_ = [in_ readVInt];
    }
    startOffset_ += JreURShift32(offsetCode, 1);
  }
  if (storePayloads_) {
    ((OrgApacheLuceneUtilBytesRef *) nil_chk(payload_))->offset_ = [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(in_)) getPosition];
    [in_ skipBytesWithLong:payloadLength_];
    payload_->length_ = payloadLength_;
  }
  return pos_;
}

- (jint)startOffset {
  return startOffset_;
}

- (jint)endOffset {
  return startOffset_ + offsetLength_;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return ((OrgApacheLuceneUtilBytesRef *) nil_chk(payload_))->length_ > 0 ? payload_ : nil;
}

- (jint)docID {
  return docID_;
}

- (jint)advanceWithInt:(jint)target {
  return [self slowAdvanceWithInt:target];
}

- (jint)freq {
  return freq_;
}

- (jlong)cost {
  return numDocs_;
}

- (void)dealloc {
  RELEASE_(buffer_);
  RELEASE_(in_);
  RELEASE_(payload_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:withBoolean:", "FSTPostingsEnum", NULL, 0x1, NULL, NULL },
    { "canReuseWithBoolean:withBoolean:", "canReuse", "Z", 0x1, NULL, NULL },
    { "resetWithOrgApacheLuceneUtilBytesRef:withInt:", "reset", "Lorg.apache.lucene.codecs.memory.MemoryPostingsFormat$FSTPostingsEnum;", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "nextPosition", NULL, "I", 0x1, NULL, NULL },
    { "startOffset", NULL, "I", 0x1, NULL, NULL },
    { "endOffset", NULL, "I", 0x1, NULL, NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "freq", NULL, "I", 0x1, NULL, NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "storePayloads_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "buffer_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "in_", NULL, 0x12, "Lorg.apache.lucene.store.ByteArrayDataInput;", NULL, NULL, .constantValue.asLong = 0 },
    { "docUpto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "docID_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "accum_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "freq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "numDocs_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "posPending_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloadLength_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "storeOffsets_", NULL, 0x10, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "offsetLength_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "startOffset_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "pos_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "payload_", NULL, 0x12, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum = { 2, "FSTPostingsEnum", "org.apache.lucene.codecs.memory", "MemoryPostingsFormat", 0x1a, 12, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum_initWithBoolean_withBoolean_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *self, jboolean storePayloads, jboolean storeOffsets) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  JreStrongAssignAndConsume(&self->buffer_, [IOSByteArray newArrayWithLength:16]);
  JreStrongAssignAndConsume(&self->in_, new_OrgApacheLuceneStoreByteArrayDataInput_initWithByteArray_(self->buffer_));
  self->docID_ = -1;
  JreStrongAssignAndConsume(&self->payload_, new_OrgApacheLuceneUtilBytesRef_init());
  self->storePayloads_ = storePayloads;
  self->storeOffsets_ = storeOffsets;
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum_initWithBoolean_withBoolean_(jboolean storePayloads, jboolean storeOffsets) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum_initWithBoolean_withBoolean_(self, storePayloads, storeOffsets);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum)

@implementation OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum

- (instancetype)initWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                        withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_initWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilFstFST_(self, field, fst);
  return self;
}

- (void)decodeMetaData {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_decodeMetaData(self);
}

- (jboolean)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text {
  JreStrongAssign(&current_, [((OrgApacheLuceneUtilFstBytesRefFSTEnum *) nil_chk(fstEnum_)) seekExactWithOrgApacheLuceneUtilBytesRef:text]);
  didDecode_ = NO;
  return current_ != nil;
}

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text {
  JreStrongAssign(&current_, [((OrgApacheLuceneUtilFstBytesRefFSTEnum *) nil_chk(fstEnum_)) seekCeilWithOrgApacheLuceneUtilBytesRef:text]);
  if (current_ == nil) {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END);
  }
  else {
    didDecode_ = NO;
    if ([((OrgApacheLuceneUtilBytesRef *) nil_chk(text)) isEqual:current_->input_]) {
      return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND);
    }
    else {
      return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, NOT_FOUND);
    }
  }
}

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags {
  if (OrgApacheLuceneIndexPostingsEnum_featureRequestedWithInt_withShort_(flags, OrgApacheLuceneIndexDocsAndPositionsEnum_OLD_NULL_SEMANTICS)) {
    if ([((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(field_)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)] < 0) {
      return nil;
    }
  }
  jboolean hasPositions = [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(field_)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)] >= 0;
  if (hasPositions && OrgApacheLuceneIndexPostingsEnum_featureRequestedWithInt_withShort_(flags, OrgApacheLuceneIndexPostingsEnum_POSITIONS)) {
    jboolean hasOffsets = [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([field_ getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS)] >= 0;
    OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_decodeMetaData(self);
    OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *docsAndPositionsEnum;
    if (reuse == nil || !([reuse isKindOfClass:[OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum class]])) {
      docsAndPositionsEnum = [new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum_initWithBoolean_withBoolean_([field_ hasPayloads], hasOffsets) autorelease];
    }
    else {
      docsAndPositionsEnum = (OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *) check_class_cast(reuse, [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum class]);
      if (![docsAndPositionsEnum canReuseWithBoolean:[field_ hasPayloads] withBoolean:hasOffsets]) {
        docsAndPositionsEnum = [new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum_initWithBoolean_withBoolean_([field_ hasPayloads], hasOffsets) autorelease];
      }
    }
    return [((OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTPostingsEnum *) nil_chk(docsAndPositionsEnum)) resetWithOrgApacheLuceneUtilBytesRef:postingsSpare_ withInt:docFreq_];
  }
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_decodeMetaData(self);
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *docsEnum;
  if (reuse == nil || !([reuse isKindOfClass:[OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum class]])) {
    docsEnum = [new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum_initWithOrgApacheLuceneIndexIndexOptionsEnum_withBoolean_([field_ getIndexOptions], [field_ hasPayloads]) autorelease];
  }
  else {
    docsEnum = (OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *) check_class_cast(reuse, [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum class]);
    if (![docsEnum canReuseWithOrgApacheLuceneIndexIndexOptionsEnum:[field_ getIndexOptions] withBoolean:[field_ hasPayloads]]) {
      docsEnum = [new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum_initWithOrgApacheLuceneIndexIndexOptionsEnum_withBoolean_([field_ getIndexOptions], [field_ hasPayloads]) autorelease];
    }
  }
  return [((OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTDocsEnum *) nil_chk(docsEnum)) resetWithOrgApacheLuceneUtilBytesRef:self->postingsSpare_ withInt:docFreq_];
}

- (OrgApacheLuceneUtilBytesRef *)term {
  return ((OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *) nil_chk(current_))->input_;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  JreStrongAssign(&current_, [((OrgApacheLuceneUtilFstBytesRefFSTEnum *) nil_chk(fstEnum_)) next]);
  if (current_ == nil) {
    return nil;
  }
  didDecode_ = NO;
  return ((OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *) nil_chk(current_))->input_;
}

- (jint)docFreq {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_decodeMetaData(self);
  return docFreq_;
}

- (jlong)totalTermFreq {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_decodeMetaData(self);
  return totalTermFreq_;
}

- (void)seekExactWithLong:(jlong)ord {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (jlong)ord {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(fstEnum_);
  RELEASE_(buffer_);
  RELEASE_(current_);
  RELEASE_(postingsSpare_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexFieldInfo:withOrgApacheLuceneUtilFstFST:", "FSTTermsEnum", NULL, 0x1, NULL, NULL },
    { "decodeMetaData", NULL, "V", 0x2, NULL, NULL },
    { "seekExactWithOrgApacheLuceneUtilBytesRef:", "seekExact", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "seekCeilWithOrgApacheLuceneUtilBytesRef:", "seekCeil", "Lorg.apache.lucene.index.TermsEnum$SeekStatus;", 0x1, "Ljava.io.IOException;", NULL },
    { "postingsWithOrgApacheLuceneIndexPostingsEnum:withInt:", "postings", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, NULL, NULL },
    { "term", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "docFreq", NULL, "I", 0x1, NULL, NULL },
    { "totalTermFreq", NULL, "J", 0x1, NULL, NULL },
    { "seekExactWithLong:", "seekExact", "V", 0x1, NULL, NULL },
    { "ord", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "field_", NULL, 0x12, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "fstEnum_", NULL, 0x12, "Lorg.apache.lucene.util.fst.BytesRefFSTEnum;", NULL, "Lorg/apache/lucene/util/fst/BytesRefFSTEnum<Lorg/apache/lucene/util/BytesRef;>;", .constantValue.asLong = 0 },
    { "buffer_", NULL, 0x12, "Lorg.apache.lucene.store.ByteArrayDataInput;", NULL, NULL, .constantValue.asLong = 0 },
    { "didDecode_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "docFreq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "totalTermFreq_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "current_", NULL, 0x2, "Lorg.apache.lucene.util.fst.BytesRefFSTEnum$InputOutput;", NULL, "Lorg/apache/lucene/util/fst/BytesRefFSTEnum$InputOutput<Lorg/apache/lucene/util/BytesRef;>;", .constantValue.asLong = 0 },
    { "postingsSpare_", NULL, 0x2, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum = { 2, "FSTTermsEnum", "org.apache.lucene.codecs.memory", "MemoryPostingsFormat", 0x1a, 11, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_initWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilFstFST_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum *self, OrgApacheLuceneIndexFieldInfo *field, OrgApacheLuceneUtilFstFST *fst) {
  OrgApacheLuceneIndexTermsEnum_init(self);
  JreStrongAssignAndConsume(&self->buffer_, new_OrgApacheLuceneStoreByteArrayDataInput_init());
  JreStrongAssignAndConsume(&self->postingsSpare_, new_OrgApacheLuceneUtilBytesRef_init());
  JreStrongAssign(&self->field_, field);
  JreStrongAssignAndConsume(&self->fstEnum_, new_OrgApacheLuceneUtilFstBytesRefFSTEnum_initWithOrgApacheLuceneUtilFstFST_(fst));
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_initWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilFstFST_(OrgApacheLuceneIndexFieldInfo *field, OrgApacheLuceneUtilFstFST *fst) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_initWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilFstFST_(self, field, fst);
  return self;
}

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_decodeMetaData(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum *self) {
  if (!self->didDecode_) {
    [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(self->buffer_)) resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(((OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *) nil_chk(self->current_))->output_))->bytes_ withInt:((OrgApacheLuceneUtilBytesRef *) self->current_->output_)->offset_ withInt:((OrgApacheLuceneUtilBytesRef *) self->current_->output_)->length_];
    self->docFreq_ = [self->buffer_ readVInt];
    if ([((OrgApacheLuceneIndexFieldInfo *) nil_chk(self->field_)) getIndexOptions] != JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)) {
      self->totalTermFreq_ = self->docFreq_ + [self->buffer_ readVLong];
    }
    else {
      self->totalTermFreq_ = -1;
    }
    JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(self->postingsSpare_))->bytes_, ((OrgApacheLuceneUtilBytesRef *) self->current_->output_)->bytes_);
    self->postingsSpare_->offset_ = [self->buffer_ getPosition];
    self->postingsSpare_->length_ = ((OrgApacheLuceneUtilBytesRef *) self->current_->output_)->length_ - ([self->buffer_ getPosition] - ((OrgApacheLuceneUtilBytesRef *) self->current_->output_)->offset_);
    self->didDecode_ = YES;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum)

@implementation OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader

- (instancetype)initWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos
                    withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg
                                               withInt:(jint)termCount {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader_initWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIndexInput_withInt_(self, fieldInfos, inArg, termCount);
  return self;
}

- (jlong)getSumTotalTermFreq {
  return sumTotalTermFreq_;
}

- (jlong)getSumDocFreq {
  return sumDocFreq_;
}

- (jint)getDocCount {
  return docCount_;
}

- (jlong)size {
  return termCount_;
}

- (OrgApacheLuceneIndexTermsEnum *)iterator {
  return [new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_FSTTermsEnum_initWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilFstFST_(field_, fst_) autorelease];
}

- (jboolean)hasFreqs {
  return [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(field_)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS)] >= 0;
}

- (jboolean)hasOffsets {
  return [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(field_)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS)] >= 0;
}

- (jboolean)hasPositions {
  return [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(field_)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)] >= 0;
}

- (jboolean)hasPayloads {
  return [((OrgApacheLuceneIndexFieldInfo *) nil_chk(field_)) hasPayloads];
}

- (jlong)ramBytesUsed {
  return ((fst_ != nil) ? [fst_ ramBytesUsed] : 0);
}

- (id<JavaUtilCollection>)getChildResources {
  if (fst_ == nil) {
    return JavaUtilCollections_emptyList();
  }
  else {
    return JavaUtilCollections_singletonListWithId_(OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withOrgApacheLuceneUtilAccountable_(@"terms", fst_));
  }
}

- (NSString *)description {
  return JreStrcat("$I$J$J$IC", @"MemoryTerms(terms=", termCount_, @",postings=", sumDocFreq_, @",positions=", sumTotalTermFreq_, @",docs=", docCount_, ')');
}

- (void)dealloc {
  RELEASE_(fst_);
  RELEASE_(outputs_);
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexFieldInfos:withOrgApacheLuceneStoreIndexInput:withInt:", "TermsReader", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "getSumTotalTermFreq", NULL, "J", 0x1, NULL, NULL },
    { "getSumDocFreq", NULL, "J", 0x1, NULL, NULL },
    { "getDocCount", NULL, "I", 0x1, NULL, NULL },
    { "size", NULL, "J", 0x1, NULL, NULL },
    { "iterator", NULL, "Lorg.apache.lucene.index.TermsEnum;", 0x1, NULL, NULL },
    { "hasFreqs", NULL, "Z", 0x1, NULL, NULL },
    { "hasOffsets", NULL, "Z", 0x1, NULL, NULL },
    { "hasPositions", NULL, "Z", 0x1, NULL, NULL },
    { "hasPayloads", NULL, "Z", 0x1, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sumTotalTermFreq_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "sumDocFreq_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "docCount_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "termCount_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fst_", NULL, 0x2, "Lorg.apache.lucene.util.fst.FST;", NULL, "Lorg/apache/lucene/util/fst/FST<Lorg/apache/lucene/util/BytesRef;>;", .constantValue.asLong = 0 },
    { "outputs_", NULL, 0x12, "Lorg.apache.lucene.util.fst.ByteSequenceOutputs;", NULL, NULL, .constantValue.asLong = 0 },
    { "field_", NULL, 0x12, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader = { 2, "TermsReader", "org.apache.lucene.codecs.memory", "MemoryPostingsFormat", 0x1a, 13, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader_initWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIndexInput_withInt_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader *self, OrgApacheLuceneIndexFieldInfos *fieldInfos, OrgApacheLuceneStoreIndexInput *inArg, jint termCount) {
  OrgApacheLuceneIndexTerms_init(self);
  JreStrongAssign(&self->outputs_, OrgApacheLuceneUtilFstByteSequenceOutputs_getSingleton());
  self->termCount_ = termCount;
  jint fieldNumber = [((OrgApacheLuceneStoreIndexInput *) nil_chk(inArg)) readVInt];
  JreStrongAssign(&self->field_, [((OrgApacheLuceneIndexFieldInfos *) nil_chk(fieldInfos)) fieldInfoWithInt:fieldNumber]);
  if (self->field_ == nil) {
    @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I", @"invalid field number: ", fieldNumber), inArg) autorelease];
  }
  else if ([self->field_ getIndexOptions] != JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)) {
    self->sumTotalTermFreq_ = [inArg readVLong];
  }
  else {
    self->sumTotalTermFreq_ = -1;
  }
  self->sumDocFreq_ = [inArg readVLong];
  self->docCount_ = [inArg readVInt];
  JreStrongAssignAndConsume(&self->fst_, new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_(inArg, self->outputs_));
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader_initWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIndexInput_withInt_(OrgApacheLuceneIndexFieldInfos *fieldInfos, OrgApacheLuceneStoreIndexInput *inArg, jint termCount) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader_initWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIndexInput_withInt_(self, fieldInfos, inArg, termCount);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader)

@implementation OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilSet>) nil_chk(JavaUtilCollections_unmodifiableSetWithJavaUtilSet_([((id<JavaUtilSortedMap>) nil_chk(val$fields_)) keySet]))) iterator];
}

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field {
  return [((id<JavaUtilSortedMap>) nil_chk(val$fields_)) getWithId:field];
}

- (jint)size {
  return [((id<JavaUtilSortedMap>) nil_chk(val$fields_)) size];
}

- (void)close {
  for (OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader * __strong termsReader in nil_chk([((id<JavaUtilSortedMap>) nil_chk(val$fields_)) values])) {
    JreStrongAssign(&((OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader *) nil_chk(termsReader))->fst_, nil);
  }
}

- (jlong)ramBytesUsed {
  jlong sizeInBytes = 0;
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilSortedMap>) nil_chk(val$fields_)) entrySet])) {
    sizeInBytes += (((jint) [((NSString *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey])) length]) * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_CHAR);
    sizeInBytes += [((OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_TermsReader *) nil_chk([entry_ getValue])) ramBytesUsed];
  }
  return sizeInBytes;
}

- (id<JavaUtilCollection>)getChildResources {
  return OrgApacheLuceneUtilAccountables_namedAccountablesWithNSString_withJavaUtilMap_(@"field", val$fields_);
}

- (NSString *)description {
  return JreStrcat("$IC", @"MemoryPostings(fields=", [((id<JavaUtilSortedMap>) nil_chk(val$fields_)) size], ')');
}

- (void)checkIntegrity {
}

- (instancetype)initWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)capture$0 {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1_initWithJavaUtilSortedMap_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$fields_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "termsWithNSString:", "terms", "Lorg.apache.lucene.index.Terms;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "checkIntegrity", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithJavaUtilSortedMap:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$fields_", NULL, 0x1012, "Ljava.util.SortedMap;", NULL, "Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/lucene/codecs/memory/MemoryPostingsFormat$TermsReader;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneCodecsMemoryMemoryPostingsFormat", "fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1 = { 2, "", "org.apache.lucene.codecs.memory", "MemoryPostingsFormat", 0x8008, 9, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1;
}

@end

void OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1_initWithJavaUtilSortedMap_(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1 *self, id<JavaUtilSortedMap> capture$0) {
  JreStrongAssign(&self->val$fields_, capture$0);
  OrgApacheLuceneCodecsFieldsProducer_init(self);
}

OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1 *new_OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1_initWithJavaUtilSortedMap_(id<JavaUtilSortedMap> capture$0) {
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1 *self = [OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1 alloc];
  OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1_initWithJavaUtilSortedMap_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryMemoryPostingsFormat_$1)
