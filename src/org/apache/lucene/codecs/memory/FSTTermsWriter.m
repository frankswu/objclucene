//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/codecs/BlockTermState.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/FieldsConsumer.h"
#include "org/apache/lucene/codecs/PostingsWriterBase.h"
#include "org/apache/lucene/codecs/memory/FSTTermOutputs.h"
#include "org/apache/lucene/codecs/memory/FSTTermsWriter.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/RAMOutputStream.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/FixedBitSet.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/fst/Builder.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/Util.h"

@interface OrgApacheLuceneCodecsMemoryFSTTermsWriter ()

- (void)writeTrailerWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
                                               withLong:(jlong)dirStart;

@end

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTTermsWriter_writeTrailerWithOrgApacheLuceneStoreIndexOutput_withLong_(OrgApacheLuceneCodecsMemoryFSTTermsWriter *self, OrgApacheLuceneStoreIndexOutput *outArg, jlong dirStart);

@interface OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData : NSObject {
 @public
  OrgApacheLuceneIndexFieldInfo *fieldInfo_;
  jlong numTerms_;
  jlong sumTotalTermFreq_;
  jlong sumDocFreq_;
  jint docCount_;
  jint longsSize_;
  OrgApacheLuceneUtilFstFST *dict_;
}

- (instancetype)initWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                             withLong:(jlong)numTerms
                                             withLong:(jlong)sumTotalTermFreq
                                             withLong:(jlong)sumDocFreq
                                              withInt:(jint)docCount
                                              withInt:(jint)longsSize
                        withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData, fieldInfo_, OrgApacheLuceneIndexFieldInfo *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData, dict_, OrgApacheLuceneUtilFstFST *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData_initWithOrgApacheLuceneIndexFieldInfo_withLong_withLong_withLong_withInt_withInt_withOrgApacheLuceneUtilFstFST_(OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData *self, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong numTerms, jlong sumTotalTermFreq, jlong sumDocFreq, jint docCount, jint longsSize, OrgApacheLuceneUtilFstFST *fst);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData *new_OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData_initWithOrgApacheLuceneIndexFieldInfo_withLong_withLong_withLong_withInt_withInt_withOrgApacheLuceneUtilFstFST_(OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong numTerms, jlong sumTotalTermFreq, jlong sumDocFreq, jint docCount, jint longsSize, OrgApacheLuceneUtilFstFST *fst) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData)

@interface OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter () {
 @public
  OrgApacheLuceneCodecsMemoryFSTTermsWriter *this$0_;
  OrgApacheLuceneUtilFstBuilder *builder_;
  OrgApacheLuceneCodecsMemoryFSTTermOutputs *outputs_;
  OrgApacheLuceneIndexFieldInfo *fieldInfo_;
  jint longsSize_;
  jlong numTerms_;
  OrgApacheLuceneUtilIntsRefBuilder *scratchTerm_;
  OrgApacheLuceneStoreRAMOutputStream *metaWriter_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter, this$0_, OrgApacheLuceneCodecsMemoryFSTTermsWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter, builder_, OrgApacheLuceneUtilFstBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter, outputs_, OrgApacheLuceneCodecsMemoryFSTTermOutputs *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter, fieldInfo_, OrgApacheLuceneIndexFieldInfo *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter, scratchTerm_, OrgApacheLuceneUtilIntsRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter, metaWriter_, OrgApacheLuceneStoreRAMOutputStream *)

NSString *OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_EXTENSION_ = @"tmp";
NSString *OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_CODEC_NAME_ = @"FSTTerms";

@implementation OrgApacheLuceneCodecsMemoryFSTTermsWriter

- (instancetype)initWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state
                  withOrgApacheLuceneCodecsPostingsWriterBase:(OrgApacheLuceneCodecsPostingsWriterBase *)postingsWriter {
  OrgApacheLuceneCodecsMemoryFSTTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_(self, state, postingsWriter);
  return self;
}

- (void)writeTrailerWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
                                               withLong:(jlong)dirStart {
  OrgApacheLuceneCodecsMemoryFSTTermsWriter_writeTrailerWithOrgApacheLuceneStoreIndexOutput_withLong_(self, outArg, dirStart);
}

- (void)writeWithOrgApacheLuceneIndexFields:(OrgApacheLuceneIndexFields *)fields {
  for (NSString * __strong field in nil_chk(fields)) {
    OrgApacheLuceneIndexTerms *terms = [fields termsWithNSString:field];
    if (terms == nil) {
      continue;
    }
    OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(fieldInfos_)) fieldInfoWithNSString:field];
    jboolean hasFreq = [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS)] >= 0;
    OrgApacheLuceneIndexTermsEnum *termsEnum = [((OrgApacheLuceneIndexTerms *) nil_chk(terms)) iterator];
    OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter *termsWriter = termsWriter = [new_OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTTermsWriter_withOrgApacheLuceneIndexFieldInfo_(self, fieldInfo) autorelease];
    jlong sumTotalTermFreq = 0;
    jlong sumDocFreq = 0;
    OrgApacheLuceneUtilFixedBitSet *docsSeen = [new_OrgApacheLuceneUtilFixedBitSet_initWithInt_(maxDoc_) autorelease];
    while (YES) {
      OrgApacheLuceneUtilBytesRef *term = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) next];
      if (term == nil) {
        break;
      }
      OrgApacheLuceneCodecsBlockTermState *termState = [((OrgApacheLuceneCodecsPostingsWriterBase *) nil_chk(postingsWriter_)) writeTermWithOrgApacheLuceneUtilBytesRef:term withOrgApacheLuceneIndexTermsEnum:termsEnum withOrgApacheLuceneUtilFixedBitSet:docsSeen];
      if (termState != nil) {
        [termsWriter finishTermWithOrgApacheLuceneUtilBytesRef:term withOrgApacheLuceneCodecsBlockTermState:termState];
        sumTotalTermFreq += termState->totalTermFreq_;
        sumDocFreq += termState->docFreq_;
      }
    }
    [termsWriter finishWithLong:hasFreq ? sumTotalTermFreq : -1 withLong:sumDocFreq withInt:[docsSeen cardinality]];
  }
}

- (void)close {
  if (out_ != nil) {
    jboolean success = NO;
    @try {
      jlong dirStart = [out_ getFilePointer];
      [out_ writeVIntWithInt:[((id<JavaUtilList>) nil_chk(fields_)) size]];
      for (OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData * __strong field in fields_) {
        [out_ writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(((OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData *) nil_chk(field))->fieldInfo_))->number_];
        [out_ writeVLongWithLong:field->numTerms_];
        if ([field->fieldInfo_ getIndexOptions] != JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)) {
          [out_ writeVLongWithLong:field->sumTotalTermFreq_];
        }
        [out_ writeVLongWithLong:field->sumDocFreq_];
        [out_ writeVIntWithInt:field->docCount_];
        [out_ writeVIntWithInt:field->longsSize_];
        [((OrgApacheLuceneUtilFstFST *) nil_chk(field->dict_)) saveWithOrgApacheLuceneStoreDataOutput:out_];
      }
      OrgApacheLuceneCodecsMemoryFSTTermsWriter_writeTrailerWithOrgApacheLuceneStoreIndexOutput_withLong_(self, out_, dirStart);
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(out_);
      success = YES;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ out_, postingsWriter_ } count:2 type:JavaIoCloseable_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ out_, postingsWriter_ } count:2 type:JavaIoCloseable_class_()]);
      }
      JreStrongAssign(&out_, nil);
    }
  }
}

- (void)dealloc {
  RELEASE_(postingsWriter_);
  RELEASE_(fieldInfos_);
  RELEASE_(out_);
  RELEASE_(fields_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexSegmentWriteState:withOrgApacheLuceneCodecsPostingsWriterBase:", "FSTTermsWriter", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "writeTrailerWithOrgApacheLuceneStoreIndexOutput:withLong:", "writeTrailer", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "writeWithOrgApacheLuceneIndexFields:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TERMS_EXTENSION_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_EXTENSION_, NULL, .constantValue.asLong = 0 },
    { "TERMS_CODEC_NAME_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_CODEC_NAME_, NULL, .constantValue.asLong = 0 },
    { "TERMS_VERSION_START", "TERMS_VERSION_START", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_VERSION_START },
    { "TERMS_VERSION_CURRENT", "TERMS_VERSION_CURRENT", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_VERSION_CURRENT },
    { "postingsWriter_", NULL, 0x10, "Lorg.apache.lucene.codecs.PostingsWriterBase;", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldInfos_", NULL, 0x10, "Lorg.apache.lucene.index.FieldInfos;", NULL, NULL, .constantValue.asLong = 0 },
    { "out_", NULL, 0x0, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxDoc_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fields_", NULL, 0x10, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/codecs/memory/FSTTermsWriter$FieldMetaData;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.FSTTermsWriter$FieldMetaData;", "Lorg.apache.lucene.codecs.memory.FSTTermsWriter$TermsWriter;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTTermsWriter = { 2, "FSTTermsWriter", "org.apache.lucene.codecs.memory", NULL, 0x1, 4, methods, 9, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTTermsWriter;
}

@end

void OrgApacheLuceneCodecsMemoryFSTTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_(OrgApacheLuceneCodecsMemoryFSTTermsWriter *self, OrgApacheLuceneIndexSegmentWriteState *state, OrgApacheLuceneCodecsPostingsWriterBase *postingsWriter) {
  OrgApacheLuceneCodecsFieldsConsumer_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_JavaUtilArrayList_init());
  NSString *termsFileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state))->segmentInfo_))->name_, state->segmentSuffix_, OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_EXTENSION_);
  JreStrongAssign(&self->postingsWriter_, postingsWriter);
  JreStrongAssign(&self->fieldInfos_, state->fieldInfos_);
  JreStrongAssign(&self->out_, [((OrgApacheLuceneStoreDirectory *) nil_chk(state->directory_)) createOutputWithNSString:termsFileName withOrgApacheLuceneStoreIOContext:state->context_]);
  self->maxDoc_ = [state->segmentInfo_ maxDoc];
  jboolean success = NO;
  @try {
    OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(self->out_, OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_CODEC_NAME_, OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    [((OrgApacheLuceneCodecsPostingsWriterBase *) nil_chk(self->postingsWriter_)) init__WithOrgApacheLuceneStoreIndexOutput:self->out_ withOrgApacheLuceneIndexSegmentWriteState:state];
    success = YES;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self->out_ } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneCodecsMemoryFSTTermsWriter *new_OrgApacheLuceneCodecsMemoryFSTTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_(OrgApacheLuceneIndexSegmentWriteState *state, OrgApacheLuceneCodecsPostingsWriterBase *postingsWriter) {
  OrgApacheLuceneCodecsMemoryFSTTermsWriter *self = [OrgApacheLuceneCodecsMemoryFSTTermsWriter alloc];
  OrgApacheLuceneCodecsMemoryFSTTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_(self, state, postingsWriter);
  return self;
}

void OrgApacheLuceneCodecsMemoryFSTTermsWriter_writeTrailerWithOrgApacheLuceneStoreIndexOutput_withLong_(OrgApacheLuceneCodecsMemoryFSTTermsWriter *self, OrgApacheLuceneStoreIndexOutput *outArg, jlong dirStart) {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(outArg)) writeLongWithLong:dirStart];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTTermsWriter)

@implementation OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData

- (instancetype)initWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                             withLong:(jlong)numTerms
                                             withLong:(jlong)sumTotalTermFreq
                                             withLong:(jlong)sumDocFreq
                                              withInt:(jint)docCount
                                              withInt:(jint)longsSize
                        withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst {
  OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData_initWithOrgApacheLuceneIndexFieldInfo_withLong_withLong_withLong_withInt_withInt_withOrgApacheLuceneUtilFstFST_(self, fieldInfo, numTerms, sumTotalTermFreq, sumDocFreq, docCount, longsSize, fst);
  return self;
}

- (void)dealloc {
  RELEASE_(fieldInfo_);
  RELEASE_(dict_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexFieldInfo:withLong:withLong:withLong:withInt:withInt:withOrgApacheLuceneUtilFstFST:", "FieldMetaData", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fieldInfo_", NULL, 0x11, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "numTerms_", NULL, 0x11, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "sumTotalTermFreq_", NULL, 0x11, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "sumDocFreq_", NULL, 0x11, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "docCount_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "longsSize_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "dict_", NULL, 0x11, "Lorg.apache.lucene.util.fst.FST;", NULL, "Lorg/apache/lucene/util/fst/FST<Lorg/apache/lucene/codecs/memory/FSTTermOutputs$TermData;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData = { 2, "FieldMetaData", "org.apache.lucene.codecs.memory", "FSTTermsWriter", 0xa, 1, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData;
}

@end

void OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData_initWithOrgApacheLuceneIndexFieldInfo_withLong_withLong_withLong_withInt_withInt_withOrgApacheLuceneUtilFstFST_(OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData *self, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong numTerms, jlong sumTotalTermFreq, jlong sumDocFreq, jint docCount, jint longsSize, OrgApacheLuceneUtilFstFST *fst) {
  NSObject_init(self);
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  self->numTerms_ = numTerms;
  self->sumTotalTermFreq_ = sumTotalTermFreq;
  self->sumDocFreq_ = sumDocFreq;
  self->docCount_ = docCount;
  self->longsSize_ = longsSize;
  JreStrongAssign(&self->dict_, fst);
}

OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData *new_OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData_initWithOrgApacheLuceneIndexFieldInfo_withLong_withLong_withLong_withInt_withInt_withOrgApacheLuceneUtilFstFST_(OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong numTerms, jlong sumTotalTermFreq, jlong sumDocFreq, jint docCount, jint longsSize, OrgApacheLuceneUtilFstFST *fst) {
  OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData *self = [OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData alloc];
  OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData_initWithOrgApacheLuceneIndexFieldInfo_withLong_withLong_withLong_withInt_withInt_withOrgApacheLuceneUtilFstFST_(self, fieldInfo, numTerms, sumTotalTermFreq, sumDocFreq, docCount, longsSize, fst);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData)

@implementation OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTTermsWriter:(OrgApacheLuceneCodecsMemoryFSTTermsWriter *)outer$
                                withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo {
  OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTTermsWriter_withOrgApacheLuceneIndexFieldInfo_(self, outer$, fieldInfo);
  return self;
}

- (void)finishTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
          withOrgApacheLuceneCodecsBlockTermState:(OrgApacheLuceneCodecsBlockTermState *)state {
  OrgApacheLuceneCodecsMemoryFSTTermOutputs_TermData *meta = [new_OrgApacheLuceneCodecsMemoryFSTTermOutputs_TermData_init() autorelease];
  JreStrongAssignAndConsume(&meta->longs_, [IOSLongArray newArrayWithLength:longsSize_]);
  JreStrongAssign(&meta->bytes_, nil);
  meta->docFreq_ = ((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state))->docFreq_;
  meta->totalTermFreq_ = state->totalTermFreq_;
  [((OrgApacheLuceneCodecsPostingsWriterBase *) nil_chk(this$0_->postingsWriter_)) encodeTermWithLongArray:meta->longs_ withOrgApacheLuceneStoreDataOutput:metaWriter_ withOrgApacheLuceneIndexFieldInfo:fieldInfo_ withOrgApacheLuceneCodecsBlockTermState:state withBoolean:YES];
  jint bytesSize = (jint) [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(metaWriter_)) getFilePointer];
  if (bytesSize > 0) {
    JreStrongAssignAndConsume(&meta->bytes_, [IOSByteArray newArrayWithLength:bytesSize]);
    [metaWriter_ writeToWithByteArray:meta->bytes_ withInt:0];
    [metaWriter_ reset];
  }
  [((OrgApacheLuceneUtilFstBuilder *) nil_chk(builder_)) addWithOrgApacheLuceneUtilIntsRef:OrgApacheLuceneUtilFstUtil_toIntsRefWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilIntsRefBuilder_(text, scratchTerm_) withId:meta];
  numTerms_++;
}

- (void)finishWithLong:(jlong)sumTotalTermFreq
              withLong:(jlong)sumDocFreq
               withInt:(jint)docCount {
  if (numTerms_ > 0) {
    OrgApacheLuceneUtilFstFST *fst = [((OrgApacheLuceneUtilFstBuilder *) nil_chk(builder_)) finish];
    [((id<JavaUtilList>) nil_chk(this$0_->fields_)) addWithId:[new_OrgApacheLuceneCodecsMemoryFSTTermsWriter_FieldMetaData_initWithOrgApacheLuceneIndexFieldInfo_withLong_withLong_withLong_withInt_withInt_withOrgApacheLuceneUtilFstFST_(fieldInfo_, numTerms_, sumTotalTermFreq, sumDocFreq, docCount, longsSize_, fst) autorelease]];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(builder_);
  RELEASE_(outputs_);
  RELEASE_(fieldInfo_);
  RELEASE_(scratchTerm_);
  RELEASE_(metaWriter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryFSTTermsWriter:withOrgApacheLuceneIndexFieldInfo:", "TermsWriter", NULL, 0x0, NULL, NULL },
    { "finishTermWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneCodecsBlockTermState:", "finishTerm", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "finishWithLong:withLong:withInt:", "finish", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.FSTTermsWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "builder_", NULL, 0x12, "Lorg.apache.lucene.util.fst.Builder;", NULL, "Lorg/apache/lucene/util/fst/Builder<Lorg/apache/lucene/codecs/memory/FSTTermOutputs$TermData;>;", .constantValue.asLong = 0 },
    { "outputs_", NULL, 0x12, "Lorg.apache.lucene.codecs.memory.FSTTermOutputs;", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldInfo_", NULL, 0x12, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "longsSize_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "numTerms_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "scratchTerm_", NULL, 0x12, "Lorg.apache.lucene.util.IntsRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "metaWriter_", NULL, 0x12, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter = { 2, "TermsWriter", "org.apache.lucene.codecs.memory", "FSTTermsWriter", 0x10, 3, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter;
}

@end

void OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTTermsWriter_withOrgApacheLuceneIndexFieldInfo_(OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter *self, OrgApacheLuceneCodecsMemoryFSTTermsWriter *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->scratchTerm_, new_OrgApacheLuceneUtilIntsRefBuilder_init());
  JreStrongAssignAndConsume(&self->metaWriter_, new_OrgApacheLuceneStoreRAMOutputStream_init());
  self->numTerms_ = 0;
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  self->longsSize_ = [((OrgApacheLuceneCodecsPostingsWriterBase *) nil_chk(outer$->postingsWriter_)) setFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo];
  JreStrongAssignAndConsume(&self->outputs_, new_OrgApacheLuceneCodecsMemoryFSTTermOutputs_initWithOrgApacheLuceneIndexFieldInfo_withInt_(fieldInfo, self->longsSize_));
  JreStrongAssignAndConsume(&self->builder_, new_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withOrgApacheLuceneUtilFstOutputs_(JreLoadStatic(OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum, BYTE1), self->outputs_));
}

OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter *new_OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTTermsWriter_withOrgApacheLuceneIndexFieldInfo_(OrgApacheLuceneCodecsMemoryFSTTermsWriter *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo) {
  OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter *self = [OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter alloc];
  OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter_initWithOrgApacheLuceneCodecsMemoryFSTTermsWriter_withOrgApacheLuceneIndexFieldInfo_(self, outer$, fieldInfo);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTTermsWriter_TermsWriter)
