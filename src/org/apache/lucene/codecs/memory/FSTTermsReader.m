//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/BitSet.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"
#include "org/apache/lucene/codecs/BlockTermState.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/FieldsProducer.h"
#include "org/apache/lucene/codecs/PostingsReaderBase.h"
#include "org/apache/lucene/codecs/memory/FSTTermOutputs.h"
#include "org/apache/lucene/codecs/memory/FSTTermsReader.h"
#include "org/apache/lucene/codecs/memory/FSTTermsWriter.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentReadState.h"
#include "org/apache/lucene/index/TermState.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/store/ByteArrayDataInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/automaton/ByteRunAutomaton.h"
#include "org/apache/lucene/util/automaton/CompiledAutomaton.h"
#include "org/apache/lucene/util/fst/BytesRefFSTEnum.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/Outputs.h"
#include "org/apache/lucene/util/fst/Util.h"

@class OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame;

@interface OrgApacheLuceneCodecsMemoryFSTTermsReader ()

- (void)seekDirWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg;

- (void)checkFieldSummaryWithOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)info
                          withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg
   withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)field
   withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)previous;

@end

static jlong OrgApacheLuceneCodecsMemoryFSTTermsReader_BASE_RAM_BYTES_USED_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader, BASE_RAM_BYTES_USED_, jlong)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTTermsReader_seekDirWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneCodecsMemoryFSTTermsReader *self, OrgApacheLuceneStoreIndexInput *inArg);

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTTermsReader_checkFieldSummaryWithOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(OrgApacheLuceneCodecsMemoryFSTTermsReader *self, OrgApacheLuceneIndexSegmentInfo *info, OrgApacheLuceneStoreIndexInput *inArg, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *field, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *previous);

@interface OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader () {
 @public
  OrgApacheLuceneCodecsMemoryFSTTermsReader *this$0_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader, this$0_, OrgApacheLuceneCodecsMemoryFSTTermsReader *)

@interface OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum () {
 @public
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *this$0_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum, this$0_, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)

@interface OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum : OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum {
 @public
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *this$1_;
  OrgApacheLuceneUtilBytesRef *term_;
  OrgApacheLuceneUtilFstBytesRefFSTEnum *fstEnum_;
  jboolean decoded_;
  jboolean seekPending_;
}

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)outer$;

- (OrgApacheLuceneUtilBytesRef *)term;

- (void)decodeMetaData;

- (void)updateEnumWithOrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput:(OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *)pair;

- (OrgApacheLuceneUtilBytesRef *)next;

- (jboolean)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target;

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target;

- (void)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target
               withOrgApacheLuceneIndexTermState:(OrgApacheLuceneIndexTermState *)otherState;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum, this$1_, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum, term_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum, fstEnum_, OrgApacheLuceneUtilFstBytesRefFSTEnum *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum *self, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *outer$);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum *new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum)

@interface OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum : OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum {
 @public
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *this$1_;
  OrgApacheLuceneUtilBytesRefBuilder *term_;
  jboolean decoded_;
  jboolean pending_;
  IOSObjectArray *stack_;
  jint level_;
  jint metaUpto_;
  OrgApacheLuceneUtilFstFST *fst_;
  OrgApacheLuceneUtilFstFST_BytesReader *fstReader_;
  OrgApacheLuceneUtilFstOutputs *fstOutputs_;
  OrgApacheLuceneUtilAutomatonByteRunAutomaton *fsa_;
}

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)outer$
                            withOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)compiled
                                              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)startTerm;

- (OrgApacheLuceneUtilBytesRef *)term;

- (void)decodeMetaData;

- (void)loadMetaData;

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target;

- (OrgApacheLuceneUtilBytesRef *)next;

- (OrgApacheLuceneUtilBytesRef *)doSeekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target;

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadVirtualFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadFirstFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadExpandFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)top
                                                                                                   withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadNextFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)top
                                                                                                 withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadCeilFrameWithInt:(jint)label
                      withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)top
                      withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (jboolean)isAcceptWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (jboolean)isValidWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (jboolean)canGrowWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (jboolean)canRewindWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (void)pushFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame;

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)popFrame;

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)newFrame OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)topFrame;

- (OrgApacheLuceneUtilBytesRefBuilder *)growWithInt:(jint)label;

- (OrgApacheLuceneUtilBytesRefBuilder *)shrink;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum, this$1_, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum, term_, OrgApacheLuceneUtilBytesRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum, stack_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum, fst_, OrgApacheLuceneUtilFstFST *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum, fstReader_, OrgApacheLuceneUtilFstFST_BytesReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum, fstOutputs_, OrgApacheLuceneUtilFstOutputs *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum, fsa_, OrgApacheLuceneUtilAutomatonByteRunAutomaton *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *self, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *outer$, OrgApacheLuceneUtilAutomatonCompiledAutomaton *compiled, OrgApacheLuceneUtilBytesRef *startTerm);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *outer$, OrgApacheLuceneUtilAutomatonCompiledAutomaton *compiled, OrgApacheLuceneUtilBytesRef *startTerm) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_doSeekCeilWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *self, OrgApacheLuceneUtilBytesRef *target);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum)

@interface OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame : NSObject {
 @public
  OrgApacheLuceneUtilFstFST_Arc *fstArc_;
  jint fsaState_;
}

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *)outer$;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame, fstArc_, OrgApacheLuceneUtilFstFST_Arc *)

__attribute__((unused)) static void OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *self, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *outer$);

__attribute__((unused)) static OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsMemoryFSTTermsReader)

@implementation OrgApacheLuceneCodecsMemoryFSTTermsReader

- (instancetype)initWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state
                 withOrgApacheLuceneCodecsPostingsReaderBase:(OrgApacheLuceneCodecsPostingsReaderBase *)postingsReader {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneCodecsPostingsReaderBase_(self, state, postingsReader);
  return self;
}

- (void)seekDirWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_seekDirWithOrgApacheLuceneStoreIndexInput_(self, inArg);
}

- (void)checkFieldSummaryWithOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)info
                          withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg
   withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)field
   withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)previous {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_checkFieldSummaryWithOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(self, info, inArg, field, previous);
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilSet>) nil_chk(JavaUtilCollections_unmodifiableSetWithJavaUtilSet_([((JavaUtilTreeMap *) nil_chk(fields_)) keySet]))) iterator];
}

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field {
  JreAssert((field != nil), (@"org/apache/lucene/codecs/memory/FSTTermsReader.java:144 condition failed: assert field != null;"));
  return [((JavaUtilTreeMap *) nil_chk(fields_)) getWithId:field];
}

- (jint)size {
  return [((JavaUtilTreeMap *) nil_chk(fields_)) size];
}

- (void)close {
  @try {
    OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ postingsReader_ } count:1 type:JavaIoCloseable_class_()]);
  }
  @finally {
    [((JavaUtilTreeMap *) nil_chk(fields_)) clear];
  }
}

+ (void)walkWithOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_walkWithOrgApacheLuceneUtilFstFST_(fst);
}

- (jlong)ramBytesUsed {
  jlong ramBytesUsed = [((OrgApacheLuceneCodecsPostingsReaderBase *) nil_chk(postingsReader_)) ramBytesUsed];
  for (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader * __strong r in nil_chk([((JavaUtilTreeMap *) nil_chk(fields_)) values])) {
    ramBytesUsed += [((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *) nil_chk(r)) ramBytesUsed];
  }
  return ramBytesUsed;
}

- (id<JavaUtilCollection>)getChildResources {
  id<JavaUtilList> resources = [new_JavaUtilArrayList_init() autorelease];
  [resources addAllWithJavaUtilCollection:OrgApacheLuceneUtilAccountables_namedAccountablesWithNSString_withJavaUtilMap_(@"field", fields_)];
  [resources addWithId:OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withOrgApacheLuceneUtilAccountable_(@"delegate", postingsReader_)];
  return JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_(resources);
}

- (NSString *)description {
  return JreStrcat("$$I$@C", [[self getClass] getSimpleName], @"(fields=", [((JavaUtilTreeMap *) nil_chk(fields_)) size], @",delegate=", postingsReader_, ')');
}

- (void)checkIntegrity {
  [((OrgApacheLuceneCodecsPostingsReaderBase *) nil_chk(postingsReader_)) checkIntegrity];
}

- (void)dealloc {
  RELEASE_(fields_);
  RELEASE_(postingsReader_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsMemoryFSTTermsReader class]) {
    OrgApacheLuceneCodecsMemoryFSTTermsReader_BASE_RAM_BYTES_USED_ = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsMemoryFSTTermsReader)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexSegmentReadState:withOrgApacheLuceneCodecsPostingsReaderBase:", "FSTTermsReader", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "seekDirWithOrgApacheLuceneStoreIndexInput:", "seekDir", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "checkFieldSummaryWithOrgApacheLuceneIndexSegmentInfo:withOrgApacheLuceneStoreIndexInput:withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:", "checkFieldSummary", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "termsWithNSString:", "terms", "Lorg.apache.lucene.index.Terms;", 0x1, "Ljava.io.IOException;", NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "walkWithOrgApacheLuceneUtilFstFST:", "walk", "V", 0x8, "Ljava.io.IOException;", "<T:Ljava/lang/Object;>(Lorg/apache/lucene/util/fst/FST<TT;>;)V" },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "checkIntegrity", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fields_", NULL, 0x10, "Ljava.util.TreeMap;", NULL, "Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/lucene/codecs/memory/FSTTermsReader$TermsReader;>;", .constantValue.asLong = 0 },
    { "postingsReader_", NULL, 0x10, "Lorg.apache.lucene.codecs.PostingsReaderBase;", NULL, NULL, .constantValue.asLong = 0 },
    { "BASE_RAM_BYTES_USED_", NULL, 0x1a, "J", &OrgApacheLuceneCodecsMemoryFSTTermsReader_BASE_RAM_BYTES_USED_, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTTermsReader = { 2, "FSTTermsReader", "org.apache.lucene.codecs.memory", NULL, 0x1, 12, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTTermsReader;
}

@end

void OrgApacheLuceneCodecsMemoryFSTTermsReader_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneCodecsPostingsReaderBase_(OrgApacheLuceneCodecsMemoryFSTTermsReader *self, OrgApacheLuceneIndexSegmentReadState *state, OrgApacheLuceneCodecsPostingsReaderBase *postingsReader) {
  OrgApacheLuceneCodecsFieldsProducer_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_JavaUtilTreeMap_init());
  NSString *termsFileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentReadState *) nil_chk(state))->segmentInfo_))->name_, state->segmentSuffix_, OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_EXTENSION_);
  JreStrongAssign(&self->postingsReader_, postingsReader);
  OrgApacheLuceneStoreIndexInput *in = [((OrgApacheLuceneStoreDirectory *) nil_chk(state->directory_)) openInputWithNSString:termsFileName withOrgApacheLuceneStoreIOContext:state->context_];
  jboolean success = NO;
  @try {
    OrgApacheLuceneCodecsCodecUtil_checkIndexHeaderWithOrgApacheLuceneStoreDataInput_withNSString_withInt_withInt_withByteArray_withNSString_(in, OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_CODEC_NAME_, OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_VERSION_START, OrgApacheLuceneCodecsMemoryFSTTermsWriter_TERMS_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    OrgApacheLuceneCodecsCodecUtil_checksumEntireFileWithOrgApacheLuceneStoreIndexInput_(in);
    [((OrgApacheLuceneCodecsPostingsReaderBase *) nil_chk(self->postingsReader_)) init__WithOrgApacheLuceneStoreIndexInput:in withOrgApacheLuceneIndexSegmentReadState:state];
    OrgApacheLuceneCodecsMemoryFSTTermsReader_seekDirWithOrgApacheLuceneStoreIndexInput_(self, in);
    OrgApacheLuceneIndexFieldInfos *fieldInfos = state->fieldInfos_;
    jint numFields = [((OrgApacheLuceneStoreIndexInput *) nil_chk(in)) readVInt];
    for (jint i = 0; i < numFields; i++) {
      jint fieldNumber = [in readVInt];
      OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(fieldInfos)) fieldInfoWithInt:fieldNumber];
      jlong numTerms = [in readVLong];
      jlong sumTotalTermFreq = [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) getIndexOptions] == JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS) ? -1 : [in readVLong];
      jlong sumDocFreq = [in readVLong];
      jint docCount = [in readVInt];
      jint longsSize = [in readVInt];
      OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *current = [new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneStoreIndexInput_withLong_withLong_withLong_withInt_withInt_(self, fieldInfo, in, numTerms, sumTotalTermFreq, sumDocFreq, docCount, longsSize) autorelease];
      OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *previous = [self->fields_ putWithId:fieldInfo->name_ withId:current];
      OrgApacheLuceneCodecsMemoryFSTTermsReader_checkFieldSummaryWithOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(self, state->segmentInfo_, in, current, previous);
    }
    success = YES;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ in } count:1 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ in } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneCodecsMemoryFSTTermsReader *new_OrgApacheLuceneCodecsMemoryFSTTermsReader_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneCodecsPostingsReaderBase_(OrgApacheLuceneIndexSegmentReadState *state, OrgApacheLuceneCodecsPostingsReaderBase *postingsReader) {
  OrgApacheLuceneCodecsMemoryFSTTermsReader *self = [OrgApacheLuceneCodecsMemoryFSTTermsReader alloc];
  OrgApacheLuceneCodecsMemoryFSTTermsReader_initWithOrgApacheLuceneIndexSegmentReadState_withOrgApacheLuceneCodecsPostingsReaderBase_(self, state, postingsReader);
  return self;
}

void OrgApacheLuceneCodecsMemoryFSTTermsReader_seekDirWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneCodecsMemoryFSTTermsReader *self, OrgApacheLuceneStoreIndexInput *inArg) {
  [inArg seekWithLong:[((OrgApacheLuceneStoreIndexInput *) nil_chk(inArg)) length] - OrgApacheLuceneCodecsCodecUtil_footerLength() - 8];
  [inArg seekWithLong:[inArg readLong]];
}

void OrgApacheLuceneCodecsMemoryFSTTermsReader_checkFieldSummaryWithOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(OrgApacheLuceneCodecsMemoryFSTTermsReader *self, OrgApacheLuceneIndexSegmentInfo *info, OrgApacheLuceneStoreIndexInput *inArg, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *field, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *previous) {
  if (((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *) nil_chk(field))->docCount_ < 0 || field->docCount_ > [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info)) maxDoc]) {
    @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I$I", @"invalid docCount: ", field->docCount_, @" maxDoc: ", [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info)) maxDoc]), inArg) autorelease];
  }
  if (field->sumDocFreq_ < field->docCount_) {
    @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$J$I", @"invalid sumDocFreq: ", field->sumDocFreq_, @" docCount: ", field->docCount_), inArg) autorelease];
  }
  if (field->sumTotalTermFreq_ != -1 && field->sumTotalTermFreq_ < field->sumDocFreq_) {
    @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$J$J", @"invalid sumTotalTermFreq: ", field->sumTotalTermFreq_, @" sumDocFreq: ", field->sumDocFreq_), inArg) autorelease];
  }
  if (previous != nil) {
    @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$$", @"duplicate fields: ", ((OrgApacheLuceneIndexFieldInfo *) nil_chk(field->fieldInfo_))->name_), inArg) autorelease];
  }
}

void OrgApacheLuceneCodecsMemoryFSTTermsReader_walkWithOrgApacheLuceneUtilFstFST_(OrgApacheLuceneUtilFstFST *fst) {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_initialize();
  JavaUtilArrayList *queue = [new_JavaUtilArrayList_init() autorelease];
  JavaUtilBitSet *seen = [new_JavaUtilBitSet_init() autorelease];
  OrgApacheLuceneUtilFstFST_BytesReader *reader = [((OrgApacheLuceneUtilFstFST *) nil_chk(fst)) getBytesReader];
  OrgApacheLuceneUtilFstFST_Arc *startArc = [fst getFirstArcWithOrgApacheLuceneUtilFstFST_Arc:[new_OrgApacheLuceneUtilFstFST_Arc_init() autorelease]];
  [queue addWithId:startArc];
  while (![queue isEmpty]) {
    OrgApacheLuceneUtilFstFST_Arc *arc = [queue removeWithInt:0];
    jlong node = ((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(arc))->target_;
    if (OrgApacheLuceneUtilFstFST_targetHasArcsWithOrgApacheLuceneUtilFstFST_Arc_(arc) && ![seen getWithInt:(jint) node]) {
      [seen setWithInt:(jint) node];
      [fst readFirstRealTargetArcWithLong:node withOrgApacheLuceneUtilFstFST_Arc:arc withOrgApacheLuceneUtilFstFST_BytesReader:reader];
      while (YES) {
        [queue addWithId:[((OrgApacheLuceneUtilFstFST_Arc *) [new_OrgApacheLuceneUtilFstFST_Arc_init() autorelease]) copyFromWithOrgApacheLuceneUtilFstFST_Arc:arc]];
        if ([arc isLast]) {
          break;
        }
        else {
          [fst readNextRealArcWithOrgApacheLuceneUtilFstFST_Arc:arc withOrgApacheLuceneUtilFstFST_BytesReader:reader];
        }
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTTermsReader)

@implementation OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTTermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader *)outer$
                                withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                               withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg
                                                         withLong:(jlong)numTerms
                                                         withLong:(jlong)sumTotalTermFreq
                                                         withLong:(jlong)sumDocFreq
                                                          withInt:(jint)docCount
                                                          withInt:(jint)longsSize {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneStoreIndexInput_withLong_withLong_withLong_withInt_withInt_(self, outer$, fieldInfo, inArg, numTerms, sumTotalTermFreq, sumDocFreq, docCount, longsSize);
  return self;
}

- (jlong)ramBytesUsed {
  jlong bytesUsed = JreLoadStatic(OrgApacheLuceneCodecsMemoryFSTTermsReader, BASE_RAM_BYTES_USED_);
  if (dict_ != nil) {
    bytesUsed += [dict_ ramBytesUsed];
  }
  return bytesUsed;
}

- (id<JavaUtilCollection>)getChildResources {
  if (dict_ == nil) {
    return JavaUtilCollections_emptyList();
  }
  else {
    return JavaUtilCollections_singletonListWithId_(OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withOrgApacheLuceneUtilAccountable_(@"terms", dict_));
  }
}

- (NSString *)description {
  return JreStrcat("$J$J$J$IC", @"FSTTerms(terms=", numTerms_, @",postings=", sumDocFreq_, @",positions=", sumTotalTermFreq_, @",docs=", docCount_, ')');
}

- (jboolean)hasFreqs {
  return [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo_)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS)] >= 0;
}

- (jboolean)hasOffsets {
  return [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo_)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS)] >= 0;
}

- (jboolean)hasPositions {
  return [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo_)) getIndexOptions])) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)] >= 0;
}

- (jboolean)hasPayloads {
  return [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo_)) hasPayloads];
}

- (jlong)size {
  return numTerms_;
}

- (jlong)getSumTotalTermFreq {
  return sumTotalTermFreq_;
}

- (jlong)getSumDocFreq {
  return sumDocFreq_;
}

- (jint)getDocCount {
  return docCount_;
}

- (OrgApacheLuceneIndexTermsEnum *)iterator {
  return [new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(self) autorelease];
}

- (OrgApacheLuceneIndexTermsEnum *)intersectWithOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)compiled
                                                              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)startTerm {
  return [new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(self, compiled, startTerm) autorelease];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(fieldInfo_);
  RELEASE_(dict_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryFSTTermsReader:withOrgApacheLuceneIndexFieldInfo:withOrgApacheLuceneStoreIndexInput:withLong:withLong:withLong:withInt:withInt:", "TermsReader", NULL, 0x0, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "hasFreqs", NULL, "Z", 0x1, NULL, NULL },
    { "hasOffsets", NULL, "Z", 0x1, NULL, NULL },
    { "hasPositions", NULL, "Z", 0x1, NULL, NULL },
    { "hasPayloads", NULL, "Z", 0x1, NULL, NULL },
    { "size", NULL, "J", 0x1, NULL, NULL },
    { "getSumTotalTermFreq", NULL, "J", 0x1, NULL, NULL },
    { "getSumDocFreq", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "getDocCount", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "iterator", NULL, "Lorg.apache.lucene.index.TermsEnum;", 0x1, "Ljava.io.IOException;", NULL },
    { "intersectWithOrgApacheLuceneUtilAutomatonCompiledAutomaton:withOrgApacheLuceneUtilBytesRef:", "intersect", "Lorg.apache.lucene.index.TermsEnum;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.FSTTermsReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldInfo_", NULL, 0x10, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "numTerms_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "sumTotalTermFreq_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "sumDocFreq_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "docCount_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "longsSize_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "dict_", NULL, 0x10, "Lorg.apache.lucene.util.fst.FST;", NULL, "Lorg/apache/lucene/util/fst/FST<Lorg/apache/lucene/codecs/memory/FSTTermOutputs$TermData;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$BaseTermsEnum;", "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$SegmentTermsEnum;", "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader = { 2, "TermsReader", "org.apache.lucene.codecs.memory", "FSTTermsReader", 0x10, 14, methods, 8, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader;
}

@end

void OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneStoreIndexInput_withLong_withLong_withLong_withInt_withInt_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *self, OrgApacheLuceneCodecsMemoryFSTTermsReader *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneStoreIndexInput *inArg, jlong numTerms, jlong sumTotalTermFreq, jlong sumDocFreq, jint docCount, jint longsSize) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexTerms_init(self);
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  self->numTerms_ = numTerms;
  self->sumTotalTermFreq_ = sumTotalTermFreq;
  self->sumDocFreq_ = sumDocFreq;
  self->docCount_ = docCount;
  self->longsSize_ = longsSize;
  JreStrongAssignAndConsume(&self->dict_, new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_(inArg, [new_OrgApacheLuceneCodecsMemoryFSTTermOutputs_initWithOrgApacheLuceneIndexFieldInfo_withInt_(fieldInfo, longsSize) autorelease]));
}

OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneStoreIndexInput_withLong_withLong_withLong_withInt_withInt_(OrgApacheLuceneCodecsMemoryFSTTermsReader *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneStoreIndexInput *inArg, jlong numTerms, jlong sumTotalTermFreq, jlong sumDocFreq, jint docCount, jint longsSize) {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *self = [OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader alloc];
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneStoreIndexInput_withLong_withLong_withLong_withInt_withInt_(self, outer$, fieldInfo, inArg, numTerms, sumTotalTermFreq, sumDocFreq, docCount, longsSize);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader)

@implementation OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum

- (void)decodeMetaData {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)outer$ {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(self, outer$);
  return self;
}

- (OrgApacheLuceneIndexTermState *)termState {
  [self decodeMetaData];
  return [((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state_)) clone];
}

- (jint)docFreq {
  return ((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state_))->docFreq_;
}

- (jlong)totalTermFreq {
  return ((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state_))->totalTermFreq_;
}

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags {
  [self decodeMetaData];
  return [((OrgApacheLuceneCodecsPostingsReaderBase *) nil_chk(this$0_->this$0_->postingsReader_)) postingsWithOrgApacheLuceneIndexFieldInfo:this$0_->fieldInfo_ withOrgApacheLuceneCodecsBlockTermState:state_ withOrgApacheLuceneIndexPostingsEnum:reuse withInt:flags];
}

- (void)seekExactWithLong:(jlong)ord {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (jlong)ord {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(state_);
  RELEASE_(meta_);
  RELEASE_(bytesReader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "decodeMetaData", NULL, "V", 0x400, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:", "BaseTermsEnum", NULL, 0x0, NULL, NULL },
    { "termState", NULL, "Lorg.apache.lucene.index.TermState;", 0x1, "Ljava.io.IOException;", NULL },
    { "docFreq", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "totalTermFreq", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "postingsWithOrgApacheLuceneIndexPostingsEnum:withInt:", "postings", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, "Ljava.io.IOException;", NULL },
    { "seekExactWithLong:", "seekExact", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "ord", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x10, "Lorg.apache.lucene.codecs.BlockTermState;", NULL, NULL, .constantValue.asLong = 0 },
    { "meta_", NULL, 0x0, "Lorg.apache.lucene.codecs.memory.FSTTermOutputs$TermData;", NULL, NULL, .constantValue.asLong = 0 },
    { "bytesReader_", NULL, 0x0, "Lorg.apache.lucene.store.ByteArrayDataInput;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum = { 2, "BaseTermsEnum", "org.apache.lucene.codecs.memory", "FSTTermsReader$TermsReader", 0x400, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum *self, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexTermsEnum_init(self);
  JreStrongAssign(&self->state_, [((OrgApacheLuceneCodecsPostingsReaderBase *) nil_chk(outer$->this$0_->postingsReader_)) newTermState]);
  JreStrongAssignAndConsume(&self->bytesReader_, new_OrgApacheLuceneStoreByteArrayDataInput_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum)

@implementation OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)outer$ {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(self, outer$);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)term {
  return term_;
}

- (void)decodeMetaData {
  if (!decoded_ && !seekPending_) {
    if (((OrgApacheLuceneCodecsMemoryFSTTermOutputs_TermData *) nil_chk(meta_))->bytes_ != nil) {
      [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(bytesReader_)) resetWithByteArray:meta_->bytes_ withInt:0 withInt:meta_->bytes_->size_];
    }
    [((OrgApacheLuceneCodecsPostingsReaderBase *) nil_chk(this$1_->this$0_->postingsReader_)) decodeTermWithLongArray:meta_->longs_ withOrgApacheLuceneStoreDataInput:bytesReader_ withOrgApacheLuceneIndexFieldInfo:this$1_->fieldInfo_ withOrgApacheLuceneCodecsBlockTermState:state_ withBoolean:YES];
    decoded_ = YES;
  }
}

- (void)updateEnumWithOrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput:(OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *)pair {
  if (pair == nil) {
    JreStrongAssign(&term_, nil);
  }
  else {
    JreStrongAssign(&term_, pair->input_);
    JreStrongAssign(&meta_, pair->output_);
    ((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state_))->docFreq_ = ((OrgApacheLuceneCodecsMemoryFSTTermOutputs_TermData *) nil_chk(meta_))->docFreq_;
    state_->totalTermFreq_ = meta_->totalTermFreq_;
  }
  decoded_ = NO;
  seekPending_ = NO;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if (seekPending_) {
    seekPending_ = NO;
    OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *status = [self seekCeilWithOrgApacheLuceneUtilBytesRef:term_];
    JreAssert((status == JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND)), (@"org/apache/lucene/codecs/memory/FSTTermsReader.java:365 condition failed: assert status == SeekStatus.FOUND;"));
  }
  [self updateEnumWithOrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput:[((OrgApacheLuceneUtilFstBytesRefFSTEnum *) nil_chk(fstEnum_)) next]];
  return term_;
}

- (jboolean)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target {
  [self updateEnumWithOrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput:[((OrgApacheLuceneUtilFstBytesRefFSTEnum *) nil_chk(fstEnum_)) seekExactWithOrgApacheLuceneUtilBytesRef:target]];
  return term_ != nil;
}

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target {
  [self updateEnumWithOrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput:[((OrgApacheLuceneUtilFstBytesRefFSTEnum *) nil_chk(fstEnum_)) seekCeilWithOrgApacheLuceneUtilBytesRef:target]];
  if (term_ == nil) {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END);
  }
  else {
    return [term_ isEqual:target] ? JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND) : JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, NOT_FOUND);
  }
}

- (void)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target
               withOrgApacheLuceneIndexTermState:(OrgApacheLuceneIndexTermState *)otherState {
  if (![((OrgApacheLuceneUtilBytesRef *) nil_chk(target)) isEqual:term_]) {
    [((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state_)) copyFromWithOrgApacheLuceneIndexTermState:otherState];
    JreStrongAssign(&term_, OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(target));
    seekPending_ = YES;
  }
}

- (void)dealloc {
  RELEASE_(this$1_);
  RELEASE_(term_);
  RELEASE_(fstEnum_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:", "SegmentTermsEnum", NULL, 0x0, NULL, NULL },
    { "term", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "decodeMetaData", NULL, "V", 0x0, "Ljava.io.IOException;", NULL },
    { "updateEnumWithOrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput:", "updateEnum", "V", 0x0, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "seekExactWithOrgApacheLuceneUtilBytesRef:", "seekExact", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "seekCeilWithOrgApacheLuceneUtilBytesRef:", "seekCeil", "Lorg.apache.lucene.index.TermsEnum$SeekStatus;", 0x1, "Ljava.io.IOException;", NULL },
    { "seekExactWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneIndexTermState:", "seekExact", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "term_", NULL, 0x0, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "fstEnum_", NULL, 0x10, "Lorg.apache.lucene.util.fst.BytesRefFSTEnum;", NULL, "Lorg/apache/lucene/util/fst/BytesRefFSTEnum<Lorg/apache/lucene/codecs/memory/FSTTermOutputs$TermData;>;", .constantValue.asLong = 0 },
    { "decoded_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "seekPending_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum = { 2, "SegmentTermsEnum", "org.apache.lucene.codecs.memory", "FSTTermsReader$TermsReader", 0x12, 8, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum *self, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *outer$) {
  JreStrongAssign(&self->this$1_, outer$);
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(self, outer$);
  JreStrongAssignAndConsume(&self->fstEnum_, new_OrgApacheLuceneUtilFstBytesRefFSTEnum_initWithOrgApacheLuceneUtilFstFST_(outer$->dict_));
  self->decoded_ = NO;
  self->seekPending_ = NO;
  JreStrongAssign(&self->meta_, nil);
}

OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum *new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *outer$) {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum *self = [OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum alloc];
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_SegmentTermsEnum)

@implementation OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *)outer$
                            withOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)compiled
                                              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)startTerm {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(self, outer$, compiled, startTerm);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)term {
  return term_ == nil ? nil : [term_ get];
}

- (void)decodeMetaData {
  JreAssert((term_ != nil), (@"org/apache/lucene/codecs/memory/FSTTermsReader.java:482 condition failed: assert term != null;"));
  if (!decoded_) {
    if (((OrgApacheLuceneCodecsMemoryFSTTermOutputs_TermData *) nil_chk(meta_))->bytes_ != nil) {
      [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(bytesReader_)) resetWithByteArray:meta_->bytes_ withInt:0 withInt:meta_->bytes_->size_];
    }
    [((OrgApacheLuceneCodecsPostingsReaderBase *) nil_chk(this$1_->this$0_->postingsReader_)) decodeTermWithLongArray:meta_->longs_ withOrgApacheLuceneStoreDataInput:bytesReader_ withOrgApacheLuceneIndexFieldInfo:this$1_->fieldInfo_ withOrgApacheLuceneCodecsBlockTermState:state_ withBoolean:YES];
    decoded_ = YES;
  }
}

- (void)loadMetaData {
  OrgApacheLuceneUtilFstFST_Arc *last, *next;
  last = ((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(IOSObjectArray_Get(nil_chk(stack_), metaUpto_)))->fstArc_;
  while (metaUpto_ != level_) {
    metaUpto_++;
    next = ((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(IOSObjectArray_Get(stack_, metaUpto_)))->fstArc_;
    JreStrongAssign(&((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(next))->output_, [((OrgApacheLuceneUtilFstOutputs *) nil_chk(fstOutputs_)) addWithId:next->output_ withId:((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(last))->output_]);
    last = next;
  }
  if ([((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(last)) isFinal]) {
    JreStrongAssign(&meta_, [((OrgApacheLuceneUtilFstOutputs *) nil_chk(fstOutputs_)) addWithId:last->output_ withId:last->nextFinalOutput_]);
  }
  else {
    JreStrongAssign(&meta_, last->output_);
  }
  ((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state_))->docFreq_ = ((OrgApacheLuceneCodecsMemoryFSTTermOutputs_TermData *) nil_chk(meta_))->docFreq_;
  state_->totalTermFreq_ = meta_->totalTermFreq_;
}

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target {
  decoded_ = NO;
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_doSeekCeilWithOrgApacheLuceneUtilBytesRef_(self, target);
  [self loadMetaData];
  if (term_ == nil) {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END);
  }
  else {
    return [term_ isEqual:target] ? JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND) : JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, NOT_FOUND);
  }
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if (pending_) {
    pending_ = NO;
    [self loadMetaData];
    return [self term];
  }
  decoded_ = NO;
  while (level_ > 0) {
    {
      OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *frame = [self newFrame];
      if ([self loadExpandFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:[self topFrame] withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame] != nil) {
        [self pushFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame];
        if ([self isAcceptWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame]) {
          break;
        }
        continue;
      }
      frame = [self popFrame];
      while (level_ > 0) {
        if ([self loadNextFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:[self topFrame] withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame] != nil) {
          [self pushFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame];
          if ([self isAcceptWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame]) {
            goto break_DFS;
          }
          goto continue_DFS;
        }
        frame = [self popFrame];
      }
      return nil;
    }
    continue_DFS: ;
  }
  break_DFS: ;
  [self loadMetaData];
  return [self term];
}

- (OrgApacheLuceneUtilBytesRef *)doSeekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target {
  return OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_doSeekCeilWithOrgApacheLuceneUtilBytesRef_(self, target);
}

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadVirtualFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  JreStrongAssign(&((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fstArc_))->output_, [((OrgApacheLuceneUtilFstOutputs *) nil_chk(fstOutputs_)) getNoOutput]);
  JreStrongAssign(&frame->fstArc_->nextFinalOutput_, [fstOutputs_ getNoOutput]);
  frame->fsaState_ = -1;
  return frame;
}

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadFirstFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  JreStrongAssign(&((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fstArc_, [((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) getFirstArcWithOrgApacheLuceneUtilFstFST_Arc:frame->fstArc_]);
  frame->fsaState_ = [((OrgApacheLuceneUtilAutomatonByteRunAutomaton *) nil_chk(fsa_)) getInitialState];
  return frame;
}

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadExpandFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)top
                                                                                                   withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  if (![self canGrowWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:top]) {
    return nil;
  }
  JreStrongAssign(&((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fstArc_, [((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) readFirstRealTargetArcWithLong:((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(top))->fstArc_))->target_ withOrgApacheLuceneUtilFstFST_Arc:frame->fstArc_ withOrgApacheLuceneUtilFstFST_BytesReader:fstReader_]);
  frame->fsaState_ = [((OrgApacheLuceneUtilAutomatonByteRunAutomaton *) nil_chk(fsa_)) stepWithInt:top->fsaState_ withInt:((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(frame->fstArc_))->label_];
  if (frame->fsaState_ == -1) {
    return [self loadNextFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:top withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame];
  }
  return frame;
}

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadNextFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)top
                                                                                                 withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  if (![self canRewindWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame]) {
    return nil;
  }
  while (![((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fstArc_)) isLast]) {
    JreStrongAssign(&frame->fstArc_, [((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) readNextRealArcWithOrgApacheLuceneUtilFstFST_Arc:frame->fstArc_ withOrgApacheLuceneUtilFstFST_BytesReader:fstReader_]);
    frame->fsaState_ = [((OrgApacheLuceneUtilAutomatonByteRunAutomaton *) nil_chk(fsa_)) stepWithInt:((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(top))->fsaState_ withInt:((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(frame->fstArc_))->label_];
    if (frame->fsaState_ != -1) {
      break;
    }
  }
  if (frame->fsaState_ == -1) {
    return nil;
  }
  return frame;
}

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)loadCeilFrameWithInt:(jint)label
                      withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)top
                      withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  OrgApacheLuceneUtilFstFST_Arc *arc = ((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fstArc_;
  arc = OrgApacheLuceneUtilFstUtil_readCeilArcWithInt_withOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilFstFST_Arc_withOrgApacheLuceneUtilFstFST_Arc_withOrgApacheLuceneUtilFstFST_BytesReader_(label, fst_, ((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(top))->fstArc_, arc, fstReader_);
  if (arc == nil) {
    return nil;
  }
  frame->fsaState_ = [((OrgApacheLuceneUtilAutomatonByteRunAutomaton *) nil_chk(fsa_)) stepWithInt:top->fsaState_ withInt:((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(arc))->label_];
  if (frame->fsaState_ == -1) {
    return [self loadNextFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:top withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame];
  }
  return frame;
}

- (jboolean)isAcceptWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  return [((OrgApacheLuceneUtilAutomatonByteRunAutomaton *) nil_chk(fsa_)) isAcceptWithInt:((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fsaState_] && [((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(frame->fstArc_)) isFinal];
}

- (jboolean)isValidWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  return ((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fsaState_ != -1;
}

- (jboolean)canGrowWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  return ((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fsaState_ != -1 && OrgApacheLuceneUtilFstFST_targetHasArcsWithOrgApacheLuceneUtilFstFST_Arc_(frame->fstArc_);
}

- (jboolean)canRewindWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  return ![((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fstArc_)) isLast];
}

- (void)pushFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)frame {
  JreStrongAssign(&term_, [self growWithInt:((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(((OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *) nil_chk(frame))->fstArc_))->label_]);
  level_++;
}

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)popFrame {
  JreStrongAssign(&term_, [self shrink]);
  level_--;
  metaUpto_ = metaUpto_ > level_ ? level_ : metaUpto_;
  return IOSObjectArray_Get(nil_chk(stack_), level_ + 1);
}

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)newFrame {
  if (level_ + 1 == ((IOSObjectArray *) nil_chk(stack_))->size_) {
    IOSObjectArray *temp = [IOSObjectArray arrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(level_ + 2, JreLoadStatic(OrgApacheLuceneUtilRamUsageEstimator, NUM_BYTES_OBJECT_REF_)) type:OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(stack_, 0, temp, 0, stack_->size_);
    for (jint i = stack_->size_; i < temp->size_; i++) {
      IOSObjectArray_SetAndConsume(temp, i, new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_(self));
    }
    JreStrongAssign(&stack_, temp);
  }
  return IOSObjectArray_Get(stack_, level_ + 1);
}

- (OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *)topFrame {
  return IOSObjectArray_Get(nil_chk(stack_), level_);
}

- (OrgApacheLuceneUtilBytesRefBuilder *)growWithInt:(jint)label {
  if (term_ == nil) {
    JreStrongAssignAndConsume(&term_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  }
  else {
    [term_ appendWithByte:(jbyte) label];
  }
  return term_;
}

- (OrgApacheLuceneUtilBytesRefBuilder *)shrink {
  if ([((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(term_)) length] == 0) {
    JreStrongAssign(&term_, nil);
  }
  else {
    [term_ setLengthWithInt:[term_ length] - 1];
  }
  return term_;
}

- (void)dealloc {
  RELEASE_(this$1_);
  RELEASE_(term_);
  RELEASE_(stack_);
  RELEASE_(fst_);
  RELEASE_(fstReader_);
  RELEASE_(fstOutputs_);
  RELEASE_(fsa_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader:withOrgApacheLuceneUtilAutomatonCompiledAutomaton:withOrgApacheLuceneUtilBytesRef:", "IntersectTermsEnum", NULL, 0x0, NULL, NULL },
    { "term", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "decodeMetaData", NULL, "V", 0x0, "Ljava.io.IOException;", NULL },
    { "loadMetaData", NULL, "V", 0x0, "Ljava.io.IOException;", NULL },
    { "seekCeilWithOrgApacheLuceneUtilBytesRef:", "seekCeil", "Lorg.apache.lucene.index.TermsEnum$SeekStatus;", 0x1, "Ljava.io.IOException;", NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "doSeekCeilWithOrgApacheLuceneUtilBytesRef:", "doSeekCeil", "Lorg.apache.lucene.util.BytesRef;", 0x2, "Ljava.io.IOException;", NULL },
    { "loadVirtualFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "loadVirtualFrame", "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;", 0x0, "Ljava.io.IOException;", NULL },
    { "loadFirstFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "loadFirstFrame", "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;", 0x0, "Ljava.io.IOException;", NULL },
    { "loadExpandFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "loadExpandFrame", "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;", 0x0, "Ljava.io.IOException;", NULL },
    { "loadNextFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "loadNextFrame", "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;", 0x0, "Ljava.io.IOException;", NULL },
    { "loadCeilFrameWithInt:withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "loadCeilFrame", "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;", 0x0, "Ljava.io.IOException;", NULL },
    { "isAcceptWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "isAccept", "Z", 0x0, NULL, NULL },
    { "isValidWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "isValid", "Z", 0x0, NULL, NULL },
    { "canGrowWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "canGrow", "Z", 0x0, NULL, NULL },
    { "canRewindWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "canRewind", "Z", 0x0, NULL, NULL },
    { "pushFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:", "pushFrame", "V", 0x0, NULL, NULL },
    { "popFrame", NULL, "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;", 0x0, NULL, NULL },
    { "newFrame", NULL, "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;", 0x0, NULL, NULL },
    { "topFrame", NULL, "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;", 0x0, NULL, NULL },
    { "growWithInt:", "grow", "Lorg.apache.lucene.util.BytesRefBuilder;", 0x0, NULL, NULL },
    { "shrink", NULL, "Lorg.apache.lucene.util.BytesRefBuilder;", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "term_", NULL, 0x0, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "decoded_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "pending_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "stack_", NULL, 0x0, "[Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;", NULL, NULL, .constantValue.asLong = 0 },
    { "level_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "metaUpto_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fst_", NULL, 0x10, "Lorg.apache.lucene.util.fst.FST;", NULL, "Lorg/apache/lucene/util/fst/FST<Lorg/apache/lucene/codecs/memory/FSTTermOutputs$TermData;>;", .constantValue.asLong = 0 },
    { "fstReader_", NULL, 0x10, "Lorg.apache.lucene.util.fst.FST$BytesReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "fstOutputs_", NULL, 0x10, "Lorg.apache.lucene.util.fst.Outputs;", NULL, "Lorg/apache/lucene/util/fst/Outputs<Lorg/apache/lucene/codecs/memory/FSTTermOutputs$TermData;>;", .constantValue.asLong = 0 },
    { "fsa_", NULL, 0x10, "Lorg.apache.lucene.util.automaton.ByteRunAutomaton;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum = { 2, "IntersectTermsEnum", "org.apache.lucene.codecs.memory", "FSTTermsReader$TermsReader", 0x12, 22, methods, 11, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum;
}

@end

void OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *self, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *outer$, OrgApacheLuceneUtilAutomatonCompiledAutomaton *compiled, OrgApacheLuceneUtilBytesRef *startTerm) {
  JreStrongAssign(&self->this$1_, outer$);
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_BaseTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_(self, outer$);
  JreStrongAssign(&self->fst_, outer$->dict_);
  JreStrongAssign(&self->fstReader_, [((OrgApacheLuceneUtilFstFST *) nil_chk(self->fst_)) getBytesReader]);
  JreStrongAssign(&self->fstOutputs_, ((OrgApacheLuceneUtilFstFST *) nil_chk(outer$->dict_))->outputs_);
  JreStrongAssign(&self->fsa_, ((OrgApacheLuceneUtilAutomatonCompiledAutomaton *) nil_chk(compiled))->runAutomaton_);
  self->level_ = -1;
  JreStrongAssignAndConsume(&self->stack_, [IOSObjectArray newArrayWithLength:16 type:OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_class_()]);
  for (jint i = 0; i < self->stack_->size_; i++) {
    IOSObjectArray_SetAndConsume(self->stack_, i, new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_(self));
  }
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *frame;
  frame = [self loadVirtualFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:[self newFrame]];
  self->level_++;
  frame = [self loadFirstFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:[self newFrame]];
  [self pushFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame];
  JreStrongAssign(&self->meta_, nil);
  self->metaUpto_ = 1;
  self->decoded_ = NO;
  self->pending_ = NO;
  if (startTerm == nil) {
    self->pending_ = [self isAcceptWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:[self topFrame]];
  }
  else {
    OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_doSeekCeilWithOrgApacheLuceneUtilBytesRef_(self, startTerm);
    self->pending_ = ((self->term_ == nil || ![startTerm isEqual:[self->term_ get]]) && [self isValidWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:[self topFrame]] && [self isAcceptWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:[self topFrame]]);
  }
}

OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader *outer$, OrgApacheLuceneUtilAutomatonCompiledAutomaton *compiled, OrgApacheLuceneUtilBytesRef *startTerm) {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *self = [OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum alloc];
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_withOrgApacheLuceneUtilBytesRef_(self, outer$, compiled, startTerm);
  return self;
}

OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_doSeekCeilWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *self, OrgApacheLuceneUtilBytesRef *target) {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *frame = nil;
  jint label, upto = 0, limit = ((OrgApacheLuceneUtilBytesRef *) nil_chk(target))->length_;
  while (upto < limit) {
    frame = [self newFrame];
    label = IOSByteArray_Get(nil_chk(target->bytes_), upto) & (jint) 0xff;
    frame = [self loadCeilFrameWithInt:label withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:[self topFrame] withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame];
    if (frame == nil || ((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(frame->fstArc_))->label_ != label) {
      break;
    }
    JreAssert(([self isValidWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame]), (@"org/apache/lucene/codecs/memory/FSTTermsReader.java:570 condition failed: assert isValid(frame);"));
    [self pushFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame];
    upto++;
  }
  if (upto == limit) {
    return [self term];
  }
  if (frame != nil) {
    [self pushFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame];
    return [self isAcceptWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame] ? [self term] : [self next];
  }
  while (self->level_ > 0) {
    frame = [self popFrame];
    while (self->level_ > 0 && ![self canRewindWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame]) {
      frame = [self popFrame];
    }
    if ([self loadNextFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:[self topFrame] withOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame] != nil) {
      [self pushFrameWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame];
      return [self isAcceptWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame:frame] ? [self term] : [self next];
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum)

@implementation OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame

- (instancetype)initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum:(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *)outer$ {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_(self, outer$);
  return self;
}

- (NSString *)description {
  return JreStrcat("$@$I", @"arc=", fstArc_, @" state=", fsaState_);
}

- (void)dealloc {
  RELEASE_(fstArc_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum:", "Frame", NULL, 0x0, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fstArc_", NULL, 0x0, "Lorg.apache.lucene.util.fst.FST$Arc;", NULL, "Lorg/apache/lucene/util/fst/FST$Arc<Lorg/apache/lucene/codecs/memory/FSTTermOutputs$TermData;>;", .constantValue.asLong = 0 },
    { "fsaState_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame = { 2, "Frame", "org.apache.lucene.codecs.memory", "FSTTermsReader$TermsReader$IntersectTermsEnum", 0x12, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame;
}

@end

void OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *self, OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *outer$) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->fstArc_, new_OrgApacheLuceneUtilFstFST_Arc_init());
  self->fsaState_ = -1;
}

OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *new_OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum *outer$) {
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame *self = [OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame alloc];
  OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame_initWithOrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsMemoryFSTTermsReader_TermsReader_IntersectTermsEnum_Frame)
