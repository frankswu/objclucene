//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/PushPostingsWriterBase.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "org/apache/lucene/codecs/BlockTermState.h"
#include "org/apache/lucene/codecs/PostingsWriterBase.h"
#include "org/apache/lucene/codecs/PushPostingsWriterBase.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/FixedBitSet.h"

@interface OrgApacheLuceneCodecsPushPostingsWriterBase () {
 @public
  OrgApacheLuceneIndexPostingsEnum *postingsEnum_;
  jint enumFlags_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsPushPostingsWriterBase, postingsEnum_, OrgApacheLuceneIndexPostingsEnum *)

@implementation OrgApacheLuceneCodecsPushPostingsWriterBase

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneCodecsPushPostingsWriterBase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneCodecsBlockTermState *)newTermState {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)startTerm {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)finishTermWithOrgApacheLuceneCodecsBlockTermState:(OrgApacheLuceneCodecsBlockTermState *)state {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jint)setFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo {
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  JreStrongAssign(&indexOptions_, [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) getIndexOptions]);
  writeFreqs_ = ([((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk(indexOptions_)) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS)] >= 0);
  writePositions_ = ([indexOptions_ compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)] >= 0);
  writeOffsets_ = ([indexOptions_ compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS)] >= 0);
  writePayloads_ = [fieldInfo hasPayloads];
  if (writeFreqs_ == false) {
    enumFlags_ = 0;
  }
  else if (writePositions_ == false) {
    enumFlags_ = OrgApacheLuceneIndexPostingsEnum_FREQS;
  }
  else if (writeOffsets_ == false) {
    if (writePayloads_) {
      enumFlags_ = OrgApacheLuceneIndexPostingsEnum_PAYLOADS;
    }
    else {
      enumFlags_ = OrgApacheLuceneIndexPostingsEnum_POSITIONS;
    }
  }
  else {
    if (writePayloads_) {
      enumFlags_ = OrgApacheLuceneIndexPostingsEnum_PAYLOADS | OrgApacheLuceneIndexPostingsEnum_OFFSETS;
    }
    else {
      enumFlags_ = OrgApacheLuceneIndexPostingsEnum_OFFSETS;
    }
  }
  return 0;
}

- (OrgApacheLuceneCodecsBlockTermState *)writeTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term
                                                withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum
                                               withOrgApacheLuceneUtilFixedBitSet:(OrgApacheLuceneUtilFixedBitSet *)docsSeen {
  [self startTerm];
  JreStrongAssign(&postingsEnum_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) postingsWithOrgApacheLuceneIndexPostingsEnum:postingsEnum_ withInt:enumFlags_]);
  JreAssert((postingsEnum_ != nil), (@"org/apache/lucene/codecs/PushPostingsWriterBase.java:123 condition failed: assert postingsEnum != null;"));
  jint docFreq = 0;
  jlong totalTermFreq = 0;
  while (true) {
    jint docID = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum_)) nextDoc];
    if (docID == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      break;
    }
    docFreq++;
    [((OrgApacheLuceneUtilFixedBitSet *) nil_chk(docsSeen)) setWithInt:docID];
    jint freq;
    if (writeFreqs_) {
      freq = [postingsEnum_ freq];
      totalTermFreq += freq;
    }
    else {
      freq = -1;
    }
    [self startDocWithInt:docID withInt:freq];
    if (writePositions_) {
      for (jint i = 0; i < freq; i++) {
        jint pos = [postingsEnum_ nextPosition];
        OrgApacheLuceneUtilBytesRef *payload = writePayloads_ ? [postingsEnum_ getPayload] : nil;
        jint startOffset;
        jint endOffset;
        if (writeOffsets_) {
          startOffset = [postingsEnum_ startOffset];
          endOffset = [postingsEnum_ endOffset];
        }
        else {
          startOffset = -1;
          endOffset = -1;
        }
        [self addPositionWithInt:pos withOrgApacheLuceneUtilBytesRef:payload withInt:startOffset withInt:endOffset];
      }
    }
    [self finishDoc];
  }
  if (docFreq == 0) {
    return nil;
  }
  else {
    OrgApacheLuceneCodecsBlockTermState *state = [self newTermState];
    ((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state))->docFreq_ = docFreq;
    state->totalTermFreq_ = writeFreqs_ ? totalTermFreq : -1;
    [self finishTermWithOrgApacheLuceneCodecsBlockTermState:state];
    return state;
  }
}

- (void)startDocWithInt:(jint)docID
                withInt:(jint)freq {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)addPositionWithInt:(jint)position
withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload
                   withInt:(jint)startOffset
                   withInt:(jint)endOffset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)finishDoc {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(postingsEnum_);
  RELEASE_(fieldInfo_);
  RELEASE_(indexOptions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PushPostingsWriterBase", NULL, 0x4, NULL, NULL },
    { "newTermState", NULL, "Lorg.apache.lucene.codecs.BlockTermState;", 0x401, "Ljava.io.IOException;", NULL },
    { "startTerm", NULL, "V", 0x401, "Ljava.io.IOException;", NULL },
    { "finishTermWithOrgApacheLuceneCodecsBlockTermState:", "finishTerm", "V", 0x401, "Ljava.io.IOException;", NULL },
    { "setFieldWithOrgApacheLuceneIndexFieldInfo:", "setField", "I", 0x1, NULL, NULL },
    { "writeTermWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneIndexTermsEnum:withOrgApacheLuceneUtilFixedBitSet:", "writeTerm", "Lorg.apache.lucene.codecs.BlockTermState;", 0x11, "Ljava.io.IOException;", NULL },
    { "startDocWithInt:withInt:", "startDoc", "V", 0x401, "Ljava.io.IOException;", NULL },
    { "addPositionWithInt:withOrgApacheLuceneUtilBytesRef:withInt:withInt:", "addPosition", "V", 0x401, "Ljava.io.IOException;", NULL },
    { "finishDoc", NULL, "V", 0x401, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "postingsEnum_", NULL, 0x2, "Lorg.apache.lucene.index.PostingsEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "enumFlags_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldInfo_", NULL, 0x4, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "indexOptions_", NULL, 0x4, "Lorg.apache.lucene.index.IndexOptions;", NULL, NULL, .constantValue.asLong = 0 },
    { "writeFreqs_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "writePositions_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "writePayloads_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "writeOffsets_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsPushPostingsWriterBase = { 2, "PushPostingsWriterBase", "org.apache.lucene.codecs", NULL, 0x401, 9, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsPushPostingsWriterBase;
}

@end

void OrgApacheLuceneCodecsPushPostingsWriterBase_init(OrgApacheLuceneCodecsPushPostingsWriterBase *self) {
  OrgApacheLuceneCodecsPostingsWriterBase_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsPushPostingsWriterBase)
