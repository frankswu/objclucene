//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/blocktreeords/BlockTreeOrdsPostingsFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "org/apache/lucene/codecs/FieldsConsumer.h"
#include "org/apache/lucene/codecs/FieldsProducer.h"
#include "org/apache/lucene/codecs/PostingsFormat.h"
#include "org/apache/lucene/codecs/PostingsReaderBase.h"
#include "org/apache/lucene/codecs/PostingsWriterBase.h"
#include "org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.h"
#include "org/apache/lucene/codecs/blocktreeords/BlockTreeOrdsPostingsFormat.h"
#include "org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsReader.h"
#include "org/apache/lucene/codecs/blocktreeords/OrdsBlockTreeTermsWriter.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter.h"
#include "org/apache/lucene/index/SegmentReadState.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/util/IOUtils.h"

@interface OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat () {
 @public
  jint minTermBlockSize_;
  jint maxTermBlockSize_;
}

@end

@implementation OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat

- (instancetype)init {
  OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)minTermBlockSize
                    withInt:(jint)maxTermBlockSize {
  OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_initWithInt_withInt_(self, minTermBlockSize, maxTermBlockSize);
  return self;
}

- (NSString *)description {
  return JreStrcat("$$IC", [self getName], @"(blocksize=", OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_BLOCK_SIZE, ')');
}

- (OrgApacheLuceneCodecsFieldsConsumer *)fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state {
  OrgApacheLuceneCodecsPostingsWriterBase *postingsWriter = [new_OrgApacheLuceneCodecsLucene50Lucene50PostingsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_(state) autorelease];
  jboolean success = NO;
  @try {
    OrgApacheLuceneCodecsFieldsConsumer *ret = [new_OrgApacheLuceneCodecsBlocktreeordsOrdsBlockTreeTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_withInt_withInt_(state, postingsWriter, minTermBlockSize_, maxTermBlockSize_) autorelease];
    success = YES;
    return ret;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ postingsWriter } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

- (OrgApacheLuceneCodecsFieldsProducer *)fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state {
  OrgApacheLuceneCodecsPostingsReaderBase *postingsReader = [new_OrgApacheLuceneCodecsLucene50Lucene50PostingsReader_initWithOrgApacheLuceneIndexSegmentReadState_(state) autorelease];
  jboolean success = NO;
  @try {
    OrgApacheLuceneCodecsFieldsProducer *ret = [new_OrgApacheLuceneCodecsBlocktreeordsOrdsBlockTreeTermsReader_initWithOrgApacheLuceneCodecsPostingsReaderBase_withOrgApacheLuceneIndexSegmentReadState_(postingsReader, state) autorelease];
    success = YES;
    return ret;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ postingsReader } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BlockTreeOrdsPostingsFormat", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:", "BlockTreeOrdsPostingsFormat", NULL, 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:", "fieldsConsumer", "Lorg.apache.lucene.codecs.FieldsConsumer;", 0x1, "Ljava.io.IOException;", NULL },
    { "fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:", "fieldsProducer", "Lorg.apache.lucene.codecs.FieldsProducer;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "minTermBlockSize_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxTermBlockSize_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "BLOCK_SIZE", "BLOCK_SIZE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_BLOCK_SIZE },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat = { 2, "BlockTreeOrdsPostingsFormat", "org.apache.lucene.codecs.blocktreeords", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat;
}

@end

void OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_init(OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat *self) {
  OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_initWithInt_withInt_(self, OrgApacheLuceneCodecsBlocktreeordsOrdsBlockTreeTermsWriter_DEFAULT_MIN_BLOCK_SIZE, OrgApacheLuceneCodecsBlocktreeordsOrdsBlockTreeTermsWriter_DEFAULT_MAX_BLOCK_SIZE);
}

OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat *new_OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_init() {
  OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat *self = [OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat alloc];
  OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_init(self);
  return self;
}

void OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_initWithInt_withInt_(OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat *self, jint minTermBlockSize, jint maxTermBlockSize) {
  OrgApacheLuceneCodecsPostingsFormat_initWithNSString_(self, @"BlockTreeOrds");
  self->minTermBlockSize_ = minTermBlockSize;
  self->maxTermBlockSize_ = maxTermBlockSize;
  OrgApacheLuceneCodecsBlocktreeBlockTreeTermsWriter_validateSettingsWithInt_withInt_(minTermBlockSize, maxTermBlockSize);
}

OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat *new_OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_initWithInt_withInt_(jint minTermBlockSize, jint maxTermBlockSize) {
  OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat *self = [OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat alloc];
  OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat_initWithInt_withInt_(self, minTermBlockSize, maxTermBlockSize);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsBlocktreeordsBlockTreeOrdsPostingsFormat)
