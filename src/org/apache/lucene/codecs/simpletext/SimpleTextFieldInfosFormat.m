//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/codecs/FieldInfosFormat.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextUtil.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/store/ChecksumIndexInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/StringHelper.h"
#include "org/lukhnos/portmobile/charset/StandardCharsets.h"

@interface OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat ()

- (NSString *)readStringWithInt:(jint)offset
withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)scratch;

+ (NSString *)getDocValuesTypeWithOrgApacheLuceneIndexDocValuesTypeEnum:(OrgApacheLuceneIndexDocValuesTypeEnum *)type;

@end

__attribute__((unused)) static NSString *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat *self, jint offset, OrgApacheLuceneUtilBytesRefBuilder *scratch);

__attribute__((unused)) static NSString *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_getDocValuesTypeWithOrgApacheLuceneIndexDocValuesTypeEnum_(OrgApacheLuceneIndexDocValuesTypeEnum *type);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat)

NSString *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_FIELD_INFOS_EXTENSION_ = @"inf";
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMFIELDS_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NAME_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMBER_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETV_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETVPOS_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETVOFF_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_PAYLOADS_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NORMS_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_GEN_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_INDEXOPTIONS_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUM_ATTS_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_KEY_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_VALUE_;

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat

- (OrgApacheLuceneIndexFieldInfos *)readWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)directory
                                      withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)segmentInfo
                                                             withNSString:(NSString *)segmentSuffix
                                        withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)iocontext {
  NSString *fileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(segmentInfo))->name_, segmentSuffix, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_FIELD_INFOS_EXTENSION_);
  OrgApacheLuceneStoreChecksumIndexInput *input = [((OrgApacheLuceneStoreDirectory *) nil_chk(directory)) openChecksumInputWithNSString:fileName withOrgApacheLuceneStoreIOContext:iocontext];
  OrgApacheLuceneUtilBytesRefBuilder *scratch = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
  jboolean success = NO;
  @try {
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
    JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMFIELDS_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:78 condition failed: assert StringHelper.startsWith(scratch.get(), NUMFIELDS);"));
    jint size = JavaLangInteger_parseIntWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMFIELDS_))->length_, scratch));
    IOSObjectArray *infos = [IOSObjectArray arrayWithLength:size type:OrgApacheLuceneIndexFieldInfo_class_()];
    for (jint i = 0; i < size; i++) {
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NAME_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:84 condition failed: assert StringHelper.startsWith(scratch.get(), NAME);"));
      NSString *name = OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NAME_))->length_, scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMBER_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:88 condition failed: assert StringHelper.startsWith(scratch.get(), NUMBER);"));
      jint fieldNumber = JavaLangInteger_parseIntWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMBER_))->length_, scratch));
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_INDEXOPTIONS_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:92 condition failed: assert StringHelper.startsWith(scratch.get(), INDEXOPTIONS);"));
      NSString *s = OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_INDEXOPTIONS_))->length_, scratch);
      OrgApacheLuceneIndexIndexOptionsEnum *indexOptions = OrgApacheLuceneIndexIndexOptionsEnum_valueOfWithNSString_(s);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETV_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:97 condition failed: assert StringHelper.startsWith(scratch.get(), STORETV);"));
      jboolean storeTermVector = JavaLangBoolean_parseBooleanWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETV_))->length_, scratch));
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_PAYLOADS_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:101 condition failed: assert StringHelper.startsWith(scratch.get(), PAYLOADS);"));
      jboolean storePayloads = JavaLangBoolean_parseBooleanWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_PAYLOADS_))->length_, scratch));
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NORMS_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:105 condition failed: assert StringHelper.startsWith(scratch.get(), NORMS);"));
      jboolean omitNorms = !JavaLangBoolean_parseBooleanWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NORMS_))->length_, scratch));
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:109 condition failed: assert StringHelper.startsWith(scratch.get(), DOCVALUES);"));
      NSString *dvType = OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_))->length_, scratch);
      OrgApacheLuceneIndexDocValuesTypeEnum *docValuesType = [self docValuesTypeWithNSString:dvType];
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_GEN_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:114 condition failed: assert StringHelper.startsWith(scratch.get(), DOCVALUES_GEN);"));
      jlong dvGen = JavaLangLong_parseLongWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_GEN_))->length_, scratch));
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUM_ATTS_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:118 condition failed: assert StringHelper.startsWith(scratch.get(), NUM_ATTS);"));
      jint numAtts = JavaLangInteger_parseIntWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUM_ATTS_))->length_, scratch));
      id<JavaUtilMap> atts = [new_JavaUtilHashMap_init() autorelease];
      for (jint j = 0; j < numAtts; j++) {
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
        JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_KEY_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:124 condition failed: assert StringHelper.startsWith(scratch.get(), ATT_KEY);"));
        NSString *key = OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_KEY_))->length_, scratch);
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
        JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_VALUE_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:128 condition failed: assert StringHelper.startsWith(scratch.get(), ATT_VALUE);"));
        NSString *value = OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_VALUE_))->length_, scratch);
        [atts putWithId:key withId:value];
      }
      IOSObjectArray_SetAndConsume(infos, i, new_OrgApacheLuceneIndexFieldInfo_initWithNSString_withInt_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexIndexOptionsEnum_withOrgApacheLuceneIndexDocValuesTypeEnum_withLong_withJavaUtilMap_(name, fieldNumber, storeTermVector, omitNorms, storePayloads, indexOptions, docValuesType, dvGen, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(atts)));
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_checkFooterWithOrgApacheLuceneStoreChecksumIndexInput_(input);
    OrgApacheLuceneIndexFieldInfos *fieldInfos = [new_OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_(infos) autorelease];
    success = YES;
    return fieldInfos;
  }
  @finally {
    if (success) {
      [((OrgApacheLuceneStoreChecksumIndexInput *) nil_chk(input)) close];
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ input } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

- (OrgApacheLuceneIndexDocValuesTypeEnum *)docValuesTypeWithNSString:(NSString *)dvType {
  return OrgApacheLuceneIndexDocValuesTypeEnum_valueOfWithNSString_(dvType);
}

- (NSString *)readStringWithInt:(jint)offset
withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)scratch {
  return OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, offset, scratch);
}

- (void)writeWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)directory
           withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)segmentInfo
                                  withNSString:(NSString *)segmentSuffix
            withOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)infos
             withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  NSString *fileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(segmentInfo))->name_, segmentSuffix, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_FIELD_INFOS_EXTENSION_);
  OrgApacheLuceneStoreIndexOutput *out = [((OrgApacheLuceneStoreDirectory *) nil_chk(directory)) createOutputWithNSString:fileName withOrgApacheLuceneStoreIOContext:context];
  OrgApacheLuceneUtilBytesRefBuilder *scratch = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
  jboolean success = NO;
  @try {
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMFIELDS_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, JavaLangInteger_toStringWithInt_([((OrgApacheLuceneIndexFieldInfos *) nil_chk(infos)) size]), scratch);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
    for (OrgApacheLuceneIndexFieldInfo * __strong fi in infos) {
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NAME_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, ((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_, scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMBER_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, JavaLangInteger_toStringWithInt_(fi->number_), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_INDEXOPTIONS_);
      OrgApacheLuceneIndexIndexOptionsEnum *indexOptions = [fi getIndexOptions];
      JreAssert(([((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk(indexOptions)) compareToWithId:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)] >= 0 || ![fi hasPayloads]), (@"org/apache/lucene/codecs/simpletext/SimpleTextFieldInfosFormat.java:181 condition failed: assert indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0 || !fi.hasPayloads();"));
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, [indexOptions description], scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETV_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, JavaLangBoolean_toStringWithBoolean_([fi hasVectors]), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_PAYLOADS_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, JavaLangBoolean_toStringWithBoolean_([fi hasPayloads]), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NORMS_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, JavaLangBoolean_toStringWithBoolean_(![fi omitsNorms]), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_getDocValuesTypeWithOrgApacheLuceneIndexDocValuesTypeEnum_([fi getDocValuesType]), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_GEN_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, JavaLangLong_toStringWithLong_([fi getDocValuesGen]), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
      id<JavaUtilMap> atts = [fi attributes];
      jint numAtts = atts == nil ? 0 : [atts size];
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUM_ATTS_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, JavaLangInteger_toStringWithInt_(numAtts), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
      if (numAtts > 0) {
        for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(atts)) entrySet])) {
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_KEY_);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], scratch);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_VALUE_);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, [entry_ getValue], scratch);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
        }
      }
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeChecksumWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneUtilBytesRefBuilder_(out, scratch);
    success = YES;
  }
  @finally {
    if (success) {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(out)) close];
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ out } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

+ (NSString *)getDocValuesTypeWithOrgApacheLuceneIndexDocValuesTypeEnum:(OrgApacheLuceneIndexDocValuesTypeEnum *)type {
  return OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_getDocValuesTypeWithOrgApacheLuceneIndexDocValuesTypeEnum_(type);
}

- (instancetype)init {
  OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMFIELDS_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"number of fields "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NAME_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  name "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMBER_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  number "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETV_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  term vectors "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETVPOS_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  term vector positions "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETVOFF_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  term vector offsets "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_PAYLOADS_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  payloads "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NORMS_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  norms "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  doc values "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_GEN_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  doc values gen "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_INDEXOPTIONS_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  index options "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUM_ATTS_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  attributes "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_KEY_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"    key "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_VALUE_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"    value "));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentInfo:withNSString:withOrgApacheLuceneStoreIOContext:", "read", "Lorg.apache.lucene.index.FieldInfos;", 0x1, "Ljava.io.IOException;", NULL },
    { "docValuesTypeWithNSString:", "docValuesType", "Lorg.apache.lucene.index.DocValuesType;", 0x1, NULL, NULL },
    { "readStringWithInt:withOrgApacheLuceneUtilBytesRefBuilder:", "readString", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "writeWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentInfo:withNSString:withOrgApacheLuceneIndexFieldInfos:withOrgApacheLuceneStoreIOContext:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getDocValuesTypeWithOrgApacheLuceneIndexDocValuesTypeEnum:", "getDocValuesType", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FIELD_INFOS_EXTENSION_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_FIELD_INFOS_EXTENSION_, NULL, .constantValue.asLong = 0 },
    { "NUMFIELDS_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMFIELDS_, NULL, .constantValue.asLong = 0 },
    { "NAME_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NAME_, NULL, .constantValue.asLong = 0 },
    { "NUMBER_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUMBER_, NULL, .constantValue.asLong = 0 },
    { "STORETV_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETV_, NULL, .constantValue.asLong = 0 },
    { "STORETVPOS_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETVPOS_, NULL, .constantValue.asLong = 0 },
    { "STORETVOFF_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_STORETVOFF_, NULL, .constantValue.asLong = 0 },
    { "PAYLOADS_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_PAYLOADS_, NULL, .constantValue.asLong = 0 },
    { "NORMS_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NORMS_, NULL, .constantValue.asLong = 0 },
    { "DOCVALUES_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_, NULL, .constantValue.asLong = 0 },
    { "DOCVALUES_GEN_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_DOCVALUES_GEN_, NULL, .constantValue.asLong = 0 },
    { "INDEXOPTIONS_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_INDEXOPTIONS_, NULL, .constantValue.asLong = 0 },
    { "NUM_ATTS_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_NUM_ATTS_, NULL, .constantValue.asLong = 0 },
    { "ATT_KEY_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_KEY_, NULL, .constantValue.asLong = 0 },
    { "ATT_VALUE_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_ATT_VALUE_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat = { 2, "SimpleTextFieldInfosFormat", "org.apache.lucene.codecs.simpletext", NULL, 0x1, 6, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat;
}

@end

NSString *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat *self, jint offset, OrgApacheLuceneUtilBytesRefBuilder *scratch) {
  return [NSString stringWithBytes:[((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(scratch)) bytes] offset:offset length:[scratch length] - offset charset:JreLoadStatic(OrgLukhnosPortmobileCharsetStandardCharsets, UTF_8_)];
}

NSString *OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_getDocValuesTypeWithOrgApacheLuceneIndexDocValuesTypeEnum_(OrgApacheLuceneIndexDocValuesTypeEnum *type) {
  OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_initialize();
  return [((OrgApacheLuceneIndexDocValuesTypeEnum *) nil_chk(type)) description];
}

void OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_init(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat *self) {
  OrgApacheLuceneCodecsFieldInfosFormat_init(self);
}

OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat *new_OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_init() {
  OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat *self = [OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextFieldInfosFormat)
