//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Throwable.h"
#include "java/text/ParseException.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/codecs/SegmentInfoFormat.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextUtil.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/store/ChecksumIndexInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/StringHelper.h"
#include "org/apache/lucene/util/Version.h"
#include "org/lukhnos/portmobile/charset/StandardCharsets.h"

@interface OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat ()

- (NSString *)readStringWithInt:(jint)offset
withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)scratch;

@end

__attribute__((unused)) static NSString *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat *self, jint offset, OrgApacheLuceneUtilBytesRefBuilder *scratch);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat)

OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_VERSION_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DOCCOUNT_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_USECOMPOUND_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_DIAG_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_KEY_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_VALUE_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_ATT_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_KEY_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_VALUE_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_FILES_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_FILE_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ID_;
NSString *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_EXTENSION_ = @"si";

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat

- (OrgApacheLuceneIndexSegmentInfo *)readWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)directory
                                                              withNSString:(NSString *)segmentName
                                                             withByteArray:(IOSByteArray *)segmentID
                                         withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  OrgApacheLuceneUtilBytesRefBuilder *scratch = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
  NSString *segFileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(segmentName, @"", OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_EXTENSION_);
  {
    JavaLangThrowable *__mainException = nil;
    OrgApacheLuceneStoreChecksumIndexInput *input = [((OrgApacheLuceneStoreDirectory *) nil_chk(directory)) openChecksumInputWithNSString:segFileName withOrgApacheLuceneStoreIOContext:context];
    @try {
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_VERSION_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:71 condition failed: assert StringHelper.startsWith(scratch.get(), SI_VERSION);"));
      OrgApacheLuceneUtilVersion *version_;
      @try {
        version_ = OrgApacheLuceneUtilVersion_parseWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_VERSION_))->length_, scratch));
      }
      @catch (JavaTextParseException *pe) {
        @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_withJavaLangThrowable_(JreStrcat("$$", @"unable to parse version string: ", [((JavaTextParseException *) nil_chk(pe)) getMessage]), input, pe) autorelease];
      }
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DOCCOUNT_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:80 condition failed: assert StringHelper.startsWith(scratch.get(), SI_DOCCOUNT);"));
      jint docCount = JavaLangInteger_parseIntWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DOCCOUNT_))->length_, scratch));
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_USECOMPOUND_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:84 condition failed: assert StringHelper.startsWith(scratch.get(), SI_USECOMPOUND);"));
      jboolean isCompoundFile = JavaLangBoolean_parseBooleanWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_USECOMPOUND_))->length_, scratch));
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_DIAG_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:88 condition failed: assert StringHelper.startsWith(scratch.get(), SI_NUM_DIAG);"));
      jint numDiag = JavaLangInteger_parseIntWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_DIAG_))->length_, scratch));
      id<JavaUtilMap> diagnostics = [new_JavaUtilHashMap_init() autorelease];
      for (jint i = 0; i < numDiag; i++) {
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
        JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_KEY_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:94 condition failed: assert StringHelper.startsWith(scratch.get(), SI_DIAG_KEY);"));
        NSString *key = OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_KEY_))->length_, scratch);
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
        JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_VALUE_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:98 condition failed: assert StringHelper.startsWith(scratch.get(), SI_DIAG_VALUE);"));
        NSString *value = OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_VALUE_))->length_, scratch);
        [diagnostics putWithId:key withId:value];
      }
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_ATT_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:104 condition failed: assert StringHelper.startsWith(scratch.get(), SI_NUM_ATT);"));
      jint numAtt = JavaLangInteger_parseIntWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_ATT_))->length_, scratch));
      id<JavaUtilMap> attributes = [new_JavaUtilHashMap_initWithInt_(numAtt) autorelease];
      for (jint i = 0; i < numAtt; i++) {
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
        JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_KEY_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:110 condition failed: assert StringHelper.startsWith(scratch.get(), SI_ATT_KEY);"));
        NSString *key = OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_KEY_))->length_, scratch);
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
        JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_VALUE_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:114 condition failed: assert StringHelper.startsWith(scratch.get(), SI_ATT_VALUE);"));
        NSString *value = OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_VALUE_))->length_, scratch);
        [attributes putWithId:key withId:value];
      }
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_FILES_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:120 condition failed: assert StringHelper.startsWith(scratch.get(), SI_NUM_FILES);"));
      jint numFiles = JavaLangInteger_parseIntWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_FILES_))->length_, scratch));
      id<JavaUtilSet> files = [new_JavaUtilHashSet_init() autorelease];
      for (jint i = 0; i < numFiles; i++) {
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
        JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_FILE_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:126 condition failed: assert StringHelper.startsWith(scratch.get(), SI_FILE);"));
        NSString *fileName = OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_FILE_))->length_, scratch);
        [files addWithId:fileName];
      }
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratch);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ID_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextSegmentInfoFormat.java:132 condition failed: assert StringHelper.startsWith(scratch.get(), SI_ID);"));
      IOSByteArray *id_ = JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_([scratch bytes], ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ID_))->length_, [scratch length]);
      if (!JavaUtilArrays_equalsWithByteArray_withByteArray_(segmentID, id_)) {
        @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$$$$", @"file mismatch, expected: ", OrgApacheLuceneUtilStringHelper_idToStringWithByteArray_(segmentID), @", got: ", OrgApacheLuceneUtilStringHelper_idToStringWithByteArray_(id_)), input) autorelease];
      }
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_checkFooterWithOrgApacheLuceneStoreChecksumIndexInput_(input);
      OrgApacheLuceneIndexSegmentInfo *info = [new_OrgApacheLuceneIndexSegmentInfo_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilVersion_withNSString_withInt_withBoolean_withOrgApacheLuceneCodecsCodec_withJavaUtilMap_withByteArray_withJavaUtilMap_(directory, version_, segmentName, docCount, isCompoundFile, nil, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(diagnostics), id_, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(attributes)) autorelease];
      [info setFilesWithJavaUtilCollection:files];
      return info;
    }
    @finally {
      @try {
        [input close];
      }
      @catch (JavaLangThrowable *e) {
        if (__mainException) {
          [__mainException addSuppressedWithJavaLangThrowable:e];
        } else {
          __mainException = e;
        }
      }
      if (__mainException) {
        @throw __mainException;
      }
    }
  }
}

- (NSString *)readStringWithInt:(jint)offset
withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)scratch {
  return OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, offset, scratch);
}

- (void)writeWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
           withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)si
             withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)ioContext {
  NSString *segFileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(si))->name_, @"", OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_EXTENSION_);
  {
    JavaLangThrowable *__mainException = nil;
    OrgApacheLuceneStoreIndexOutput *output = [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) createOutputWithNSString:segFileName withOrgApacheLuceneStoreIOContext:ioContext];
    @try {
      [si addFileWithNSString:segFileName];
      OrgApacheLuceneUtilBytesRefBuilder *scratch = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_VERSION_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, [((OrgApacheLuceneUtilVersion *) nil_chk([si getVersion])) description], scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DOCCOUNT_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, JavaLangInteger_toStringWithInt_([si maxDoc]), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_USECOMPOUND_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, JavaLangBoolean_toStringWithBoolean_([si getUseCompoundFile]), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
      id<JavaUtilMap> diagnostics = [si getDiagnostics];
      jint numDiagnostics = diagnostics == nil ? 0 : [diagnostics size];
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_DIAG_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, JavaLangInteger_toStringWithInt_(numDiagnostics), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
      if (numDiagnostics > 0) {
        for (id<JavaUtilMap_Entry> __strong diagEntry in nil_chk([((id<JavaUtilMap>) nil_chk(diagnostics)) entrySet])) {
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_KEY_);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, [((id<JavaUtilMap_Entry>) nil_chk(diagEntry)) getKey], scratch);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_VALUE_);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, [diagEntry getValue], scratch);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
        }
      }
      id<JavaUtilMap> attributes = [si getAttributes];
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_ATT_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, JavaLangInteger_toStringWithInt_([((id<JavaUtilMap>) nil_chk(attributes)) size]), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
      for (id<JavaUtilMap_Entry> __strong attEntry in nil_chk([attributes entrySet])) {
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_KEY_);
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, [((id<JavaUtilMap_Entry>) nil_chk(attEntry)) getKey], scratch);
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_VALUE_);
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, [attEntry getValue], scratch);
        OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
      }
      id<JavaUtilSet> files = [si files];
      jint numFiles = files == nil ? 0 : [files size];
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_FILES_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, JavaLangInteger_toStringWithInt_(numFiles), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
      if (numFiles > 0) {
        for (NSString * __strong fileName in nil_chk(files)) {
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_FILE_);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(output, fileName, scratch);
          OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
        }
      }
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ID_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(output, [new_OrgApacheLuceneUtilBytesRef_initWithByteArray_([si getId]) autorelease]);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(output);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeChecksumWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneUtilBytesRefBuilder_(output, scratch);
    }
    @finally {
      @try {
        [output close];
      }
      @catch (JavaLangThrowable *e) {
        if (__mainException) {
          [__mainException addSuppressedWithJavaLangThrowable:e];
        } else {
          __mainException = e;
        }
      }
      if (__mainException) {
        @throw __mainException;
      }
    }
  }
}

- (instancetype)init {
  OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_VERSION_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"    version "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DOCCOUNT_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"    number of documents "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_USECOMPOUND_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"    uses compound file "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_DIAG_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"    diagnostics "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_KEY_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"      key "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_VALUE_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"      value "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_ATT_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"    attributes "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_KEY_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"      key "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_VALUE_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"      value "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_FILES_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"    files "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_FILE_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"      file "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ID_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"    id "));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readWithOrgApacheLuceneStoreDirectory:withNSString:withByteArray:withOrgApacheLuceneStoreIOContext:", "read", "Lorg.apache.lucene.index.SegmentInfo;", 0x1, "Ljava.io.IOException;", NULL },
    { "readStringWithInt:withOrgApacheLuceneUtilBytesRefBuilder:", "readString", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "writeWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentInfo:withOrgApacheLuceneStoreIOContext:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "SI_VERSION_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_VERSION_, NULL, .constantValue.asLong = 0 },
    { "SI_DOCCOUNT_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DOCCOUNT_, NULL, .constantValue.asLong = 0 },
    { "SI_USECOMPOUND_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_USECOMPOUND_, NULL, .constantValue.asLong = 0 },
    { "SI_NUM_DIAG_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_DIAG_, NULL, .constantValue.asLong = 0 },
    { "SI_DIAG_KEY_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_KEY_, NULL, .constantValue.asLong = 0 },
    { "SI_DIAG_VALUE_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_DIAG_VALUE_, NULL, .constantValue.asLong = 0 },
    { "SI_NUM_ATT_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_ATT_, NULL, .constantValue.asLong = 0 },
    { "SI_ATT_KEY_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_KEY_, NULL, .constantValue.asLong = 0 },
    { "SI_ATT_VALUE_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ATT_VALUE_, NULL, .constantValue.asLong = 0 },
    { "SI_NUM_FILES_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_NUM_FILES_, NULL, .constantValue.asLong = 0 },
    { "SI_FILE_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_FILE_, NULL, .constantValue.asLong = 0 },
    { "SI_ID_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_ID_, NULL, .constantValue.asLong = 0 },
    { "SI_EXTENSION_", NULL, 0x19, "Ljava.lang.String;", &OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_SI_EXTENSION_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat = { 2, "SimpleTextSegmentInfoFormat", "org.apache.lucene.codecs.simpletext", NULL, 0x1, 4, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat;
}

@end

NSString *OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat *self, jint offset, OrgApacheLuceneUtilBytesRefBuilder *scratch) {
  return [NSString stringWithBytes:[((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(scratch)) bytes] offset:offset length:[scratch length] - offset charset:JreLoadStatic(OrgLukhnosPortmobileCharsetStandardCharsets, UTF_8_)];
}

void OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_init(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat *self) {
  OrgApacheLuceneCodecsSegmentInfoFormat_init(self);
}

OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat *new_OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_init() {
  OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat *self = [OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextSegmentInfoFormat)
