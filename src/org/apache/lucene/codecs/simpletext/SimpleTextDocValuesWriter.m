//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/math/BigInteger.h"
#include "java/text/DecimalFormat.h"
#include "java/text/DecimalFormatSymbols.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/Locale.h"
#include "java/util/Set.h"
#include "org/apache/lucene/codecs/DocValuesConsumer.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextUtil.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"

@interface OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter () {
 @public
  id<JavaUtilSet> fieldsSeen_;
}

- (jboolean)fieldSeenWithNSString:(NSString *)field;

- (void)doAddBinaryWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                withJavaLangIterable:(id<JavaLangIterable>)values;

- (void)writeFieldEntryWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
               withOrgApacheLuceneIndexDocValuesTypeEnum:(OrgApacheLuceneIndexDocValuesTypeEnum *)type;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter, fieldsSeen_, id<JavaUtilSet>)

__attribute__((unused)) static jboolean OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_fieldSeenWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter *self, NSString *field);

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_doAddBinaryWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values);

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_writeFieldEntryWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneIndexDocValuesTypeEnum_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter *self, OrgApacheLuceneIndexFieldInfo *field, OrgApacheLuceneIndexDocValuesTypeEnum *type);

@interface OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1 : NSObject < JavaLangIterable > {
 @public
  id<JavaLangIterable> val$docToValueCount_;
  id<JavaLangIterable> val$values_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0
                    withJavaLangIterable:(id<JavaLangIterable>)capture$1;


@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1, val$docToValueCount_, id<JavaLangIterable>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1, val$values_, id<JavaLangIterable>)

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_initWithJavaLangIterable_withJavaLangIterable_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1 *self, id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1);

__attribute__((unused)) static OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1 *new_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_initWithJavaLangIterable_withJavaLangIterable_(id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1)

@interface OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1 : NSObject < JavaUtilIterator > {
 @public
  id<JavaUtilIterator> val$counts_;
  JavaLangStringBuilder *val$builder_;
  id<JavaUtilIterator> val$numbers_;
  OrgApacheLuceneUtilBytesRefBuilder *val$scratch_;
}

- (jboolean)hasNext;

- (OrgApacheLuceneUtilBytesRef *)next;

- (void)remove;

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)capture$0
               withJavaLangStringBuilder:(JavaLangStringBuilder *)capture$1
                    withJavaUtilIterator:(id<JavaUtilIterator>)capture$2
  withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)capture$3;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1, val$counts_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1, val$builder_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1, val$numbers_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1, val$scratch_, OrgApacheLuceneUtilBytesRefBuilder *)

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1_initWithJavaUtilIterator_withJavaLangStringBuilder_withJavaUtilIterator_withOrgApacheLuceneUtilBytesRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1 *self, id<JavaUtilIterator> capture$0, JavaLangStringBuilder *capture$1, id<JavaUtilIterator> capture$2, OrgApacheLuceneUtilBytesRefBuilder *capture$3);

__attribute__((unused)) static OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1 *new_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1_initWithJavaUtilIterator_withJavaLangStringBuilder_withJavaUtilIterator_withOrgApacheLuceneUtilBytesRefBuilder_(id<JavaUtilIterator> capture$0, JavaLangStringBuilder *capture$1, id<JavaUtilIterator> capture$2, OrgApacheLuceneUtilBytesRefBuilder *capture$3) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter)

OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_END_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_FIELD_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_TYPE_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MINVALUE_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_PATTERN_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_LENGTH_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MAXLENGTH_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_NUMVALUES_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_ORDPATTERN_;

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter

- (instancetype)initWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state
                                                 withNSString:(NSString *)ext {
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withNSString_(self, state, ext);
  return self;
}

- (jboolean)fieldSeenWithNSString:(NSString *)field {
  return OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_fieldSeenWithNSString_(self, field);
}

- (void)addNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                    withJavaLangIterable:(id<JavaLangIterable>)values {
  JreAssert((OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_fieldSeenWithNSString_(self, ((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->name_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:73 condition failed: assert fieldSeen(field.name);"));
  JreAssert(([field getDocValuesType] == JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, NUMERIC) || [field hasNorms]), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:74 condition failed: assert field.getDocValuesType() == DocValuesType.NUMERIC || field.hasNorms();"));
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_writeFieldEntryWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneIndexDocValuesTypeEnum_(self, field, JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, NUMERIC));
  jlong minValue = JavaLangLong_MAX_VALUE;
  jlong maxValue = JavaLangLong_MIN_VALUE;
  for (NSNumber * __strong n in nil_chk(values)) {
    jlong v = n == nil ? 0 : [n longLongValue];
    minValue = JavaLangMath_minWithLong_withLong_(minValue, v);
    maxValue = JavaLangMath_maxWithLong_withLong_(maxValue, v);
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MINVALUE_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, JavaLangLong_toStringWithLong_(minValue), scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  JavaMathBigInteger *maxBig = JavaMathBigInteger_valueOfWithLong_(maxValue);
  JavaMathBigInteger *minBig = JavaMathBigInteger_valueOfWithLong_(minValue);
  JavaMathBigInteger *diffBig = [((JavaMathBigInteger *) nil_chk(maxBig)) subtractWithJavaMathBigInteger:minBig];
  jint maxBytesPerValue = ((jint) [((NSString *) nil_chk([((JavaMathBigInteger *) nil_chk(diffBig)) description])) length]);
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  for (jint i = 0; i < maxBytesPerValue; i++) {
    [sb appendWithChar:'0'];
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_PATTERN_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, [sb description], scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  NSString *patternString = [sb description];
  JavaTextDecimalFormat *encoder = [new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_(patternString, [new_JavaTextDecimalFormatSymbols_initWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, ROOT_)) autorelease]) autorelease];
  jint numDocsWritten = 0;
  for (NSNumber * __strong n in values) {
    jlong value = n == nil ? 0 : [n longLongValue];
    JreAssert((value >= minValue), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:116 condition failed: assert value >= minValue;"));
    NSNumber *delta = [((JavaMathBigInteger *) nil_chk(JavaMathBigInteger_valueOfWithLong_(value))) subtractWithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(minValue)];
    NSString *s = [encoder formatWithId:delta];
    JreAssert((((jint) [((NSString *) nil_chk(s)) length]) == ((jint) [((NSString *) nil_chk(patternString)) length])), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:119 condition failed: assert s.length() == patternString.length();"));
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, s, scratch_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
    if (n == nil) {
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, @"F", scratch_);
    }
    else {
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, @"T", scratch_);
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
    numDocsWritten++;
    JreAssert((numDocsWritten <= numDocs_), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:129 condition failed: assert numDocsWritten <= numDocs;"));
  }
  JreAssert((numDocs_ == numDocsWritten), (JreStrcat("$I$I", @"numDocs=", numDocs_, @" numDocsWritten=", numDocsWritten)));
}

- (void)addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                   withJavaLangIterable:(id<JavaLangIterable>)values {
  JreAssert((OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_fieldSeenWithNSString_(self, ((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->name_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:137 condition failed: assert fieldSeen(field.name);"));
  JreAssert(([field getDocValuesType] == JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, BINARY)), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:138 condition failed: assert field.getDocValuesType() == DocValuesType.BINARY;"));
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_doAddBinaryWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
}

- (void)doAddBinaryWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                withJavaLangIterable:(id<JavaLangIterable>)values {
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_doAddBinaryWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
}

- (void)addSortedFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                   withJavaLangIterable:(id<JavaLangIterable>)values
                                   withJavaLangIterable:(id<JavaLangIterable>)docToOrd {
  JreAssert((OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_fieldSeenWithNSString_(self, ((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->name_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:199 condition failed: assert fieldSeen(field.name);"));
  JreAssert(([field getDocValuesType] == JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, SORTED)), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:200 condition failed: assert field.getDocValuesType() == DocValuesType.SORTED;"));
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_writeFieldEntryWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneIndexDocValuesTypeEnum_(self, field, JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, SORTED));
  jint valueCount = 0;
  jint maxLength = -1;
  for (OrgApacheLuceneUtilBytesRef * __strong value in nil_chk(values)) {
    maxLength = JavaLangMath_maxWithInt_withInt_(maxLength, ((OrgApacheLuceneUtilBytesRef *) nil_chk(value))->length_);
    valueCount++;
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_NUMVALUES_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, JavaLangInteger_toStringWithInt_(valueCount), scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MAXLENGTH_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, JavaLangInteger_toStringWithInt_(maxLength), scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  jint maxBytesLength = ((jint) [((NSString *) nil_chk(JavaLangInteger_toStringWithInt_(maxLength))) length]);
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  for (jint i = 0; i < maxBytesLength; i++) {
    [sb appendWithChar:'0'];
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_PATTERN_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, [sb description], scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  JavaTextDecimalFormat *encoder = [new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_([sb description], [new_JavaTextDecimalFormatSymbols_initWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, ROOT_)) autorelease]) autorelease];
  jint maxOrdBytes = ((jint) [((NSString *) nil_chk(JavaLangLong_toStringWithLong_(valueCount + 1LL))) length]);
  [sb setLengthWithInt:0];
  for (jint i = 0; i < maxOrdBytes; i++) {
    [sb appendWithChar:'0'];
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_ORDPATTERN_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, [sb description], scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  JavaTextDecimalFormat *ordEncoder = [new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_([sb description], [new_JavaTextDecimalFormatSymbols_initWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, ROOT_)) autorelease]) autorelease];
  jint valuesSeen = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong value in values) {
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_LENGTH_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, [encoder formatWithLong:((OrgApacheLuceneUtilBytesRef *) nil_chk(value))->length_], scratch_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) writeBytesWithByteArray:value->bytes_ withInt:value->offset_ withInt:value->length_];
    for (jint i = value->length_; i < maxLength; i++) {
      [data_ writeByteWithByte:(jbyte) ' '];
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
    valuesSeen++;
    JreAssert((valuesSeen <= valueCount), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:263 condition failed: assert valuesSeen <= valueCount;"));
  }
  JreAssert((valuesSeen == valueCount), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:266 condition failed: assert valuesSeen == valueCount;"));
  for (NSNumber * __strong ord in nil_chk(docToOrd)) {
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, [ordEncoder formatWithLong:[((NSNumber *) nil_chk(ord)) longLongValue] + 1], scratch_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  }
}

- (void)addSortedNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                          withJavaLangIterable:(id<JavaLangIterable>)docToValueCount
                                          withJavaLangIterable:(id<JavaLangIterable>)values {
  JreAssert((OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_fieldSeenWithNSString_(self, ((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->name_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:276 condition failed: assert fieldSeen(field.name);"));
  JreAssert(([field getDocValuesType] == JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, SORTED_NUMERIC)), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:277 condition failed: assert field.getDocValuesType() == DocValuesType.SORTED_NUMERIC;"));
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_doAddBinaryWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, [new_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_initWithJavaLangIterable_withJavaLangIterable_(docToValueCount, values) autorelease]);
}

- (void)addSortedSetFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                      withJavaLangIterable:(id<JavaLangIterable>)values
                                      withJavaLangIterable:(id<JavaLangIterable>)docToOrdCount
                                      withJavaLangIterable:(id<JavaLangIterable>)ords {
  JreAssert((OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_fieldSeenWithNSString_(self, ((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->name_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:318 condition failed: assert fieldSeen(field.name);"));
  JreAssert(([field getDocValuesType] == JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, SORTED_SET)), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:319 condition failed: assert field.getDocValuesType() == DocValuesType.SORTED_SET;"));
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_writeFieldEntryWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneIndexDocValuesTypeEnum_(self, field, JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, SORTED_SET));
  jlong valueCount = 0;
  jint maxLength = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong value in nil_chk(values)) {
    maxLength = JavaLangMath_maxWithInt_withInt_(maxLength, ((OrgApacheLuceneUtilBytesRef *) nil_chk(value))->length_);
    valueCount++;
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_NUMVALUES_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, JavaLangLong_toStringWithLong_(valueCount), scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MAXLENGTH_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, JavaLangInteger_toStringWithInt_(maxLength), scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  jint maxBytesLength = ((jint) [((NSString *) nil_chk(JavaLangInteger_toStringWithInt_(maxLength))) length]);
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  for (jint i = 0; i < maxBytesLength; i++) {
    [sb appendWithChar:'0'];
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_PATTERN_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, [sb description], scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  JavaTextDecimalFormat *encoder = [new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_([sb description], [new_JavaTextDecimalFormatSymbols_initWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, ROOT_)) autorelease]) autorelease];
  jint maxOrdListLength = 0;
  JavaLangStringBuilder *sb2 = [new_JavaLangStringBuilder_init() autorelease];
  id<JavaUtilIterator> ordStream = [((id<JavaLangIterable>) nil_chk(ords)) iterator];
  for (NSNumber * __strong n in nil_chk(docToOrdCount)) {
    [sb2 setLengthWithInt:0];
    jint count = [((NSNumber *) nil_chk(n)) intValue];
    for (jint i = 0; i < count; i++) {
      jlong ord = [((NSNumber *) nil_chk([((id<JavaUtilIterator>) nil_chk(ordStream)) next])) longLongValue];
      if ([sb2 length] > 0) {
        [sb2 appendWithNSString:@","];
      }
      [sb2 appendWithNSString:JavaLangLong_toStringWithLong_(ord)];
    }
    maxOrdListLength = JavaLangMath_maxWithInt_withInt_(maxOrdListLength, [sb2 length]);
  }
  [sb2 setLengthWithInt:0];
  for (jint i = 0; i < maxOrdListLength; i++) {
    [sb2 appendWithChar:'X'];
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_ORDPATTERN_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, [sb2 description], scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  jlong valuesSeen = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong value in values) {
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_LENGTH_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, [encoder formatWithLong:((OrgApacheLuceneUtilBytesRef *) nil_chk(value))->length_], scratch_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) writeBytesWithByteArray:value->bytes_ withInt:value->offset_ withInt:value->length_];
    for (jint i = value->length_; i < maxLength; i++) {
      [data_ writeByteWithByte:(jbyte) ' '];
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
    valuesSeen++;
    JreAssert((valuesSeen <= valueCount), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:397 condition failed: assert valuesSeen <= valueCount;"));
  }
  JreAssert((valuesSeen == valueCount), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:400 condition failed: assert valuesSeen == valueCount;"));
  ordStream = [ords iterator];
  for (NSNumber * __strong n in docToOrdCount) {
    [sb2 setLengthWithInt:0];
    jint count = [((NSNumber *) nil_chk(n)) intValue];
    for (jint i = 0; i < count; i++) {
      jlong ord = [((NSNumber *) nil_chk([((id<JavaUtilIterator>) nil_chk(ordStream)) next])) longLongValue];
      if ([sb2 length] > 0) {
        [sb2 appendWithNSString:@","];
      }
      [sb2 appendWithNSString:JavaLangLong_toStringWithLong_(ord)];
    }
    jint numPadding = maxOrdListLength - [sb2 length];
    for (jint i = 0; i < numPadding; i++) {
      [sb2 appendWithChar:' '];
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(data_, [sb2 description], scratch_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
  }
}

- (void)writeFieldEntryWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
               withOrgApacheLuceneIndexDocValuesTypeEnum:(OrgApacheLuceneIndexDocValuesTypeEnum *)type {
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_writeFieldEntryWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneIndexDocValuesTypeEnum_(self, field, type);
}

- (void)close {
  if (data_ != nil) {
    jboolean success = NO;
    @try {
      JreAssert((![((id<JavaUtilSet>) nil_chk(fieldsSeen_)) isEmpty]), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:441 condition failed: assert !fieldsSeen.isEmpty();"));
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_END_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(data_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeChecksumWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneUtilBytesRefBuilder_(data_, scratch_);
      success = YES;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ data_ } count:1 type:JavaIoCloseable_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ data_ } count:1 type:JavaIoCloseable_class_()]);
      }
      JreStrongAssign(&data_, nil);
    }
  }
}

- (void)dealloc {
  RELEASE_(data_);
  RELEASE_(scratch_);
  RELEASE_(fieldsSeen_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_END_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"END"));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_FIELD_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"field "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_TYPE_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  type "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MINVALUE_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  minvalue "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_PATTERN_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  pattern "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_LENGTH_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"length "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MAXLENGTH_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  maxlength "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_NUMVALUES_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  numvalues "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_ORDPATTERN_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  ordpattern "));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexSegmentWriteState:withNSString:", "SimpleTextDocValuesWriter", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "fieldSeenWithNSString:", "fieldSeen", "Z", 0x2, NULL, NULL },
    { "addNumericFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:", "addNumericField", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:", "addBinaryField", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "doAddBinaryWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:", "doAddBinary", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "addSortedFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:", "addSortedField", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "addSortedNumericFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:", "addSortedNumericField", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "addSortedSetFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:withJavaLangIterable:", "addSortedSetField", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "writeFieldEntryWithOrgApacheLuceneIndexFieldInfo:withOrgApacheLuceneIndexDocValuesTypeEnum:", "writeFieldEntry", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "END_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_END_, NULL, .constantValue.asLong = 0 },
    { "FIELD_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_FIELD_, NULL, .constantValue.asLong = 0 },
    { "TYPE_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_TYPE_, NULL, .constantValue.asLong = 0 },
    { "MINVALUE_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MINVALUE_, NULL, .constantValue.asLong = 0 },
    { "PATTERN_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_PATTERN_, NULL, .constantValue.asLong = 0 },
    { "LENGTH_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_LENGTH_, NULL, .constantValue.asLong = 0 },
    { "MAXLENGTH_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MAXLENGTH_, NULL, .constantValue.asLong = 0 },
    { "NUMVALUES_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_NUMVALUES_, NULL, .constantValue.asLong = 0 },
    { "ORDPATTERN_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_ORDPATTERN_, NULL, .constantValue.asLong = 0 },
    { "data_", NULL, 0x0, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "scratch_", NULL, 0x10, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "numDocs_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldsSeen_", NULL, 0x12, "Ljava.util.Set;", NULL, "Ljava/util/Set<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter = { 2, "SimpleTextDocValuesWriter", "org.apache.lucene.codecs.simpletext", NULL, 0x0, 10, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter *self, OrgApacheLuceneIndexSegmentWriteState *state, NSString *ext) {
  OrgApacheLuceneCodecsDocValuesConsumer_init(self);
  JreStrongAssignAndConsume(&self->scratch_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssignAndConsume(&self->fieldsSeen_, new_JavaUtilHashSet_init());
  JreStrongAssign(&self->data_, [((OrgApacheLuceneStoreDirectory *) nil_chk(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state))->directory_)) createOutputWithNSString:OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(state->segmentInfo_))->name_, state->segmentSuffix_, ext) withOrgApacheLuceneStoreIOContext:state->context_]);
  self->numDocs_ = [state->segmentInfo_ maxDoc];
}

OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter *new_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withNSString_(OrgApacheLuceneIndexSegmentWriteState *state, NSString *ext) {
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter *self = [OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withNSString_(self, state, ext);
  return self;
}

jboolean OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_fieldSeenWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter *self, NSString *field) {
  JreAssert((![((id<JavaUtilSet>) nil_chk(self->fieldsSeen_)) containsWithId:field]), (JreStrcat("$$$", @"field \"", field, @"\" was added more than once during flush")));
  [self->fieldsSeen_ addWithId:field];
  return YES;
}

void OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_doAddBinaryWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values) {
  jint maxLength = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong value in nil_chk(values)) {
    jint length = value == nil ? 0 : value->length_;
    maxLength = JavaLangMath_maxWithInt_withInt_(maxLength, length);
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_writeFieldEntryWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneIndexDocValuesTypeEnum_(self, field, JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, BINARY));
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(self->data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_MAXLENGTH_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(self->data_, JavaLangInteger_toStringWithInt_(maxLength), self->scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(self->data_);
  jint maxBytesLength = ((jint) [((NSString *) nil_chk(JavaLangLong_toStringWithLong_(maxLength))) length]);
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  for (jint i = 0; i < maxBytesLength; i++) {
    [sb appendWithChar:'0'];
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(self->data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_PATTERN_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(self->data_, [sb description], self->scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(self->data_);
  JavaTextDecimalFormat *encoder = [new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_([sb description], [new_JavaTextDecimalFormatSymbols_initWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, ROOT_)) autorelease]) autorelease];
  jint numDocsWritten = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong value in values) {
    jint length = value == nil ? 0 : value->length_;
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(self->data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_LENGTH_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(self->data_, [encoder formatWithLong:length], self->scratch_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(self->data_);
    if (value != nil) {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) writeBytesWithByteArray:value->bytes_ withInt:value->offset_ withInt:value->length_];
    }
    for (jint i = length; i < maxLength; i++) {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) writeByteWithByte:(jbyte) ' '];
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(self->data_);
    if (value == nil) {
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(self->data_, @"F", self->scratch_);
    }
    else {
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(self->data_, @"T", self->scratch_);
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(self->data_);
    numDocsWritten++;
  }
  JreAssert((self->numDocs_ == numDocsWritten), (@"org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter.java:194 condition failed: assert numDocs == numDocsWritten;"));
}

void OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_writeFieldEntryWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneIndexDocValuesTypeEnum_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter *self, OrgApacheLuceneIndexFieldInfo *field, OrgApacheLuceneIndexDocValuesTypeEnum *type) {
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(self->data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_FIELD_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(self->data_, ((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->name_, self->scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(self->data_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(self->data_, OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_TYPE_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(self->data_, [((OrgApacheLuceneIndexDocValuesTypeEnum *) nil_chk(type)) description], self->scratch_);
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(self->data_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1

- (id<JavaUtilIterator>)iterator {
  JavaLangStringBuilder *builder = [new_JavaLangStringBuilder_init() autorelease];
  OrgApacheLuceneUtilBytesRefBuilder *scratch = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
  id<JavaUtilIterator> counts = [((id<JavaLangIterable>) nil_chk(val$docToValueCount_)) iterator];
  id<JavaUtilIterator> numbers = [((id<JavaLangIterable>) nil_chk(val$values_)) iterator];
  return [new_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1_initWithJavaUtilIterator_withJavaLangStringBuilder_withJavaUtilIterator_withOrgApacheLuceneUtilBytesRefBuilder_(counts, builder, numbers, scratch) autorelease];
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0
                    withJavaLangIterable:(id<JavaLangIterable>)capture$1 {
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_initWithJavaLangIterable_withJavaLangIterable_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$docToValueCount_);
  RELEASE_(val$values_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "initWithJavaLangIterable:withJavaLangIterable:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$docToValueCount_", NULL, 0x1012, "Ljava.lang.Iterable;", NULL, "Ljava/lang/Iterable<Ljava/lang/Number;>;", .constantValue.asLong = 0 },
    { "val$values_", NULL, 0x1012, "Ljava.lang.Iterable;", NULL, "Ljava/lang/Iterable<Ljava/lang/Number;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter", "addSortedNumericFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1 = { 2, "", "org.apache.lucene.codecs.simpletext", "SimpleTextDocValuesWriter", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/lang/Iterable<Lorg/apache/lucene/util/BytesRef;>;" };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_initWithJavaLangIterable_withJavaLangIterable_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1 *self, id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1) {
  JreStrongAssign(&self->val$docToValueCount_, capture$0);
  JreStrongAssign(&self->val$values_, capture$1);
  NSObject_init(self);
}

OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1 *new_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_initWithJavaLangIterable_withJavaLangIterable_(id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1) {
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1 *self = [OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1 alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_initWithJavaLangIterable_withJavaLangIterable_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(val$counts_)) hasNext];
}

- (OrgApacheLuceneUtilBytesRef *)next {
  [((JavaLangStringBuilder *) nil_chk(val$builder_)) setLengthWithInt:0];
  jlong count = [((NSNumber *) nil_chk([((id<JavaUtilIterator>) nil_chk(val$counts_)) next])) longLongValue];
  for (jint i = 0; i < count; i++) {
    if (i > 0) {
      [val$builder_ appendWithChar:','];
    }
    [val$builder_ appendWithNSString:JavaLangLong_toStringWithLong_([((NSNumber *) nil_chk([((id<JavaUtilIterator>) nil_chk(val$numbers_)) next])) longLongValue])];
  }
  [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(val$scratch_)) copyCharsWithJavaLangCharSequence:val$builder_];
  return [val$scratch_ get];
}

- (void)remove {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)capture$0
               withJavaLangStringBuilder:(JavaLangStringBuilder *)capture$1
                    withJavaUtilIterator:(id<JavaUtilIterator>)capture$2
  withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)capture$3 {
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1_initWithJavaUtilIterator_withJavaLangStringBuilder_withJavaUtilIterator_withOrgApacheLuceneUtilBytesRefBuilder_(self, capture$0, capture$1, capture$2, capture$3);
  return self;
}

- (void)dealloc {
  RELEASE_(val$counts_);
  RELEASE_(val$builder_);
  RELEASE_(val$numbers_);
  RELEASE_(val$scratch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "initWithJavaUtilIterator:withJavaLangStringBuilder:withJavaUtilIterator:withOrgApacheLuceneUtilBytesRefBuilder:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$counts_", NULL, 0x1012, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Ljava/lang/Number;>;", .constantValue.asLong = 0 },
    { "val$builder_", NULL, 0x1012, "Ljava.lang.StringBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$numbers_", NULL, 0x1012, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Ljava/lang/Number;>;", .constantValue.asLong = 0 },
    { "val$scratch_", NULL, 0x1012, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1", "iterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1 = { 2, "", "org.apache.lucene.codecs.simpletext", "SimpleTextDocValuesWriter$", 0x8008, 4, methods, 4, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Iterator<Lorg/apache/lucene/util/BytesRef;>;" };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1_initWithJavaUtilIterator_withJavaLangStringBuilder_withJavaUtilIterator_withOrgApacheLuceneUtilBytesRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1 *self, id<JavaUtilIterator> capture$0, JavaLangStringBuilder *capture$1, id<JavaUtilIterator> capture$2, OrgApacheLuceneUtilBytesRefBuilder *capture$3) {
  JreStrongAssign(&self->val$counts_, capture$0);
  JreStrongAssign(&self->val$builder_, capture$1);
  JreStrongAssign(&self->val$numbers_, capture$2);
  JreStrongAssign(&self->val$scratch_, capture$3);
  NSObject_init(self);
}

OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1 *new_OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1_initWithJavaUtilIterator_withJavaLangStringBuilder_withJavaUtilIterator_withOrgApacheLuceneUtilBytesRefBuilder_(id<JavaUtilIterator> capture$0, JavaLangStringBuilder *capture$1, id<JavaUtilIterator> capture$2, OrgApacheLuceneUtilBytesRefBuilder *capture$3) {
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1 *self = [OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1 alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1_initWithJavaUtilIterator_withJavaLangStringBuilder_withJavaUtilIterator_withOrgApacheLuceneUtilBytesRefBuilder_(self, capture$0, capture$1, capture$2, capture$3);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextDocValuesWriter_$1_$1)
