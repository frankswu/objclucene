//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"
#include "org/apache/lucene/codecs/TermVectorsReader.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextUtil.h"
#include "org/apache/lucene/index/DocsAndPositionsEnum.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/store/BufferedChecksumIndexInput.h"
#include "org/apache/lucene/store/ChecksumIndexInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/CharsRef.h"
#include "org/apache/lucene/util/CharsRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/StringHelper.h"

@interface OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader () {
 @public
  IOSLongArray *offsets_;
  OrgApacheLuceneStoreIndexInput *in_;
  OrgApacheLuceneUtilBytesRefBuilder *scratch_;
  OrgApacheLuceneUtilCharsRefBuilder *scratchUTF16_;
}

- (void)readIndexWithInt:(jint)maxDoc;

- (void)readLine;

- (jint)parseIntAtWithInt:(jint)offset;

- (NSString *)readStringWithInt:(jint)offset
withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)scratch;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader, offsets_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader, in_, OrgApacheLuceneStoreIndexInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader, scratch_, OrgApacheLuceneUtilBytesRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader, scratchUTF16_, OrgApacheLuceneUtilCharsRefBuilder *)

static jlong OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_BASE_RAM_BYTES_USED_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader, BASE_RAM_BYTES_USED_, jlong)

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readIndexWithInt_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self, jint maxDoc);

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self);

__attribute__((unused)) static jint OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self, jint offset);

__attribute__((unused)) static NSString *OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self, jint offset, OrgApacheLuceneUtilBytesRefBuilder *scratch);

@interface OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields : OrgApacheLuceneIndexFields {
 @public
  id<JavaUtilSortedMap> fields_;
}

- (instancetype)initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader:(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *)outer$
                                                             withJavaUtilSortedMap:(id<JavaUtilSortedMap>)fields;

- (id<JavaUtilIterator>)iterator;

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field;

- (jint)size;


@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields, fields_, id<JavaUtilSortedMap>)

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields_initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_withJavaUtilSortedMap_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields *self, OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *outer$, id<JavaUtilSortedMap> fields);

__attribute__((unused)) static OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields_initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_withJavaUtilSortedMap_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *outer$, id<JavaUtilSortedMap> fields) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields)

@interface OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms : OrgApacheLuceneIndexTerms {
 @public
  id<JavaUtilSortedMap> terms_;
  jboolean hasOffsets_;
  jboolean hasPositions_;
  jboolean hasPayloads_;
}

- (instancetype)initWithBoolean:(jboolean)hasOffsets
                    withBoolean:(jboolean)hasPositions
                    withBoolean:(jboolean)hasPayloads;

- (OrgApacheLuceneIndexTermsEnum *)iterator;

- (jlong)size;

- (jlong)getSumTotalTermFreq;

- (jlong)getSumDocFreq;

- (jint)getDocCount;

- (jboolean)hasFreqs;

- (jboolean)hasOffsets;

- (jboolean)hasPositions;

- (jboolean)hasPayloads;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms, terms_, id<JavaUtilSortedMap>)

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms_initWithBoolean_withBoolean_withBoolean_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms *self, jboolean hasOffsets, jboolean hasPositions, jboolean hasPayloads);

__attribute__((unused)) static OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms_initWithBoolean_withBoolean_withBoolean_(jboolean hasOffsets, jboolean hasPositions, jboolean hasPayloads) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms)

@interface OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings : NSObject {
 @public
  jint freq_;
  IOSIntArray *positions_;
  IOSIntArray *startOffsets_;
  IOSIntArray *endOffsets_;
  IOSObjectArray *payloads_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings, positions_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings, startOffsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings, endOffsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings, payloads_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings_init(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *self);

__attribute__((unused)) static OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings)

@interface OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum : OrgApacheLuceneIndexTermsEnum {
 @public
  id<JavaUtilSortedMap> terms_;
  id<JavaUtilIterator> iterator_;
  id<JavaUtilMap_Entry> current_;
}

- (instancetype)initWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)terms;

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text;

- (void)seekExactWithLong:(jlong)ord;

- (OrgApacheLuceneUtilBytesRef *)next;

- (OrgApacheLuceneUtilBytesRef *)term;

- (jlong)ord;

- (jint)docFreq;

- (jlong)totalTermFreq;

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum, terms_, id<JavaUtilSortedMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum, iterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum, current_, id<JavaUtilMap_Entry>)

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum_initWithJavaUtilSortedMap_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum *self, id<JavaUtilSortedMap> terms);

__attribute__((unused)) static OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum_initWithJavaUtilSortedMap_(id<JavaUtilSortedMap> terms) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum)

@interface OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  jboolean didNext_;
  jint doc_;
  jint freq_;
}

- (jint)freq;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jint)docID;

- (jint)nextDoc;

- (jint)advanceWithInt:(jint)target;

- (void)resetWithInt:(jint)freq;

- (jlong)cost;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum)

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum_init(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum *self);

__attribute__((unused)) static OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum)

@interface OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  jboolean didNext_;
  jint doc_;
  jint nextPos_;
  IOSIntArray *positions_;
  IOSObjectArray *payloads_;
  IOSIntArray *startOffsets_;
  IOSIntArray *endOffsets_;
}

- (jint)freq;

- (jint)docID;

- (jint)nextDoc;

- (jint)advanceWithInt:(jint)target;

- (void)resetWithIntArray:(IOSIntArray *)positions
             withIntArray:(IOSIntArray *)startOffsets
             withIntArray:(IOSIntArray *)endOffsets
withOrgApacheLuceneUtilBytesRefArray:(IOSObjectArray *)payloads;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (jlong)cost;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum, positions_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum, payloads_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum, startOffsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum, endOffsets_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum_init(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum *self);

__attribute__((unused)) static OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)directory
                  withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)si
                    withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIOContext_(self, directory, si, context);
  return self;
}

- (instancetype)initWithLongArray:(IOSLongArray *)offsets
withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_initWithLongArray_withOrgApacheLuceneStoreIndexInput_(self, offsets, inArg);
  return self;
}

- (void)readIndexWithInt:(jint)maxDoc {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readIndexWithInt_(self, maxDoc);
}

- (OrgApacheLuceneIndexFields *)getWithInt:(jint)doc {
  id<JavaUtilSortedMap> fields = [new_JavaUtilTreeMap_init() autorelease];
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(in_)) seekWithLong:IOSLongArray_Get(nil_chk(offsets_), doc)];
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
  JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(scratch_)) get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, NUMFIELDS_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:118 condition failed: assert StringHelper.startsWith(scratch.get(), NUMFIELDS);"));
  jint numFields = OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, NUMFIELDS_)))->length_);
  if (numFields == 0) {
    return nil;
  }
  for (jint i = 0; i < numFields; i++) {
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
    JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELD_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:125 condition failed: assert StringHelper.startsWith(scratch.get(), FIELD);"));
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELD_)))->length_);
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
    JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDNAME_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:130 condition failed: assert StringHelper.startsWith(scratch.get(), FIELDNAME);"));
    NSString *fieldName = OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDNAME_)))->length_, scratch_);
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
    JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDPOSITIONS_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:134 condition failed: assert StringHelper.startsWith(scratch.get(), FIELDPOSITIONS);"));
    jboolean positions = JavaLangBoolean_parseBooleanWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDPOSITIONS_)))->length_, scratch_));
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
    JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDOFFSETS_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:138 condition failed: assert StringHelper.startsWith(scratch.get(), FIELDOFFSETS);"));
    jboolean offsets = JavaLangBoolean_parseBooleanWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDOFFSETS_)))->length_, scratch_));
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
    JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDPAYLOADS_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:142 condition failed: assert StringHelper.startsWith(scratch.get(), FIELDPAYLOADS);"));
    jboolean payloads = JavaLangBoolean_parseBooleanWithNSString_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDPAYLOADS_)))->length_, scratch_));
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
    JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDTERMCOUNT_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:146 condition failed: assert StringHelper.startsWith(scratch.get(), FIELDTERMCOUNT);"));
    jint termCount = OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, FIELDTERMCOUNT_)))->length_);
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms *terms = [new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms_initWithBoolean_withBoolean_withBoolean_(offsets, positions, payloads) autorelease];
    [fields putWithId:fieldName withId:terms];
    OrgApacheLuceneUtilBytesRefBuilder *term = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
    for (jint j = 0; j < termCount; j++) {
      OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, TERMTEXT_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:155 condition failed: assert StringHelper.startsWith(scratch.get(), TERMTEXT);"));
      jint termLength = [scratch_ length] - ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, TERMTEXT_)))->length_;
      [term growWithInt:termLength];
      [term setLengthWithInt:termLength];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([scratch_ bytes], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, TERMTEXT_)->length_, [term bytes], 0, termLength);
      OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *postings = [new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings_init() autorelease];
      [((id<JavaUtilSortedMap>) nil_chk(terms->terms_)) putWithId:[term toBytesRef] withId:postings];
      OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, TERMFREQ_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:165 condition failed: assert StringHelper.startsWith(scratch.get(), TERMFREQ);"));
      postings->freq_ = OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, TERMFREQ_)))->length_);
      if (positions || offsets) {
        if (positions) {
          JreStrongAssignAndConsume(&postings->positions_, [IOSIntArray newArrayWithLength:postings->freq_]);
          if (payloads) {
            JreStrongAssignAndConsume(&postings->payloads_, [IOSObjectArray newArrayWithLength:postings->freq_ type:OrgApacheLuceneUtilBytesRef_class_()]);
          }
        }
        if (offsets) {
          JreStrongAssignAndConsume(&postings->startOffsets_, [IOSIntArray newArrayWithLength:postings->freq_]);
          JreStrongAssignAndConsume(&postings->endOffsets_, [IOSIntArray newArrayWithLength:postings->freq_]);
        }
        for (jint k = 0; k < postings->freq_; k++) {
          if (positions) {
            OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
            JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, POSITION_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:184 condition failed: assert StringHelper.startsWith(scratch.get(), POSITION);"));
            *IOSIntArray_GetRef(nil_chk(postings->positions_), k) = OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, POSITION_)))->length_);
            if (payloads) {
              OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
              JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, PAYLOAD_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:188 condition failed: assert StringHelper.startsWith(scratch.get(), PAYLOAD);"));
              if ([scratch_ length] - ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, PAYLOAD_)))->length_ == 0) {
                IOSObjectArray_Set(nil_chk(postings->payloads_), k, nil);
              }
              else {
                IOSByteArray *payloadBytes = [IOSByteArray arrayWithLength:[scratch_ length] - JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, PAYLOAD_)->length_];
                JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([scratch_ bytes], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, PAYLOAD_)->length_, payloadBytes, 0, payloadBytes->size_);
                IOSObjectArray_SetAndConsume(nil_chk(postings->payloads_), k, new_OrgApacheLuceneUtilBytesRef_initWithByteArray_(payloadBytes));
              }
            }
          }
          if (offsets) {
            OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
            JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, STARTOFFSET_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:201 condition failed: assert StringHelper.startsWith(scratch.get(), STARTOFFSET);"));
            *IOSIntArray_GetRef(nil_chk(postings->startOffsets_), k) = OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, STARTOFFSET_)))->length_);
            OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
            JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, ENDOFFSET_))), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:205 condition failed: assert StringHelper.startsWith(scratch.get(), ENDOFFSET);"));
            *IOSIntArray_GetRef(nil_chk(postings->endOffsets_), k) = OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(self, ((OrgApacheLuceneUtilBytesRef *) nil_chk(JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, ENDOFFSET_)))->length_);
          }
        }
      }
    }
  }
  return [new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields_initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_withJavaUtilSortedMap_(self, fields) autorelease];
}

- (OrgApacheLuceneCodecsTermVectorsReader *)clone {
  if (in_ == nil) {
    @throw [new_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(@"this TermVectorsReader is closed") autorelease];
  }
  return [new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_initWithLongArray_withOrgApacheLuceneStoreIndexInput_(offsets_, [((OrgApacheLuceneStoreIndexInput *) nil_chk(in_)) clone]) autorelease];
}

- (void)close {
  @try {
    OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ in_ } count:1 type:JavaIoCloseable_class_()]);
  }
  @finally {
    JreStrongAssign(&in_, nil);
    JreStrongAssign(&offsets_, nil);
  }
}

- (void)readLine {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(self);
}

- (jint)parseIntAtWithInt:(jint)offset {
  return OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(self, offset);
}

- (NSString *)readStringWithInt:(jint)offset
withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)scratch {
  return OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(self, offset, scratch);
}

- (jlong)ramBytesUsed {
  return OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_BASE_RAM_BYTES_USED_ + OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithLongArray_(offsets_);
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (NSString *)description {
  return [[self getClass] getSimpleName];
}

- (void)checkIntegrity {
}

- (void)dealloc {
  RELEASE_(offsets_);
  RELEASE_(in_);
  RELEASE_(scratch_);
  RELEASE_(scratchUTF16_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader class]) {
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_BASE_RAM_BYTES_USED_ = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_class_()) + OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneUtilBytesRef_class_()) + OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneUtilCharsRef_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentInfo:withOrgApacheLuceneStoreIOContext:", "SimpleTextTermVectorsReader", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithLongArray:withOrgApacheLuceneStoreIndexInput:", "SimpleTextTermVectorsReader", NULL, 0x0, NULL, NULL },
    { "readIndexWithInt:", "readIndex", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "getWithInt:", "get", "Lorg.apache.lucene.index.Fields;", 0x1, "Ljava.io.IOException;", NULL },
    { "clone", NULL, "Lorg.apache.lucene.codecs.TermVectorsReader;", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "readLine", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "parseIntAtWithInt:", "parseIntAt", "I", 0x2, NULL, NULL },
    { "readStringWithInt:withOrgApacheLuceneUtilBytesRefBuilder:", "readString", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "checkIntegrity", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED_", NULL, 0x1a, "J", &OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_BASE_RAM_BYTES_USED_, NULL, .constantValue.asLong = 0 },
    { "offsets_", NULL, 0x2, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "in_", NULL, 0x2, "Lorg.apache.lucene.store.IndexInput;", NULL, NULL, .constantValue.asLong = 0 },
    { "scratch_", NULL, 0x2, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "scratchUTF16_", NULL, 0x2, "Lorg.apache.lucene.util.CharsRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.simpletext.SimpleTextTermVectorsReader$SimpleTVFields;", "Lorg.apache.lucene.codecs.simpletext.SimpleTextTermVectorsReader$SimpleTVTerms;", "Lorg.apache.lucene.codecs.simpletext.SimpleTextTermVectorsReader$SimpleTVPostings;", "Lorg.apache.lucene.codecs.simpletext.SimpleTextTermVectorsReader$SimpleTVTermsEnum;", "Lorg.apache.lucene.codecs.simpletext.SimpleTextTermVectorsReader$SimpleTVDocsEnum;", "Lorg.apache.lucene.codecs.simpletext.SimpleTextTermVectorsReader$SimpleTVPostingsEnum;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader = { 2, "SimpleTextTermVectorsReader", "org.apache.lucene.codecs.simpletext", NULL, 0x1, 13, methods, 5, fields, 0, NULL, 6, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self, OrgApacheLuceneStoreDirectory *directory, OrgApacheLuceneIndexSegmentInfo *si, OrgApacheLuceneStoreIOContext *context) {
  OrgApacheLuceneCodecsTermVectorsReader_init(self);
  JreStrongAssignAndConsume(&self->scratch_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssignAndConsume(&self->scratchUTF16_, new_OrgApacheLuceneUtilCharsRefBuilder_init());
  jboolean success = NO;
  @try {
    JreStrongAssign(&self->in_, [((OrgApacheLuceneStoreDirectory *) nil_chk(directory)) openInputWithNSString:OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(si))->name_, @"", OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter_VECTORS_EXTENSION_) withOrgApacheLuceneStoreIOContext:context]);
    success = YES;
  }
  @finally {
    if (!success) {
      @try {
        [self close];
      }
      @catch (JavaLangThrowable *t) {
      }
    }
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readIndexWithInt_(self, [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(si)) maxDoc]);
}

OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneStoreDirectory *directory, OrgApacheLuceneIndexSegmentInfo *si, OrgApacheLuceneStoreIOContext *context) {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self = [OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneStoreIOContext_(self, directory, si, context);
  return self;
}

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_initWithLongArray_withOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self, IOSLongArray *offsets, OrgApacheLuceneStoreIndexInput *inArg) {
  OrgApacheLuceneCodecsTermVectorsReader_init(self);
  JreStrongAssignAndConsume(&self->scratch_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssignAndConsume(&self->scratchUTF16_, new_OrgApacheLuceneUtilCharsRefBuilder_init());
  JreStrongAssign(&self->offsets_, offsets);
  JreStrongAssign(&self->in_, inArg);
}

OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_initWithLongArray_withOrgApacheLuceneStoreIndexInput_(IOSLongArray *offsets, OrgApacheLuceneStoreIndexInput *inArg) {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self = [OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_initWithLongArray_withOrgApacheLuceneStoreIndexInput_(self, offsets, inArg);
  return self;
}

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readIndexWithInt_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self, jint maxDoc) {
  OrgApacheLuceneStoreChecksumIndexInput *input = [new_OrgApacheLuceneStoreBufferedChecksumIndexInput_initWithOrgApacheLuceneStoreIndexInput_(self->in_) autorelease];
  JreStrongAssignAndConsume(&self->offsets_, [IOSLongArray newArrayWithLength:maxDoc]);
  jint upto = 0;
  while (![((OrgApacheLuceneUtilBytesRef *) nil_chk([((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(self->scratch_)) get])) isEqual:JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, END_)]) {
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(input, self->scratch_);
    if (OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([self->scratch_ get], JreLoadStatic(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsWriter, DOC_))) {
      *IOSLongArray_GetRef(self->offsets_, upto) = [input getFilePointer];
      upto++;
    }
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_checkFooterWithOrgApacheLuceneStoreChecksumIndexInput_(input);
  JreAssert((upto == self->offsets_->size_), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:110 condition failed: assert upto == offsets.length;"));
}

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readLine(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self) {
  OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(self->in_, self->scratch_);
}

jint OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_parseIntAtWithInt_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self, jint offset) {
  [((OrgApacheLuceneUtilCharsRefBuilder *) nil_chk(self->scratchUTF16_)) copyUTF8BytesWithByteArray:[((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(self->scratch_)) bytes] withInt:offset withInt:[self->scratch_ length] - offset];
  return OrgApacheLuceneUtilArrayUtil_parseIntWithCharArray_withInt_withInt_([self->scratchUTF16_ chars], 0, [self->scratchUTF16_ length]);
}

NSString *OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_readStringWithInt_withOrgApacheLuceneUtilBytesRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *self, jint offset, OrgApacheLuceneUtilBytesRefBuilder *scratch) {
  [((OrgApacheLuceneUtilCharsRefBuilder *) nil_chk(self->scratchUTF16_)) copyUTF8BytesWithByteArray:[((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(scratch)) bytes] withInt:offset withInt:[scratch length] - offset];
  return [self->scratchUTF16_ description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields

- (instancetype)initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader:(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *)outer$
                                                             withJavaUtilSortedMap:(id<JavaUtilSortedMap>)fields {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields_initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_withJavaUtilSortedMap_(self, outer$, fields);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilSet>) nil_chk(JavaUtilCollections_unmodifiableSetWithJavaUtilSet_([((id<JavaUtilSortedMap>) nil_chk(fields_)) keySet]))) iterator];
}

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field {
  return [((id<JavaUtilSortedMap>) nil_chk(fields_)) getWithId:field];
}

- (jint)size {
  return [((id<JavaUtilSortedMap>) nil_chk(fields_)) size];
}

- (void)dealloc {
  RELEASE_(fields_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader:withJavaUtilSortedMap:", "SimpleTVFields", NULL, 0x0, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "termsWithNSString:", "terms", "Lorg.apache.lucene.index.Terms;", 0x1, "Ljava.io.IOException;", NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fields_", NULL, 0x12, "Ljava.util.SortedMap;", NULL, "Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader$SimpleTVTerms;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields = { 2, "SimpleTVFields", "org.apache.lucene.codecs.simpletext", "SimpleTextTermVectorsReader", 0x2, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields_initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_withJavaUtilSortedMap_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields *self, OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *outer$, id<JavaUtilSortedMap> fields) {
  OrgApacheLuceneIndexFields_init(self);
  JreStrongAssign(&self->fields_, fields);
}

OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields_initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_withJavaUtilSortedMap_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader *outer$, id<JavaUtilSortedMap> fields) {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields *self = [OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields_initWithOrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_withJavaUtilSortedMap_(self, outer$, fields);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVFields)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms

- (instancetype)initWithBoolean:(jboolean)hasOffsets
                    withBoolean:(jboolean)hasPositions
                    withBoolean:(jboolean)hasPayloads {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms_initWithBoolean_withBoolean_withBoolean_(self, hasOffsets, hasPositions, hasPayloads);
  return self;
}

- (OrgApacheLuceneIndexTermsEnum *)iterator {
  return [new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum_initWithJavaUtilSortedMap_(terms_) autorelease];
}

- (jlong)size {
  return [((id<JavaUtilSortedMap>) nil_chk(terms_)) size];
}

- (jlong)getSumTotalTermFreq {
  return -1;
}

- (jlong)getSumDocFreq {
  return [((id<JavaUtilSortedMap>) nil_chk(terms_)) size];
}

- (jint)getDocCount {
  return 1;
}

- (jboolean)hasFreqs {
  return YES;
}

- (jboolean)hasOffsets {
  return hasOffsets_;
}

- (jboolean)hasPositions {
  return hasPositions_;
}

- (jboolean)hasPayloads {
  return hasPayloads_;
}

- (void)dealloc {
  RELEASE_(terms_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:withBoolean:withBoolean:", "SimpleTVTerms", NULL, 0x0, NULL, NULL },
    { "iterator", NULL, "Lorg.apache.lucene.index.TermsEnum;", 0x1, "Ljava.io.IOException;", NULL },
    { "size", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "getSumTotalTermFreq", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "getSumDocFreq", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "getDocCount", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "hasFreqs", NULL, "Z", 0x1, NULL, NULL },
    { "hasOffsets", NULL, "Z", 0x1, NULL, NULL },
    { "hasPositions", NULL, "Z", 0x1, NULL, NULL },
    { "hasPayloads", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "terms_", NULL, 0x10, "Ljava.util.SortedMap;", NULL, "Ljava/util/SortedMap<Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader$SimpleTVPostings;>;", .constantValue.asLong = 0 },
    { "hasOffsets_", NULL, 0x10, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hasPositions_", NULL, 0x10, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hasPayloads_", NULL, 0x10, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms = { 2, "SimpleTVTerms", "org.apache.lucene.codecs.simpletext", "SimpleTextTermVectorsReader", 0xa, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms_initWithBoolean_withBoolean_withBoolean_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms *self, jboolean hasOffsets, jboolean hasPositions, jboolean hasPayloads) {
  OrgApacheLuceneIndexTerms_init(self);
  self->hasOffsets_ = hasOffsets;
  self->hasPositions_ = hasPositions;
  self->hasPayloads_ = hasPayloads;
  JreStrongAssignAndConsume(&self->terms_, new_JavaUtilTreeMap_init());
}

OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms_initWithBoolean_withBoolean_withBoolean_(jboolean hasOffsets, jboolean hasPositions, jboolean hasPayloads) {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms *self = [OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms_initWithBoolean_withBoolean_withBoolean_(self, hasOffsets, hasPositions, hasPayloads);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTerms)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings

- (instancetype)init {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(positions_);
  RELEASE_(startOffsets_);
  RELEASE_(endOffsets_);
  RELEASE_(payloads_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "freq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "positions_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "startOffsets_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "endOffsets_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloads_", NULL, 0x2, "[Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings = { 2, "SimpleTVPostings", "org.apache.lucene.codecs.simpletext", "SimpleTextTermVectorsReader", 0xa, 1, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings_init(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *self) {
  NSObject_init(self);
}

OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings_init() {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *self = [OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum

- (instancetype)initWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)terms {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum_initWithJavaUtilSortedMap_(self, terms);
  return self;
}

- (OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text {
  JreStrongAssign(&iterator_, [((id<JavaUtilSet>) nil_chk([((id<JavaUtilSortedMap>) nil_chk([((id<JavaUtilSortedMap>) nil_chk(terms_)) tailMapWithId:text])) entrySet])) iterator]);
  if (![((id<JavaUtilIterator>) nil_chk(iterator_)) hasNext]) {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END);
  }
  else {
    return [((OrgApacheLuceneUtilBytesRef *) nil_chk([self next])) isEqual:text] ? JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, FOUND) : JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, NOT_FOUND);
  }
}

- (void)seekExactWithLong:(jlong)ord {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if (![((id<JavaUtilIterator>) nil_chk(iterator_)) hasNext]) {
    return nil;
  }
  else {
    JreStrongAssign(&current_, [iterator_ next]);
    return [((id<JavaUtilMap_Entry>) nil_chk(current_)) getKey];
  }
}

- (OrgApacheLuceneUtilBytesRef *)term {
  return [((id<JavaUtilMap_Entry>) nil_chk(current_)) getKey];
}

- (jlong)ord {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (jint)docFreq {
  return 1;
}

- (jlong)totalTermFreq {
  return ((OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(current_)) getValue]))->freq_;
}

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags {
  if (OrgApacheLuceneIndexPostingsEnum_featureRequestedWithInt_withShort_(flags, OrgApacheLuceneIndexPostingsEnum_POSITIONS)) {
    OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *postings = [((id<JavaUtilMap_Entry>) nil_chk(current_)) getValue];
    if (((OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *) nil_chk(postings))->positions_ != nil || postings->startOffsets_ != nil) {
      OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum *e = [new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum_init() autorelease];
      [e resetWithIntArray:postings->positions_ withIntArray:postings->startOffsets_ withIntArray:postings->endOffsets_ withOrgApacheLuceneUtilBytesRefArray:postings->payloads_];
      return e;
    }
    else if (OrgApacheLuceneIndexPostingsEnum_featureRequestedWithInt_withShort_(flags, OrgApacheLuceneIndexDocsAndPositionsEnum_OLD_NULL_SEMANTICS)) {
      return nil;
    }
  }
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum *e = [new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum_init() autorelease];
  [e resetWithInt:OrgApacheLuceneIndexPostingsEnum_featureRequestedWithInt_withShort_(flags, OrgApacheLuceneIndexPostingsEnum_FREQS) == NO ? 1 : ((OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostings *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(current_)) getValue]))->freq_];
  return e;
}

- (void)dealloc {
  RELEASE_(terms_);
  RELEASE_(iterator_);
  RELEASE_(current_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilSortedMap:", "SimpleTVTermsEnum", NULL, 0x0, NULL, NULL },
    { "seekCeilWithOrgApacheLuceneUtilBytesRef:", "seekCeil", "Lorg.apache.lucene.index.TermsEnum$SeekStatus;", 0x1, "Ljava.io.IOException;", NULL },
    { "seekExactWithLong:", "seekExact", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "term", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "ord", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "docFreq", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "totalTermFreq", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "postingsWithOrgApacheLuceneIndexPostingsEnum:withInt:", "postings", "Lorg.apache.lucene.index.PostingsEnum;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "terms_", NULL, 0x0, "Ljava.util.SortedMap;", NULL, "Ljava/util/SortedMap<Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader$SimpleTVPostings;>;", .constantValue.asLong = 0 },
    { "iterator_", NULL, 0x0, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Ljava/util/Map$Entry<Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader$SimpleTVPostings;>;>;", .constantValue.asLong = 0 },
    { "current_", NULL, 0x0, "Ljava.util.Map$Entry;", NULL, "Ljava/util/Map$Entry<Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader$SimpleTVPostings;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum = { 2, "SimpleTVTermsEnum", "org.apache.lucene.codecs.simpletext", "SimpleTextTermVectorsReader", 0xa, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum_initWithJavaUtilSortedMap_(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum *self, id<JavaUtilSortedMap> terms) {
  OrgApacheLuceneIndexTermsEnum_init(self);
  JreStrongAssign(&self->terms_, terms);
  JreStrongAssign(&self->iterator_, [((id<JavaUtilSet>) nil_chk([((id<JavaUtilSortedMap>) nil_chk(terms)) entrySet])) iterator]);
}

OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum_initWithJavaUtilSortedMap_(id<JavaUtilSortedMap> terms) {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum *self = [OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum_initWithJavaUtilSortedMap_(self, terms);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVTermsEnum)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum

- (jint)freq {
  JreAssert((freq_ != -1), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:424 condition failed: assert freq != -1;"));
  return freq_;
}

- (jint)nextPosition {
  return -1;
}

- (jint)startOffset {
  return -1;
}

- (jint)endOffset {
  return -1;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return nil;
}

- (jint)docID {
  return doc_;
}

- (jint)nextDoc {
  if (!didNext_) {
    didNext_ = YES;
    return (doc_ = 0);
  }
  else {
    return (doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS);
  }
}

- (jint)advanceWithInt:(jint)target {
  return [self slowAdvanceWithInt:target];
}

- (void)resetWithInt:(jint)freq {
  self->freq_ = freq;
  self->doc_ = -1;
  didNext_ = NO;
}

- (jlong)cost {
  return 1;
}

- (instancetype)init {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "freq", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "nextPosition", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "startOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "endOffset", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "resetWithInt:", "reset", "V", 0x1, NULL, NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "didNext_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "doc_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "freq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum = { 2, "SimpleTVDocsEnum", "org.apache.lucene.codecs.simpletext", "SimpleTextTermVectorsReader", 0xa, 11, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum_init(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum *self) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  self->doc_ = -1;
}

OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum_init() {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum *self = [OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVDocsEnum)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum

- (jint)freq {
  if (positions_ != nil) {
    return positions_->size_;
  }
  else {
    JreAssert((startOffsets_ != nil), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:494 condition failed: assert startOffsets != null;"));
    return ((IOSIntArray *) nil_chk(startOffsets_))->size_;
  }
}

- (jint)docID {
  return doc_;
}

- (jint)nextDoc {
  if (!didNext_) {
    didNext_ = YES;
    return (doc_ = 0);
  }
  else {
    return (doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS);
  }
}

- (jint)advanceWithInt:(jint)target {
  return [self slowAdvanceWithInt:target];
}

- (void)resetWithIntArray:(IOSIntArray *)positions
             withIntArray:(IOSIntArray *)startOffsets
             withIntArray:(IOSIntArray *)endOffsets
withOrgApacheLuceneUtilBytesRefArray:(IOSObjectArray *)payloads {
  JreStrongAssign(&self->positions_, positions);
  JreStrongAssign(&self->startOffsets_, startOffsets);
  JreStrongAssign(&self->endOffsets_, endOffsets);
  JreStrongAssign(&self->payloads_, payloads);
  self->doc_ = -1;
  didNext_ = NO;
  nextPos_ = 0;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return payloads_ == nil ? nil : IOSObjectArray_Get(payloads_, nextPos_ - 1);
}

- (jint)nextPosition {
  if (positions_ != nil) {
    JreAssert((nextPos_ < positions_->size_), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:537 condition failed: assert nextPos < positions.length;"));
    return IOSIntArray_Get(positions_, nextPos_++);
  }
  else {
    JreAssert((nextPos_ < ((IOSIntArray *) nil_chk(startOffsets_))->size_), (@"org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.java:540 condition failed: assert nextPos < startOffsets.length;"));
    nextPos_++;
    return -1;
  }
}

- (jint)startOffset {
  if (startOffsets_ == nil) {
    return -1;
  }
  else {
    return IOSIntArray_Get(startOffsets_, nextPos_ - 1);
  }
}

- (jint)endOffset {
  if (endOffsets_ == nil) {
    return -1;
  }
  else {
    return IOSIntArray_Get(endOffsets_, nextPos_ - 1);
  }
}

- (jlong)cost {
  return 1;
}

- (instancetype)init {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(positions_);
  RELEASE_(payloads_);
  RELEASE_(startOffsets_);
  RELEASE_(endOffsets_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "freq", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, NULL, NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "resetWithIntArray:withIntArray:withIntArray:withOrgApacheLuceneUtilBytesRefArray:", "reset", "V", 0x1, NULL, NULL },
    { "getPayload", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "nextPosition", NULL, "I", 0x1, NULL, NULL },
    { "startOffset", NULL, "I", 0x1, NULL, NULL },
    { "endOffset", NULL, "I", 0x1, NULL, NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "didNext_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "doc_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "nextPos_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "positions_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "payloads_", NULL, 0x2, "[Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "startOffsets_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "endOffsets_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum = { 2, "SimpleTVPostingsEnum", "org.apache.lucene.codecs.simpletext", "SimpleTextTermVectorsReader", 0xa, 11, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum_init(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum *self) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  self->doc_ = -1;
}

OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum *new_OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum_init() {
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum *self = [OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextTermVectorsReader_SimpleTVPostingsEnum)
