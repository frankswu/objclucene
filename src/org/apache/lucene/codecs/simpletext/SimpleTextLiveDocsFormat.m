//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/util/BitSet.h"
#include "java/util/Collection.h"
#include "org/apache/lucene/codecs/LiveDocsFormat.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat.h"
#include "org/apache/lucene/codecs/simpletext/SimpleTextUtil.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/store/ChecksumIndexInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/CharsRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/MutableBits.h"
#include "org/apache/lucene/util/StringHelper.h"

@interface OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat ()

- (jint)parseIntAtWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes
                                          withInt:(jint)offset
           withOrgApacheLuceneUtilCharsRefBuilder:(OrgApacheLuceneUtilCharsRefBuilder *)scratch;

@end

__attribute__((unused)) static jint OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_parseIntAtWithOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilCharsRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat *self, OrgApacheLuceneUtilBytesRef *bytes, jint offset, OrgApacheLuceneUtilCharsRefBuilder *scratch);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat)

NSString *OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_LIVEDOCS_EXTENSION_ = @"liv";
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SIZE_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_DOC_;
OrgApacheLuceneUtilBytesRef *OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_END_;

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat

- (id<OrgApacheLuceneUtilMutableBits>)newLiveDocsWithInt:(jint)size {
  return [new_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithInt_(size) autorelease];
}

- (id<OrgApacheLuceneUtilMutableBits>)newLiveDocsWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)existing {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits *bits = (OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits *) check_class_cast(existing, [OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits class]);
  return [new_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithJavaUtilBitSet_withInt_((JavaUtilBitSet *) check_class_cast([((JavaUtilBitSet *) nil_chk(((OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits *) nil_chk(bits))->bits_)) clone], [JavaUtilBitSet class]), bits->size_) autorelease];
}

- (id<OrgApacheLuceneUtilBits>)readLiveDocsWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                   withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                                           withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  JreAssert(([((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) hasDeletions]), (@"org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat.java:69 condition failed: assert info.hasDeletions();"));
  OrgApacheLuceneUtilBytesRefBuilder *scratch = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
  OrgApacheLuceneUtilCharsRefBuilder *scratchUTF16 = [new_OrgApacheLuceneUtilCharsRefBuilder_init() autorelease];
  NSString *fileName = OrgApacheLuceneIndexIndexFileNames_fileNameFromGenerationWithNSString_withNSString_withLong_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info->info_))->name_, OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_LIVEDOCS_EXTENSION_, [info getDelGen]);
  OrgApacheLuceneStoreChecksumIndexInput *in = nil;
  jboolean success = NO;
  @try {
    in = [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) openChecksumInputWithNSString:fileName withOrgApacheLuceneStoreIOContext:context];
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(in, scratch);
    JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SIZE_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat.java:80 condition failed: assert StringHelper.startsWith(scratch.get(), SIZE);"));
    jint size = OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_parseIntAtWithOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilCharsRefBuilder_(self, [scratch get], ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SIZE_))->length_, scratchUTF16);
    JavaUtilBitSet *bits = [new_JavaUtilBitSet_initWithInt_(size) autorelease];
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(in, scratch);
    while (![((OrgApacheLuceneUtilBytesRef *) nil_chk([scratch get])) isEqual:OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_END_]) {
      JreAssert((OrgApacheLuceneUtilStringHelper_startsWithWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([scratch get], OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_DOC_)), (@"org/apache/lucene/codecs/simpletext/SimpleTextLiveDocsFormat.java:87 condition failed: assert StringHelper.startsWith(scratch.get(), DOC);"));
      jint docid = OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_parseIntAtWithOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilCharsRefBuilder_(self, [scratch get], ((OrgApacheLuceneUtilBytesRef *) nil_chk(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_DOC_))->length_, scratchUTF16);
      [bits setWithInt:docid];
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_readLineWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilBytesRefBuilder_(in, scratch);
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_checkFooterWithOrgApacheLuceneStoreChecksumIndexInput_(in);
    success = YES;
    return [new_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits_initWithJavaUtilBitSet_withInt_(bits, size) autorelease];
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ in } count:1 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ in } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

- (jint)parseIntAtWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes
                                          withInt:(jint)offset
           withOrgApacheLuceneUtilCharsRefBuilder:(OrgApacheLuceneUtilCharsRefBuilder *)scratch {
  return OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_parseIntAtWithOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilCharsRefBuilder_(self, bytes, offset, scratch);
}

- (void)writeLiveDocsWithOrgApacheLuceneUtilMutableBits:(id<OrgApacheLuceneUtilMutableBits>)bits
                      withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
              withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                                                withInt:(jint)newDelCount
                      withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  JavaUtilBitSet *set = ((OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits *) nil_chk(((OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits *) check_class_cast(bits, [OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits class]))))->bits_;
  jint size = [((id<OrgApacheLuceneUtilMutableBits>) nil_chk(bits)) length];
  OrgApacheLuceneUtilBytesRefBuilder *scratch = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
  NSString *fileName = OrgApacheLuceneIndexIndexFileNames_fileNameFromGenerationWithNSString_withNSString_withLong_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info))->info_))->name_, OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_LIVEDOCS_EXTENSION_, [info getNextDelGen]);
  OrgApacheLuceneStoreIndexOutput *out = nil;
  jboolean success = NO;
  @try {
    out = [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) createOutputWithNSString:fileName withOrgApacheLuceneStoreIOContext:context];
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SIZE_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, JavaLangInteger_toStringWithInt_(size), scratch);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
    for (jint i = [((JavaUtilBitSet *) nil_chk(set)) nextSetBitWithInt:0]; i >= 0; i = [set nextSetBitWithInt:i + 1]) {
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_DOC_);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withNSString_withOrgApacheLuceneUtilBytesRefBuilder_(out, JavaLangInteger_toStringWithInt_(i), scratch);
      OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
    }
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneUtilBytesRef_(out, OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_END_);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeNewlineWithOrgApacheLuceneStoreDataOutput_(out);
    OrgApacheLuceneCodecsSimpletextSimpleTextUtil_writeChecksumWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneUtilBytesRefBuilder_(out, scratch);
    success = YES;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ out } count:1 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ out } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

- (void)filesWithOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                                withJavaUtilCollection:(id<JavaUtilCollection>)files {
  if ([((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) hasDeletions]) {
    [((id<JavaUtilCollection>) nil_chk(files)) addWithId:OrgApacheLuceneIndexIndexFileNames_fileNameFromGenerationWithNSString_withNSString_withLong_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info->info_))->name_, OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_LIVEDOCS_EXTENSION_, [info getDelGen])];
  }
}

- (instancetype)init {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SIZE_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"size "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_DOC_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"  doc "));
    JreStrongAssignAndConsume(&OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_END_, new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(@"END"));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newLiveDocsWithInt:", "newLiveDocs", "Lorg.apache.lucene.util.MutableBits;", 0x1, "Ljava.io.IOException;", NULL },
    { "newLiveDocsWithOrgApacheLuceneUtilBits:", "newLiveDocs", "Lorg.apache.lucene.util.MutableBits;", 0x1, "Ljava.io.IOException;", NULL },
    { "readLiveDocsWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentCommitInfo:withOrgApacheLuceneStoreIOContext:", "readLiveDocs", "Lorg.apache.lucene.util.Bits;", 0x1, "Ljava.io.IOException;", NULL },
    { "parseIntAtWithOrgApacheLuceneUtilBytesRef:withInt:withOrgApacheLuceneUtilCharsRefBuilder:", "parseIntAt", "I", 0x2, NULL, NULL },
    { "writeLiveDocsWithOrgApacheLuceneUtilMutableBits:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentCommitInfo:withInt:withOrgApacheLuceneStoreIOContext:", "writeLiveDocs", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "filesWithOrgApacheLuceneIndexSegmentCommitInfo:withJavaUtilCollection:", "files", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LIVEDOCS_EXTENSION_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_LIVEDOCS_EXTENSION_, NULL, .constantValue.asLong = 0 },
    { "SIZE_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SIZE_, NULL, .constantValue.asLong = 0 },
    { "DOC_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_DOC_, NULL, .constantValue.asLong = 0 },
    { "END_", NULL, 0x18, "Lorg.apache.lucene.util.BytesRef;", &OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_END_, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.simpletext.SimpleTextLiveDocsFormat$SimpleTextBits;", "Lorg.apache.lucene.codecs.simpletext.SimpleTextLiveDocsFormat$SimpleTextMutableBits;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat = { 2, "SimpleTextLiveDocsFormat", "org.apache.lucene.codecs.simpletext", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat;
}

@end

jint OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_parseIntAtWithOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilCharsRefBuilder_(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat *self, OrgApacheLuceneUtilBytesRef *bytes, jint offset, OrgApacheLuceneUtilCharsRefBuilder *scratch) {
  [((OrgApacheLuceneUtilCharsRefBuilder *) nil_chk(scratch)) copyUTF8BytesWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes))->bytes_ withInt:bytes->offset_ + offset withInt:bytes->length_ - offset];
  return OrgApacheLuceneUtilArrayUtil_parseIntWithCharArray_withInt_withInt_([scratch chars], 0, [scratch length]);
}

void OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_init(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat *self) {
  OrgApacheLuceneCodecsLiveDocsFormat_init(self);
}

OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat *new_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_init() {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat *self = [OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits

- (instancetype)initWithJavaUtilBitSet:(JavaUtilBitSet *)bits
                               withInt:(jint)size {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits_initWithJavaUtilBitSet_withInt_(self, bits, size);
  return self;
}

- (jboolean)getWithInt:(jint)index {
  return [((JavaUtilBitSet *) nil_chk(bits_)) getWithInt:index];
}

- (jint)length {
  return size_;
}

- (void)dealloc {
  RELEASE_(bits_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilBitSet:withInt:", "SimpleTextBits", NULL, 0x0, NULL, NULL },
    { "getWithInt:", "get", "Z", 0x1, NULL, NULL },
    { "length", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bits_", NULL, 0x10, "Ljava.util.BitSet;", NULL, NULL, .constantValue.asLong = 0 },
    { "size_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits = { 2, "SimpleTextBits", "org.apache.lucene.codecs.simpletext", "SimpleTextLiveDocsFormat", 0x8, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits_initWithJavaUtilBitSet_withInt_(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits *self, JavaUtilBitSet *bits, jint size) {
  NSObject_init(self);
  JreStrongAssign(&self->bits_, bits);
  self->size_ = size;
}

OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits *new_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits_initWithJavaUtilBitSet_withInt_(JavaUtilBitSet *bits, jint size) {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits *self = [OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits_initWithJavaUtilBitSet_withInt_(self, bits, size);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits)

@implementation OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithInt_(self, size);
  return self;
}

- (instancetype)initWithJavaUtilBitSet:(JavaUtilBitSet *)bits
                               withInt:(jint)size {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithJavaUtilBitSet_withInt_(self, bits, size);
  return self;
}

- (void)clearWithInt:(jint)bit {
  [((JavaUtilBitSet *) nil_chk(bits_)) clearWithInt:bit];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "SimpleTextMutableBits", NULL, 0x0, NULL, NULL },
    { "initWithJavaUtilBitSet:withInt:", "SimpleTextMutableBits", NULL, 0x0, NULL, NULL },
    { "clearWithInt:", "clear", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits = { 2, "SimpleTextMutableBits", "org.apache.lucene.codecs.simpletext", "SimpleTextLiveDocsFormat", 0x8, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits;
}

@end

void OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithInt_(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits *self, jint size) {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithJavaUtilBitSet_withInt_(self, [new_JavaUtilBitSet_initWithInt_(size) autorelease], size);
  [((JavaUtilBitSet *) nil_chk(self->bits_)) setWithInt:0 withInt:size];
}

OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits *new_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithInt_(jint size) {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits *self = [OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithInt_(self, size);
  return self;
}

void OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithJavaUtilBitSet_withInt_(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits *self, JavaUtilBitSet *bits, jint size) {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextBits_initWithJavaUtilBitSet_withInt_(self, bits, size);
}

OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits *new_OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithJavaUtilBitSet_withInt_(JavaUtilBitSet *bits, jint size) {
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits *self = [OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits alloc];
  OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits_initWithJavaUtilBitSet_withInt_(self, bits, size);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsSimpletextSimpleTextLiveDocsFormat_SimpleTextMutableBits)
