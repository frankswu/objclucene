//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/blockterms/VariableGapTermsIndexReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/blockterms/TermsIndexReaderBase.h"
#include "org/apache/lucene/codecs/blockterms/VariableGapTermsIndexReader.h"
#include "org/apache/lucene/codecs/blockterms/VariableGapTermsIndexWriter.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentReadState.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/fst/BytesRefFSTEnum.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/PositiveIntOutputs.h"

@interface OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader () {
 @public
  OrgApacheLuceneUtilFstPositiveIntOutputs *fstOutputs_;
}

- (void)seekDirWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)input;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader, fstOutputs_, OrgApacheLuceneUtilFstPositiveIntOutputs *)

__attribute__((unused)) static void OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_seekDirWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *self, OrgApacheLuceneStoreIndexInput *input);

@interface OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum : OrgApacheLuceneCodecsBlocktermsTermsIndexReaderBase_FieldIndexEnum {
 @public
  OrgApacheLuceneUtilFstBytesRefFSTEnum *fstEnum_;
  OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *current_;
}

- (instancetype)initWithOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst;

- (OrgApacheLuceneUtilBytesRef *)term;

- (jlong)seekWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target;

- (jlong)next;

- (jlong)ord;

- (jlong)seekWithLong:(jlong)ord;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum, fstEnum_, OrgApacheLuceneUtilFstBytesRefFSTEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum, current_, OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *)

__attribute__((unused)) static void OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum_initWithOrgApacheLuceneUtilFstFST_(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum *self, OrgApacheLuceneUtilFstFST *fst);

__attribute__((unused)) static OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum *new_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum_initWithOrgApacheLuceneUtilFstFST_(OrgApacheLuceneUtilFstFST *fst) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum)

@interface OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData : NSObject < OrgApacheLuceneUtilAccountable > {
 @public
  OrgApacheLuceneUtilFstFST *fst_;
}

- (instancetype)initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader:(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *)outer$
                                                withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg
                                                 withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                                                          withLong:(jlong)indexStart;

- (jlong)ramBytesUsed;

- (id<JavaUtilCollection>)getChildResources;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData, fst_, OrgApacheLuceneUtilFstFST *)

__attribute__((unused)) static void OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData_initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexFieldInfo_withLong_(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData *self, OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *outer$, OrgApacheLuceneStoreIndexInput *inArg, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong indexStart);

__attribute__((unused)) static OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData *new_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData_initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexFieldInfo_withLong_(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *outer$, OrgApacheLuceneStoreIndexInput *inArg, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong indexStart) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData)

@implementation OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader

- (instancetype)initWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state {
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_initWithOrgApacheLuceneIndexSegmentReadState_(self, state);
  return self;
}

- (jboolean)supportsOrd {
  return NO;
}

- (OrgApacheLuceneCodecsBlocktermsTermsIndexReaderBase_FieldIndexEnum *)getFieldEnumWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo {
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData *fieldData = [((JavaUtilHashMap *) nil_chk(fields_)) getWithId:((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo))->name_];
  if (((OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData *) nil_chk(fieldData))->fst_ == nil) {
    return nil;
  }
  else {
    return [new_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum_initWithOrgApacheLuceneUtilFstFST_(fieldData->fst_) autorelease];
  }
}

- (void)close {
}

- (void)seekDirWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)input {
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_seekDirWithOrgApacheLuceneStoreIndexInput_(self, input);
}

- (jlong)ramBytesUsed {
  jlong sizeInBytes = 0;
  for (OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData * __strong entry_ in nil_chk([((JavaUtilHashMap *) nil_chk(fields_)) values])) {
    sizeInBytes += [((OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData *) nil_chk(entry_)) ramBytesUsed];
  }
  return sizeInBytes;
}

- (id<JavaUtilCollection>)getChildResources {
  return OrgApacheLuceneUtilAccountables_namedAccountablesWithNSString_withJavaUtilMap_(@"field", fields_);
}

- (NSString *)description {
  return JreStrcat("$$IC", [[self getClass] getSimpleName], @"(fields=", [((JavaUtilHashMap *) nil_chk(fields_)) size], ')');
}

- (void)dealloc {
  RELEASE_(fstOutputs_);
  RELEASE_(fields_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexSegmentReadState:", "VariableGapTermsIndexReader", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "supportsOrd", NULL, "Z", 0x1, NULL, NULL },
    { "getFieldEnumWithOrgApacheLuceneIndexFieldInfo:", "getFieldEnum", "Lorg.apache.lucene.codecs.blockterms.TermsIndexReaderBase$FieldIndexEnum;", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "seekDirWithOrgApacheLuceneStoreIndexInput:", "seekDir", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fstOutputs_", NULL, 0x12, "Lorg.apache.lucene.util.fst.PositiveIntOutputs;", NULL, NULL, .constantValue.asLong = 0 },
    { "fields_", NULL, 0x10, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/lucene/codecs/blockterms/VariableGapTermsIndexReader$FieldIndexData;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.blockterms.VariableGapTermsIndexReader$IndexEnum;", "Lorg.apache.lucene.codecs.blockterms.VariableGapTermsIndexReader$FieldIndexData;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader = { 2, "VariableGapTermsIndexReader", "org.apache.lucene.codecs.blockterms", NULL, 0x1, 8, methods, 2, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader;
}

@end

void OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_initWithOrgApacheLuceneIndexSegmentReadState_(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *self, OrgApacheLuceneIndexSegmentReadState *state) {
  OrgApacheLuceneCodecsBlocktermsTermsIndexReaderBase_init(self);
  JreStrongAssign(&self->fstOutputs_, OrgApacheLuceneUtilFstPositiveIntOutputs_getSingleton());
  JreStrongAssignAndConsume(&self->fields_, new_JavaUtilHashMap_init());
  NSString *fileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentReadState *) nil_chk(state))->segmentInfo_))->name_, state->segmentSuffix_, OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexWriter_TERMS_INDEX_EXTENSION_);
  OrgApacheLuceneStoreIndexInput *in = [((OrgApacheLuceneStoreDirectory *) nil_chk(state->directory_)) openInputWithNSString:fileName withOrgApacheLuceneStoreIOContext:[new_OrgApacheLuceneStoreIOContext_initWithOrgApacheLuceneStoreIOContext_withBoolean_(state->context_, YES) autorelease]];
  jboolean success = NO;
  @try {
    OrgApacheLuceneCodecsCodecUtil_checkIndexHeaderWithOrgApacheLuceneStoreDataInput_withNSString_withInt_withInt_withByteArray_withNSString_(in, OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexWriter_CODEC_NAME_, OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexWriter_VERSION_START, OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexWriter_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    OrgApacheLuceneCodecsCodecUtil_checksumEntireFileWithOrgApacheLuceneStoreIndexInput_(in);
    OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_seekDirWithOrgApacheLuceneStoreIndexInput_(self, in);
    jint numFields = [((OrgApacheLuceneStoreIndexInput *) nil_chk(in)) readVInt];
    if (numFields < 0) {
      @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I", @"invalid numFields: ", numFields), in) autorelease];
    }
    for (jint i = 0; i < numFields; i++) {
      jint field = [in readVInt];
      jlong indexStart = [in readVLong];
      OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(state->fieldInfos_)) fieldInfoWithInt:field];
      OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData *previous = [self->fields_ putWithId:((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo))->name_ withId:[new_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData_initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexFieldInfo_withLong_(self, in, fieldInfo, indexStart) autorelease]];
      if (previous != nil) {
        @throw [new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$$", @"duplicate field: ", fieldInfo->name_), in) autorelease];
      }
    }
    success = YES;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ in } count:1 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ in } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *new_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_initWithOrgApacheLuceneIndexSegmentReadState_(OrgApacheLuceneIndexSegmentReadState *state) {
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *self = [OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader alloc];
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_initWithOrgApacheLuceneIndexSegmentReadState_(self, state);
  return self;
}

void OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_seekDirWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *self, OrgApacheLuceneStoreIndexInput *input) {
  [input seekWithLong:[((OrgApacheLuceneStoreIndexInput *) nil_chk(input)) length] - OrgApacheLuceneCodecsCodecUtil_footerLength() - 8];
  jlong dirOffset = [input readLong];
  [input seekWithLong:dirOffset];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader)

@implementation OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum

- (instancetype)initWithOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst {
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum_initWithOrgApacheLuceneUtilFstFST_(self, fst);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)term {
  if (current_ == nil) {
    return nil;
  }
  else {
    return current_->input_;
  }
}

- (jlong)seekWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)target {
  JreStrongAssign(&current_, [((OrgApacheLuceneUtilFstBytesRefFSTEnum *) nil_chk(fstEnum_)) seekFloorWithOrgApacheLuceneUtilBytesRef:target]);
  return [((JavaLangLong *) nil_chk(((OrgApacheLuceneUtilFstBytesRefFSTEnum_InputOutput *) nil_chk(current_))->output_)) longLongValue];
}

- (jlong)next {
  JreStrongAssign(&current_, [((OrgApacheLuceneUtilFstBytesRefFSTEnum *) nil_chk(fstEnum_)) next]);
  if (current_ == nil) {
    return -1;
  }
  else {
    return [((JavaLangLong *) nil_chk(current_->output_)) longLongValue];
  }
}

- (jlong)ord {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (jlong)seekWithLong:(jlong)ord {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (void)dealloc {
  RELEASE_(fstEnum_);
  RELEASE_(current_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUtilFstFST:", "IndexEnum", NULL, 0x1, NULL, NULL },
    { "term", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "seekWithOrgApacheLuceneUtilBytesRef:", "seek", "J", 0x1, "Ljava.io.IOException;", NULL },
    { "next", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "ord", NULL, "J", 0x1, NULL, NULL },
    { "seekWithLong:", "seek", "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fstEnum_", NULL, 0x12, "Lorg.apache.lucene.util.fst.BytesRefFSTEnum;", NULL, "Lorg/apache/lucene/util/fst/BytesRefFSTEnum<Ljava/lang/Long;>;", .constantValue.asLong = 0 },
    { "current_", NULL, 0x2, "Lorg.apache.lucene.util.fst.BytesRefFSTEnum$InputOutput;", NULL, "Lorg/apache/lucene/util/fst/BytesRefFSTEnum$InputOutput<Ljava/lang/Long;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum = { 2, "IndexEnum", "org.apache.lucene.codecs.blockterms", "VariableGapTermsIndexReader", 0xa, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum;
}

@end

void OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum_initWithOrgApacheLuceneUtilFstFST_(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum *self, OrgApacheLuceneUtilFstFST *fst) {
  OrgApacheLuceneCodecsBlocktermsTermsIndexReaderBase_FieldIndexEnum_init(self);
  JreStrongAssignAndConsume(&self->fstEnum_, new_OrgApacheLuceneUtilFstBytesRefFSTEnum_initWithOrgApacheLuceneUtilFstFST_(fst));
}

OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum *new_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum_initWithOrgApacheLuceneUtilFstFST_(OrgApacheLuceneUtilFstFST *fst) {
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum *self = [OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum alloc];
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum_initWithOrgApacheLuceneUtilFstFST_(self, fst);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_IndexEnum)

@implementation OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData

- (instancetype)initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader:(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *)outer$
                                                withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg
                                                 withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                                                          withLong:(jlong)indexStart {
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData_initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexFieldInfo_withLong_(self, outer$, inArg, fieldInfo, indexStart);
  return self;
}

- (jlong)ramBytesUsed {
  return fst_ == nil ? 0 : [fst_ ramBytesUsed];
}

- (id<JavaUtilCollection>)getChildResources {
  if (fst_ == nil) {
    return JavaUtilCollections_emptyList();
  }
  else {
    return JavaUtilCollections_singletonListWithId_(OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withOrgApacheLuceneUtilAccountable_(@"index data", fst_));
  }
}

- (NSString *)description {
  return @"VarGapTermIndex";
}

- (void)dealloc {
  RELEASE_(fst_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader:withOrgApacheLuceneStoreIndexInput:withOrgApacheLuceneIndexFieldInfo:withLong:", "FieldIndexData", NULL, 0x1, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fst_", NULL, 0x12, "Lorg.apache.lucene.util.fst.FST;", NULL, "Lorg/apache/lucene/util/fst/FST<Ljava/lang/Long;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData = { 2, "FieldIndexData", "org.apache.lucene.codecs.blockterms", "VariableGapTermsIndexReader", 0x12, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData;
}

@end

void OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData_initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexFieldInfo_withLong_(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData *self, OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *outer$, OrgApacheLuceneStoreIndexInput *inArg, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong indexStart) {
  NSObject_init(self);
  OrgApacheLuceneStoreIndexInput *clone = [((OrgApacheLuceneStoreIndexInput *) nil_chk(inArg)) clone];
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(clone)) seekWithLong:indexStart];
  JreStrongAssignAndConsume(&self->fst_, new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_(clone, outer$->fstOutputs_));
  [clone close];
}

OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData *new_OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData_initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexFieldInfo_withLong_(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader *outer$, OrgApacheLuceneStoreIndexInput *inArg, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong indexStart) {
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData *self = [OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData alloc];
  OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData_initWithOrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexFieldInfo_withLong_(self, outer$, inArg, fieldInfo, indexStart);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsBlocktermsVariableGapTermsIndexReader_FieldIndexData)
