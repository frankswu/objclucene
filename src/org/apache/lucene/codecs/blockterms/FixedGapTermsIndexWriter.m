//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/TermStats.h"
#include "org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.h"
#include "org/apache/lucene/codecs/blockterms/TermsIndexWriterBase.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/RAMOutputStream.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/StringHelper.h"
#include "org/apache/lucene/util/packed/MonotonicBlockPackedWriter.h"
#include "org/apache/lucene/util/packed/PackedInts.h"

@interface OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter () {
 @public
  jint termIndexInterval_;
  id<JavaUtilList> fields_;
}

- (void)writeTrailerWithLong:(jlong)dirStart;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter, fields_, id<JavaUtilList>)

__attribute__((unused)) static void OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_writeTrailerWithLong_(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *self, jlong dirStart);

@interface OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter : OrgApacheLuceneCodecsBlocktermsTermsIndexWriterBase_FieldWriter {
 @public
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *this$1_;
  OrgApacheLuceneIndexFieldInfo *fieldInfo_;
  jint numIndexTerms_;
  jlong indexStart_;
  jlong termsStart_;
  jlong packedIndexStart_;
  jlong packedOffsetsStart_;
  jlong numTerms_;
  OrgApacheLuceneStoreRAMOutputStream *offsetsBuffer_;
  OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *termOffsets_;
  jlong currentOffset_;
  OrgApacheLuceneStoreRAMOutputStream *addressBuffer_;
  OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *termAddresses_;
  OrgApacheLuceneUtilBytesRefBuilder *lastTerm_;
}

- (instancetype)initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter:(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *)outer$
                                              withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                                                       withLong:(jlong)termsFilePointer;

- (jboolean)checkIndexTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
                       withOrgApacheLuceneCodecsTermStats:(OrgApacheLuceneCodecsTermStats *)stats;

- (void)addWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
        withOrgApacheLuceneCodecsTermStats:(OrgApacheLuceneCodecsTermStats *)stats
                                  withLong:(jlong)termsFilePointer;

- (void)finishWithLong:(jlong)termsFilePointer;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter, this$1_, OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter, fieldInfo_, OrgApacheLuceneIndexFieldInfo *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter, offsetsBuffer_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter, termOffsets_, OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter, addressBuffer_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter, termAddresses_, OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter, lastTerm_, OrgApacheLuceneUtilBytesRefBuilder *)

__attribute__((unused)) static void OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter_initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_withOrgApacheLuceneIndexFieldInfo_withLong_(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *self, OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong termsFilePointer);

__attribute__((unused)) static OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *new_OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter_initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_withOrgApacheLuceneIndexFieldInfo_withLong_(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong termsFilePointer) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter)

NSString *OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_TERMS_INDEX_EXTENSION_ = @"tii";
NSString *OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_CODEC_NAME_ = @"FixedGapTermsIndex";

@implementation OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter

- (instancetype)initWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state {
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_initWithOrgApacheLuceneIndexSegmentWriteState_(self, state);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state
                                                      withInt:(jint)termIndexInterval {
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withInt_(self, state, termIndexInterval);
  return self;
}

- (OrgApacheLuceneCodecsBlocktermsTermsIndexWriterBase_FieldWriter *)addFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                                                                                      withLong:(jlong)termsFilePointer {
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *writer = [new_OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter_initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_withOrgApacheLuceneIndexFieldInfo_withLong_(self, field, termsFilePointer) autorelease];
  [((id<JavaUtilList>) nil_chk(fields_)) addWithId:writer];
  return writer;
}

- (jint)indexedTermPrefixLengthWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)priorTerm
                               withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)indexedTerm {
  return OrgApacheLuceneUtilStringHelper_sortKeyLengthWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(priorTerm, indexedTerm);
}

- (void)close {
  if (out_ != nil) {
    jboolean success = NO;
    @try {
      jlong dirStart = [out_ getFilePointer];
      jint fieldCount = [((id<JavaUtilList>) nil_chk(fields_)) size];
      jint nonNullFieldCount = 0;
      for (jint i = 0; i < fieldCount; i++) {
        OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *field = [fields_ getWithInt:i];
        if (((OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *) nil_chk(field))->numIndexTerms_ > 0) {
          nonNullFieldCount++;
        }
      }
      [out_ writeVIntWithInt:nonNullFieldCount];
      for (jint i = 0; i < fieldCount; i++) {
        OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *field = [fields_ getWithInt:i];
        if (((OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *) nil_chk(field))->numIndexTerms_ > 0) {
          [out_ writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field->fieldInfo_))->number_];
          [out_ writeVIntWithInt:field->numIndexTerms_];
          [out_ writeVLongWithLong:field->termsStart_];
          [out_ writeVLongWithLong:field->indexStart_];
          [out_ writeVLongWithLong:field->packedIndexStart_];
          [out_ writeVLongWithLong:field->packedOffsetsStart_];
        }
      }
      OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_writeTrailerWithLong_(self, dirStart);
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(out_);
      success = YES;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ out_ } count:1 type:JavaIoCloseable_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ out_ } count:1 type:JavaIoCloseable_class_()]);
      }
      JreStrongAssign(&out_, nil);
    }
  }
}

- (void)writeTrailerWithLong:(jlong)dirStart {
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_writeTrailerWithLong_(self, dirStart);
}

- (void)dealloc {
  RELEASE_(out_);
  RELEASE_(fields_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexSegmentWriteState:", "FixedGapTermsIndexWriter", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneIndexSegmentWriteState:withInt:", "FixedGapTermsIndexWriter", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "addFieldWithOrgApacheLuceneIndexFieldInfo:withLong:", "addField", "Lorg.apache.lucene.codecs.blockterms.TermsIndexWriterBase$FieldWriter;", 0x1, NULL, NULL },
    { "indexedTermPrefixLengthWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:", "indexedTermPrefixLength", "I", 0x4, NULL, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "writeTrailerWithLong:", "writeTrailer", "V", 0x2, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "out_", NULL, 0x4, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "TERMS_INDEX_EXTENSION_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_TERMS_INDEX_EXTENSION_, NULL, .constantValue.asLong = 0 },
    { "CODEC_NAME_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_CODEC_NAME_, NULL, .constantValue.asLong = 0 },
    { "VERSION_START", "VERSION_START", 0x18, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_VERSION_START },
    { "VERSION_CURRENT", "VERSION_CURRENT", 0x18, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_VERSION_CURRENT },
    { "BLOCKSIZE", "BLOCKSIZE", 0x18, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_BLOCKSIZE },
    { "termIndexInterval_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_TERM_INDEX_INTERVAL", "DEFAULT_TERM_INDEX_INTERVAL", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_DEFAULT_TERM_INDEX_INTERVAL },
    { "fields_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter$SimpleFieldWriter;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.codecs.blockterms.FixedGapTermsIndexWriter$SimpleFieldWriter;"};
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter = { 2, "FixedGapTermsIndexWriter", "org.apache.lucene.codecs.blockterms", NULL, 0x1, 6, methods, 9, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter;
}

@end

void OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_initWithOrgApacheLuceneIndexSegmentWriteState_(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *self, OrgApacheLuceneIndexSegmentWriteState *state) {
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withInt_(self, state, OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_DEFAULT_TERM_INDEX_INTERVAL);
}

OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *new_OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_initWithOrgApacheLuceneIndexSegmentWriteState_(OrgApacheLuceneIndexSegmentWriteState *state) {
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *self = [OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter alloc];
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_initWithOrgApacheLuceneIndexSegmentWriteState_(self, state);
  return self;
}

void OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withInt_(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *self, OrgApacheLuceneIndexSegmentWriteState *state, jint termIndexInterval) {
  OrgApacheLuceneCodecsBlocktermsTermsIndexWriterBase_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_JavaUtilArrayList_init());
  if (termIndexInterval <= 0) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"invalid termIndexInterval: ", termIndexInterval)) autorelease];
  }
  self->termIndexInterval_ = termIndexInterval;
  NSString *indexFileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state))->segmentInfo_))->name_, state->segmentSuffix_, OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_TERMS_INDEX_EXTENSION_);
  JreStrongAssign(&self->out_, [((OrgApacheLuceneStoreDirectory *) nil_chk(state->directory_)) createOutputWithNSString:indexFileName withOrgApacheLuceneStoreIOContext:state->context_]);
  jboolean success = NO;
  @try {
    OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(self->out_, OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_CODEC_NAME_, OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->out_)) writeVIntWithInt:termIndexInterval];
    [self->out_ writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
    [self->out_ writeVIntWithInt:OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_BLOCKSIZE];
    success = YES;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self->out_ } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *new_OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withInt_(OrgApacheLuceneIndexSegmentWriteState *state, jint termIndexInterval) {
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *self = [OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter alloc];
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withInt_(self, state, termIndexInterval);
  return self;
}

void OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_writeTrailerWithLong_(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *self, jlong dirStart) {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->out_)) writeLongWithLong:dirStart];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter)

@implementation OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter

- (instancetype)initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter:(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *)outer$
                                              withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                                                       withLong:(jlong)termsFilePointer {
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter_initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_withOrgApacheLuceneIndexFieldInfo_withLong_(self, outer$, fieldInfo, termsFilePointer);
  return self;
}

- (jboolean)checkIndexTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
                       withOrgApacheLuceneCodecsTermStats:(OrgApacheLuceneCodecsTermStats *)stats {
  if (0 == (numTerms_++ % this$1_->termIndexInterval_)) {
    return YES;
  }
  else {
    if (0 == numTerms_ % this$1_->termIndexInterval_) {
      [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(lastTerm_)) copyBytesWithOrgApacheLuceneUtilBytesRef:text];
    }
    return NO;
  }
}

- (void)addWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
        withOrgApacheLuceneCodecsTermStats:(OrgApacheLuceneCodecsTermStats *)stats
                                  withLong:(jlong)termsFilePointer {
  jint indexedTermLength = [this$1_ indexedTermPrefixLengthWithOrgApacheLuceneUtilBytesRef:[((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(lastTerm_)) get] withOrgApacheLuceneUtilBytesRef:text];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(this$1_->out_)) writeBytesWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(text))->bytes_ withInt:text->offset_ withInt:indexedTermLength];
  [((OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *) nil_chk(termAddresses_)) addWithLong:termsFilePointer - termsStart_];
  JreAssert((indexedTermLength <= JavaLangShort_MAX_VALUE), (@"org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.java:164 condition failed: assert indexedTermLength <= Short.MAX_VALUE;"));
  currentOffset_ += indexedTermLength;
  [((OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *) nil_chk(termOffsets_)) addWithLong:currentOffset_];
  [lastTerm_ copyBytesWithOrgApacheLuceneUtilBytesRef:text];
  numIndexTerms_++;
}

- (void)finishWithLong:(jlong)termsFilePointer {
  packedIndexStart_ = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(this$1_->out_)) getFilePointer];
  [((OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *) nil_chk(termAddresses_)) finish];
  [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(addressBuffer_)) writeToWithOrgApacheLuceneStoreDataOutput:this$1_->out_];
  packedOffsetsStart_ = [this$1_->out_ getFilePointer];
  [((OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *) nil_chk(termOffsets_)) finish];
  [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(offsetsBuffer_)) writeToWithOrgApacheLuceneStoreDataOutput:this$1_->out_];
  JreStrongAssign(&termOffsets_, JreStrongAssign(&termAddresses_, nil));
  JreStrongAssign(&addressBuffer_, JreStrongAssign(&offsetsBuffer_, nil));
}

- (void)dealloc {
  RELEASE_(this$1_);
  RELEASE_(fieldInfo_);
  RELEASE_(offsetsBuffer_);
  RELEASE_(termOffsets_);
  RELEASE_(addressBuffer_);
  RELEASE_(termAddresses_);
  RELEASE_(lastTerm_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter:withOrgApacheLuceneIndexFieldInfo:withLong:", "SimpleFieldWriter", NULL, 0x0, NULL, NULL },
    { "checkIndexTermWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneCodecsTermStats:", "checkIndexTerm", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "addWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneCodecsTermStats:withLong:", "add", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "finishWithLong:", "finish", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lorg.apache.lucene.codecs.blockterms.FixedGapTermsIndexWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldInfo_", NULL, 0x10, "Lorg.apache.lucene.index.FieldInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "numIndexTerms_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "indexStart_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "termsStart_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "packedIndexStart_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "packedOffsetsStart_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "numTerms_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "offsetsBuffer_", NULL, 0x2, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "termOffsets_", NULL, 0x2, "Lorg.apache.lucene.util.packed.MonotonicBlockPackedWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "currentOffset_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "addressBuffer_", NULL, 0x2, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "termAddresses_", NULL, 0x2, "Lorg.apache.lucene.util.packed.MonotonicBlockPackedWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastTerm_", NULL, 0x12, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter = { 2, "SimpleFieldWriter", "org.apache.lucene.codecs.blockterms", "FixedGapTermsIndexWriter", 0x2, 4, methods, 14, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter;
}

@end

void OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter_initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_withOrgApacheLuceneIndexFieldInfo_withLong_(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *self, OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong termsFilePointer) {
  JreStrongAssign(&self->this$1_, outer$);
  OrgApacheLuceneCodecsBlocktermsTermsIndexWriterBase_FieldWriter_initWithOrgApacheLuceneCodecsBlocktermsTermsIndexWriterBase_(self, outer$);
  JreStrongAssignAndConsume(&self->offsetsBuffer_, new_OrgApacheLuceneStoreRAMOutputStream_init());
  JreStrongAssignAndConsume(&self->termOffsets_, new_OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(self->offsetsBuffer_, OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_BLOCKSIZE));
  JreStrongAssignAndConsume(&self->addressBuffer_, new_OrgApacheLuceneStoreRAMOutputStream_init());
  JreStrongAssignAndConsume(&self->termAddresses_, new_OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(self->addressBuffer_, OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_BLOCKSIZE));
  JreStrongAssignAndConsume(&self->lastTerm_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  self->indexStart_ = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(outer$->out_)) getFilePointer];
  self->termsStart_ = termsFilePointer;
  @try {
    [self->termOffsets_ addWithLong:0LL];
  }
  @catch (JavaIoIOException *bogus) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(bogus) autorelease];
  }
}

OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *new_OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter_initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_withOrgApacheLuceneIndexFieldInfo_withLong_(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, jlong termsFilePointer) {
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter *self = [OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter alloc];
  OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter_initWithOrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_withOrgApacheLuceneIndexFieldInfo_withLong_(self, outer$, fieldInfo, termsFilePointer);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsBlocktermsFixedGapTermsIndexWriter_SimpleFieldWriter)
