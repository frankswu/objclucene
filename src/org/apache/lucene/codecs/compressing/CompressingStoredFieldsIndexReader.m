//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexReader.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BitUtil.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/packed/PackedInts.h"

@interface OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader ()

- (jint)blockWithInt:(jint)docID;

- (jint)relativeDocBaseWithInt:(jint)block
                       withInt:(jint)relativeChunk;

- (jlong)relativeStartPointerWithInt:(jint)block
                             withInt:(jint)relativeChunk;

- (jint)relativeChunkWithInt:(jint)block
                     withInt:(jint)relativeDoc;

@end

inline jlong OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_get_BASE_RAM_BYTES_USED();
static jlong OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_BASE_RAM_BYTES_USED;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader, BASE_RAM_BYTES_USED, jlong)

__attribute__((unused)) static jint OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_blockWithInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *self, jint docID);

__attribute__((unused)) static jint OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeDocBaseWithInt_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *self, jint block, jint relativeChunk);

__attribute__((unused)) static jlong OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeStartPointerWithInt_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *self, jint block, jint relativeChunk);

__attribute__((unused)) static jint OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeChunkWithInt_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *self, jint block, jint relativeDoc);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader)

@implementation OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)fieldsIndexIn
                   withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)si {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_initWithOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexSegmentInfo_(self, fieldsIndexIn, si);
  return self;
}

- (jint)blockWithInt:(jint)docID {
  return OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_blockWithInt_(self, docID);
}

- (jint)relativeDocBaseWithInt:(jint)block
                       withInt:(jint)relativeChunk {
  return OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeDocBaseWithInt_withInt_(self, block, relativeChunk);
}

- (jlong)relativeStartPointerWithInt:(jint)block
                             withInt:(jint)relativeChunk {
  return OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeStartPointerWithInt_withInt_(self, block, relativeChunk);
}

- (jint)relativeChunkWithInt:(jint)block
                     withInt:(jint)relativeDoc {
  return OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeChunkWithInt_withInt_(self, block, relativeDoc);
}

- (jlong)getStartPointerWithInt:(jint)docID {
  if (docID < 0 || docID >= maxDoc_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"docID out of range [0-", maxDoc_, @"]: ", docID));
  }
  jint block = OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_blockWithInt_(self, docID);
  jint relativeChunk = OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeChunkWithInt_withInt_(self, block, docID - IOSIntArray_Get(nil_chk(docBases_), block));
  return IOSLongArray_Get(nil_chk(startPointers_), block) + OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeStartPointerWithInt_withInt_(self, block, relativeChunk);
}

- (OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *)clone {
  return self;
}

- (jlong)ramBytesUsed {
  jlong res = OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_BASE_RAM_BYTES_USED;
  res += OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(docBasesDeltas_);
  {
    IOSObjectArray *a__ = docBasesDeltas_;
    OrgApacheLuceneUtilPackedPackedInts_Reader * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneUtilPackedPackedInts_Reader * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneUtilPackedPackedInts_Reader *r = *b__++;
      res += [((OrgApacheLuceneUtilPackedPackedInts_Reader *) nil_chk(r)) ramBytesUsed];
    }
  }
  res += OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(startPointersDeltas_);
  {
    IOSObjectArray *a__ = startPointersDeltas_;
    OrgApacheLuceneUtilPackedPackedInts_Reader * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneUtilPackedPackedInts_Reader * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneUtilPackedPackedInts_Reader *r = *b__++;
      res += [((OrgApacheLuceneUtilPackedPackedInts_Reader *) nil_chk(r)) ramBytesUsed];
    }
  }
  res += OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(docBases_);
  res += OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithLongArray_(startPointers_);
  res += OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(avgChunkDocs_);
  res += OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithLongArray_(avgChunkSizes_);
  return res;
}

- (id<JavaUtilCollection>)getChildResources {
  id<JavaUtilList> resources = create_JavaUtilArrayList_init();
  jlong docBaseDeltaBytes = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(docBasesDeltas_);
  {
    IOSObjectArray *a__ = docBasesDeltas_;
    OrgApacheLuceneUtilPackedPackedInts_Reader * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneUtilPackedPackedInts_Reader * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneUtilPackedPackedInts_Reader *r = *b__++;
      docBaseDeltaBytes += [((OrgApacheLuceneUtilPackedPackedInts_Reader *) nil_chk(r)) ramBytesUsed];
    }
  }
  [resources addWithId:OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withLong_(@"doc base deltas", docBaseDeltaBytes)];
  jlong startPointerDeltaBytes = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(startPointersDeltas_);
  {
    IOSObjectArray *a__ = startPointersDeltas_;
    OrgApacheLuceneUtilPackedPackedInts_Reader * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneUtilPackedPackedInts_Reader * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneUtilPackedPackedInts_Reader *r = *b__++;
      startPointerDeltaBytes += [((OrgApacheLuceneUtilPackedPackedInts_Reader *) nil_chk(r)) ramBytesUsed];
    }
  }
  [resources addWithId:OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withLong_(@"start pointer deltas", startPointerDeltaBytes)];
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(resources);
}

- (NSString *)description {
  return JreStrcat("$$IC", [[self getClass] getSimpleName], @"(blocks=", ((IOSIntArray *) nil_chk(docBases_))->size_, ')');
}

- (void)dealloc {
  RELEASE_(docBases_);
  RELEASE_(startPointers_);
  RELEASE_(avgChunkDocs_);
  RELEASE_(avgChunkSizes_);
  RELEASE_(docBasesDeltas_);
  RELEASE_(startPointersDeltas_);
  [super dealloc];
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader class]) {
    OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_BASE_RAM_BYTES_USED = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreIndexInput:withOrgApacheLuceneIndexSegmentInfo:", "CompressingStoredFieldsIndexReader", NULL, 0x0, "Ljava.io.IOException;", NULL },
    { "blockWithInt:", "block", "I", 0x2, NULL, NULL },
    { "relativeDocBaseWithInt:withInt:", "relativeDocBase", "I", 0x2, NULL, NULL },
    { "relativeStartPointerWithInt:withInt:", "relativeStartPointer", "J", 0x2, NULL, NULL },
    { "relativeChunkWithInt:withInt:", "relativeChunk", "I", 0x2, NULL, NULL },
    { "getStartPointerWithInt:", "getStartPointer", "J", 0x0, NULL, NULL },
    { "clone", NULL, "Lorg.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader;", 0x1, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED", "BASE_RAM_BYTES_USED", 0x1a, "J", &OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_BASE_RAM_BYTES_USED, NULL, .constantValue.asLong = 0 },
    { "maxDoc_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "docBases_", NULL, 0x10, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "startPointers_", NULL, 0x10, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "avgChunkDocs_", NULL, 0x10, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "avgChunkSizes_", NULL, 0x10, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "docBasesDeltas_", NULL, 0x10, "[Lorg.apache.lucene.util.packed.PackedInts$Reader;", NULL, NULL, .constantValue.asLong = 0 },
    { "startPointersDeltas_", NULL, 0x10, "[Lorg.apache.lucene.util.packed.PackedInts$Reader;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader = { 2, "CompressingStoredFieldsIndexReader", "org.apache.lucene.codecs.compressing", NULL, 0x11, 10, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader;
}

@end

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_initWithOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexSegmentInfo_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *self, OrgApacheLuceneStoreIndexInput *fieldsIndexIn, OrgApacheLuceneIndexSegmentInfo *si) {
  NSObject_init(self);
  self->maxDoc_ = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(si)) maxDoc];
  IOSIntArray *docBases = [IOSIntArray arrayWithLength:16];
  IOSLongArray *startPointers = [IOSLongArray arrayWithLength:16];
  IOSIntArray *avgChunkDocs = [IOSIntArray arrayWithLength:16];
  IOSLongArray *avgChunkSizes = [IOSLongArray arrayWithLength:16];
  IOSObjectArray *docBasesDeltas = [IOSObjectArray arrayWithLength:16 type:OrgApacheLuceneUtilPackedPackedInts_Reader_class_()];
  IOSObjectArray *startPointersDeltas = [IOSObjectArray arrayWithLength:16 type:OrgApacheLuceneUtilPackedPackedInts_Reader_class_()];
  jint packedIntsVersion = [((OrgApacheLuceneStoreIndexInput *) nil_chk(fieldsIndexIn)) readVInt];
  jint blockCount = 0;
  for (; ; ) {
    jint numChunks = [fieldsIndexIn readVInt];
    if (numChunks == 0) {
      break;
    }
    if (blockCount == docBases->size_) {
      jint newSize = OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(blockCount + 1, 8);
      docBases = JavaUtilArrays_copyOfWithIntArray_withInt_(docBases, newSize);
      startPointers = JavaUtilArrays_copyOfWithLongArray_withInt_(startPointers, newSize);
      avgChunkDocs = JavaUtilArrays_copyOfWithIntArray_withInt_(avgChunkDocs, newSize);
      avgChunkSizes = JavaUtilArrays_copyOfWithLongArray_withInt_(avgChunkSizes, newSize);
      docBasesDeltas = JavaUtilArrays_copyOfWithNSObjectArray_withInt_(docBasesDeltas, newSize);
      startPointersDeltas = JavaUtilArrays_copyOfWithNSObjectArray_withInt_(startPointersDeltas, newSize);
    }
    *IOSIntArray_GetRef(nil_chk(docBases), blockCount) = [fieldsIndexIn readVInt];
    *IOSIntArray_GetRef(nil_chk(avgChunkDocs), blockCount) = [fieldsIndexIn readVInt];
    jint bitsPerDocBase = [fieldsIndexIn readVInt];
    if (bitsPerDocBase > 32) {
      @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I", @"Corrupted bitsPerDocBase: ", bitsPerDocBase), fieldsIndexIn);
    }
    IOSObjectArray_Set(nil_chk(docBasesDeltas), blockCount, OrgApacheLuceneUtilPackedPackedInts_getReaderNoHeaderWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilPackedPackedInts_Format_withInt_withInt_withInt_(fieldsIndexIn, JreLoadEnum(OrgApacheLuceneUtilPackedPackedInts_Format, PACKED), packedIntsVersion, numChunks, bitsPerDocBase));
    *IOSLongArray_GetRef(nil_chk(startPointers), blockCount) = [fieldsIndexIn readVLong];
    *IOSLongArray_GetRef(nil_chk(avgChunkSizes), blockCount) = [fieldsIndexIn readVLong];
    jint bitsPerStartPointer = [fieldsIndexIn readVInt];
    if (bitsPerStartPointer > 64) {
      @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I", @"Corrupted bitsPerStartPointer: ", bitsPerStartPointer), fieldsIndexIn);
    }
    IOSObjectArray_Set(nil_chk(startPointersDeltas), blockCount, OrgApacheLuceneUtilPackedPackedInts_getReaderNoHeaderWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilPackedPackedInts_Format_withInt_withInt_withInt_(fieldsIndexIn, JreLoadEnum(OrgApacheLuceneUtilPackedPackedInts_Format, PACKED), packedIntsVersion, numChunks, bitsPerStartPointer));
    ++blockCount;
  }
  JreStrongAssign(&self->docBases_, JavaUtilArrays_copyOfWithIntArray_withInt_(docBases, blockCount));
  JreStrongAssign(&self->startPointers_, JavaUtilArrays_copyOfWithLongArray_withInt_(startPointers, blockCount));
  JreStrongAssign(&self->avgChunkDocs_, JavaUtilArrays_copyOfWithIntArray_withInt_(avgChunkDocs, blockCount));
  JreStrongAssign(&self->avgChunkSizes_, JavaUtilArrays_copyOfWithLongArray_withInt_(avgChunkSizes, blockCount));
  JreStrongAssign(&self->docBasesDeltas_, JavaUtilArrays_copyOfWithNSObjectArray_withInt_(docBasesDeltas, blockCount));
  JreStrongAssign(&self->startPointersDeltas_, JavaUtilArrays_copyOfWithNSObjectArray_withInt_(startPointersDeltas, blockCount));
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_initWithOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexSegmentInfo_(OrgApacheLuceneStoreIndexInput *fieldsIndexIn, OrgApacheLuceneIndexSegmentInfo *si) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader, initWithOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexSegmentInfo_, fieldsIndexIn, si)
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_initWithOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexSegmentInfo_(OrgApacheLuceneStoreIndexInput *fieldsIndexIn, OrgApacheLuceneIndexSegmentInfo *si) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader, initWithOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexSegmentInfo_, fieldsIndexIn, si)
}

jint OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_blockWithInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *self, jint docID) {
  jint lo = 0, hi = ((IOSIntArray *) nil_chk(self->docBases_))->size_ - 1;
  while (lo <= hi) {
    jint mid = JreURShift32((lo + hi), 1);
    jint midValue = IOSIntArray_Get(self->docBases_, mid);
    if (midValue == docID) {
      return mid;
    }
    else if (midValue < docID) {
      lo = mid + 1;
    }
    else {
      hi = mid - 1;
    }
  }
  return hi;
}

jint OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeDocBaseWithInt_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *self, jint block, jint relativeChunk) {
  jint expected = IOSIntArray_Get(nil_chk(self->avgChunkDocs_), block) * relativeChunk;
  jlong delta = OrgApacheLuceneUtilBitUtil_zigZagDecodeWithLong_([((OrgApacheLuceneUtilPackedPackedInts_Reader *) nil_chk(IOSObjectArray_Get(nil_chk(self->docBasesDeltas_), block))) getWithInt:relativeChunk]);
  return expected + (jint) delta;
}

jlong OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeStartPointerWithInt_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *self, jint block, jint relativeChunk) {
  jlong expected = IOSLongArray_Get(nil_chk(self->avgChunkSizes_), block) * relativeChunk;
  jlong delta = OrgApacheLuceneUtilBitUtil_zigZagDecodeWithLong_([((OrgApacheLuceneUtilPackedPackedInts_Reader *) nil_chk(IOSObjectArray_Get(nil_chk(self->startPointersDeltas_), block))) getWithInt:relativeChunk]);
  return expected + delta;
}

jint OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeChunkWithInt_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *self, jint block, jint relativeDoc) {
  jint lo = 0, hi = [((OrgApacheLuceneUtilPackedPackedInts_Reader *) nil_chk(IOSObjectArray_Get(nil_chk(self->docBasesDeltas_), block))) size] - 1;
  while (lo <= hi) {
    jint mid = JreURShift32((lo + hi), 1);
    jint midValue = OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_relativeDocBaseWithInt_withInt_(self, block, mid);
    if (midValue == relativeDoc) {
      return mid;
    }
    else if (midValue < relativeDoc) {
      lo = mid + 1;
    }
    else {
      hi = mid - 1;
    }
  }
  return hi;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader)
