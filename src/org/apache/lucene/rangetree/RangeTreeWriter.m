//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/rangetree/RangeTreeWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "org/apache/lucene/rangetree/GrowingHeapSliceWriter.h"
#include "org/apache/lucene/rangetree/HeapSliceWriter.h"
#include "org/apache/lucene/rangetree/OfflineSliceWriter.h"
#include "org/apache/lucene/rangetree/RangeTreeWriter.h"
#include "org/apache/lucene/rangetree/SliceReader.h"
#include "org/apache/lucene/rangetree/SliceWriter.h"
#include "org/apache/lucene/store/ByteArrayDataInput.h"
#include "org/apache/lucene/store/ByteArrayDataOutput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/InPlaceMergeSorter.h"
#include "org/apache/lucene/util/OfflineSorter.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/lukhnos/portmobile/file/DirectoryStream.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"

@class OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice;

@interface OrgApacheLuceneRangetreeRangeTreeWriter () {
 @public
  IOSByteArray *scratchBytes_;
  OrgApacheLuceneStoreByteArrayDataOutput *scratchBytesOutput_;
  OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *writer_;
  OrgApacheLuceneRangetreeGrowingHeapSliceWriter *heapWriter_;
  OrgLukhnosPortmobileFilePath *tempInput_;
  OrgLukhnosPortmobileFilePath *tempDir_;
  jint maxValuesInLeafNode_;
  jint maxValuesSortInHeap_;
  jlong valueCount_;
  jlong globalMinValue_;
  jlong globalMaxValue_;
}

/*!
 @brief If the current segment has too many points then we switchover to temp files / offline sort.
 */
- (void)switchToOffline;

/*!
 @brief Changes incoming <code>ByteSequencesWriter</code> file to to fixed-width-per-entry file, because we need to be able to slice
 as we recurse in <code>build</code>.
 */
- (id<OrgApacheLuceneRangetreeSliceWriter>)convertToFixedWidthWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg;

- (id<OrgApacheLuceneRangetreeSliceWriter>)sort;

- (jboolean)directoryIsEmptyWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg;

- (jlong)getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *)source
                                                                   withLong:(jlong)leftCount
                                                                   withLong:(jlong)minValue
                                                                   withLong:(jlong)maxValue;

/*!
 @brief The incoming PathSlice for the dim we will split is already partitioned/sorted.
 */
- (void)buildWithInt:(jint)nodeID
             withInt:(jint)leafNodeOffset
withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *)source
withOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
            withLong:(jlong)minValue
            withLong:(jlong)maxValue
       withLongArray:(IOSLongArray *)blockMinValues
       withLongArray:(IOSLongArray *)leafBlockFPs;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, scratchBytes_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, scratchBytesOutput_, OrgApacheLuceneStoreByteArrayDataOutput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, writer_, OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, heapWriter_, OrgApacheLuceneRangetreeGrowingHeapSliceWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, tempInput_, OrgLukhnosPortmobileFilePath *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, tempDir_, OrgLukhnosPortmobileFilePath *)

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_switchToOffline(OrgApacheLuceneRangetreeRangeTreeWriter *self);

__attribute__((unused)) static id<OrgApacheLuceneRangetreeSliceWriter> OrgApacheLuceneRangetreeRangeTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg);

__attribute__((unused)) static id<OrgApacheLuceneRangetreeSliceWriter> OrgApacheLuceneRangetreeRangeTreeWriter_sort(OrgApacheLuceneRangetreeRangeTreeWriter *self);

__attribute__((unused)) static jboolean OrgApacheLuceneRangetreeRangeTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg);

__attribute__((unused)) static jlong OrgApacheLuceneRangetreeRangeTreeWriter_getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withLong_withLong_withLong_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *source, jlong leftCount, jlong minValue, jlong maxValue);

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(OrgApacheLuceneRangetreeRangeTreeWriter *self, jint nodeID, jint leafNodeOffset, OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *source, OrgApacheLuceneStoreIndexOutput *outArg, jlong minValue, jlong maxValue, IOSLongArray *blockMinValues, IOSLongArray *leafBlockFPs);

/*!
 @brief Sliced reference to points in an OfflineSorter.ByteSequencesWriter file.
 */
@interface OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice : NSObject {
 @public
  id<OrgApacheLuceneRangetreeSliceWriter> writer_;
  jlong start_;
  jlong count_;
}

- (instancetype)initWithOrgApacheLuceneRangetreeSliceWriter:(id<OrgApacheLuceneRangetreeSliceWriter>)writer
                                                   withLong:(jlong)start
                                                   withLong:(jlong)count;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice)

J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice, writer_, id<OrgApacheLuceneRangetreeSliceWriter>)

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *self, id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count);

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *new_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice)

@interface OrgApacheLuceneRangetreeRangeTreeWriter_$1 : OrgApacheLuceneUtilInPlaceMergeSorter {
 @public
  OrgApacheLuceneRangetreeRangeTreeWriter *this$0_;
}

- (void)swapWithInt:(jint)i
            withInt:(jint)j;

- (jint)compareWithInt:(jint)i
               withInt:(jint)j;

- (instancetype)initWithOrgApacheLuceneRangetreeRangeTreeWriter:(OrgApacheLuceneRangetreeRangeTreeWriter *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneRangetreeRangeTreeWriter_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter_$1, this$0_, OrgApacheLuceneRangetreeRangeTreeWriter *)

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_$1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter_$1 *self, OrgApacheLuceneRangetreeRangeTreeWriter *outer$);

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_$1 *new_OrgApacheLuceneRangetreeRangeTreeWriter_$1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_$1 *create_OrgApacheLuceneRangetreeRangeTreeWriter_$1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneRangetreeRangeTreeWriter_$1)

@interface OrgApacheLuceneRangetreeRangeTreeWriter_$2 : NSObject < JavaUtilComparator > {
 @public
  OrgApacheLuceneStoreByteArrayDataInput *readerB_;
  OrgApacheLuceneStoreByteArrayDataInput *val$reader_;
}

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b;

- (instancetype)initWithOrgApacheLuceneStoreByteArrayDataInput:(OrgApacheLuceneStoreByteArrayDataInput *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneRangetreeRangeTreeWriter_$2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter_$2, readerB_, OrgApacheLuceneStoreByteArrayDataInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter_$2, val$reader_, OrgApacheLuceneStoreByteArrayDataInput *)

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_$2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneRangetreeRangeTreeWriter_$2 *self, OrgApacheLuceneStoreByteArrayDataInput *capture$0);

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_$2 *new_OrgApacheLuceneRangetreeRangeTreeWriter_$2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneStoreByteArrayDataInput *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_$2 *create_OrgApacheLuceneRangetreeRangeTreeWriter_$2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneStoreByteArrayDataInput *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneRangetreeRangeTreeWriter_$2)

@implementation OrgApacheLuceneRangetreeRangeTreeWriter

+ (jint)BYTES_PER_DOC {
  return OrgApacheLuceneRangetreeRangeTreeWriter_BYTES_PER_DOC;
}

+ (jint)DEFAULT_MAX_VALUES_IN_LEAF_NODE {
  return OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_IN_LEAF_NODE;
}

+ (jint)DEFAULT_MAX_VALUES_SORT_IN_HEAP {
  return OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_SORT_IN_HEAP;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneRangetreeRangeTreeWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)maxValuesInLeafNode
                    withInt:(jint)maxValuesSortInHeap {
  OrgApacheLuceneRangetreeRangeTreeWriter_initWithInt_withInt_(self, maxValuesInLeafNode, maxValuesSortInHeap);
  return self;
}

+ (void)verifyParamsWithInt:(jint)maxValuesInLeafNode
                    withInt:(jint)maxValuesSortInHeap {
  OrgApacheLuceneRangetreeRangeTreeWriter_verifyParamsWithInt_withInt_(maxValuesInLeafNode, maxValuesSortInHeap);
}

- (void)switchToOffline {
  OrgApacheLuceneRangetreeRangeTreeWriter_switchToOffline(self);
}

- (void)addWithLong:(jlong)value
            withInt:(jint)docID {
  if (valueCount_ >= maxValuesSortInHeap_) {
    if (writer_ == nil) {
      OrgApacheLuceneRangetreeRangeTreeWriter_switchToOffline(self);
    }
    [((OrgApacheLuceneStoreByteArrayDataOutput *) nil_chk(scratchBytesOutput_)) resetWithByteArray:scratchBytes_];
    [scratchBytesOutput_ writeLongWithLong:value];
    [scratchBytesOutput_ writeVIntWithInt:docID];
    [scratchBytesOutput_ writeVLongWithLong:valueCount_];
    [((OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *) nil_chk(writer_)) writeWithByteArray:scratchBytes_ withInt:0 withInt:((IOSByteArray *) nil_chk(scratchBytes_))->size_];
  }
  else {
    [((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(heapWriter_)) appendWithLong:value withLong:valueCount_ withInt:docID];
  }
  valueCount_++;
  globalMaxValue_ = JavaLangMath_maxWithLong_withLong_(value, globalMaxValue_);
  globalMinValue_ = JavaLangMath_minWithLong_withLong_(value, globalMinValue_);
}

- (id<OrgApacheLuceneRangetreeSliceWriter>)convertToFixedWidthWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg {
  return OrgApacheLuceneRangetreeRangeTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(self, inArg);
}

- (id<OrgApacheLuceneRangetreeSliceWriter>)sort {
  return OrgApacheLuceneRangetreeRangeTreeWriter_sort(self);
}

- (jlong)finishWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg {
  if (writer_ != nil) {
    [writer_ close];
  }
  if (valueCount_ == 0) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"at least one value must be indexed");
  }
  jlong countPerLeaf = valueCount_;
  jlong innerNodeCount = 1;
  while (countPerLeaf > maxValuesInLeafNode_) {
    countPerLeaf /= 2;
    innerNodeCount *= 2;
  }
  if (1 + 2 * innerNodeCount >= JavaLangInteger_MAX_VALUE) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$", @"too many nodes; increase maxValuesInLeafNode (currently ", maxValuesInLeafNode_, @") and reindex"));
  }
  innerNodeCount--;
  jint numLeaves = (jint) (innerNodeCount + 1);
  IOSLongArray *blockMinValues = [IOSLongArray arrayWithLength:numLeaves];
  IOSLongArray *leafBlockFPs = [IOSLongArray arrayWithLength:numLeaves];
  JreAssert((valueCount_ / blockMinValues->size_ <= maxValuesInLeafNode_), (JreStrcat("$J$I$I", @"valueCount=", valueCount_, @" blockMinValues.length=", blockMinValues->size_, @" maxValuesInLeafNode=", maxValuesInLeafNode_)));
  id<OrgApacheLuceneRangetreeSliceWriter> sortedWriter = nil;
  jboolean success = false;
  @try {
    sortedWriter = OrgApacheLuceneRangetreeRangeTreeWriter_sort(self);
    JreStrongAssign(&heapWriter_, nil);
    OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(self, 1, numLeaves, create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(sortedWriter, 0, valueCount_), outArg, globalMinValue_, globalMaxValue_, blockMinValues, leafBlockFPs);
    success = true;
  }
  @finally {
    if (success) {
      [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(sortedWriter)) destroy];
      OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempInput_ } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
    }
    else {
      @try {
        [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(sortedWriter)) destroy];
      }
      @catch (NSException *t) {
      }
      OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempInput_ } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
    }
  }
  jlong indexFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(outArg)) getFilePointer];
  [outArg writeVIntWithInt:numLeaves];
  [outArg writeVIntWithInt:(jint) (valueCount_ / numLeaves)];
  for (jint i = 0; i < blockMinValues->size_; i++) {
    [outArg writeLongWithLong:IOSLongArray_Get(blockMinValues, i)];
  }
  for (jint i = 0; i < leafBlockFPs->size_; i++) {
    [outArg writeVLongWithLong:IOSLongArray_Get(leafBlockFPs, i)];
  }
  [outArg writeLongWithLong:globalMaxValue_];
  if (tempDir_ != nil) {
    JreAssert((OrgApacheLuceneRangetreeRangeTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(self, tempDir_)), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:391 condition failed: assert directoryIsEmpty(tempDir);"));
    OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempDir_ } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
  }
  return indexFP;
}

- (jboolean)directoryIsEmptyWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg {
  return OrgApacheLuceneRangetreeRangeTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(self, inArg);
}

- (jlong)getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *)source
                                                                   withLong:(jlong)leftCount
                                                                   withLong:(jlong)minValue
                                                                   withLong:(jlong)maxValue {
  return OrgApacheLuceneRangetreeRangeTreeWriter_getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withLong_withLong_withLong_(self, source, leftCount, minValue, maxValue);
}

- (void)buildWithInt:(jint)nodeID
             withInt:(jint)leafNodeOffset
withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *)source
withOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
            withLong:(jlong)minValue
            withLong:(jlong)maxValue
       withLongArray:(IOSLongArray *)blockMinValues
       withLongArray:(IOSLongArray *)leafBlockFPs {
  OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(self, nodeID, leafNodeOffset, source, outArg, minValue, maxValue, blockMinValues, leafBlockFPs);
}

- (id<OrgApacheLuceneRangetreeSliceWriter>)getWriterWithLong:(jlong)count {
  if (count < maxValuesSortInHeap_) {
    return create_OrgApacheLuceneRangetreeHeapSliceWriter_initWithInt_((jint) count);
  }
  else {
    return create_OrgApacheLuceneRangetreeOfflineSliceWriter_initWithOrgLukhnosPortmobileFilePath_withLong_(tempDir_, count);
  }
}

- (void)dealloc {
  RELEASE_(scratchBytes_);
  RELEASE_(scratchBytesOutput_);
  RELEASE_(writer_);
  RELEASE_(heapWriter_);
  RELEASE_(tempInput_);
  RELEASE_(tempDir_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "RangeTreeWriter", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithInt:withInt:", "RangeTreeWriter", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "verifyParamsWithInt:withInt:", "verifyParams", "V", 0x9, NULL, NULL },
    { "switchToOffline", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "addWithLong:withInt:", "add", "V", 0x0, "Ljava.io.IOException;", NULL },
    { "convertToFixedWidthWithOrgLukhnosPortmobileFilePath:", "convertToFixedWidth", "Lorg.apache.lucene.rangetree.SliceWriter;", 0x2, "Ljava.io.IOException;", NULL },
    { "sort", NULL, "Lorg.apache.lucene.rangetree.SliceWriter;", 0x2, "Ljava.io.IOException;", NULL },
    { "finishWithOrgApacheLuceneStoreIndexOutput:", "finish", "J", 0x1, "Ljava.io.IOException;", NULL },
    { "directoryIsEmptyWithOrgLukhnosPortmobileFilePath:", "directoryIsEmpty", "Z", 0x2, NULL, NULL },
    { "getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:withLong:withLong:withLong:", "getSplitValue", "J", 0x2, "Ljava.io.IOException;", NULL },
    { "buildWithInt:withInt:withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:withOrgApacheLuceneStoreIndexOutput:withLong:withLong:withLongArray:withLongArray:", "build", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "getWriterWithLong:", "getWriter", "Lorg.apache.lucene.rangetree.SliceWriter;", 0x0, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BYTES_PER_DOC", "BYTES_PER_DOC", 0x18, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneRangetreeRangeTreeWriter_BYTES_PER_DOC },
    { "DEFAULT_MAX_VALUES_IN_LEAF_NODE", "DEFAULT_MAX_VALUES_IN_LEAF_NODE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_IN_LEAF_NODE },
    { "DEFAULT_MAX_VALUES_SORT_IN_HEAP", "DEFAULT_MAX_VALUES_SORT_IN_HEAP", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_SORT_IN_HEAP },
    { "scratchBytes_", NULL, 0x12, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "scratchBytesOutput_", NULL, 0x12, "Lorg.apache.lucene.store.ByteArrayDataOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "writer_", NULL, 0x2, "Lorg.apache.lucene.util.OfflineSorter$ByteSequencesWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "heapWriter_", NULL, 0x2, "Lorg.apache.lucene.rangetree.GrowingHeapSliceWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "tempInput_", NULL, 0x2, "Lorg.lukhnos.portmobile.file.Path;", NULL, NULL, .constantValue.asLong = 0 },
    { "tempDir_", NULL, 0x2, "Lorg.lukhnos.portmobile.file.Path;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxValuesInLeafNode_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxValuesSortInHeap_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "valueCount_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "globalMinValue_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "globalMaxValue_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.rangetree.RangeTreeWriter$PathSlice;"};
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeWriter = { 2, "RangeTreeWriter", "org.apache.lucene.rangetree", NULL, 0x0, 12, methods, 14, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneRangetreeRangeTreeWriter;
}

@end

void OrgApacheLuceneRangetreeRangeTreeWriter_init(OrgApacheLuceneRangetreeRangeTreeWriter *self) {
  OrgApacheLuceneRangetreeRangeTreeWriter_initWithInt_withInt_(self, OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_IN_LEAF_NODE, OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_SORT_IN_HEAP);
}

OrgApacheLuceneRangetreeRangeTreeWriter *new_OrgApacheLuceneRangetreeRangeTreeWriter_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter, init)
}

OrgApacheLuceneRangetreeRangeTreeWriter *create_OrgApacheLuceneRangetreeRangeTreeWriter_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter, init)
}

void OrgApacheLuceneRangetreeRangeTreeWriter_initWithInt_withInt_(OrgApacheLuceneRangetreeRangeTreeWriter *self, jint maxValuesInLeafNode, jint maxValuesSortInHeap) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->scratchBytes_, [IOSByteArray newArrayWithLength:OrgApacheLuceneRangetreeRangeTreeWriter_BYTES_PER_DOC]);
  JreStrongAssignAndConsume(&self->scratchBytesOutput_, new_OrgApacheLuceneStoreByteArrayDataOutput_initWithByteArray_(self->scratchBytes_));
  self->globalMinValue_ = JavaLangLong_MAX_VALUE;
  self->globalMaxValue_ = JavaLangLong_MIN_VALUE;
  OrgApacheLuceneRangetreeRangeTreeWriter_verifyParamsWithInt_withInt_(maxValuesInLeafNode, maxValuesSortInHeap);
  self->maxValuesInLeafNode_ = maxValuesInLeafNode;
  self->maxValuesSortInHeap_ = maxValuesSortInHeap;
  JreStrongAssignAndConsume(&self->heapWriter_, new_OrgApacheLuceneRangetreeGrowingHeapSliceWriter_initWithInt_(maxValuesSortInHeap));
}

OrgApacheLuceneRangetreeRangeTreeWriter *new_OrgApacheLuceneRangetreeRangeTreeWriter_initWithInt_withInt_(jint maxValuesInLeafNode, jint maxValuesSortInHeap) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter, initWithInt_withInt_, maxValuesInLeafNode, maxValuesSortInHeap)
}

OrgApacheLuceneRangetreeRangeTreeWriter *create_OrgApacheLuceneRangetreeRangeTreeWriter_initWithInt_withInt_(jint maxValuesInLeafNode, jint maxValuesSortInHeap) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter, initWithInt_withInt_, maxValuesInLeafNode, maxValuesSortInHeap)
}

void OrgApacheLuceneRangetreeRangeTreeWriter_verifyParamsWithInt_withInt_(jint maxValuesInLeafNode, jint maxValuesSortInHeap) {
  OrgApacheLuceneRangetreeRangeTreeWriter_initialize();
  if (maxValuesInLeafNode <= 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"maxValuesInLeafNode must be > 0; got ", maxValuesInLeafNode));
  }
  if (maxValuesInLeafNode > JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"maxValuesInLeafNode must be <= ArrayUtil.MAX_ARRAY_LENGTH (= ", JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH), @"); got ", maxValuesInLeafNode));
  }
  if (maxValuesSortInHeap < maxValuesInLeafNode) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"maxValuesSortInHeap must be >= maxValuesInLeafNode; got ", maxValuesSortInHeap, @" vs maxValuesInLeafNode=", maxValuesInLeafNode));
  }
  if (maxValuesSortInHeap > JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"maxValuesSortInHeap must be <= ArrayUtil.MAX_ARRAY_LENGTH (= ", JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH), @"); got ", maxValuesSortInHeap));
  }
}

void OrgApacheLuceneRangetreeRangeTreeWriter_switchToOffline(OrgApacheLuceneRangetreeRangeTreeWriter *self) {
  JreStrongAssign(&self->tempDir_, OrgLukhnosPortmobileFileFiles_createTempDirectoryWithOrgLukhnosPortmobileFilePath_withNSString_(OrgApacheLuceneUtilOfflineSorter_defaultTempDir(), [OrgApacheLuceneRangetreeRangeTreeWriter_class_() getSimpleName]));
  JreStrongAssign(&self->tempInput_, [((OrgLukhnosPortmobileFilePath *) nil_chk(self->tempDir_)) resolveWithNSString:@"in"]);
  JreStrongAssignAndConsume(&self->writer_, new_OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter_initWithOrgLukhnosPortmobileFilePath_(self->tempInput_));
  for (jint i = 0; i < self->valueCount_; i++) {
    [((OrgApacheLuceneStoreByteArrayDataOutput *) nil_chk(self->scratchBytesOutput_)) resetWithByteArray:self->scratchBytes_];
    [self->scratchBytesOutput_ writeLongWithLong:IOSLongArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(self->heapWriter_))->values_), i)];
    [self->scratchBytesOutput_ writeVIntWithInt:IOSIntArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(self->heapWriter_))->docIDs_), i)];
    [self->scratchBytesOutput_ writeVLongWithLong:i];
    [((OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *) nil_chk(self->writer_)) writeWithByteArray:self->scratchBytes_ withInt:0 withInt:((IOSByteArray *) nil_chk(self->scratchBytes_))->size_];
  }
  JreStrongAssign(&self->heapWriter_, nil);
}

id<OrgApacheLuceneRangetreeSliceWriter> OrgApacheLuceneRangetreeRangeTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg) {
  OrgApacheLuceneUtilBytesRefBuilder *scratch = create_OrgApacheLuceneUtilBytesRefBuilder_init();
  [scratch growWithInt:OrgApacheLuceneRangetreeRangeTreeWriter_BYTES_PER_DOC];
  OrgApacheLuceneUtilBytesRef *bytes = [scratch get];
  OrgApacheLuceneStoreByteArrayDataInput *dataReader = create_OrgApacheLuceneStoreByteArrayDataInput_init();
  OrgApacheLuceneUtilOfflineSorter_ByteSequencesReader *reader = nil;
  id<OrgApacheLuceneRangetreeSliceWriter> sortedWriter = nil;
  jboolean success = false;
  @try {
    reader = create_OrgApacheLuceneUtilOfflineSorter_ByteSequencesReader_initWithOrgLukhnosPortmobileFilePath_(inArg);
    sortedWriter = [self getWriterWithLong:self->valueCount_];
    for (jlong i = 0; i < self->valueCount_; i++) {
      jboolean result = [reader readWithOrgApacheLuceneUtilBytesRefBuilder:scratch];
      JreAssert((result), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:178 condition failed: assert result;"));
      [dataReader resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes))->bytes_ withInt:bytes->offset_ withInt:bytes->length_];
      jlong value = [dataReader readLong];
      jint docID = [dataReader readVInt];
      JreAssert((docID >= 0), (JreStrcat("$I", @"docID=", docID)));
      jlong ord = [dataReader readVLong];
      [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(sortedWriter)) appendWithLong:value withLong:ord withInt:docID];
    }
    success = true;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ sortedWriter, reader } count:2 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
      @try {
        [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(sortedWriter)) destroy];
      }
      @catch (NSException *t) {
      }
    }
  }
  return sortedWriter;
}

id<OrgApacheLuceneRangetreeSliceWriter> OrgApacheLuceneRangetreeRangeTreeWriter_sort(OrgApacheLuceneRangetreeRangeTreeWriter *self) {
  if (self->heapWriter_ != nil) {
    JreAssert((self->valueCount_ < JavaLangInteger_MAX_VALUE), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:206 condition failed: assert valueCount < Integer.MAX_VALUE;"));
    [create_OrgApacheLuceneRangetreeRangeTreeWriter_$1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(self) sortWithInt:0 withInt:(jint) self->valueCount_];
    OrgApacheLuceneRangetreeHeapSliceWriter *sorted = create_OrgApacheLuceneRangetreeHeapSliceWriter_initWithInt_((jint) self->valueCount_);
    for (jint i = 0; i < self->valueCount_; i++) {
      [sorted appendWithLong:IOSLongArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(self->heapWriter_))->values_), i) withLong:IOSLongArray_Get(nil_chk(self->heapWriter_->ords_), i) withInt:IOSIntArray_Get(nil_chk(self->heapWriter_->docIDs_), i)];
    }
    return sorted;
  }
  else {
    JreAssert((self->tempDir_ != nil), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:253 condition failed: assert tempDir != null;"));
    OrgApacheLuceneStoreByteArrayDataInput *reader = create_OrgApacheLuceneStoreByteArrayDataInput_init();
    id<JavaUtilComparator> cmp = create_OrgApacheLuceneRangetreeRangeTreeWriter_$2_initWithOrgApacheLuceneStoreByteArrayDataInput_(reader);
    OrgLukhnosPortmobileFilePath *sorted = [((OrgLukhnosPortmobileFilePath *) nil_chk(self->tempDir_)) resolveWithNSString:@"sorted"];
    jboolean success = false;
    @try {
      OrgApacheLuceneUtilOfflineSorter *sorter = create_OrgApacheLuceneUtilOfflineSorter_initWithJavaUtilComparator_withOrgApacheLuceneUtilOfflineSorter_BufferSize_withOrgLukhnosPortmobileFilePath_withInt_(cmp, OrgApacheLuceneUtilOfflineSorter_BufferSize_automatic(), self->tempDir_, OrgApacheLuceneUtilOfflineSorter_MAX_TEMPFILES);
      [sorter sortWithOrgLukhnosPortmobileFilePath:self->tempInput_ withOrgLukhnosPortmobileFilePath:sorted];
      id<OrgApacheLuceneRangetreeSliceWriter> writer = OrgApacheLuceneRangetreeRangeTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(self, sorted);
      success = true;
      return writer;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ sorted } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ sorted } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
      }
    }
  }
}

jboolean OrgApacheLuceneRangetreeRangeTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg) {
  @try {
    id<OrgLukhnosPortmobileFileDirectoryStream> dir = OrgLukhnosPortmobileFileFiles_newDirectoryStreamWithOrgLukhnosPortmobileFilePath_(inArg);
    NSException *__primaryException1 = nil;
    @try {
      for (OrgLukhnosPortmobileFilePath * __strong path in nil_chk(dir)) {
        JreAssert((false), (JreStrcat("$@$@", @"dir=", inArg, @" still has file=", path)));
        return false;
      }
    }
    @catch (NSException *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (dir != nil) {
        if (__primaryException1 != nil) {
          @try {
            [dir close];
          } @catch (NSException *e) {
            [__primaryException1 addSuppressedWithNSException:e];
          }
        } else {
          [dir close];
        }
      }
    }
  }
  @catch (JavaIoIOException *ioe) {
  }
  return true;
}

jlong OrgApacheLuceneRangetreeRangeTreeWriter_getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withLong_withLong_withLong_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *source, jlong leftCount, jlong minValue, jlong maxValue) {
  id<OrgApacheLuceneRangetreeSliceReader> reader = [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(((OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *) nil_chk(source))->writer_)) getReaderWithLong:source->start_ + leftCount];
  jboolean success = false;
  jlong splitValue;
  @try {
    jboolean result = [((id<OrgApacheLuceneRangetreeSliceReader>) nil_chk(reader)) next];
    JreAssert((result), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:437 condition failed: assert result;"));
    splitValue = [reader value];
    JreAssert((splitValue >= minValue && splitValue <= maxValue), (JreStrcat("$J$J$J$@", @"splitValue=", splitValue, @" minValue=", minValue, @" maxValue=", maxValue, @" reader=", reader)));
    success = true;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
    }
  }
  return splitValue;
}

void OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(OrgApacheLuceneRangetreeRangeTreeWriter *self, jint nodeID, jint leafNodeOffset, OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *source, OrgApacheLuceneStoreIndexOutput *outArg, jlong minValue, jlong maxValue, IOSLongArray *blockMinValues, IOSLongArray *leafBlockFPs) {
  jlong count = ((OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *) nil_chk(source))->count_;
  if ([source->writer_ isKindOfClass:[OrgApacheLuceneRangetreeOfflineSliceWriter class]] && count <= self->maxValuesSortInHeap_) {
    id<OrgApacheLuceneRangetreeSliceWriter> writer = create_OrgApacheLuceneRangetreeHeapSliceWriter_initWithInt_((jint) count);
    id<OrgApacheLuceneRangetreeSliceReader> reader = [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(source->writer_)) getReaderWithLong:source->start_];
    for (jint i = 0; i < count; i++) {
      jboolean hasNext = [((id<OrgApacheLuceneRangetreeSliceReader>) nil_chk(reader)) next];
      JreAssert((hasNext), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:468 condition failed: assert hasNext;"));
      [writer appendWithLong:[reader value] withLong:[reader ord] withInt:[reader docID]];
    }
    source = create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(writer, 0, count);
  }
  JreAssert((count > 0), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:475 condition failed: assert count > 0;"));
  if (nodeID >= leafNodeOffset) {
    JreAssert((maxValue >= minValue), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:479 condition failed: assert maxValue >= minValue;"));
    id<OrgApacheLuceneRangetreeSliceReader> reader = [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(source->writer_)) getReaderWithLong:source->start_];
    IOSIntArray *docIDs = [IOSIntArray arrayWithLength:(jint) count];
    jboolean success = false;
    @try {
      for (jint i = 0; i < source->count_; i++) {
        jboolean result = [((id<OrgApacheLuceneRangetreeSliceReader>) nil_chk(reader)) next];
        JreAssert((result), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:501 condition failed: assert result;"));
        *IOSIntArray_GetRef(docIDs, i) = [reader docID];
      }
      success = true;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
      }
    }
    JavaUtilArrays_sortWithIntArray_(docIDs);
    jint lastDocID = -1;
    jint uniqueCount = 0;
    for (jint i = 0; i < docIDs->size_; i++) {
      jint docID = IOSIntArray_Get(docIDs, i);
      if (docID != lastDocID) {
        uniqueCount++;
        lastDocID = docID;
      }
    }
    JreAssert((uniqueCount <= count), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:529 condition failed: assert uniqueCount <= count;"));
    jlong startFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(outArg)) getFilePointer];
    [outArg writeVIntWithInt:uniqueCount];
    jint blockID = nodeID - leafNodeOffset;
    *IOSLongArray_GetRef(nil_chk(leafBlockFPs), blockID) = startFP;
    *IOSLongArray_GetRef(nil_chk(blockMinValues), blockID) = minValue;
    lastDocID = -1;
    for (jint i = 0; i < docIDs->size_; i++) {
      jint docID = IOSIntArray_Get(docIDs, i);
      if (docID != lastDocID) {
        [outArg writeIntWithInt:docID];
        lastDocID = docID;
      }
    }
  }
  else {
    JreAssert((nodeID < ((IOSLongArray *) nil_chk(blockMinValues))->size_), (JreStrcat("$I$I", @"nodeID=", nodeID, @" blockMinValues.length=", blockMinValues->size_)));
    JreAssert((source->count_ == count), (@"org/apache/lucene/rangetree/RangeTreeWriter.java:562 condition failed: assert source.count == count;"));
    jlong leftCount = source->count_ / 2;
    jlong splitValue = OrgApacheLuceneRangetreeRangeTreeWriter_getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withLong_withLong_withLong_(self, source, leftCount, minValue, maxValue);
    OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(self, 2 * nodeID, leafNodeOffset, create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(source->writer_, source->start_, leftCount), outArg, minValue, splitValue, blockMinValues, leafBlockFPs);
    OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(self, 2 * nodeID + 1, leafNodeOffset, create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(source->writer_, source->start_ + leftCount, count - leftCount), outArg, splitValue, maxValue, blockMinValues, leafBlockFPs);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneRangetreeRangeTreeWriter)

@implementation OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice

- (instancetype)initWithOrgApacheLuceneRangetreeSliceWriter:(id<OrgApacheLuceneRangetreeSliceWriter>)writer
                                                   withLong:(jlong)start
                                                   withLong:(jlong)count {
  OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(self, writer, start, count);
  return self;
}

- (NSString *)description {
  return JreStrcat("$J$J$@C", @"PathSlice(start=", start_, @" count=", count_, @" writer=", writer_, ')');
}

- (void)dealloc {
  RELEASE_(writer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneRangetreeSliceWriter:withLong:withLong:", "PathSlice", NULL, 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", NULL, 0x10, "Lorg.apache.lucene.rangetree.SliceWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "start_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "count_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice = { 2, "PathSlice", "org.apache.lucene.rangetree", "RangeTreeWriter", 0x1a, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice;
}

@end

void OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *self, id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count) {
  NSObject_init(self);
  JreStrongAssign(&self->writer_, writer);
  self->start_ = start;
  self->count_ = count;
}

OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *new_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice, initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_, writer, start, count)
}

OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice, initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_, writer, start, count)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice)

@implementation OrgApacheLuceneRangetreeRangeTreeWriter_$1

- (void)swapWithInt:(jint)i
            withInt:(jint)j {
  jint docID = IOSIntArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(this$0_->heapWriter_))->docIDs_), i);
  *IOSIntArray_GetRef(this$0_->heapWriter_->docIDs_, i) = IOSIntArray_Get(this$0_->heapWriter_->docIDs_, j);
  *IOSIntArray_GetRef(this$0_->heapWriter_->docIDs_, j) = docID;
  jlong ord = IOSLongArray_Get(nil_chk(this$0_->heapWriter_->ords_), i);
  *IOSLongArray_GetRef(this$0_->heapWriter_->ords_, i) = IOSLongArray_Get(this$0_->heapWriter_->ords_, j);
  *IOSLongArray_GetRef(this$0_->heapWriter_->ords_, j) = ord;
  jlong value = IOSLongArray_Get(nil_chk(this$0_->heapWriter_->values_), i);
  *IOSLongArray_GetRef(this$0_->heapWriter_->values_, i) = IOSLongArray_Get(this$0_->heapWriter_->values_, j);
  *IOSLongArray_GetRef(this$0_->heapWriter_->values_, j) = value;
}

- (jint)compareWithInt:(jint)i
               withInt:(jint)j {
  jint cmp = JavaLangLong_compareWithLong_withLong_(IOSLongArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(this$0_->heapWriter_))->values_), i), IOSLongArray_Get(this$0_->heapWriter_->values_, j));
  if (cmp != 0) {
    return cmp;
  }
  cmp = JavaLangInteger_compareWithInt_withInt_(IOSIntArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(this$0_->heapWriter_))->docIDs_), i), IOSIntArray_Get(this$0_->heapWriter_->docIDs_, j));
  if (cmp != 0) {
    return cmp;
  }
  return JavaLangLong_compareWithLong_withLong_(IOSLongArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(this$0_->heapWriter_))->ords_), i), IOSLongArray_Get(this$0_->heapWriter_->ords_, j));
}

- (instancetype)initWithOrgApacheLuceneRangetreeRangeTreeWriter:(OrgApacheLuceneRangetreeRangeTreeWriter *)outer$ {
  OrgApacheLuceneRangetreeRangeTreeWriter_$1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "swapWithInt:withInt:", "swap", "V", 0x4, NULL, NULL },
    { "compareWithInt:withInt:", "compare", "I", 0x4, NULL, NULL },
    { "initWithOrgApacheLuceneRangetreeRangeTreeWriter:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.rangetree.RangeTreeWriter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneRangetreeRangeTreeWriter", "sort" };
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeWriter_$1 = { 2, "", "org.apache.lucene.rangetree", "RangeTreeWriter", 0x8008, 3, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneRangetreeRangeTreeWriter_$1;
}

@end

void OrgApacheLuceneRangetreeRangeTreeWriter_$1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter_$1 *self, OrgApacheLuceneRangetreeRangeTreeWriter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneUtilInPlaceMergeSorter_init(self);
}

OrgApacheLuceneRangetreeRangeTreeWriter_$1 *new_OrgApacheLuceneRangetreeRangeTreeWriter_$1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_$1, initWithOrgApacheLuceneRangetreeRangeTreeWriter_, outer$)
}

OrgApacheLuceneRangetreeRangeTreeWriter_$1 *create_OrgApacheLuceneRangetreeRangeTreeWriter_$1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_$1, initWithOrgApacheLuceneRangetreeRangeTreeWriter_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneRangetreeRangeTreeWriter_$1)

@implementation OrgApacheLuceneRangetreeRangeTreeWriter_$2

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b {
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(val$reader_)) resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(a))->bytes_ withInt:a->offset_ withInt:a->length_];
  jlong valueA = [val$reader_ readLong];
  jint docIDA = [val$reader_ readVInt];
  jlong ordA = [val$reader_ readVLong];
  [val$reader_ resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(b))->bytes_ withInt:b->offset_ withInt:b->length_];
  jlong valueB = [val$reader_ readLong];
  jint docIDB = [val$reader_ readVInt];
  jlong ordB = [val$reader_ readVLong];
  jint cmp = JavaLangLong_compareWithLong_withLong_(valueA, valueB);
  if (cmp != 0) {
    return cmp;
  }
  cmp = JavaLangInteger_compareWithInt_withInt_(docIDA, docIDB);
  if (cmp != 0) {
    return cmp;
  }
  return JavaLangLong_compareWithLong_withLong_(ordA, ordB);
}

- (instancetype)initWithOrgApacheLuceneStoreByteArrayDataInput:(OrgApacheLuceneStoreByteArrayDataInput *)capture$0 {
  OrgApacheLuceneRangetreeRangeTreeWriter_$2_initWithOrgApacheLuceneStoreByteArrayDataInput_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(readerB_);
  RELEASE_(val$reader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneStoreByteArrayDataInput:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "readerB_", NULL, 0x12, "Lorg.apache.lucene.store.ByteArrayDataInput;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$reader_", NULL, 0x1012, "Lorg.apache.lucene.store.ByteArrayDataInput;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneRangetreeRangeTreeWriter", "sort" };
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeWriter_$2 = { 2, "", "org.apache.lucene.rangetree", "RangeTreeWriter", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;" };
  return &_OrgApacheLuceneRangetreeRangeTreeWriter_$2;
}

@end

void OrgApacheLuceneRangetreeRangeTreeWriter_$2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneRangetreeRangeTreeWriter_$2 *self, OrgApacheLuceneStoreByteArrayDataInput *capture$0) {
  JreStrongAssign(&self->val$reader_, capture$0);
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->readerB_, new_OrgApacheLuceneStoreByteArrayDataInput_init());
}

OrgApacheLuceneRangetreeRangeTreeWriter_$2 *new_OrgApacheLuceneRangetreeRangeTreeWriter_$2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneStoreByteArrayDataInput *capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_$2, initWithOrgApacheLuceneStoreByteArrayDataInput_, capture$0)
}

OrgApacheLuceneRangetreeRangeTreeWriter_$2 *create_OrgApacheLuceneRangetreeRangeTreeWriter_$2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneStoreByteArrayDataInput *capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_$2, initWithOrgApacheLuceneStoreByteArrayDataInput_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneRangetreeRangeTreeWriter_$2)
