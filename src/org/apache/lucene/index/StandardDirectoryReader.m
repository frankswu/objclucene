//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/StandardDirectoryReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/BaseCompositeReader.h"
#include "org/apache/lucene/index/DirectoryReader.h"
#include "org/apache/lucene/index/IndexCommit.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/ReadersAndUpdates.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentInfos.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/index/StandardDirectoryReader.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/util/IOUtils.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneIndexStandardDirectoryReader () {
 @public
  jboolean applyAllDeletes_;
}

@end

@interface OrgApacheLuceneIndexStandardDirectoryReader_$1 : OrgApacheLuceneIndexSegmentInfos_FindSegmentsFile

- (OrgApacheLuceneIndexDirectoryReader *)doBodyWithNSString:(NSString *)segmentFileName;

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexStandardDirectoryReader_$1)

__attribute__((unused)) static void OrgApacheLuceneIndexStandardDirectoryReader_$1_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexStandardDirectoryReader_$1 *self, OrgApacheLuceneStoreDirectory *arg$0);

__attribute__((unused)) static OrgApacheLuceneIndexStandardDirectoryReader_$1 *new_OrgApacheLuceneIndexStandardDirectoryReader_$1_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreDirectory *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexStandardDirectoryReader_$1)

@implementation OrgApacheLuceneIndexStandardDirectoryReader

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)directory
              withOrgApacheLuceneIndexLeafReaderArray:(IOSObjectArray *)readers
                  withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                 withOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)sis
                                          withBoolean:(jboolean)applyAllDeletes {
  OrgApacheLuceneIndexStandardDirectoryReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentInfos_withBoolean_(self, directory, readers, writer, sis, applyAllDeletes);
  return self;
}

+ (OrgApacheLuceneIndexDirectoryReader *)openWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)directory
                                           withOrgApacheLuceneIndexIndexCommit:(OrgApacheLuceneIndexIndexCommit *)commit {
  return OrgApacheLuceneIndexStandardDirectoryReader_openWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexCommit_(directory, commit);
}

+ (OrgApacheLuceneIndexDirectoryReader *)openWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                                            withOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)infos
                                                                     withBoolean:(jboolean)applyAllDeletes {
  return OrgApacheLuceneIndexStandardDirectoryReader_openWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentInfos_withBoolean_(writer, infos, applyAllDeletes);
}

- (NSString *)description {
  JavaLangStringBuilder *buffer = [new_JavaLangStringBuilder_init() autorelease];
  [buffer appendWithNSString:[[self getClass] getSimpleName]];
  [buffer appendWithChar:'('];
  NSString *segmentsFile = [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(segmentInfos_)) getSegmentsFileName];
  if (segmentsFile != nil) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([buffer appendWithNSString:segmentsFile])) appendWithNSString:@":"])) appendWithLong:[segmentInfos_ getVersion]];
  }
  if (writer_ != nil) {
    [buffer appendWithNSString:@":nrt"];
  }
  for (OrgApacheLuceneIndexLeafReader * __strong r in nil_chk([self getSequentialSubReaders])) {
    [buffer appendWithChar:' '];
    [buffer appendWithId:r];
  }
  [buffer appendWithChar:')'];
  return [buffer description];
}

- (jlong)getVersion {
  [self ensureOpen];
  return [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(segmentInfos_)) getVersion];
}

- (void)doClose {
  JavaLangThrowable *firstExc = nil;
  for (OrgApacheLuceneIndexLeafReader * __strong r in nil_chk([self getSequentialSubReaders])) {
    @try {
      [((OrgApacheLuceneIndexLeafReader *) nil_chk(r)) decRef];
    }
    @catch (JavaLangThrowable *t) {
      if (firstExc == nil) {
        firstExc = t;
      }
    }
  }
  if (writer_ != nil) {
    @try {
      [writer_ decRefDeleterWithOrgApacheLuceneIndexSegmentInfos:segmentInfos_];
    }
    @catch (OrgApacheLuceneStoreAlreadyClosedException *ex) {
    }
  }
  OrgApacheLuceneUtilIOUtils_reThrowWithJavaLangThrowable_(firstExc);
}

- (void)dealloc {
  RELEASE_(writer_);
  RELEASE_(segmentInfos_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexLeafReaderArray:withOrgApacheLuceneIndexIndexWriter:withOrgApacheLuceneIndexSegmentInfos:withBoolean:", "StandardDirectoryReader", NULL, 0x0, "Ljava.io.IOException;", NULL },
    { "openWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexIndexCommit:", "open", "Lorg.apache.lucene.index.DirectoryReader;", 0x8, "Ljava.io.IOException;", NULL },
    { "openWithOrgApacheLuceneIndexIndexWriter:withOrgApacheLuceneIndexSegmentInfos:withBoolean:", "open", "Lorg.apache.lucene.index.DirectoryReader;", 0x8, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getVersion", NULL, "J", 0x1, NULL, NULL },
    { "doClose", NULL, "V", 0x4, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", NULL, 0x10, "Lorg.apache.lucene.index.IndexWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "segmentInfos_", NULL, 0x10, "Lorg.apache.lucene.index.SegmentInfos;", NULL, NULL, .constantValue.asLong = 0 },
    { "applyAllDeletes_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.index.StandardDirectoryReader$ReaderCommit;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexStandardDirectoryReader = { 2, "StandardDirectoryReader", "org.apache.lucene.index", NULL, 0x10, 6, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneIndexStandardDirectoryReader;
}

@end

void OrgApacheLuceneIndexStandardDirectoryReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentInfos_withBoolean_(OrgApacheLuceneIndexStandardDirectoryReader *self, OrgApacheLuceneStoreDirectory *directory, IOSObjectArray *readers, OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentInfos *sis, jboolean applyAllDeletes) {
  OrgApacheLuceneIndexDirectoryReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexLeafReaderArray_(self, directory, readers);
  JreStrongAssign(&self->writer_, writer);
  JreStrongAssign(&self->segmentInfos_, sis);
  self->applyAllDeletes_ = applyAllDeletes;
}

OrgApacheLuceneIndexStandardDirectoryReader *new_OrgApacheLuceneIndexStandardDirectoryReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentInfos_withBoolean_(OrgApacheLuceneStoreDirectory *directory, IOSObjectArray *readers, OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentInfos *sis, jboolean applyAllDeletes) {
  OrgApacheLuceneIndexStandardDirectoryReader *self = [OrgApacheLuceneIndexStandardDirectoryReader alloc];
  OrgApacheLuceneIndexStandardDirectoryReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentInfos_withBoolean_(self, directory, readers, writer, sis, applyAllDeletes);
  return self;
}

OrgApacheLuceneIndexDirectoryReader *OrgApacheLuceneIndexStandardDirectoryReader_openWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexCommit_(OrgApacheLuceneStoreDirectory *directory, OrgApacheLuceneIndexIndexCommit *commit) {
  OrgApacheLuceneIndexStandardDirectoryReader_initialize();
  return [((OrgApacheLuceneIndexStandardDirectoryReader_$1 *) [new_OrgApacheLuceneIndexStandardDirectoryReader_$1_initWithOrgApacheLuceneStoreDirectory_(directory) autorelease]) runWithOrgApacheLuceneIndexIndexCommit:commit];
}

OrgApacheLuceneIndexDirectoryReader *OrgApacheLuceneIndexStandardDirectoryReader_openWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentInfos_withBoolean_(OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentInfos *infos, jboolean applyAllDeletes) {
  OrgApacheLuceneIndexStandardDirectoryReader_initialize();
  jint numSegments = [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(infos)) size];
  id<JavaUtilList> readers = [new_JavaUtilArrayList_init() autorelease];
  OrgApacheLuceneStoreDirectory *dir = [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer)) getDirectory];
  OrgApacheLuceneIndexSegmentInfos *segmentInfos = [infos clone];
  jint infosUpto = 0;
  jboolean success = NO;
  @try {
    for (jint i = 0; i < numSegments; i++) {
      OrgApacheLuceneIndexSegmentCommitInfo *info = [infos infoWithInt:i];
      JreAssert((((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info))->info_))->dir_ == dir), (@"org/apache/lucene/index/StandardDirectoryReader.java:96 condition failed: assert info.info.dir == dir;"));
      OrgApacheLuceneIndexReadersAndUpdates *rld = [((OrgApacheLuceneIndexIndexWriter_ReaderPool *) nil_chk(writer->readerPool_)) getWithOrgApacheLuceneIndexSegmentCommitInfo:info withBoolean:YES];
      @try {
        OrgApacheLuceneIndexSegmentReader *reader = [((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(rld)) getReadOnlyCloneWithOrgApacheLuceneStoreIOContext:JreLoadStatic(OrgApacheLuceneStoreIOContext, READ_)];
        if ([((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader)) numDocs] > 0 || [writer getKeepFullyDeletedSegments]) {
          [readers addWithId:reader];
          infosUpto++;
        }
        else {
          [reader decRef];
          [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(segmentInfos)) removeWithInt:infosUpto];
        }
      }
      @finally {
        [writer->readerPool_ release__WithOrgApacheLuceneIndexReadersAndUpdates:rld];
      }
    }
    [writer incRefDeleterWithOrgApacheLuceneIndexSegmentInfos:segmentInfos];
    OrgApacheLuceneIndexStandardDirectoryReader *result = [new_OrgApacheLuceneIndexStandardDirectoryReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentInfos_withBoolean_(dir, [readers toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[readers size] type:OrgApacheLuceneIndexSegmentReader_class_()]], writer, segmentInfos, applyAllDeletes) autorelease];
    success = YES;
    return result;
  }
  @finally {
    if (!success) {
      for (OrgApacheLuceneIndexSegmentReader * __strong r in readers) {
        @try {
          [((OrgApacheLuceneIndexSegmentReader *) nil_chk(r)) decRef];
        }
        @catch (JavaLangThrowable *th) {
        }
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexStandardDirectoryReader)

@implementation OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit

- (instancetype)init {
  OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit = { 2, "ReaderCommit", "org.apache.lucene.index", "StandardDirectoryReader", 0x18, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit;
}

@end

void OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit_init(OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit *self) {
  NSObject_init(self);
}

OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit *new_OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit_init() {
  OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit *self = [OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit alloc];
  OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexStandardDirectoryReader_ReaderCommit)

@implementation OrgApacheLuceneIndexStandardDirectoryReader_$1

- (OrgApacheLuceneIndexDirectoryReader *)doBodyWithNSString:(NSString *)segmentFileName {
  OrgApacheLuceneIndexSegmentInfos *sis = OrgApacheLuceneIndexSegmentInfos_readCommitWithOrgApacheLuceneStoreDirectory_withNSString_(directory_, segmentFileName);
  IOSObjectArray *readers = [IOSObjectArray arrayWithLength:[((OrgApacheLuceneIndexSegmentInfos *) nil_chk(sis)) size] type:OrgApacheLuceneIndexSegmentReader_class_()];
  jboolean success = NO;
  @try {
    for (jint i = [sis size] - 1; i >= 0; i--) {
      IOSObjectArray_SetAndConsume(readers, i, new_OrgApacheLuceneIndexSegmentReader_initWithOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_([sis infoWithInt:i], JreLoadStatic(OrgApacheLuceneStoreIOContext, READ_)));
    }
    OrgApacheLuceneIndexDirectoryReader *reader = [new_OrgApacheLuceneIndexStandardDirectoryReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentInfos_withBoolean_(directory_, readers, nil, sis, NO) autorelease];
    success = YES;
    return reader;
  }
  @finally {
    if (success == NO) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_(readers);
    }
  }
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)arg$0 {
  OrgApacheLuceneIndexStandardDirectoryReader_$1_initWithOrgApacheLuceneStoreDirectory_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "doBodyWithNSString:", "doBody", "Lorg.apache.lucene.index.DirectoryReader;", 0x4, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneStoreDirectory:", "", NULL, 0x0, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.index.DirectoryReader;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneIndexStandardDirectoryReader", "openWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexIndexCommit:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexStandardDirectoryReader_$1 = { 2, "", "org.apache.lucene.index", "StandardDirectoryReader", 0x8008, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, &enclosing_method, "Lorg/apache/lucene/index/SegmentInfos$FindSegmentsFile<Lorg/apache/lucene/index/DirectoryReader;>;" };
  return &_OrgApacheLuceneIndexStandardDirectoryReader_$1;
}

@end

void OrgApacheLuceneIndexStandardDirectoryReader_$1_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexStandardDirectoryReader_$1 *self, OrgApacheLuceneStoreDirectory *arg$0) {
  OrgApacheLuceneIndexSegmentInfos_FindSegmentsFile_initWithOrgApacheLuceneStoreDirectory_(self, arg$0);
}

OrgApacheLuceneIndexStandardDirectoryReader_$1 *new_OrgApacheLuceneIndexStandardDirectoryReader_$1_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreDirectory *arg$0) {
  OrgApacheLuceneIndexStandardDirectoryReader_$1 *self = [OrgApacheLuceneIndexStandardDirectoryReader_$1 alloc];
  OrgApacheLuceneIndexStandardDirectoryReader_$1_initWithOrgApacheLuceneStoreDirectory_(self, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexStandardDirectoryReader_$1)
