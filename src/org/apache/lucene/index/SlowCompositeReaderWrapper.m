//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/SlowCompositeReaderWrapper.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/CompositeReader.h"
#include "org/apache/lucene/index/DocValues.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/MultiDocValues.h"
#include "org/apache/lucene/index/MultiFields.h"
#include "org/apache/lucene/index/NumericDocValues.h"
#include "org/apache/lucene/index/RandomAccessOrds.h"
#include "org/apache/lucene/index/SlowCompositeReaderWrapper.h"
#include "org/apache/lucene/index/SortedDocValues.h"
#include "org/apache/lucene/index/SortedNumericDocValues.h"
#include "org/apache/lucene/index/SortedSetDocValues.h"
#include "org/apache/lucene/index/StoredFieldVisitor.h"
#include "org/apache/lucene/util/Bits.h"

@interface OrgApacheLuceneIndexSlowCompositeReaderWrapper () {
 @public
  OrgApacheLuceneIndexCompositeReader *in_;
  OrgApacheLuceneIndexFields *fields_;
  jboolean merging_;
  id<JavaUtilMap> cachedOrdMaps_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSlowCompositeReaderWrapper, in_, OrgApacheLuceneIndexCompositeReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSlowCompositeReaderWrapper, fields_, OrgApacheLuceneIndexFields *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSlowCompositeReaderWrapper, cachedOrdMaps_, id<JavaUtilMap>)

@implementation OrgApacheLuceneIndexSlowCompositeReaderWrapper

+ (OrgApacheLuceneIndexLeafReader *)wrapWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  return OrgApacheLuceneIndexSlowCompositeReaderWrapper_wrapWithOrgApacheLuceneIndexIndexReader_(reader);
}

- (instancetype)initWithOrgApacheLuceneIndexCompositeReader:(OrgApacheLuceneIndexCompositeReader *)reader
                                                withBoolean:(jboolean)merging {
  OrgApacheLuceneIndexSlowCompositeReaderWrapper_initWithOrgApacheLuceneIndexCompositeReader_withBoolean_(self, reader, merging);
  return self;
}

- (NSString *)description {
  return JreStrcat("$@C", @"SlowCompositeReaderWrapper(", in_, ')');
}

- (void)addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  OrgApacheLuceneIndexLeafReader_addCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(in_, listener);
}

- (void)removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  OrgApacheLuceneIndexLeafReader_removeCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(in_, listener);
}

- (OrgApacheLuceneIndexFields *)fields {
  [self ensureOpen];
  return fields_;
}

- (OrgApacheLuceneIndexNumericDocValues *)getNumericDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  return OrgApacheLuceneIndexMultiDocValues_getNumericValuesWithOrgApacheLuceneIndexIndexReader_withNSString_(in_, field);
}

- (id<OrgApacheLuceneUtilBits>)getDocsWithFieldWithNSString:(NSString *)field {
  [self ensureOpen];
  return OrgApacheLuceneIndexMultiDocValues_getDocsWithFieldWithOrgApacheLuceneIndexIndexReader_withNSString_(in_, field);
}

- (OrgApacheLuceneIndexBinaryDocValues *)getBinaryDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  return OrgApacheLuceneIndexMultiDocValues_getBinaryValuesWithOrgApacheLuceneIndexIndexReader_withNSString_(in_, field);
}

- (OrgApacheLuceneIndexSortedNumericDocValues *)getSortedNumericDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  return OrgApacheLuceneIndexMultiDocValues_getSortedNumericValuesWithOrgApacheLuceneIndexIndexReader_withNSString_(in_, field);
}

- (OrgApacheLuceneIndexSortedDocValues *)getSortedDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexMultiDocValues_OrdinalMap *map = nil;
  @synchronized(cachedOrdMaps_) {
    map = [((id<JavaUtilMap>) nil_chk(cachedOrdMaps_)) getWithId:field];
    if (map == nil) {
      OrgApacheLuceneIndexSortedDocValues *dv = OrgApacheLuceneIndexMultiDocValues_getSortedValuesWithOrgApacheLuceneIndexIndexReader_withNSString_(in_, field);
      if ([dv isKindOfClass:[OrgApacheLuceneIndexMultiDocValues_MultiSortedDocValues class]]) {
        map = ((OrgApacheLuceneIndexMultiDocValues_MultiSortedDocValues *) nil_chk(((OrgApacheLuceneIndexMultiDocValues_MultiSortedDocValues *) check_class_cast(dv, [OrgApacheLuceneIndexMultiDocValues_MultiSortedDocValues class]))))->mapping_;
        if (((OrgApacheLuceneIndexMultiDocValues_OrdinalMap *) nil_chk(map))->owner_ == [self getCoreCacheKey] && merging_ == false) {
          [cachedOrdMaps_ putWithId:field withId:map];
        }
      }
      return dv;
    }
  }
  if ([((OrgApacheLuceneIndexFieldInfo *) nil_chk([((OrgApacheLuceneIndexFieldInfos *) nil_chk([self getFieldInfos])) fieldInfoWithNSString:field])) getDocValuesType] != JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, SORTED)) {
    return nil;
  }
  jint size = [((id<JavaUtilList>) nil_chk([((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) leaves])) size];
  IOSObjectArray *values = [IOSObjectArray arrayWithLength:size type:OrgApacheLuceneIndexSortedDocValues_class_()];
  IOSIntArray *starts = [IOSIntArray arrayWithLength:size + 1];
  for (jint i = 0; i < size; i++) {
    OrgApacheLuceneIndexLeafReaderContext *context = [((id<JavaUtilList>) nil_chk([in_ leaves])) getWithInt:i];
    OrgApacheLuceneIndexSortedDocValues *v = [((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) getSortedDocValuesWithNSString:field];
    if (v == nil) {
      v = OrgApacheLuceneIndexDocValues_emptySorted();
    }
    IOSObjectArray_Set(values, i, v);
    *IOSIntArray_GetRef(starts, i) = context->docBase_;
  }
  *IOSIntArray_GetRef(starts, size) = [self maxDoc];
  return [new_OrgApacheLuceneIndexMultiDocValues_MultiSortedDocValues_initWithOrgApacheLuceneIndexSortedDocValuesArray_withIntArray_withOrgApacheLuceneIndexMultiDocValues_OrdinalMap_(values, starts, map) autorelease];
}

- (OrgApacheLuceneIndexSortedSetDocValues *)getSortedSetDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexMultiDocValues_OrdinalMap *map = nil;
  @synchronized(cachedOrdMaps_) {
    map = [((id<JavaUtilMap>) nil_chk(cachedOrdMaps_)) getWithId:field];
    if (map == nil) {
      OrgApacheLuceneIndexSortedSetDocValues *dv = OrgApacheLuceneIndexMultiDocValues_getSortedSetValuesWithOrgApacheLuceneIndexIndexReader_withNSString_(in_, field);
      if ([dv isKindOfClass:[OrgApacheLuceneIndexMultiDocValues_MultiSortedSetDocValues class]]) {
        map = ((OrgApacheLuceneIndexMultiDocValues_MultiSortedSetDocValues *) nil_chk(((OrgApacheLuceneIndexMultiDocValues_MultiSortedSetDocValues *) check_class_cast(dv, [OrgApacheLuceneIndexMultiDocValues_MultiSortedSetDocValues class]))))->mapping_;
        if (((OrgApacheLuceneIndexMultiDocValues_OrdinalMap *) nil_chk(map))->owner_ == [self getCoreCacheKey] && merging_ == false) {
          [cachedOrdMaps_ putWithId:field withId:map];
        }
      }
      return dv;
    }
  }
  if ([((OrgApacheLuceneIndexFieldInfo *) nil_chk([((OrgApacheLuceneIndexFieldInfos *) nil_chk([self getFieldInfos])) fieldInfoWithNSString:field])) getDocValuesType] != JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, SORTED_SET)) {
    return nil;
  }
  JreAssert((map != nil), (@"org/apache/lucene/index/SlowCompositeReaderWrapper.java:177 condition failed: assert map != null;"));
  jint size = [((id<JavaUtilList>) nil_chk([((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) leaves])) size];
  IOSObjectArray *values = [IOSObjectArray arrayWithLength:size type:OrgApacheLuceneIndexSortedSetDocValues_class_()];
  IOSIntArray *starts = [IOSIntArray arrayWithLength:size + 1];
  for (jint i = 0; i < size; i++) {
    OrgApacheLuceneIndexLeafReaderContext *context = [((id<JavaUtilList>) nil_chk([in_ leaves])) getWithInt:i];
    OrgApacheLuceneIndexSortedSetDocValues *v = [((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) getSortedSetDocValuesWithNSString:field];
    if (v == nil) {
      v = OrgApacheLuceneIndexDocValues_emptySortedSet();
    }
    IOSObjectArray_Set(values, i, v);
    *IOSIntArray_GetRef(starts, i) = context->docBase_;
  }
  *IOSIntArray_GetRef(starts, size) = [self maxDoc];
  return [new_OrgApacheLuceneIndexMultiDocValues_MultiSortedSetDocValues_initWithOrgApacheLuceneIndexSortedSetDocValuesArray_withIntArray_withOrgApacheLuceneIndexMultiDocValues_OrdinalMap_(values, starts, map) autorelease];
}

- (OrgApacheLuceneIndexNumericDocValues *)getNormValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  return OrgApacheLuceneIndexMultiDocValues_getNormValuesWithOrgApacheLuceneIndexIndexReader_withNSString_(in_, field);
}

- (OrgApacheLuceneIndexFields *)getTermVectorsWithInt:(jint)docID {
  [self ensureOpen];
  return [((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) getTermVectorsWithInt:docID];
}

- (jint)numDocs {
  return [((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) numDocs];
}

- (jint)maxDoc {
  return [((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) maxDoc];
}

- (void)documentWithInt:(jint)docID
withOrgApacheLuceneIndexStoredFieldVisitor:(OrgApacheLuceneIndexStoredFieldVisitor *)visitor {
  [self ensureOpen];
  [((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) documentWithInt:docID withOrgApacheLuceneIndexStoredFieldVisitor:visitor];
}

- (id<OrgApacheLuceneUtilBits>)getLiveDocs {
  [self ensureOpen];
  return OrgApacheLuceneIndexMultiFields_getLiveDocsWithOrgApacheLuceneIndexIndexReader_(in_);
}

- (OrgApacheLuceneIndexFieldInfos *)getFieldInfos {
  [self ensureOpen];
  return OrgApacheLuceneIndexMultiFields_getMergedFieldInfosWithOrgApacheLuceneIndexIndexReader_(in_);
}

- (id)getCoreCacheKey {
  return [((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) getCoreCacheKey];
}

- (id)getCombinedCoreAndDeletesKey {
  return [((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) getCombinedCoreAndDeletesKey];
}

- (void)doClose {
  [((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) close];
}

- (void)checkIntegrity {
  [self ensureOpen];
  for (OrgApacheLuceneIndexLeafReaderContext * __strong ctx in nil_chk([((OrgApacheLuceneIndexCompositeReader *) nil_chk(in_)) leaves])) {
    [((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(ctx)) reader])) checkIntegrity];
  }
}

- (void)dealloc {
  RELEASE_(in_);
  RELEASE_(fields_);
  RELEASE_(cachedOrdMaps_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "wrapWithOrgApacheLuceneIndexIndexReader:", "wrap", "Lorg.apache.lucene.index.LeafReader;", 0x9, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneIndexCompositeReader:withBoolean:", "SlowCompositeReaderWrapper", NULL, 0x0, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:", "addCoreClosedListener", "V", 0x1, NULL, NULL },
    { "removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:", "removeCoreClosedListener", "V", 0x1, NULL, NULL },
    { "fields", NULL, "Lorg.apache.lucene.index.Fields;", 0x1, NULL, NULL },
    { "getNumericDocValuesWithNSString:", "getNumericDocValues", "Lorg.apache.lucene.index.NumericDocValues;", 0x1, "Ljava.io.IOException;", NULL },
    { "getDocsWithFieldWithNSString:", "getDocsWithField", "Lorg.apache.lucene.util.Bits;", 0x1, "Ljava.io.IOException;", NULL },
    { "getBinaryDocValuesWithNSString:", "getBinaryDocValues", "Lorg.apache.lucene.index.BinaryDocValues;", 0x1, "Ljava.io.IOException;", NULL },
    { "getSortedNumericDocValuesWithNSString:", "getSortedNumericDocValues", "Lorg.apache.lucene.index.SortedNumericDocValues;", 0x1, "Ljava.io.IOException;", NULL },
    { "getSortedDocValuesWithNSString:", "getSortedDocValues", "Lorg.apache.lucene.index.SortedDocValues;", 0x1, "Ljava.io.IOException;", NULL },
    { "getSortedSetDocValuesWithNSString:", "getSortedSetDocValues", "Lorg.apache.lucene.index.SortedSetDocValues;", 0x1, "Ljava.io.IOException;", NULL },
    { "getNormValuesWithNSString:", "getNormValues", "Lorg.apache.lucene.index.NumericDocValues;", 0x1, "Ljava.io.IOException;", NULL },
    { "getTermVectorsWithInt:", "getTermVectors", "Lorg.apache.lucene.index.Fields;", 0x1, "Ljava.io.IOException;", NULL },
    { "numDocs", NULL, "I", 0x1, NULL, NULL },
    { "maxDoc", NULL, "I", 0x1, NULL, NULL },
    { "documentWithInt:withOrgApacheLuceneIndexStoredFieldVisitor:", "document", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getLiveDocs", NULL, "Lorg.apache.lucene.util.Bits;", 0x1, NULL, NULL },
    { "getFieldInfos", NULL, "Lorg.apache.lucene.index.FieldInfos;", 0x1, NULL, NULL },
    { "getCoreCacheKey", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getCombinedCoreAndDeletesKey", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "doClose", NULL, "V", 0x4, "Ljava.io.IOException;", NULL },
    { "checkIntegrity", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "in_", NULL, 0x12, "Lorg.apache.lucene.index.CompositeReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "fields_", NULL, 0x12, "Lorg.apache.lucene.index.Fields;", NULL, NULL, .constantValue.asLong = 0 },
    { "merging_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "cachedOrdMaps_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/MultiDocValues$OrdinalMap;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexSlowCompositeReaderWrapper = { 2, "SlowCompositeReaderWrapper", "org.apache.lucene.index", NULL, 0x11, 23, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexSlowCompositeReaderWrapper;
}

@end

OrgApacheLuceneIndexLeafReader *OrgApacheLuceneIndexSlowCompositeReaderWrapper_wrapWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexIndexReader *reader) {
  OrgApacheLuceneIndexSlowCompositeReaderWrapper_initialize();
  if ([reader isKindOfClass:[OrgApacheLuceneIndexCompositeReader class]]) {
    return [new_OrgApacheLuceneIndexSlowCompositeReaderWrapper_initWithOrgApacheLuceneIndexCompositeReader_withBoolean_((OrgApacheLuceneIndexCompositeReader *) check_class_cast(reader, [OrgApacheLuceneIndexCompositeReader class]), false) autorelease];
  }
  else {
    JreAssert(([reader isKindOfClass:[OrgApacheLuceneIndexLeafReader class]]), (@"org/apache/lucene/index/SlowCompositeReaderWrapper.java:59 condition failed: assert reader instanceof LeafReader;"));
    return (OrgApacheLuceneIndexLeafReader *) check_class_cast(reader, [OrgApacheLuceneIndexLeafReader class]);
  }
}

void OrgApacheLuceneIndexSlowCompositeReaderWrapper_initWithOrgApacheLuceneIndexCompositeReader_withBoolean_(OrgApacheLuceneIndexSlowCompositeReaderWrapper *self, OrgApacheLuceneIndexCompositeReader *reader, jboolean merging) {
  OrgApacheLuceneIndexLeafReader_init(self);
  JreStrongAssignAndConsume(&self->cachedOrdMaps_, new_JavaUtilHashMap_init());
  JreStrongAssign(&self->in_, reader);
  JreStrongAssign(&self->fields_, OrgApacheLuceneIndexMultiFields_getFieldsWithOrgApacheLuceneIndexIndexReader_(self->in_));
  [((OrgApacheLuceneIndexCompositeReader *) nil_chk(self->in_)) registerParentReaderWithOrgApacheLuceneIndexIndexReader:self];
  self->merging_ = merging;
}

OrgApacheLuceneIndexSlowCompositeReaderWrapper *new_OrgApacheLuceneIndexSlowCompositeReaderWrapper_initWithOrgApacheLuceneIndexCompositeReader_withBoolean_(OrgApacheLuceneIndexCompositeReader *reader, jboolean merging) {
  OrgApacheLuceneIndexSlowCompositeReaderWrapper *self = [OrgApacheLuceneIndexSlowCompositeReaderWrapper alloc];
  OrgApacheLuceneIndexSlowCompositeReaderWrapper_initWithOrgApacheLuceneIndexCompositeReader_withBoolean_(self, reader, merging);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexSlowCompositeReaderWrapper)
