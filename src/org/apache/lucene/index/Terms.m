//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/Terms.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/apache/lucene/index/AutomatonTermsEnum.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/automaton/CompiledAutomaton.h"

@interface OrgApacheLuceneIndexTerms_$1 : OrgApacheLuceneIndexAutomatonTermsEnum {
 @public
  OrgApacheLuceneUtilBytesRef *val$startTerm_;
}

- (OrgApacheLuceneUtilBytesRef *)nextSeekTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

- (instancetype)initWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)capture$0
                  withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)arg$0
  withOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexTerms_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTerms_$1, val$startTerm_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneIndexTerms_$1_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_(OrgApacheLuceneIndexTerms_$1 *self, OrgApacheLuceneUtilBytesRef *capture$0, OrgApacheLuceneIndexTermsEnum *arg$0, OrgApacheLuceneUtilAutomatonCompiledAutomaton *arg$1);

__attribute__((unused)) static OrgApacheLuceneIndexTerms_$1 *new_OrgApacheLuceneIndexTerms_$1_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_(OrgApacheLuceneUtilBytesRef *capture$0, OrgApacheLuceneIndexTermsEnum *arg$0, OrgApacheLuceneUtilAutomatonCompiledAutomaton *arg$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexTerms_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneIndexTerms)

IOSObjectArray *OrgApacheLuceneIndexTerms_EMPTY_ARRAY_;

@implementation OrgApacheLuceneIndexTerms

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexTerms_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneIndexTermsEnum *)iterator {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneIndexTermsEnum *)intersectWithOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)compiled
                                                              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)startTerm {
  OrgApacheLuceneIndexTermsEnum *termsEnum = [self iterator];
  if (((OrgApacheLuceneUtilAutomatonCompiledAutomaton *) nil_chk(compiled))->type_ != JreLoadStatic(OrgApacheLuceneUtilAutomatonCompiledAutomaton_AUTOMATON_TYPEEnum, NORMAL)) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"please use CompiledAutomaton.getTermsEnum instead") autorelease];
  }
  if (startTerm == nil) {
    return [new_OrgApacheLuceneIndexAutomatonTermsEnum_initWithOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_(termsEnum, compiled) autorelease];
  }
  else {
    return [new_OrgApacheLuceneIndexTerms_$1_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_(startTerm, termsEnum, compiled) autorelease];
  }
}

- (jlong)size {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getSumTotalTermFreq {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getSumDocFreq {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getDocCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasFreqs {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasOffsets {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasPositions {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasPayloads {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneUtilBytesRef *)getMin {
  return [((OrgApacheLuceneIndexTermsEnum *) nil_chk([self iterator])) next];
}

- (OrgApacheLuceneUtilBytesRef *)getMax {
  jlong size = [self size];
  if (size == 0) {
    return nil;
  }
  else if (size >= 0) {
    @try {
      OrgApacheLuceneIndexTermsEnum *iterator = [self iterator];
      [((OrgApacheLuceneIndexTermsEnum *) nil_chk(iterator)) seekExactWithLong:size - 1];
      return [iterator term];
    }
    @catch (JavaLangUnsupportedOperationException *e) {
    }
  }
  OrgApacheLuceneIndexTermsEnum *iterator = [self iterator];
  OrgApacheLuceneUtilBytesRef *v = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(iterator)) next];
  if (v == nil) {
    return v;
  }
  OrgApacheLuceneUtilBytesRefBuilder *scratch = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
  [scratch appendWithByte:(jbyte) 0];
  while (true) {
    jint low = 0;
    jint high = 256;
    while (low != high) {
      jint mid = JreURShift32((low + high), 1);
      [scratch setByteAtWithInt:[scratch length] - 1 withByte:(jbyte) mid];
      if ([iterator seekCeilWithOrgApacheLuceneUtilBytesRef:[scratch get]] == JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END)) {
        if (mid == 0) {
          [scratch setLengthWithInt:[scratch length] - 1];
          return [scratch get];
        }
        high = mid;
      }
      else {
        if (low == mid) {
          break;
        }
        low = mid;
      }
    }
    [scratch setLengthWithInt:[scratch length] + 1];
    [scratch growWithInt:[scratch length]];
  }
}

- (id)getStats {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [sb appendWithNSString:JreStrcat("$$", @"impl=", [[self getClass] getSimpleName])];
  [sb appendWithNSString:JreStrcat("$J", @",size=", [self size])];
  [sb appendWithNSString:JreStrcat("$I", @",docCount=", [self getDocCount])];
  [sb appendWithNSString:JreStrcat("$J", @",sumTotalTermFreq=", [self getSumTotalTermFreq])];
  [sb appendWithNSString:JreStrcat("$J", @",sumDocFreq=", [self getSumDocFreq])];
  return [sb description];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneIndexTerms class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneIndexTerms_EMPTY_ARRAY_, [IOSObjectArray newArrayWithLength:0 type:OrgApacheLuceneIndexTerms_class_()]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneIndexTerms)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Terms", NULL, 0x4, NULL, NULL },
    { "iterator", NULL, "Lorg.apache.lucene.index.TermsEnum;", 0x401, "Ljava.io.IOException;", NULL },
    { "intersectWithOrgApacheLuceneUtilAutomatonCompiledAutomaton:withOrgApacheLuceneUtilBytesRef:", "intersect", "Lorg.apache.lucene.index.TermsEnum;", 0x1, "Ljava.io.IOException;", NULL },
    { "size", NULL, "J", 0x401, "Ljava.io.IOException;", NULL },
    { "getSumTotalTermFreq", NULL, "J", 0x401, "Ljava.io.IOException;", NULL },
    { "getSumDocFreq", NULL, "J", 0x401, "Ljava.io.IOException;", NULL },
    { "getDocCount", NULL, "I", 0x401, "Ljava.io.IOException;", NULL },
    { "hasFreqs", NULL, "Z", 0x401, NULL, NULL },
    { "hasOffsets", NULL, "Z", 0x401, NULL, NULL },
    { "hasPositions", NULL, "Z", 0x401, NULL, NULL },
    { "hasPayloads", NULL, "Z", 0x401, NULL, NULL },
    { "getMin", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "getMax", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, "Ljava.io.IOException;", NULL },
    { "getStats", NULL, "Ljava.lang.Object;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_ARRAY_", NULL, 0x19, "[Lorg.apache.lucene.index.Terms;", &OrgApacheLuceneIndexTerms_EMPTY_ARRAY_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTerms = { 2, "Terms", "org.apache.lucene.index", NULL, 0x401, 14, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexTerms;
}

@end

void OrgApacheLuceneIndexTerms_init(OrgApacheLuceneIndexTerms *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTerms)

@implementation OrgApacheLuceneIndexTerms_$1

- (OrgApacheLuceneUtilBytesRef *)nextSeekTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  if (term == nil) {
    term = val$startTerm_;
  }
  return [super nextSeekTermWithOrgApacheLuceneUtilBytesRef:term];
}

- (instancetype)initWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)capture$0
                  withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)arg$0
  withOrgApacheLuceneUtilAutomatonCompiledAutomaton:(OrgApacheLuceneUtilAutomatonCompiledAutomaton *)arg$1 {
  OrgApacheLuceneIndexTerms_$1_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_(self, capture$0, arg$0, arg$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$startTerm_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "nextSeekTermWithOrgApacheLuceneUtilBytesRef:", "nextSeekTerm", "Lorg.apache.lucene.util.BytesRef;", 0x4, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneIndexTermsEnum:withOrgApacheLuceneUtilAutomatonCompiledAutomaton:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$startTerm_", NULL, 0x1012, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneIndexTerms", "intersectWithOrgApacheLuceneUtilAutomatonCompiledAutomaton:withOrgApacheLuceneUtilBytesRef:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTerms_$1 = { 2, "", "org.apache.lucene.index", "Terms", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneIndexTerms_$1;
}

@end

void OrgApacheLuceneIndexTerms_$1_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_(OrgApacheLuceneIndexTerms_$1 *self, OrgApacheLuceneUtilBytesRef *capture$0, OrgApacheLuceneIndexTermsEnum *arg$0, OrgApacheLuceneUtilAutomatonCompiledAutomaton *arg$1) {
  JreStrongAssign(&self->val$startTerm_, capture$0);
  OrgApacheLuceneIndexAutomatonTermsEnum_initWithOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_(self, arg$0, arg$1);
}

OrgApacheLuceneIndexTerms_$1 *new_OrgApacheLuceneIndexTerms_$1_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_(OrgApacheLuceneUtilBytesRef *capture$0, OrgApacheLuceneIndexTermsEnum *arg$0, OrgApacheLuceneUtilAutomatonCompiledAutomaton *arg$1) {
  OrgApacheLuceneIndexTerms_$1 *self = [OrgApacheLuceneIndexTerms_$1 alloc];
  OrgApacheLuceneIndexTerms_$1_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneIndexTermsEnum_withOrgApacheLuceneUtilAutomatonCompiledAutomaton_(self, capture$0, arg$0, arg$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTerms_$1)
