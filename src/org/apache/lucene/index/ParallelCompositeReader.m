//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/ParallelCompositeReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Collections.h"
#include "java/util/IdentityHashMap.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/BaseCompositeReader.h"
#include "org/apache/lucene/index/CompositeReader.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/ParallelCompositeReader.h"
#include "org/apache/lucene/index/ParallelLeafReader.h"

@interface OrgApacheLuceneIndexParallelCompositeReader () {
 @public
  jboolean closeSubReaders_;
  id<JavaUtilSet> completeReaderSet_;
}

+ (IOSObjectArray *)prepareLeafReadersWithOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)readers
                                      withOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)storedFieldsReaders;

+ (void)validateWithOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)readers
                                                     withInt:(jint)maxDoc
                                                withIntArray:(IOSIntArray *)leafMaxDoc;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelCompositeReader, completeReaderSet_, id<JavaUtilSet>)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexParallelCompositeReader_prepareLeafReadersWithOrgApacheLuceneIndexCompositeReaderArray_withOrgApacheLuceneIndexCompositeReaderArray_(IOSObjectArray *readers, IOSObjectArray *storedFieldsReaders);

__attribute__((unused)) static void OrgApacheLuceneIndexParallelCompositeReader_validateWithOrgApacheLuceneIndexCompositeReaderArray_withInt_withIntArray_(IOSObjectArray *readers, jint maxDoc, IOSIntArray *leafMaxDoc);

@interface OrgApacheLuceneIndexParallelCompositeReader_$1 : OrgApacheLuceneIndexParallelLeafReader

- (void)doClose;

- (instancetype)initWithBoolean:(jboolean)arg$0
withOrgApacheLuceneIndexLeafReaderArray:(IOSObjectArray *)arg$1
withOrgApacheLuceneIndexLeafReaderArray:(IOSObjectArray *)arg$2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexParallelCompositeReader_$1)

__attribute__((unused)) static void OrgApacheLuceneIndexParallelCompositeReader_$1_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(OrgApacheLuceneIndexParallelCompositeReader_$1 *self, jboolean arg$0, IOSObjectArray *arg$1, IOSObjectArray *arg$2);

__attribute__((unused)) static OrgApacheLuceneIndexParallelCompositeReader_$1 *new_OrgApacheLuceneIndexParallelCompositeReader_$1_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(jboolean arg$0, IOSObjectArray *arg$1, IOSObjectArray *arg$2) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexParallelCompositeReader_$1)

@implementation OrgApacheLuceneIndexParallelCompositeReader

- (instancetype)initWithOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)readers {
  OrgApacheLuceneIndexParallelCompositeReader_initWithOrgApacheLuceneIndexCompositeReaderArray_(self, readers);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)closeSubReaders
withOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)readers {
  OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_(self, closeSubReaders, readers);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)closeSubReaders
withOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)readers
withOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)storedFieldReaders {
  OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_withOrgApacheLuceneIndexCompositeReaderArray_(self, closeSubReaders, readers, storedFieldReaders);
  return self;
}

+ (IOSObjectArray *)prepareLeafReadersWithOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)readers
                                      withOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)storedFieldsReaders {
  return OrgApacheLuceneIndexParallelCompositeReader_prepareLeafReadersWithOrgApacheLuceneIndexCompositeReaderArray_withOrgApacheLuceneIndexCompositeReaderArray_(readers, storedFieldsReaders);
}

+ (void)validateWithOrgApacheLuceneIndexCompositeReaderArray:(IOSObjectArray *)readers
                                                     withInt:(jint)maxDoc
                                                withIntArray:(IOSIntArray *)leafMaxDoc {
  OrgApacheLuceneIndexParallelCompositeReader_validateWithOrgApacheLuceneIndexCompositeReaderArray_withInt_withIntArray_(readers, maxDoc, leafMaxDoc);
}

- (void)doClose {
  @synchronized(self) {
    JavaIoIOException *ioe = nil;
    for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(completeReaderSet_)) {
      @try {
        if (closeSubReaders_) {
          [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) close];
        }
        else {
          [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) decRef];
        }
      }
      @catch (JavaIoIOException *e) {
        if (ioe == nil) ioe = e;
      }
    }
    if (ioe != nil) @throw ioe;
  }
}

- (void)dealloc {
  RELEASE_(completeReaderSet_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexCompositeReaderArray:", "ParallelCompositeReader", NULL, 0x81, "Ljava.io.IOException;", NULL },
    { "initWithBoolean:withOrgApacheLuceneIndexCompositeReaderArray:", "ParallelCompositeReader", NULL, 0x81, "Ljava.io.IOException;", NULL },
    { "initWithBoolean:withOrgApacheLuceneIndexCompositeReaderArray:withOrgApacheLuceneIndexCompositeReaderArray:", "ParallelCompositeReader", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "prepareLeafReadersWithOrgApacheLuceneIndexCompositeReaderArray:withOrgApacheLuceneIndexCompositeReaderArray:", "prepareLeafReaders", "[Lorg.apache.lucene.index.LeafReader;", 0xa, "Ljava.io.IOException;", NULL },
    { "validateWithOrgApacheLuceneIndexCompositeReaderArray:withInt:withIntArray:", "validate", "V", 0xa, NULL, NULL },
    { "doClose", NULL, "V", 0x24, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "closeSubReaders_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "completeReaderSet_", NULL, 0x12, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lorg/apache/lucene/index/IndexReader;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.index.LeafReader;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexParallelCompositeReader = { 2, "ParallelCompositeReader", "org.apache.lucene.index", NULL, 0x1, 6, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/index/BaseCompositeReader<Lorg/apache/lucene/index/LeafReader;>;" };
  return &_OrgApacheLuceneIndexParallelCompositeReader;
}

@end

void OrgApacheLuceneIndexParallelCompositeReader_initWithOrgApacheLuceneIndexCompositeReaderArray_(OrgApacheLuceneIndexParallelCompositeReader *self, IOSObjectArray *readers) {
  OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_(self, true, readers);
}

OrgApacheLuceneIndexParallelCompositeReader *new_OrgApacheLuceneIndexParallelCompositeReader_initWithOrgApacheLuceneIndexCompositeReaderArray_(IOSObjectArray *readers) {
  OrgApacheLuceneIndexParallelCompositeReader *self = [OrgApacheLuceneIndexParallelCompositeReader alloc];
  OrgApacheLuceneIndexParallelCompositeReader_initWithOrgApacheLuceneIndexCompositeReaderArray_(self, readers);
  return self;
}

void OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_(OrgApacheLuceneIndexParallelCompositeReader *self, jboolean closeSubReaders, IOSObjectArray *readers) {
  OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_withOrgApacheLuceneIndexCompositeReaderArray_(self, closeSubReaders, readers, readers);
}

OrgApacheLuceneIndexParallelCompositeReader *new_OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_(jboolean closeSubReaders, IOSObjectArray *readers) {
  OrgApacheLuceneIndexParallelCompositeReader *self = [OrgApacheLuceneIndexParallelCompositeReader alloc];
  OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_(self, closeSubReaders, readers);
  return self;
}

void OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_withOrgApacheLuceneIndexCompositeReaderArray_(OrgApacheLuceneIndexParallelCompositeReader *self, jboolean closeSubReaders, IOSObjectArray *readers, IOSObjectArray *storedFieldReaders) {
  OrgApacheLuceneIndexBaseCompositeReader_initWithOrgApacheLuceneIndexIndexReaderArray_(self, OrgApacheLuceneIndexParallelCompositeReader_prepareLeafReadersWithOrgApacheLuceneIndexCompositeReaderArray_withOrgApacheLuceneIndexCompositeReaderArray_(readers, storedFieldReaders));
  JreStrongAssign(&self->completeReaderSet_, JavaUtilCollections_newSetFromMapWithJavaUtilMap_([new_JavaUtilIdentityHashMap_init() autorelease]));
  self->closeSubReaders_ = closeSubReaders;
  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(self->completeReaderSet_, readers);
  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(self->completeReaderSet_, storedFieldReaders);
  if (!closeSubReaders) {
    for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(self->completeReaderSet_)) {
      [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) incRef];
    }
  }
  [((id<JavaUtilSet>) nil_chk(self->completeReaderSet_)) addAllWithJavaUtilCollection:[self getSequentialSubReaders]];
}

OrgApacheLuceneIndexParallelCompositeReader *new_OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_withOrgApacheLuceneIndexCompositeReaderArray_(jboolean closeSubReaders, IOSObjectArray *readers, IOSObjectArray *storedFieldReaders) {
  OrgApacheLuceneIndexParallelCompositeReader *self = [OrgApacheLuceneIndexParallelCompositeReader alloc];
  OrgApacheLuceneIndexParallelCompositeReader_initWithBoolean_withOrgApacheLuceneIndexCompositeReaderArray_withOrgApacheLuceneIndexCompositeReaderArray_(self, closeSubReaders, readers, storedFieldReaders);
  return self;
}

IOSObjectArray *OrgApacheLuceneIndexParallelCompositeReader_prepareLeafReadersWithOrgApacheLuceneIndexCompositeReaderArray_withOrgApacheLuceneIndexCompositeReaderArray_(IOSObjectArray *readers, IOSObjectArray *storedFieldsReaders) {
  OrgApacheLuceneIndexParallelCompositeReader_initialize();
  if (((IOSObjectArray *) nil_chk(readers))->size_ == 0) {
    if (((IOSObjectArray *) nil_chk(storedFieldsReaders))->size_ > 0) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"There must be at least one main reader if storedFieldsReaders are used.") autorelease];
    return [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneIndexLeafReader_class_()];
  }
  else {
    id<JavaUtilList> firstLeaves = [((OrgApacheLuceneIndexCompositeReader *) nil_chk(IOSObjectArray_Get(readers, 0))) leaves];
    jint maxDoc = [((OrgApacheLuceneIndexCompositeReader *) nil_chk(IOSObjectArray_Get(readers, 0))) maxDoc], noLeaves = [((id<JavaUtilList>) nil_chk(firstLeaves)) size];
    IOSIntArray *leafMaxDoc = [IOSIntArray arrayWithLength:noLeaves];
    for (jint i = 0; i < noLeaves; i++) {
      OrgApacheLuceneIndexLeafReader *r = [((OrgApacheLuceneIndexLeafReaderContext *) nil_chk([firstLeaves getWithInt:i])) reader];
      *IOSIntArray_GetRef(leafMaxDoc, i) = [((OrgApacheLuceneIndexLeafReader *) nil_chk(r)) maxDoc];
    }
    OrgApacheLuceneIndexParallelCompositeReader_validateWithOrgApacheLuceneIndexCompositeReaderArray_withInt_withIntArray_(readers, maxDoc, leafMaxDoc);
    OrgApacheLuceneIndexParallelCompositeReader_validateWithOrgApacheLuceneIndexCompositeReaderArray_withInt_withIntArray_(storedFieldsReaders, maxDoc, leafMaxDoc);
    IOSObjectArray *wrappedLeaves = [IOSObjectArray arrayWithLength:noLeaves type:OrgApacheLuceneIndexLeafReader_class_()];
    for (jint i = 0; i < wrappedLeaves->size_; i++) {
      IOSObjectArray *subs = [IOSObjectArray arrayWithLength:readers->size_ type:OrgApacheLuceneIndexLeafReader_class_()];
      for (jint j = 0; j < readers->size_; j++) {
        IOSObjectArray_Set(subs, j, [((OrgApacheLuceneIndexLeafReaderContext *) nil_chk([((id<JavaUtilList>) nil_chk([((OrgApacheLuceneIndexCompositeReader *) nil_chk(IOSObjectArray_Get(readers, j))) leaves])) getWithInt:i])) reader]);
      }
      IOSObjectArray *storedSubs = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(storedFieldsReaders))->size_ type:OrgApacheLuceneIndexLeafReader_class_()];
      for (jint j = 0; j < storedFieldsReaders->size_; j++) {
        IOSObjectArray_Set(storedSubs, j, [((OrgApacheLuceneIndexLeafReaderContext *) nil_chk([((id<JavaUtilList>) nil_chk([((OrgApacheLuceneIndexCompositeReader *) nil_chk(IOSObjectArray_Get(storedFieldsReaders, j))) leaves])) getWithInt:i])) reader]);
      }
      IOSObjectArray_SetAndConsume(wrappedLeaves, i, new_OrgApacheLuceneIndexParallelCompositeReader_$1_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(true, subs, storedSubs));
    }
    return wrappedLeaves;
  }
}

void OrgApacheLuceneIndexParallelCompositeReader_validateWithOrgApacheLuceneIndexCompositeReaderArray_withInt_withIntArray_(IOSObjectArray *readers, jint maxDoc, IOSIntArray *leafMaxDoc) {
  OrgApacheLuceneIndexParallelCompositeReader_initialize();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(readers))->size_; i++) {
    OrgApacheLuceneIndexCompositeReader *reader = IOSObjectArray_Get(readers, i);
    id<JavaUtilList> subs = [((OrgApacheLuceneIndexCompositeReader *) nil_chk(reader)) leaves];
    if ([reader maxDoc] != maxDoc) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"All readers must have same maxDoc: ", maxDoc, @"!=", [reader maxDoc])) autorelease];
    }
    jint noSubs = [((id<JavaUtilList>) nil_chk(subs)) size];
    if (noSubs != ((IOSIntArray *) nil_chk(leafMaxDoc))->size_) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"All readers must have same number of leaf readers") autorelease];
    }
    for (jint subIDX = 0; subIDX < noSubs; subIDX++) {
      OrgApacheLuceneIndexLeafReader *r = [((OrgApacheLuceneIndexLeafReaderContext *) nil_chk([subs getWithInt:subIDX])) reader];
      if ([((OrgApacheLuceneIndexLeafReader *) nil_chk(r)) maxDoc] != IOSIntArray_Get(leafMaxDoc, subIDX)) {
        @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"All leaf readers must have same corresponding subReader maxDoc") autorelease];
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexParallelCompositeReader)

@implementation OrgApacheLuceneIndexParallelCompositeReader_$1

- (void)doClose {
}

- (instancetype)initWithBoolean:(jboolean)arg$0
withOrgApacheLuceneIndexLeafReaderArray:(IOSObjectArray *)arg$1
withOrgApacheLuceneIndexLeafReaderArray:(IOSObjectArray *)arg$2 {
  OrgApacheLuceneIndexParallelCompositeReader_$1_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(self, arg$0, arg$1, arg$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "doClose", NULL, "V", 0x4, NULL, NULL },
    { "initWithBoolean:withOrgApacheLuceneIndexLeafReaderArray:withOrgApacheLuceneIndexLeafReaderArray:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneIndexParallelCompositeReader", "prepareLeafReadersWithOrgApacheLuceneIndexCompositeReaderArray:withOrgApacheLuceneIndexCompositeReaderArray:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexParallelCompositeReader_$1 = { 2, "", "org.apache.lucene.index", "ParallelCompositeReader", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneIndexParallelCompositeReader_$1;
}

@end

void OrgApacheLuceneIndexParallelCompositeReader_$1_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(OrgApacheLuceneIndexParallelCompositeReader_$1 *self, jboolean arg$0, IOSObjectArray *arg$1, IOSObjectArray *arg$2) {
  OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(self, arg$0, arg$1, arg$2);
}

OrgApacheLuceneIndexParallelCompositeReader_$1 *new_OrgApacheLuceneIndexParallelCompositeReader_$1_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(jboolean arg$0, IOSObjectArray *arg$1, IOSObjectArray *arg$2) {
  OrgApacheLuceneIndexParallelCompositeReader_$1 *self = [OrgApacheLuceneIndexParallelCompositeReader_$1 alloc];
  OrgApacheLuceneIndexParallelCompositeReader_$1_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(self, arg$0, arg$1, arg$2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexParallelCompositeReader_$1)
