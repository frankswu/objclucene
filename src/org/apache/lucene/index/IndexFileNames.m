//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/IndexFileNames.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/util/regex/Pattern.h"
#include "org/apache/lucene/index/IndexFileNames.h"

@interface OrgApacheLuceneIndexIndexFileNames ()

/*!
 @brief No instance
 */
- (instancetype)init;

/*!
 @brief locates the boundary of the segment name, or -1
 */
+ (jint)indexOfSegmentNameWithNSString:(NSString *)filename;

@end

__attribute__((unused)) static void OrgApacheLuceneIndexIndexFileNames_init(OrgApacheLuceneIndexIndexFileNames *self);

__attribute__((unused)) static OrgApacheLuceneIndexIndexFileNames *new_OrgApacheLuceneIndexIndexFileNames_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexIndexFileNames *create_OrgApacheLuceneIndexIndexFileNames_init();

__attribute__((unused)) static jint OrgApacheLuceneIndexIndexFileNames_indexOfSegmentNameWithNSString_(NSString *filename);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneIndexIndexFileNames)

NSString *OrgApacheLuceneIndexIndexFileNames_SEGMENTS = @"segments";
NSString *OrgApacheLuceneIndexIndexFileNames_PENDING_SEGMENTS = @"pending_segments";
NSString *OrgApacheLuceneIndexIndexFileNames_OLD_SEGMENTS_GEN = @"segments.gen";
JavaUtilRegexPattern *OrgApacheLuceneIndexIndexFileNames_CODEC_FILE_PATTERN;

@implementation OrgApacheLuceneIndexIndexFileNames

+ (NSString *)SEGMENTS {
  return OrgApacheLuceneIndexIndexFileNames_SEGMENTS;
}

+ (NSString *)PENDING_SEGMENTS {
  return OrgApacheLuceneIndexIndexFileNames_PENDING_SEGMENTS;
}

+ (NSString *)OLD_SEGMENTS_GEN {
  return OrgApacheLuceneIndexIndexFileNames_OLD_SEGMENTS_GEN;
}

+ (JavaUtilRegexPattern *)CODEC_FILE_PATTERN {
  return OrgApacheLuceneIndexIndexFileNames_CODEC_FILE_PATTERN;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexIndexFileNames_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)fileNameFromGenerationWithNSString:(NSString *)base
                                    withNSString:(NSString *)ext
                                        withLong:(jlong)gen {
  return OrgApacheLuceneIndexIndexFileNames_fileNameFromGenerationWithNSString_withNSString_withLong_(base, ext, gen);
}

+ (NSString *)segmentFileNameWithNSString:(NSString *)segmentName
                             withNSString:(NSString *)segmentSuffix
                             withNSString:(NSString *)ext {
  return OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(segmentName, segmentSuffix, ext);
}

+ (jboolean)matchesExtensionWithNSString:(NSString *)filename
                            withNSString:(NSString *)ext {
  return OrgApacheLuceneIndexIndexFileNames_matchesExtensionWithNSString_withNSString_(filename, ext);
}

+ (jint)indexOfSegmentNameWithNSString:(NSString *)filename {
  return OrgApacheLuceneIndexIndexFileNames_indexOfSegmentNameWithNSString_(filename);
}

+ (NSString *)stripSegmentNameWithNSString:(NSString *)filename {
  return OrgApacheLuceneIndexIndexFileNames_stripSegmentNameWithNSString_(filename);
}

+ (jlong)parseGenerationWithNSString:(NSString *)filename {
  return OrgApacheLuceneIndexIndexFileNames_parseGenerationWithNSString_(filename);
}

+ (NSString *)parseSegmentNameWithNSString:(NSString *)filename {
  return OrgApacheLuceneIndexIndexFileNames_parseSegmentNameWithNSString_(filename);
}

+ (NSString *)stripExtensionWithNSString:(NSString *)filename {
  return OrgApacheLuceneIndexIndexFileNames_stripExtensionWithNSString_(filename);
}

+ (NSString *)getExtensionWithNSString:(NSString *)filename {
  return OrgApacheLuceneIndexIndexFileNames_getExtensionWithNSString_(filename);
}

+ (void)initialize {
  if (self == [OrgApacheLuceneIndexIndexFileNames class]) {
    JreStrongAssign(&OrgApacheLuceneIndexIndexFileNames_CODEC_FILE_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"_[a-z0-9]+(_.*)?\\..*"));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneIndexIndexFileNames)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "IndexFileNames", NULL, 0x2, NULL, NULL },
    { "fileNameFromGenerationWithNSString:withNSString:withLong:", "fileNameFromGeneration", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "segmentFileNameWithNSString:withNSString:withNSString:", "segmentFileName", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "matchesExtensionWithNSString:withNSString:", "matchesExtension", "Z", 0x9, NULL, NULL },
    { "indexOfSegmentNameWithNSString:", "indexOfSegmentName", "I", 0xa, NULL, NULL },
    { "stripSegmentNameWithNSString:", "stripSegmentName", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "parseGenerationWithNSString:", "parseGeneration", "J", 0x9, NULL, NULL },
    { "parseSegmentNameWithNSString:", "parseSegmentName", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "stripExtensionWithNSString:", "stripExtension", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getExtensionWithNSString:", "getExtension", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "SEGMENTS", "SEGMENTS", 0x19, "Ljava.lang.String;", &OrgApacheLuceneIndexIndexFileNames_SEGMENTS, NULL, .constantValue.asLong = 0 },
    { "PENDING_SEGMENTS", "PENDING_SEGMENTS", 0x19, "Ljava.lang.String;", &OrgApacheLuceneIndexIndexFileNames_PENDING_SEGMENTS, NULL, .constantValue.asLong = 0 },
    { "OLD_SEGMENTS_GEN", "OLD_SEGMENTS_GEN", 0x19, "Ljava.lang.String;", &OrgApacheLuceneIndexIndexFileNames_OLD_SEGMENTS_GEN, NULL, .constantValue.asLong = 0 },
    { "CODEC_FILE_PATTERN", "CODEC_FILE_PATTERN", 0x19, "Ljava.util.regex.Pattern;", &OrgApacheLuceneIndexIndexFileNames_CODEC_FILE_PATTERN, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexIndexFileNames = { 2, "IndexFileNames", "org.apache.lucene.index", NULL, 0x11, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexIndexFileNames;
}

@end

void OrgApacheLuceneIndexIndexFileNames_init(OrgApacheLuceneIndexIndexFileNames *self) {
  NSObject_init(self);
}

OrgApacheLuceneIndexIndexFileNames *new_OrgApacheLuceneIndexIndexFileNames_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexIndexFileNames, init)
}

OrgApacheLuceneIndexIndexFileNames *create_OrgApacheLuceneIndexIndexFileNames_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexIndexFileNames, init)
}

NSString *OrgApacheLuceneIndexIndexFileNames_fileNameFromGenerationWithNSString_withNSString_withLong_(NSString *base, NSString *ext, jlong gen) {
  OrgApacheLuceneIndexIndexFileNames_initialize();
  if (gen == -1) {
    return nil;
  }
  else if (gen == 0) {
    return OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(base, @"", ext);
  }
  else {
    JreAssert((gen > 0), (@"org/apache/lucene/index/IndexFileNames.java:74 condition failed: assert gen > 0;"));
    JavaLangStringBuilder *res = [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([create_JavaLangStringBuilder_initWithInt_(((jint) [((NSString *) nil_chk(base)) length]) + 6 + ((jint) [((NSString *) nil_chk(ext)) length])) appendWithNSString:base])) appendWithChar:'_'])) appendWithNSString:JavaLangLong_toStringWithLong_withInt_(gen, JavaLangCharacter_MAX_RADIX)];
    if (((jint) [ext length]) > 0) {
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(res)) appendWithChar:'.'])) appendWithNSString:ext];
    }
    return [((JavaLangStringBuilder *) nil_chk(res)) description];
  }
}

NSString *OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(NSString *segmentName, NSString *segmentSuffix, NSString *ext) {
  OrgApacheLuceneIndexIndexFileNames_initialize();
  if (((jint) [((NSString *) nil_chk(ext)) length]) > 0 || ((jint) [((NSString *) nil_chk(segmentSuffix)) length]) > 0) {
    JreAssert((![ext hasPrefix:@"."]), (@"org/apache/lucene/index/IndexFileNames.java:104 condition failed: assert !ext.startsWith(\".\");"));
    JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(((jint) [((NSString *) nil_chk(segmentName)) length]) + 2 + ((jint) [((NSString *) nil_chk(segmentSuffix)) length]) + ((jint) [ext length]));
    [sb appendWithNSString:segmentName];
    if (((jint) [segmentSuffix length]) > 0) {
      [((JavaLangStringBuilder *) nil_chk([sb appendWithChar:'_'])) appendWithNSString:segmentSuffix];
    }
    if (((jint) [ext length]) > 0) {
      [((JavaLangStringBuilder *) nil_chk([sb appendWithChar:'.'])) appendWithNSString:ext];
    }
    return [sb description];
  }
  else {
    return segmentName;
  }
}

jboolean OrgApacheLuceneIndexIndexFileNames_matchesExtensionWithNSString_withNSString_(NSString *filename, NSString *ext) {
  OrgApacheLuceneIndexIndexFileNames_initialize();
  return [((NSString *) nil_chk(filename)) hasSuffix:JreStrcat("C$", '.', ext)];
}

jint OrgApacheLuceneIndexIndexFileNames_indexOfSegmentNameWithNSString_(NSString *filename) {
  OrgApacheLuceneIndexIndexFileNames_initialize();
  jint idx = [((NSString *) nil_chk(filename)) indexOf:'_' fromIndex:1];
  if (idx == -1) {
    idx = [filename indexOf:'.'];
  }
  return idx;
}

NSString *OrgApacheLuceneIndexIndexFileNames_stripSegmentNameWithNSString_(NSString *filename) {
  OrgApacheLuceneIndexIndexFileNames_initialize();
  jint idx = OrgApacheLuceneIndexIndexFileNames_indexOfSegmentNameWithNSString_(filename);
  if (idx != -1) {
    filename = [((NSString *) nil_chk(filename)) substring:idx];
  }
  return filename;
}

jlong OrgApacheLuceneIndexIndexFileNames_parseGenerationWithNSString_(NSString *filename) {
  OrgApacheLuceneIndexIndexFileNames_initialize();
  JreAssert(([((NSString *) nil_chk(filename)) hasPrefix:@"_"]), (@"org/apache/lucene/index/IndexFileNames.java:160 condition failed: assert filename.startsWith(\"_\");"));
  IOSObjectArray *parts = [((NSString *) nil_chk([((NSString *) nil_chk(OrgApacheLuceneIndexIndexFileNames_stripExtensionWithNSString_(filename))) substring:1])) split:@"_"];
  if (((IOSObjectArray *) nil_chk(parts))->size_ == 2 || parts->size_ == 4) {
    return JavaLangLong_parseLongWithNSString_withInt_(IOSObjectArray_Get(parts, 1), JavaLangCharacter_MAX_RADIX);
  }
  else {
    return 0;
  }
}

NSString *OrgApacheLuceneIndexIndexFileNames_parseSegmentNameWithNSString_(NSString *filename) {
  OrgApacheLuceneIndexIndexFileNames_initialize();
  jint idx = OrgApacheLuceneIndexIndexFileNames_indexOfSegmentNameWithNSString_(filename);
  if (idx != -1) {
    filename = [((NSString *) nil_chk(filename)) substring:0 endIndex:idx];
  }
  return filename;
}

NSString *OrgApacheLuceneIndexIndexFileNames_stripExtensionWithNSString_(NSString *filename) {
  OrgApacheLuceneIndexIndexFileNames_initialize();
  jint idx = [((NSString *) nil_chk(filename)) indexOf:'.'];
  if (idx != -1) {
    filename = [filename substring:0 endIndex:idx];
  }
  return filename;
}

NSString *OrgApacheLuceneIndexIndexFileNames_getExtensionWithNSString_(NSString *filename) {
  OrgApacheLuceneIndexIndexFileNames_initialize();
  jint idx = [((NSString *) nil_chk(filename)) indexOf:'.'];
  if (idx == -1) {
    return nil;
  }
  else {
    return [filename substring:idx + 1 endIndex:((jint) [filename length])];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexIndexFileNames)
