//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/MergeRateLimiter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "org/apache/lucene/index/MergePolicy.h"
#include "org/apache/lucene/index/MergeRateLimiter.h"
#include "org/apache/lucene/store/RateLimiter.h"
#include "org/apache/lucene/util/ThreadInterruptedException.h"

@class OrgApacheLuceneIndexMergeRateLimiter_PauseResult;

@interface OrgApacheLuceneIndexMergeRateLimiter () {
 @public
  jlong lastNS_;
  jlong minPauseCheckBytes_;
  jboolean abort_;
}

/*!
 @brief Returns NO if no pause happened, STOPPED if pause because rate was 0.0 (merge is stopped), PAUSED if paused with a normal rate limit.
 */
- (OrgApacheLuceneIndexMergeRateLimiter_PauseResult *)maybePauseWithLong:(jlong)bytes
                                                                withLong:(jlong)curNS;

@end

inline jint OrgApacheLuceneIndexMergeRateLimiter_get_MIN_PAUSE_CHECK_MSEC();
#define OrgApacheLuceneIndexMergeRateLimiter_MIN_PAUSE_CHECK_MSEC 25
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMergeRateLimiter, MIN_PAUSE_CHECK_MSEC, jint)

__attribute__((unused)) static OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_maybePauseWithLong_withLong_(OrgApacheLuceneIndexMergeRateLimiter *self, jlong bytes, jlong curNS);

typedef NS_ENUM(NSUInteger, OrgApacheLuceneIndexMergeRateLimiter_PauseResult_Enum) {
  OrgApacheLuceneIndexMergeRateLimiter_PauseResult_Enum_NO = 0,
  OrgApacheLuceneIndexMergeRateLimiter_PauseResult_Enum_STOPPED = 1,
  OrgApacheLuceneIndexMergeRateLimiter_PauseResult_Enum_PAUSED = 2,
};

/*!
 @brief Returned by <code>maybePause</code>.
 */
@interface OrgApacheLuceneIndexMergeRateLimiter_PauseResult : JavaLangEnum < NSCopying >

+ (IOSObjectArray *)values;

+ (OrgApacheLuceneIndexMergeRateLimiter_PauseResult *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;
- (OrgApacheLuceneIndexMergeRateLimiter_PauseResult_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneIndexMergeRateLimiter_PauseResult)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_values_[];

inline OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_get_NO();
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, NO)

inline OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_get_STOPPED();
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, STOPPED)

inline OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_get_PAUSED();
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, PAUSED)

__attribute__((unused)) static void OrgApacheLuceneIndexMergeRateLimiter_PauseResult_initWithNSString_withInt_(OrgApacheLuceneIndexMergeRateLimiter_PauseResult *self, NSString *__name, jint __ordinal);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_values();

FOUNDATION_EXPORT OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMergeRateLimiter_PauseResult)

@implementation OrgApacheLuceneIndexMergeRateLimiter

- (instancetype)initWithOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge {
  OrgApacheLuceneIndexMergeRateLimiter_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_(self, merge);
  return self;
}

- (void)setMBPerSecWithDouble:(jdouble)mbPerSec {
  @synchronized(self) {
    if (mbPerSec < 0.0) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"mbPerSec must be positive; got: ", mbPerSec));
    }
    self->mbPerSec_ = mbPerSec;
    minPauseCheckBytes_ = JavaLangMath_minWithLong_withLong_(1024 * 1024, JreFpToLong(((OrgApacheLuceneIndexMergeRateLimiter_MIN_PAUSE_CHECK_MSEC / 1000.0) * mbPerSec * 1024 * 1024)));
    JreAssert((minPauseCheckBytes_ >= 0), (@"org/apache/lucene/index/MergeRateLimiter.java:67 condition failed: assert minPauseCheckBytes >= 0;"));
    [self notify];
  }
}

- (jdouble)getMBPerSec {
  @synchronized(self) {
    return mbPerSec_;
  }
}

- (jlong)getTotalBytesWritten {
  return JreLoadVolatileLong(&totalBytesWritten_);
}

- (jlong)pauseWithLong:(jlong)bytes {
  JrePlusAssignVolatileLongJ(&totalBytesWritten_, bytes);
  jlong startNS = JavaLangSystem_nanoTime();
  jlong curNS = startNS;
  jlong pausedNS = 0;
  while (true) {
    OrgApacheLuceneIndexMergeRateLimiter_PauseResult *result = OrgApacheLuceneIndexMergeRateLimiter_maybePauseWithLong_withLong_(self, bytes, curNS);
    if (result == JreLoadEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, NO)) {
      lastNS_ = curNS;
      break;
    }
    curNS = JavaLangSystem_nanoTime();
    jlong ns = curNS - startNS;
    startNS = curNS;
    if (result == JreLoadEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, STOPPED)) {
      totalStoppedNS_ += ns;
    }
    else {
      JreAssert((result == JreLoadEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, PAUSED)), (@"org/apache/lucene/index/MergeRateLimiter.java:109 condition failed: assert result == PauseResult.PAUSED;"));
      totalPausedNS_ += ns;
    }
    pausedNS += ns;
  }
  return pausedNS;
}

- (jlong)getTotalStoppedNS {
  @synchronized(self) {
    return totalStoppedNS_;
  }
}

- (jlong)getTotalPausedNS {
  @synchronized(self) {
    return totalPausedNS_;
  }
}

- (OrgApacheLuceneIndexMergeRateLimiter_PauseResult *)maybePauseWithLong:(jlong)bytes
                                                                withLong:(jlong)curNS {
  return OrgApacheLuceneIndexMergeRateLimiter_maybePauseWithLong_withLong_(self, bytes, curNS);
}

- (void)checkAbort {
  @synchronized(self) {
    if (abort_) {
      @throw create_OrgApacheLuceneIndexMergePolicy_MergeAbortedException_initWithNSString_(JreStrcat("$$", @"merge is aborted: ", [((OrgApacheLuceneIndexMergePolicy_OneMerge *) nil_chk(merge_)) segString]));
    }
  }
}

- (void)setAbort {
  @synchronized(self) {
    abort_ = true;
    [self notify];
  }
}

- (jboolean)getAbort {
  @synchronized(self) {
    return abort_;
  }
}

- (jlong)getMinPauseCheckBytes {
  return minPauseCheckBytes_;
}

- (void)dealloc {
  RELEASE_(merge_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexMergePolicy_OneMerge:", "MergeRateLimiter", NULL, 0x1, NULL, NULL },
    { "setMBPerSecWithDouble:", "setMBPerSec", "V", 0x21, NULL, NULL },
    { "getMBPerSec", NULL, "D", 0x21, NULL, NULL },
    { "getTotalBytesWritten", NULL, "J", 0x1, NULL, NULL },
    { "pauseWithLong:", "pause", "J", 0x1, "Lorg.apache.lucene.index.MergePolicy$MergeAbortedException;", NULL },
    { "getTotalStoppedNS", NULL, "J", 0x21, NULL, NULL },
    { "getTotalPausedNS", NULL, "J", 0x21, NULL, NULL },
    { "maybePauseWithLong:withLong:", "maybePause", "Lorg.apache.lucene.index.MergeRateLimiter$PauseResult;", 0x22, "Lorg.apache.lucene.index.MergePolicy$MergeAbortedException;", NULL },
    { "checkAbort", NULL, "V", 0x21, "Lorg.apache.lucene.index.MergePolicy$MergeAbortedException;", NULL },
    { "setAbort", NULL, "V", 0x21, NULL, NULL },
    { "getAbort", NULL, "Z", 0x21, NULL, NULL },
    { "getMinPauseCheckBytes", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MIN_PAUSE_CHECK_MSEC", "MIN_PAUSE_CHECK_MSEC", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneIndexMergeRateLimiter_MIN_PAUSE_CHECK_MSEC },
    { "totalBytesWritten_", NULL, 0x40, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "mbPerSec_", NULL, 0x0, "D", NULL, NULL, .constantValue.asLong = 0 },
    { "lastNS_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "minPauseCheckBytes_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "abort_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "totalPausedNS_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "totalStoppedNS_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "merge_", NULL, 0x10, "Lorg.apache.lucene.index.MergePolicy$OneMerge;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.index.MergeRateLimiter$PauseResult;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergeRateLimiter = { 2, "MergeRateLimiter", "org.apache.lucene.index", NULL, 0x1, 12, methods, 9, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneIndexMergeRateLimiter;
}

@end

void OrgApacheLuceneIndexMergeRateLimiter_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_(OrgApacheLuceneIndexMergeRateLimiter *self, OrgApacheLuceneIndexMergePolicy_OneMerge *merge) {
  OrgApacheLuceneStoreRateLimiter_init(self);
  JreStrongAssign(&self->merge_, merge);
  [self setMBPerSecWithDouble:JavaLangDouble_POSITIVE_INFINITY];
}

OrgApacheLuceneIndexMergeRateLimiter *new_OrgApacheLuceneIndexMergeRateLimiter_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMergeRateLimiter, initWithOrgApacheLuceneIndexMergePolicy_OneMerge_, merge)
}

OrgApacheLuceneIndexMergeRateLimiter *create_OrgApacheLuceneIndexMergeRateLimiter_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMergeRateLimiter, initWithOrgApacheLuceneIndexMergePolicy_OneMerge_, merge)
}

OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_maybePauseWithLong_withLong_(OrgApacheLuceneIndexMergeRateLimiter *self, jlong bytes, jlong curNS) {
  @synchronized(self) {
    [self checkAbort];
    jdouble secondsToPause = (bytes / 1024. / 1024.) / self->mbPerSec_;
    jlong targetNS = self->lastNS_ + JreFpToLong((1000000000 * secondsToPause));
    jlong curPauseNS = targetNS - curNS;
    if (curPauseNS <= 2000000) {
      return JreLoadEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, NO);
    }
    if (curPauseNS > 250LL * 1000000) {
      curPauseNS = 250LL * 1000000;
    }
    jint sleepMS = (jint) (curPauseNS / 1000000);
    jint sleepNS = (jint) (curPauseNS % 1000000);
    jdouble rate = self->mbPerSec_;
    @try {
      [self waitWithLong:sleepMS withInt:sleepNS];
    }
    @catch (JavaLangInterruptedException *ie) {
      @throw create_OrgApacheLuceneUtilThreadInterruptedException_initWithJavaLangInterruptedException_(ie);
    }
    if (rate == 0.0) {
      return JreLoadEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, STOPPED);
    }
    else {
      return JreLoadEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, PAUSED);
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergeRateLimiter)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneIndexMergeRateLimiter_PauseResult)

OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_values_[3];

@implementation OrgApacheLuceneIndexMergeRateLimiter_PauseResult

+ (OrgApacheLuceneIndexMergeRateLimiter_PauseResult *)NO_ {
  return JreEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, NO);
}

+ (OrgApacheLuceneIndexMergeRateLimiter_PauseResult *)STOPPED {
  return JreEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, STOPPED);
}

+ (OrgApacheLuceneIndexMergeRateLimiter_PauseResult *)PAUSED {
  return JreEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, PAUSED);
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneIndexMergeRateLimiter_PauseResult_values();
}

+ (OrgApacheLuceneIndexMergeRateLimiter_PauseResult *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneIndexMergeRateLimiter_PauseResult_valueOfWithNSString_(name);
}

- (OrgApacheLuceneIndexMergeRateLimiter_PauseResult_Enum)toNSEnum {
  return (OrgApacheLuceneIndexMergeRateLimiter_PauseResult_Enum)[self ordinal];
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneIndexMergeRateLimiter_PauseResult class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, NO) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheLuceneIndexMergeRateLimiter_PauseResult_initWithNSString_withInt_(e, @"NO", 0);
    (JreEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, STOPPED) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheLuceneIndexMergeRateLimiter_PauseResult_initWithNSString_withInt_(e, @"STOPPED", 1);
    (JreEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, PAUSED) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheLuceneIndexMergeRateLimiter_PauseResult_initWithNSString_withInt_(e, @"PAUSED", 2);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneIndexMergeRateLimiter_PauseResult)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "NO", "NO", 0x4019, "Lorg.apache.lucene.index.MergeRateLimiter$PauseResult;", &JreEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, NO), NULL, .constantValue.asLong = 0 },
    { "STOPPED", "STOPPED", 0x4019, "Lorg.apache.lucene.index.MergeRateLimiter$PauseResult;", &JreEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, STOPPED), NULL, .constantValue.asLong = 0 },
    { "PAUSED", "PAUSED", 0x4019, "Lorg.apache.lucene.index.MergeRateLimiter$PauseResult;", &JreEnum(OrgApacheLuceneIndexMergeRateLimiter_PauseResult, PAUSED), NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.index.MergeRateLimiter$PauseResult;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergeRateLimiter_PauseResult = { 2, "PauseResult", "org.apache.lucene.index", "MergeRateLimiter", 0x401a, 0, NULL, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/apache/lucene/index/MergeRateLimiter$PauseResult;>;" };
  return &_OrgApacheLuceneIndexMergeRateLimiter_PauseResult;
}

@end

void OrgApacheLuceneIndexMergeRateLimiter_PauseResult_initWithNSString_withInt_(OrgApacheLuceneIndexMergeRateLimiter_PauseResult *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_values() {
  OrgApacheLuceneIndexMergeRateLimiter_PauseResult_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneIndexMergeRateLimiter_PauseResult_values_ count:3 type:OrgApacheLuceneIndexMergeRateLimiter_PauseResult_class_()];
}

OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneIndexMergeRateLimiter_PauseResult_initialize();
  for (int i = 0; i < 3; i++) {
    OrgApacheLuceneIndexMergeRateLimiter_PauseResult *e = OrgApacheLuceneIndexMergeRateLimiter_PauseResult_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

OrgApacheLuceneIndexMergeRateLimiter_PauseResult *OrgApacheLuceneIndexMergeRateLimiter_PauseResult_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneIndexMergeRateLimiter_PauseResult_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return OrgApacheLuceneIndexMergeRateLimiter_PauseResult_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergeRateLimiter_PauseResult)
