//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/IndexCommit.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/IndexCommit.h"
#include "org/apache/lucene/index/StandardDirectoryReader.h"
#include "org/apache/lucene/store/Directory.h"

@implementation OrgApacheLuceneIndexIndexCommit

- (NSString *)getSegmentsFileName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilCollection>)getFileNames {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneStoreDirectory *)getDirectory {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)delete__ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)isDeleted {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getSegmentCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexIndexCommit_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isEqual:(id)other {
  if ([other isKindOfClass:[OrgApacheLuceneIndexIndexCommit class]]) {
    OrgApacheLuceneIndexIndexCommit *otherCommit = (OrgApacheLuceneIndexIndexCommit *) cast_chk(other, [OrgApacheLuceneIndexIndexCommit class]);
    return [((OrgApacheLuceneIndexIndexCommit *) nil_chk(otherCommit)) getDirectory] == [self getDirectory] && [otherCommit getGeneration] == [self getGeneration];
  }
  else {
    return false;
  }
}

- (NSUInteger)hash {
  return ((jint) [((OrgApacheLuceneStoreDirectory *) nil_chk([self getDirectory])) hash]) + ((jint) [JavaLangLong_valueOfWithLong_([self getGeneration]) hash]);
}

- (jlong)getGeneration {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilMap>)getUserData {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)compareToWithId:(OrgApacheLuceneIndexIndexCommit *)commit {
  cast_chk(commit, [OrgApacheLuceneIndexIndexCommit class]);
  if ([self getDirectory] != [((OrgApacheLuceneIndexIndexCommit *) nil_chk(commit)) getDirectory]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"cannot compare IndexCommits from different Directory instances");
  }
  jlong gen = [self getGeneration];
  jlong comgen = [commit getGeneration];
  return JavaLangLong_compareWithLong_withLong_(gen, comgen);
}

- (OrgApacheLuceneIndexStandardDirectoryReader *)getReader {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSegmentsFileName", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "getFileNames", NULL, "Ljava.util.Collection;", 0x401, "Ljava.io.IOException;", "()Ljava/util/Collection<Ljava/lang/String;>;" },
    { "getDirectory", NULL, "Lorg.apache.lucene.store.Directory;", 0x401, NULL, NULL },
    { "delete__", "delete", "V", 0x401, NULL, NULL },
    { "isDeleted", NULL, "Z", 0x401, NULL, NULL },
    { "getSegmentCount", NULL, "I", 0x401, NULL, NULL },
    { "init", "IndexCommit", NULL, 0x4, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "getGeneration", NULL, "J", 0x401, NULL, NULL },
    { "getUserData", NULL, "Ljava.util.Map;", 0x401, "Ljava.io.IOException;", "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;" },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
    { "getReader", NULL, "Lorg.apache.lucene.index.StandardDirectoryReader;", 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexIndexCommit = { 2, "IndexCommit", "org.apache.lucene.index", NULL, 0x401, 13, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/lang/Comparable<Lorg/apache/lucene/index/IndexCommit;>;" };
  return &_OrgApacheLuceneIndexIndexCommit;
}

@end

void OrgApacheLuceneIndexIndexCommit_init(OrgApacheLuceneIndexIndexCommit *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexIndexCommit)
