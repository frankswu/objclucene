//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/PrefixCodedTerms.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "org/apache/lucene/index/FieldTermIterator.h"
#include "org/apache/lucene/index/PrefixCodedTerms.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/RAMFile.h"
#include "org/apache/lucene/store/RAMInputStream.h"
#include "org/apache/lucene/store/RAMOutputStream.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/lukhnos/portmobile/util/Objects.h"

@interface OrgApacheLuceneIndexPrefixCodedTerms () {
 @public
  jlong size_;
  jlong delGen_;
}

- (instancetype)initWithOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)buffer
                                           withLong:(jlong)size;

@end

__attribute__((unused)) static void OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneIndexPrefixCodedTerms *self, OrgApacheLuceneStoreRAMFile *buffer, jlong size);

__attribute__((unused)) static OrgApacheLuceneIndexPrefixCodedTerms *new_OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneStoreRAMFile *buffer, jlong size) NS_RETURNS_RETAINED;

@interface OrgApacheLuceneIndexPrefixCodedTerms_Builder () {
 @public
  OrgApacheLuceneStoreRAMFile *buffer_;
  OrgApacheLuceneStoreRAMOutputStream *output_;
  OrgApacheLuceneIndexTerm *lastTerm_;
  OrgApacheLuceneUtilBytesRefBuilder *lastTermBytes_;
  jlong size_;
}

- (jint)sharedPrefixWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term1
                    withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term2;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexPrefixCodedTerms_Builder, buffer_, OrgApacheLuceneStoreRAMFile *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexPrefixCodedTerms_Builder, output_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexPrefixCodedTerms_Builder, lastTerm_, OrgApacheLuceneIndexTerm *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexPrefixCodedTerms_Builder, lastTermBytes_, OrgApacheLuceneUtilBytesRefBuilder *)

__attribute__((unused)) static jint OrgApacheLuceneIndexPrefixCodedTerms_Builder_sharedPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexPrefixCodedTerms_Builder *self, OrgApacheLuceneUtilBytesRef *term1, OrgApacheLuceneUtilBytesRef *term2);

@interface OrgApacheLuceneIndexPrefixCodedTerms_TermIterator ()

- (instancetype)initWithLong:(jlong)delGen
withOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)buffer;

- (void)readTermBytesWithInt:(jint)prefix
                     withInt:(jint)suffix;

@end

__attribute__((unused)) static void OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *self, jlong delGen, OrgApacheLuceneStoreRAMFile *buffer);

__attribute__((unused)) static OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *new_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(jlong delGen, OrgApacheLuceneStoreRAMFile *buffer) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_readTermBytesWithInt_withInt_(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *self, jint prefix, jint suffix);

@implementation OrgApacheLuceneIndexPrefixCodedTerms

- (instancetype)initWithOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)buffer
                                           withLong:(jlong)size {
  OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(self, buffer, size);
  return self;
}

- (jlong)ramBytesUsed {
  return [((OrgApacheLuceneStoreRAMFile *) nil_chk(buffer_)) ramBytesUsed] + 2 * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_LONG;
}

- (void)setDelGenWithLong:(jlong)delGen {
  self->delGen_ = delGen;
}

- (OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)iterator {
  return [new_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(delGen_, buffer_) autorelease];
}

- (jlong)size {
  return size_;
}

- (NSUInteger)hash {
  jint h = ((jint) [((OrgApacheLuceneStoreRAMFile *) nil_chk(buffer_)) hash]);
  h = 31 * h + (jint) (delGen_ ^ (JreURShift64(delGen_, 32)));
  return h;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return YES;
  if (obj == nil) return NO;
  if ([self getClass] != [nil_chk(obj) getClass]) return NO;
  OrgApacheLuceneIndexPrefixCodedTerms *other = (OrgApacheLuceneIndexPrefixCodedTerms *) check_class_cast(obj, [OrgApacheLuceneIndexPrefixCodedTerms class]);
  return [((OrgApacheLuceneStoreRAMFile *) nil_chk(buffer_)) isEqual:other->buffer_] && delGen_ == other->delGen_;
}

- (void)dealloc {
  RELEASE_(buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreRAMFile:withLong:", "PrefixCodedTerms", NULL, 0x2, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "setDelGenWithLong:", "setDelGen", "V", 0x1, NULL, NULL },
    { "iterator", NULL, "Lorg.apache.lucene.index.PrefixCodedTerms$TermIterator;", 0x1, NULL, NULL },
    { "size", NULL, "J", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "buffer_", NULL, 0x10, "Lorg.apache.lucene.store.RAMFile;", NULL, NULL, .constantValue.asLong = 0 },
    { "size_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "delGen_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.index.PrefixCodedTerms$Builder;", "Lorg.apache.lucene.index.PrefixCodedTerms$TermIterator;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexPrefixCodedTerms = { 2, "PrefixCodedTerms", "org.apache.lucene.index", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneIndexPrefixCodedTerms;
}

@end

void OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneIndexPrefixCodedTerms *self, OrgApacheLuceneStoreRAMFile *buffer, jlong size) {
  NSObject_init(self);
  JreStrongAssign(&self->buffer_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(buffer));
  self->size_ = size;
}

OrgApacheLuceneIndexPrefixCodedTerms *new_OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneStoreRAMFile *buffer, jlong size) {
  OrgApacheLuceneIndexPrefixCodedTerms *self = [OrgApacheLuceneIndexPrefixCodedTerms alloc];
  OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(self, buffer, size);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexPrefixCodedTerms)

@implementation OrgApacheLuceneIndexPrefixCodedTerms_Builder

- (instancetype)init {
  OrgApacheLuceneIndexPrefixCodedTerms_Builder_init(self);
  return self;
}

- (void)addWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  JreAssert(([((OrgApacheLuceneIndexTerm *) nil_chk(lastTerm_)) isEqual:[new_OrgApacheLuceneIndexTerm_initWithNSString_(@"") autorelease]] || [((OrgApacheLuceneIndexTerm *) nil_chk(term)) compareToWithId:lastTerm_] > 0), (@"org/apache/lucene/index/PrefixCodedTerms.java:76 condition failed: assert lastTerm.equals(new Term(\"\")) || term.compareTo(lastTerm) > 0;"));
  @try {
    jint prefix = OrgApacheLuceneIndexPrefixCodedTerms_Builder_sharedPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(self, lastTerm_->bytes_, ((OrgApacheLuceneIndexTerm *) nil_chk(term))->bytes_);
    jint suffix = ((OrgApacheLuceneUtilBytesRef *) nil_chk(term->bytes_))->length_ - prefix;
    if ([((NSString *) nil_chk(term->field_)) isEqual:lastTerm_->field_]) {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) writeVIntWithInt:JreLShift32(prefix, 1)];
    }
    else {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) writeVIntWithInt:(JreLShift32(prefix, 1)) | 1];
      [output_ writeStringWithNSString:term->field_];
    }
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) writeVIntWithInt:suffix];
    [output_ writeBytesWithByteArray:term->bytes_->bytes_ withInt:term->bytes_->offset_ + prefix withInt:suffix];
    [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(lastTermBytes_)) copyBytesWithOrgApacheLuceneUtilBytesRef:term->bytes_];
    JreStrongAssign(&lastTerm_->bytes_, [lastTermBytes_ get]);
    JreStrongAssign(&lastTerm_->field_, term->field_);
    size_ += 1;
  }
  @catch (JavaIoIOException *e) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(e) autorelease];
  }
}

- (OrgApacheLuceneIndexPrefixCodedTerms *)finish {
  @try {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) close];
    return [new_OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(buffer_, size_) autorelease];
  }
  @catch (JavaIoIOException *e) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(e) autorelease];
  }
}

- (jint)sharedPrefixWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term1
                    withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term2 {
  return OrgApacheLuceneIndexPrefixCodedTerms_Builder_sharedPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(self, term1, term2);
}

- (void)dealloc {
  RELEASE_(buffer_);
  RELEASE_(output_);
  RELEASE_(lastTerm_);
  RELEASE_(lastTermBytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Builder", NULL, 0x1, NULL, NULL },
    { "addWithOrgApacheLuceneIndexTerm:", "add", "V", 0x1, NULL, NULL },
    { "finish", NULL, "Lorg.apache.lucene.index.PrefixCodedTerms;", 0x1, NULL, NULL },
    { "sharedPrefixWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:", "sharedPrefix", "I", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "buffer_", NULL, 0x2, "Lorg.apache.lucene.store.RAMFile;", NULL, NULL, .constantValue.asLong = 0 },
    { "output_", NULL, 0x2, "Lorg.apache.lucene.store.RAMOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastTerm_", NULL, 0x2, "Lorg.apache.lucene.index.Term;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastTermBytes_", NULL, 0x2, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "size_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexPrefixCodedTerms_Builder = { 2, "Builder", "org.apache.lucene.index", "PrefixCodedTerms", 0x9, 4, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexPrefixCodedTerms_Builder;
}

@end

void OrgApacheLuceneIndexPrefixCodedTerms_Builder_init(OrgApacheLuceneIndexPrefixCodedTerms_Builder *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->buffer_, new_OrgApacheLuceneStoreRAMFile_init());
  JreStrongAssignAndConsume(&self->output_, new_OrgApacheLuceneStoreRAMOutputStream_initWithOrgApacheLuceneStoreRAMFile_withBoolean_(self->buffer_, NO));
  JreStrongAssignAndConsume(&self->lastTerm_, new_OrgApacheLuceneIndexTerm_initWithNSString_(@""));
  JreStrongAssignAndConsume(&self->lastTermBytes_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
}

OrgApacheLuceneIndexPrefixCodedTerms_Builder *new_OrgApacheLuceneIndexPrefixCodedTerms_Builder_init() {
  OrgApacheLuceneIndexPrefixCodedTerms_Builder *self = [OrgApacheLuceneIndexPrefixCodedTerms_Builder alloc];
  OrgApacheLuceneIndexPrefixCodedTerms_Builder_init(self);
  return self;
}

jint OrgApacheLuceneIndexPrefixCodedTerms_Builder_sharedPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexPrefixCodedTerms_Builder *self, OrgApacheLuceneUtilBytesRef *term1, OrgApacheLuceneUtilBytesRef *term2) {
  jint pos1 = 0;
  jint pos1End = pos1 + JavaLangMath_minWithInt_withInt_(((OrgApacheLuceneUtilBytesRef *) nil_chk(term1))->length_, ((OrgApacheLuceneUtilBytesRef *) nil_chk(term2))->length_);
  jint pos2 = 0;
  while (pos1 < pos1End) {
    if (IOSByteArray_Get(nil_chk(term1->bytes_), term1->offset_ + pos1) != IOSByteArray_Get(term2->bytes_, term2->offset_ + pos2)) {
      return pos1;
    }
    pos1++;
    pos2++;
  }
  return pos1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexPrefixCodedTerms_Builder)

@implementation OrgApacheLuceneIndexPrefixCodedTerms_TermIterator

- (instancetype)initWithLong:(jlong)delGen
withOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)buffer {
  OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(self, delGen, buffer);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if ([((OrgApacheLuceneStoreIndexInput *) nil_chk(input_)) getFilePointer] < end_) {
    @try {
      jint code = [input_ readVInt];
      jboolean newField = (code & 1) != 0;
      if (newField) {
        JreStrongAssign(&field_, [input_ readString]);
      }
      jint prefix = JreURShift32(code, 1);
      jint suffix = [input_ readVInt];
      OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_readTermBytesWithInt_withInt_(self, prefix, suffix);
      return bytes_;
    }
    @catch (JavaIoIOException *e) {
      @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(e) autorelease];
    }
  }
  else {
    JreStrongAssign(&field_, nil);
    return nil;
  }
}

- (void)readTermBytesWithInt:(jint)prefix
                     withInt:(jint)suffix {
  OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_readTermBytesWithInt_withInt_(self, prefix, suffix);
}

- (NSString *)field {
  return field_;
}

- (jlong)delGen {
  return delGen_;
}

- (void)dealloc {
  RELEASE_(input_);
  RELEASE_(builder_);
  RELEASE_(bytes_);
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withOrgApacheLuceneStoreRAMFile:", "TermIterator", NULL, 0x2, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "readTermBytesWithInt:withInt:", "readTermBytes", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "field", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "delGen", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "input_", NULL, 0x10, "Lorg.apache.lucene.store.IndexInput;", NULL, NULL, .constantValue.asLong = 0 },
    { "builder_", NULL, 0x10, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "bytes_", NULL, 0x10, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "end_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "delGen_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "field_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexPrefixCodedTerms_TermIterator = { 2, "TermIterator", "org.apache.lucene.index", "PrefixCodedTerms", 0x9, 5, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator;
}

@end

void OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *self, jlong delGen, OrgApacheLuceneStoreRAMFile *buffer) {
  OrgApacheLuceneIndexFieldTermIterator_init(self);
  JreStrongAssignAndConsume(&self->builder_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssign(&self->bytes_, [self->builder_ get]);
  JreStrongAssign(&self->field_, @"");
  @try {
    JreStrongAssignAndConsume(&self->input_, new_OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_(@"MergedPrefixCodedTermsIterator", buffer));
  }
  @catch (JavaIoIOException *e) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(e) autorelease];
  }
  self->end_ = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->input_)) length];
  self->delGen_ = delGen;
}

OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *new_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(jlong delGen, OrgApacheLuceneStoreRAMFile *buffer) {
  OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *self = [OrgApacheLuceneIndexPrefixCodedTerms_TermIterator alloc];
  OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(self, delGen, buffer);
  return self;
}

void OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_readTermBytesWithInt_withInt_(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *self, jint prefix, jint suffix) {
  [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(self->builder_)) growWithInt:prefix + suffix];
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->input_)) readBytesWithByteArray:[self->builder_ bytes] withInt:prefix withInt:suffix];
  [self->builder_ setLengthWithInt:prefix + suffix];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator)
