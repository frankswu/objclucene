//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/TieredMergePolicy.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/MergePolicy.h"
#include "org/apache/lucene/index/MergeTrigger.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentInfos.h"
#include "org/apache/lucene/index/TieredMergePolicy.h"
#include "org/apache/lucene/util/InfoStream.h"

@interface OrgApacheLuceneIndexTieredMergePolicy () {
 @public
  jint maxMergeAtOnce_;
  jlong maxMergedSegmentBytes_;
  jint maxMergeAtOnceExplicit_;
  jlong floorSegmentBytes_;
  jdouble segsPerTier_;
  jdouble forceMergeDeletesPctAllowed_;
  jdouble reclaimDeletesWeight_;
}

- (jlong)floorSizeWithLong:(jlong)bytes;

- (jboolean)verboseWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

- (void)messageWithNSString:(NSString *)message
withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

@end

__attribute__((unused)) static jlong OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(OrgApacheLuceneIndexTieredMergePolicy *self, jlong bytes);

__attribute__((unused)) static jboolean OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTieredMergePolicy *self, OrgApacheLuceneIndexIndexWriter *writer);

__attribute__((unused)) static void OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTieredMergePolicy *self, NSString *message, OrgApacheLuceneIndexIndexWriter *writer);

@interface OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending : NSObject < JavaUtilComparator > {
 @public
  OrgApacheLuceneIndexTieredMergePolicy *this$0_;
  OrgApacheLuceneIndexIndexWriter *writer_;
}

- (instancetype)initWithOrgApacheLuceneIndexTieredMergePolicy:(OrgApacheLuceneIndexTieredMergePolicy *)outer$
                          withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

- (jint)compareWithId:(OrgApacheLuceneIndexSegmentCommitInfo *)o1
               withId:(OrgApacheLuceneIndexSegmentCommitInfo *)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending, this$0_, OrgApacheLuceneIndexTieredMergePolicy *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending, writer_, OrgApacheLuceneIndexIndexWriter *)

__attribute__((unused)) static void OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_withOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *self, OrgApacheLuceneIndexTieredMergePolicy *outer$, OrgApacheLuceneIndexIndexWriter *writer);

__attribute__((unused)) static OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *new_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_withOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTieredMergePolicy *outer$, OrgApacheLuceneIndexIndexWriter *writer) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending)

@interface OrgApacheLuceneIndexTieredMergePolicy_$1 : OrgApacheLuceneIndexTieredMergePolicy_MergeScore {
 @public
  jdouble val$finalMergeScore_;
  jdouble val$skew_;
  jdouble val$nonDelRatio_;
}

- (jdouble)getScore;

- (NSString *)getExplanation;

- (instancetype)initWithDouble:(jdouble)capture$0
                    withDouble:(jdouble)capture$1
                    withDouble:(jdouble)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexTieredMergePolicy_$1)

__attribute__((unused)) static void OrgApacheLuceneIndexTieredMergePolicy_$1_initWithDouble_withDouble_withDouble_(OrgApacheLuceneIndexTieredMergePolicy_$1 *self, jdouble capture$0, jdouble capture$1, jdouble capture$2);

__attribute__((unused)) static OrgApacheLuceneIndexTieredMergePolicy_$1 *new_OrgApacheLuceneIndexTieredMergePolicy_$1_initWithDouble_withDouble_withDouble_(jdouble capture$0, jdouble capture$1, jdouble capture$2) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexTieredMergePolicy_$1)

@implementation OrgApacheLuceneIndexTieredMergePolicy

- (instancetype)init {
  OrgApacheLuceneIndexTieredMergePolicy_init(self);
  return self;
}

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findMergesWithOrgApacheLuceneIndexMergeTriggerEnum:(OrgApacheLuceneIndexMergeTriggerEnum *)mergeTrigger
                                                                      withOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)infos
                                                                       withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$I$", @"findMerges: ", [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(infos)) size], @" segments"), writer);
  }
  if ([((OrgApacheLuceneIndexSegmentInfos *) nil_chk(infos)) size] == 0) {
    return nil;
  }
  id<JavaUtilCollection> merging = [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer)) getMergingSegments];
  id<JavaUtilCollection> toBeMerged = [new_JavaUtilHashSet_init() autorelease];
  id<JavaUtilList> infosSorted = [new_JavaUtilArrayList_initWithJavaUtilCollection_([infos asList]) autorelease];
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(infosSorted, [new_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_withOrgApacheLuceneIndexIndexWriter_(self, writer) autorelease]);
  jlong totIndexBytes = 0;
  jlong minSegmentBytes = JavaLangLong_MAX_VALUE;
  for (OrgApacheLuceneIndexSegmentCommitInfo * __strong info in infosSorted) {
    jlong segBytes = [self sizeWithOrgApacheLuceneIndexSegmentCommitInfo:info withOrgApacheLuceneIndexIndexWriter:writer];
    if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
      NSString *extra = [((id<JavaUtilCollection>) nil_chk(merging)) containsWithId:info] ? @" [merging]" : @"";
      if (segBytes >= maxMergedSegmentBytes_ / 2.0) {
        JreStrAppend(&extra, "$", @" [skip: too large]");
      }
      else if (segBytes < floorSegmentBytes_) {
        JreStrAppend(&extra, "$", @" [floored]");
      }
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$$$$$$", @"  seg=", [writer segStringWithOrgApacheLuceneIndexSegmentCommitInfo:info], @" size=", NSString_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT_), @"%.3f", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(segBytes / 1024 / 1024.) } count:1 type:NSObject_class_()]), @" MB", extra), writer);
    }
    minSegmentBytes = JavaLangMath_minWithLong_withLong_(segBytes, minSegmentBytes);
    totIndexBytes += segBytes;
  }
  jint tooBigCount = 0;
  while (tooBigCount < [infosSorted size]) {
    jlong segBytes = [self sizeWithOrgApacheLuceneIndexSegmentCommitInfo:[infosSorted getWithInt:tooBigCount] withOrgApacheLuceneIndexIndexWriter:writer];
    if (segBytes < maxMergedSegmentBytes_ / 2.0) {
      break;
    }
    totIndexBytes -= segBytes;
    tooBigCount++;
  }
  minSegmentBytes = OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(self, minSegmentBytes);
  jlong levelSize = minSegmentBytes;
  jlong bytesLeft = totIndexBytes;
  jdouble allowedSegCount = 0;
  while (YES) {
    jdouble segCountLevel = bytesLeft / (jdouble) levelSize;
    if (segCountLevel < segsPerTier_) {
      JrePlusAssignDoubleD(&allowedSegCount, JavaLangMath_ceilWithDouble_(segCountLevel));
      break;
    }
    JrePlusAssignDoubleD(&allowedSegCount, segsPerTier_);
    JreMinusAssignLongD(&bytesLeft, segsPerTier_ * levelSize);
    levelSize *= maxMergeAtOnce_;
  }
  jint allowedSegCountInt = JreFpToInt(allowedSegCount);
  OrgApacheLuceneIndexMergePolicy_MergeSpecification *spec = nil;
  while (YES) {
    jlong mergingBytes = 0;
    id<JavaUtilList> eligible = [new_JavaUtilArrayList_init() autorelease];
    for (jint idx = tooBigCount; idx < [infosSorted size]; idx++) {
      OrgApacheLuceneIndexSegmentCommitInfo *info = [infosSorted getWithInt:idx];
      if ([((id<JavaUtilCollection>) nil_chk(merging)) containsWithId:info]) {
        mergingBytes += [self sizeWithOrgApacheLuceneIndexSegmentCommitInfo:info withOrgApacheLuceneIndexIndexWriter:writer];
      }
      else if (![toBeMerged containsWithId:info]) {
        [eligible addWithId:info];
      }
    }
    jboolean maxMergeIsRunning = mergingBytes >= maxMergedSegmentBytes_;
    if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$I$I$I$I", @"  allowedSegmentCount=", allowedSegCountInt, @" vs count=", [infosSorted size], @" (eligible count=", [eligible size], @") tooBigCount=", tooBigCount), writer);
    }
    if ([eligible size] == 0) {
      return spec;
    }
    if ([eligible size] > allowedSegCountInt) {
      OrgApacheLuceneIndexTieredMergePolicy_MergeScore *bestScore = nil;
      id<JavaUtilList> best = nil;
      jboolean bestTooLarge = NO;
      jlong bestMergeBytes = 0;
      for (jint startIdx = 0; startIdx <= [eligible size] - maxMergeAtOnce_; startIdx++) {
        jlong totAfterMergeBytes = 0;
        id<JavaUtilList> candidate = [new_JavaUtilArrayList_init() autorelease];
        jboolean hitTooLarge = NO;
        for (jint idx = startIdx; idx < [eligible size] && [candidate size] < maxMergeAtOnce_; idx++) {
          OrgApacheLuceneIndexSegmentCommitInfo *info = [eligible getWithInt:idx];
          jlong segBytes = [self sizeWithOrgApacheLuceneIndexSegmentCommitInfo:info withOrgApacheLuceneIndexIndexWriter:writer];
          if (totAfterMergeBytes + segBytes > maxMergedSegmentBytes_) {
            hitTooLarge = YES;
            continue;
          }
          [candidate addWithId:info];
          totAfterMergeBytes += segBytes;
        }
        JreAssert(([candidate size] > 0), (@"org/apache/lucene/index/TieredMergePolicy.java:409 condition failed: assert candidate.size() > 0;"));
        OrgApacheLuceneIndexTieredMergePolicy_MergeScore *score = [self scoreWithJavaUtilList:candidate withBoolean:hitTooLarge withLong:mergingBytes withOrgApacheLuceneIndexIndexWriter:writer];
        if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
          OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$$$DC$$Z$$", @"  maybe=", [writer segStringWithJavaLangIterable:candidate], @" score=", [((OrgApacheLuceneIndexTieredMergePolicy_MergeScore *) nil_chk(score)) getScore], ' ', [score getExplanation], @" tooLarge=", hitTooLarge, @" size=", NSString_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT_), @"%.3f MB", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(totAfterMergeBytes / 1024. / 1024.) } count:1 type:NSObject_class_()])), writer);
        }
        if ((bestScore == nil || [((OrgApacheLuceneIndexTieredMergePolicy_MergeScore *) nil_chk(score)) getScore] < [bestScore getScore]) && (!hitTooLarge || !maxMergeIsRunning)) {
          best = candidate;
          bestScore = score;
          bestTooLarge = hitTooLarge;
          bestMergeBytes = totAfterMergeBytes;
        }
      }
      if (best != nil) {
        if (spec == nil) {
          spec = [new_OrgApacheLuceneIndexMergePolicy_MergeSpecification_init() autorelease];
        }
        OrgApacheLuceneIndexMergePolicy_OneMerge *merge = [new_OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_(best) autorelease];
        [((OrgApacheLuceneIndexMergePolicy_MergeSpecification *) nil_chk(spec)) addWithOrgApacheLuceneIndexMergePolicy_OneMerge:merge];
        for (OrgApacheLuceneIndexSegmentCommitInfo * __strong info in nil_chk(merge->segments_)) {
          [toBeMerged addWithId:info];
        }
        if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
          OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$$$$$$C$$", @"  add merge=", [writer segStringWithJavaLangIterable:merge->segments_], @" size=", NSString_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT_), @"%.3f MB", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(bestMergeBytes / 1024. / 1024.) } count:1 type:NSObject_class_()]), @" score=", NSString_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT_), @"%.3f", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_([((OrgApacheLuceneIndexTieredMergePolicy_MergeScore *) nil_chk(bestScore)) getScore]) } count:1 type:NSObject_class_()]), ' ', [bestScore getExplanation], (bestTooLarge ? @" [max merge]" : @"")), writer);
        }
      }
      else {
        return spec;
      }
    }
    else {
      return spec;
    }
  }
}

- (OrgApacheLuceneIndexTieredMergePolicy_MergeScore *)scoreWithJavaUtilList:(id<JavaUtilList>)candidate
                                                                withBoolean:(jboolean)hitTooLarge
                                                                   withLong:(jlong)mergingBytes
                                        withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  jlong totBeforeMergeBytes = 0;
  jlong totAfterMergeBytes = 0;
  jlong totAfterMergeBytesFloored = 0;
  for (OrgApacheLuceneIndexSegmentCommitInfo * __strong info in nil_chk(candidate)) {
    jlong segBytes = [self sizeWithOrgApacheLuceneIndexSegmentCommitInfo:info withOrgApacheLuceneIndexIndexWriter:writer];
    totAfterMergeBytes += segBytes;
    totAfterMergeBytesFloored += OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(self, segBytes);
    totBeforeMergeBytes += [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) sizeInBytes];
  }
  jdouble skew;
  if (hitTooLarge) {
    skew = 1.0 / maxMergeAtOnce_;
  }
  else {
    skew = ((jdouble) OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(self, [self sizeWithOrgApacheLuceneIndexSegmentCommitInfo:[candidate getWithInt:0] withOrgApacheLuceneIndexIndexWriter:writer])) / totAfterMergeBytesFloored;
  }
  jdouble mergeScore = skew;
  JreTimesAssignDoubleD(&mergeScore, JavaLangMath_powWithDouble_withDouble_(totAfterMergeBytes, 0.05));
  jdouble nonDelRatio = ((jdouble) totAfterMergeBytes) / totBeforeMergeBytes;
  JreTimesAssignDoubleD(&mergeScore, JavaLangMath_powWithDouble_withDouble_(nonDelRatio, reclaimDeletesWeight_));
  jdouble finalMergeScore = mergeScore;
  return [new_OrgApacheLuceneIndexTieredMergePolicy_$1_initWithDouble_withDouble_withDouble_(finalMergeScore, skew, nonDelRatio) autorelease];
}

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findForcedMergesWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)infos
                                                                                                     withInt:(jint)maxSegmentCount
                                                                                             withJavaUtilMap:(id<JavaUtilMap>)segmentsToMerge
                                                                         withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$I$$$@", @"findForcedMerges maxSegmentCount=", maxSegmentCount, @" infos=", [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer)) segStringWithJavaLangIterable:infos], @" segmentsToMerge=", segmentsToMerge), writer);
  }
  id<JavaUtilList> eligible = [new_JavaUtilArrayList_init() autorelease];
  jboolean forceMergeRunning = NO;
  id<JavaUtilCollection> merging = [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer)) getMergingSegments];
  jboolean segmentIsOriginal = NO;
  for (OrgApacheLuceneIndexSegmentCommitInfo * __strong info in nil_chk(infos)) {
    JavaLangBoolean *isOriginal = [((id<JavaUtilMap>) nil_chk(segmentsToMerge)) getWithId:info];
    if (isOriginal != nil) {
      segmentIsOriginal = [isOriginal booleanValue];
      if (![((id<JavaUtilCollection>) nil_chk(merging)) containsWithId:info]) {
        [eligible addWithId:info];
      }
      else {
        forceMergeRunning = YES;
      }
    }
  }
  if ([eligible size] == 0) {
    return nil;
  }
  if ((maxSegmentCount > 1 && [eligible size] <= maxSegmentCount) || (maxSegmentCount == 1 && [eligible size] == 1 && (!segmentIsOriginal || [self isMergedWithOrgApacheLuceneIndexSegmentInfos:infos withOrgApacheLuceneIndexSegmentCommitInfo:[eligible getWithInt:0] withOrgApacheLuceneIndexIndexWriter:writer]))) {
    if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, @"already merged", writer);
    }
    return nil;
  }
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(eligible, [new_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_withOrgApacheLuceneIndexIndexWriter_(self, writer) autorelease]);
  if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$@", @"eligible=", eligible), writer);
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$Z", @"forceMergeRunning=", forceMergeRunning), writer);
  }
  jint end = [eligible size];
  OrgApacheLuceneIndexMergePolicy_MergeSpecification *spec = nil;
  while (end >= maxMergeAtOnceExplicit_ + maxSegmentCount - 1) {
    if (spec == nil) {
      spec = [new_OrgApacheLuceneIndexMergePolicy_MergeSpecification_init() autorelease];
    }
    OrgApacheLuceneIndexMergePolicy_OneMerge *merge = [new_OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_([eligible subListWithInt:end - maxMergeAtOnceExplicit_ withInt:end]) autorelease];
    if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$$", @"add merge=", [writer segStringWithJavaLangIterable:merge->segments_]), writer);
    }
    [((OrgApacheLuceneIndexMergePolicy_MergeSpecification *) nil_chk(spec)) addWithOrgApacheLuceneIndexMergePolicy_OneMerge:merge];
    end -= maxMergeAtOnceExplicit_;
  }
  if (spec == nil && !forceMergeRunning) {
    jint numToMerge = end - maxSegmentCount + 1;
    OrgApacheLuceneIndexMergePolicy_OneMerge *merge = [new_OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_([eligible subListWithInt:end - numToMerge withInt:end]) autorelease];
    if (OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer)) {
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, JreStrcat("$$", @"add final merge=", [merge segString]), writer);
    }
    spec = [new_OrgApacheLuceneIndexMergePolicy_MergeSpecification_init() autorelease];
    [spec addWithOrgApacheLuceneIndexMergePolicy_OneMerge:merge];
  }
  return spec;
}

- (jlong)floorSizeWithLong:(jlong)bytes {
  return OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(self, bytes);
}

- (jboolean)verboseWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  return OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(self, writer);
}

- (void)messageWithNSString:(NSString *)message
withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(self, message, writer);
}

- (NSString *)description {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_initWithNSString_(JreStrcat("C$$", '[', [[self getClass] getSimpleName], @": ")) autorelease];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"maxMergeAtOnce="])) appendWithInt:maxMergeAtOnce_])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"maxMergeAtOnceExplicit="])) appendWithInt:maxMergeAtOnceExplicit_])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"maxMergedSegmentMB="])) appendWithDouble:maxMergedSegmentBytes_ / 1024 / 1024.])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"floorSegmentMB="])) appendWithDouble:floorSegmentBytes_ / 1024 / 1024.])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"forceMergeDeletesPctAllowed="])) appendWithDouble:forceMergeDeletesPctAllowed_])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"segmentsPerTier="])) appendWithDouble:segsPerTier_])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"maxCFSSegmentSizeMB="])) appendWithDouble:[self getMaxCFSSegmentSizeMB]])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"noCFSRatio="])) appendWithDouble:noCFSRatio_];
  return [sb description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TieredMergePolicy", NULL, 0x1, NULL, NULL },
    { "findMergesWithOrgApacheLuceneIndexMergeTriggerEnum:withOrgApacheLuceneIndexSegmentInfos:withOrgApacheLuceneIndexIndexWriter:", "findMerges", "Lorg.apache.lucene.index.MergePolicy$MergeSpecification;", 0x1, "Ljava.io.IOException;", NULL },
    { "scoreWithJavaUtilList:withBoolean:withLong:withOrgApacheLuceneIndexIndexWriter:", "score", "Lorg.apache.lucene.index.TieredMergePolicy$MergeScore;", 0x4, "Ljava.io.IOException;", NULL },
    { "findForcedMergesWithOrgApacheLuceneIndexSegmentInfos:withInt:withJavaUtilMap:withOrgApacheLuceneIndexIndexWriter:", "findForcedMerges", "Lorg.apache.lucene.index.MergePolicy$MergeSpecification;", 0x1, "Ljava.io.IOException;", NULL },
    { "floorSizeWithLong:", "floorSize", "J", 0x2, NULL, NULL },
    { "verboseWithOrgApacheLuceneIndexIndexWriter:", "verbose", "Z", 0x2, NULL, NULL },
    { "messageWithNSString:withOrgApacheLuceneIndexIndexWriter:", "message", "V", 0x2, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_NO_CFS_RATIO", "DEFAULT_NO_CFS_RATIO", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneIndexTieredMergePolicy_DEFAULT_NO_CFS_RATIO },
    { "maxMergeAtOnce_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxMergedSegmentBytes_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "maxMergeAtOnceExplicit_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "floorSegmentBytes_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "segsPerTier_", NULL, 0x2, "D", NULL, NULL, .constantValue.asLong = 0 },
    { "forceMergeDeletesPctAllowed_", NULL, 0x2, "D", NULL, NULL, .constantValue.asLong = 0 },
    { "reclaimDeletesWeight_", NULL, 0x2, "D", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.index.TieredMergePolicy$SegmentByteSizeDescending;", "Lorg.apache.lucene.index.TieredMergePolicy$MergeScore;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTieredMergePolicy = { 2, "TieredMergePolicy", "org.apache.lucene.index", NULL, 0x1, 8, methods, 8, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneIndexTieredMergePolicy;
}

@end

void OrgApacheLuceneIndexTieredMergePolicy_init(OrgApacheLuceneIndexTieredMergePolicy *self) {
  OrgApacheLuceneIndexMergePolicy_initWithDouble_withLong_(self, OrgApacheLuceneIndexTieredMergePolicy_DEFAULT_NO_CFS_RATIO, OrgApacheLuceneIndexMergePolicy_DEFAULT_MAX_CFS_SEGMENT_SIZE);
  self->maxMergeAtOnce_ = 10;
  self->maxMergedSegmentBytes_ = 5 * 1024 * 1024 * 1024LL;
  self->maxMergeAtOnceExplicit_ = 30;
  self->floorSegmentBytes_ = 2 * 1024 * 1024LL;
  self->segsPerTier_ = 10.0;
  self->forceMergeDeletesPctAllowed_ = 10.0;
  self->reclaimDeletesWeight_ = 2.0;
}

OrgApacheLuceneIndexTieredMergePolicy *new_OrgApacheLuceneIndexTieredMergePolicy_init() {
  OrgApacheLuceneIndexTieredMergePolicy *self = [OrgApacheLuceneIndexTieredMergePolicy alloc];
  OrgApacheLuceneIndexTieredMergePolicy_init(self);
  return self;
}

jlong OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(OrgApacheLuceneIndexTieredMergePolicy *self, jlong bytes) {
  return JavaLangMath_maxWithLong_withLong_(self->floorSegmentBytes_, bytes);
}

jboolean OrgApacheLuceneIndexTieredMergePolicy_verboseWithOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTieredMergePolicy *self, OrgApacheLuceneIndexIndexWriter *writer) {
  return writer != nil && [((OrgApacheLuceneUtilInfoStream *) nil_chk(writer->infoStream_)) isEnabledWithNSString:@"TMP"];
}

void OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_withOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTieredMergePolicy *self, NSString *message, OrgApacheLuceneIndexIndexWriter *writer) {
  [((OrgApacheLuceneUtilInfoStream *) nil_chk(((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer))->infoStream_)) messageWithNSString:@"TMP" withNSString:message];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTieredMergePolicy)

@implementation OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending

- (instancetype)initWithOrgApacheLuceneIndexTieredMergePolicy:(OrgApacheLuceneIndexTieredMergePolicy *)outer$
                          withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_withOrgApacheLuceneIndexIndexWriter_(self, outer$, writer);
  return self;
}

- (jint)compareWithId:(OrgApacheLuceneIndexSegmentCommitInfo *)o1
               withId:(OrgApacheLuceneIndexSegmentCommitInfo *)o2 {
  @try {
    jlong sz1 = [this$0_ sizeWithOrgApacheLuceneIndexSegmentCommitInfo:o1 withOrgApacheLuceneIndexIndexWriter:writer_];
    jlong sz2 = [this$0_ sizeWithOrgApacheLuceneIndexSegmentCommitInfo:o2 withOrgApacheLuceneIndexIndexWriter:writer_];
    if (sz1 > sz2) {
      return -1;
    }
    else if (sz2 > sz1) {
      return 1;
    }
    else {
      return [((NSString *) nil_chk(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(o1))->info_))->name_)) compareToWithId:((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(o2))->info_->name_];
    }
  }
  @catch (JavaIoIOException *ioe) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(ioe) autorelease];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(writer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexTieredMergePolicy:withOrgApacheLuceneIndexIndexWriter:", "SegmentByteSizeDescending", NULL, 0x0, NULL, NULL },
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.index.TieredMergePolicy;", NULL, NULL, .constantValue.asLong = 0 },
    { "writer_", NULL, 0x12, "Lorg.apache.lucene.index.IndexWriter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending = { 2, "SegmentByteSizeDescending", "org.apache.lucene.index", "TieredMergePolicy", 0x2, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/index/SegmentCommitInfo;>;" };
  return &_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending;
}

@end

void OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_withOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *self, OrgApacheLuceneIndexTieredMergePolicy *outer$, OrgApacheLuceneIndexIndexWriter *writer) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->writer_, writer);
}

OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *new_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_withOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTieredMergePolicy *outer$, OrgApacheLuceneIndexIndexWriter *writer) {
  OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *self = [OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending alloc];
  OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_withOrgApacheLuceneIndexIndexWriter_(self, outer$, writer);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending)

@implementation OrgApacheLuceneIndexTieredMergePolicy_MergeScore

- (instancetype)init {
  OrgApacheLuceneIndexTieredMergePolicy_MergeScore_init(self);
  return self;
}

- (jdouble)getScore {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getExplanation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MergeScore", NULL, 0x4, NULL, NULL },
    { "getScore", NULL, "D", 0x400, NULL, NULL },
    { "getExplanation", NULL, "Ljava.lang.String;", 0x400, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTieredMergePolicy_MergeScore = { 2, "MergeScore", "org.apache.lucene.index", "TieredMergePolicy", 0x40c, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexTieredMergePolicy_MergeScore;
}

@end

void OrgApacheLuceneIndexTieredMergePolicy_MergeScore_init(OrgApacheLuceneIndexTieredMergePolicy_MergeScore *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTieredMergePolicy_MergeScore)

@implementation OrgApacheLuceneIndexTieredMergePolicy_$1

- (jdouble)getScore {
  return val$finalMergeScore_;
}

- (NSString *)getExplanation {
  return JreStrcat("$$$$", @"skew=", NSString_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT_), @"%.3f", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(val$skew_) } count:1 type:NSObject_class_()]), @" nonDelRatio=", NSString_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT_), @"%.3f", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(val$nonDelRatio_) } count:1 type:NSObject_class_()]));
}

- (instancetype)initWithDouble:(jdouble)capture$0
                    withDouble:(jdouble)capture$1
                    withDouble:(jdouble)capture$2 {
  OrgApacheLuceneIndexTieredMergePolicy_$1_initWithDouble_withDouble_withDouble_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getScore", NULL, "D", 0x1, NULL, NULL },
    { "getExplanation", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "initWithDouble:withDouble:withDouble:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$finalMergeScore_", NULL, 0x1012, "D", NULL, NULL, .constantValue.asLong = 0 },
    { "val$skew_", NULL, 0x1012, "D", NULL, NULL, .constantValue.asLong = 0 },
    { "val$nonDelRatio_", NULL, 0x1012, "D", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneIndexTieredMergePolicy", "scoreWithJavaUtilList:withBoolean:withLong:withOrgApacheLuceneIndexIndexWriter:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTieredMergePolicy_$1 = { 2, "", "org.apache.lucene.index", "TieredMergePolicy", 0x8008, 3, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneIndexTieredMergePolicy_$1;
}

@end

void OrgApacheLuceneIndexTieredMergePolicy_$1_initWithDouble_withDouble_withDouble_(OrgApacheLuceneIndexTieredMergePolicy_$1 *self, jdouble capture$0, jdouble capture$1, jdouble capture$2) {
  self->val$finalMergeScore_ = capture$0;
  self->val$skew_ = capture$1;
  self->val$nonDelRatio_ = capture$2;
  OrgApacheLuceneIndexTieredMergePolicy_MergeScore_init(self);
}

OrgApacheLuceneIndexTieredMergePolicy_$1 *new_OrgApacheLuceneIndexTieredMergePolicy_$1_initWithDouble_withDouble_withDouble_(jdouble capture$0, jdouble capture$1, jdouble capture$2) {
  OrgApacheLuceneIndexTieredMergePolicy_$1 *self = [OrgApacheLuceneIndexTieredMergePolicy_$1 alloc];
  OrgApacheLuceneIndexTieredMergePolicy_$1_initWithDouble_withDouble_withDouble_(self, capture$0, capture$1, capture$2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTieredMergePolicy_$1)
