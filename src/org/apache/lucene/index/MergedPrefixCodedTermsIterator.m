//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/MergedPrefixCodedTermsIterator.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/FieldTermIterator.h"
#include "org/apache/lucene/index/MergedPrefixCodedTermsIterator.h"
#include "org/apache/lucene/index/PrefixCodedTerms.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/PriorityQueue.h"

@implementation OrgApacheLuceneIndexMergedPrefixCodedTermsIterator

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)termsList {
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_initWithJavaUtilList_(self, termsList);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if ([((OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *) nil_chk(termQueue_)) size] == 0) {
    if ([((OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *) nil_chk(fieldQueue_)) size] == 0) {
      JreStrongAssign(&field_, nil);
      return nil;
    }
    OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *top = [fieldQueue_ pop];
    [termQueue_ addWithId:top];
    JreStrongAssign(&field_, ((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(top))->field_);
    JreAssert((field_ != nil), (@"org/apache/lucene/index/MergedPrefixCodedTermsIterator.java:90 condition failed: assert field != null;"));
    while ([fieldQueue_ size] != 0 && [((NSString *) nil_chk(((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk([fieldQueue_ top]))->field_)) isEqual:top->field_]) {
      OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *iter = [fieldQueue_ pop];
      JreAssert(([((NSString *) nil_chk(((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(iter))->field_)) isEqual:field_]), (@"org/apache/lucene/index/MergedPrefixCodedTermsIterator.java:94 condition failed: assert iter.field.equals(field);"));
      JreStrongAssign(&iter->field_, field_);
      [termQueue_ addWithId:iter];
    }
    return ((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk([termQueue_ top]))->bytes_;
  }
  else {
    OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *top = [termQueue_ top];
    if ([((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(top)) next] == nil) {
      [termQueue_ pop];
    }
    else if ([top field] != field_) {
      [termQueue_ pop];
      [((OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *) nil_chk(fieldQueue_)) addWithId:top];
    }
    else {
      [termQueue_ updateTop];
    }
    if ([termQueue_ size] == 0) {
      return [self next];
    }
    else {
      return ((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk([termQueue_ top]))->bytes_;
    }
  }
}

- (NSString *)field {
  return field_;
}

- (jlong)delGen {
  return [((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk([((OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *) nil_chk(termQueue_)) top])) delGen];
}

- (void)dealloc {
  RELEASE_(termQueue_);
  RELEASE_(fieldQueue_);
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "MergedPrefixCodedTermsIterator", NULL, 0x1, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "field", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "delGen", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "termQueue_", NULL, 0x10, "Lorg.apache.lucene.index.MergedPrefixCodedTermsIterator$TermMergeQueue;", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldQueue_", NULL, 0x10, "Lorg.apache.lucene.index.MergedPrefixCodedTermsIterator$FieldMergeQueue;", NULL, NULL, .constantValue.asLong = 0 },
    { "field_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.index.MergedPrefixCodedTermsIterator$TermMergeQueue;", "Lorg.apache.lucene.index.MergedPrefixCodedTermsIterator$FieldMergeQueue;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergedPrefixCodedTermsIterator = { 2, "MergedPrefixCodedTermsIterator", "org.apache.lucene.index", NULL, 0x0, 4, methods, 3, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator;
}

@end

void OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_initWithJavaUtilList_(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator *self, id<JavaUtilList> termsList) {
  OrgApacheLuceneIndexFieldTermIterator_init(self);
  JreStrongAssignAndConsume(&self->fieldQueue_, new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_([((id<JavaUtilList>) nil_chk(termsList)) size]));
  for (OrgApacheLuceneIndexPrefixCodedTerms * __strong terms in termsList) {
    OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *iter = [((OrgApacheLuceneIndexPrefixCodedTerms *) nil_chk(terms)) iterator];
    [((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(iter)) next];
    if (iter->field_ != nil) {
      [self->fieldQueue_ addWithId:iter];
    }
  }
  JreStrongAssignAndConsume(&self->termQueue_, new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_([termsList size]));
}

OrgApacheLuceneIndexMergedPrefixCodedTermsIterator *new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_initWithJavaUtilList_(id<JavaUtilList> termsList) {
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator *self = [OrgApacheLuceneIndexMergedPrefixCodedTermsIterator alloc];
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_initWithJavaUtilList_(self, termsList);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator)

@implementation OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_(self, size);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)a
                    withId:(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)b {
  jint cmp = [((OrgApacheLuceneUtilBytesRef *) nil_chk(((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(a))->bytes_)) compareToWithId:((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(b))->bytes_];
  if (cmp < 0) {
    return YES;
  }
  else if (cmp > 0) {
    return NO;
  }
  else {
    return [a delGen] > [b delGen];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "TermMergeQueue", NULL, 0x0, NULL, NULL },
    { "lessThanWithId:withId:", "lessThan", "Z", 0x4, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.index.PrefixCodedTerms$TermIterator;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue = { 2, "TermMergeQueue", "org.apache.lucene.index", "MergedPrefixCodedTermsIterator", 0xa, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/index/PrefixCodedTerms$TermIterator;>;" };
  return &_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue;
}

@end

void OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *self, jint size) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, size);
}

OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_(jint size) {
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *self = [OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue alloc];
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_(self, size);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue)

@implementation OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_(self, size);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)a
                    withId:(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)b {
  return [((NSString *) nil_chk(((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(a))->field_)) compareToWithId:((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(b))->field_] < 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "FieldMergeQueue", NULL, 0x0, NULL, NULL },
    { "lessThanWithId:withId:", "lessThan", "Z", 0x4, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.index.PrefixCodedTerms$TermIterator;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue = { 2, "FieldMergeQueue", "org.apache.lucene.index", "MergedPrefixCodedTermsIterator", 0xa, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/index/PrefixCodedTerms$TermIterator;>;" };
  return &_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue;
}

@end

void OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *self, jint size) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, size);
}

OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_(jint size) {
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *self = [OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue alloc];
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_(self, size);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue)
