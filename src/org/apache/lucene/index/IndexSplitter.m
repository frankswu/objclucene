//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./misc/src/java/org/apache/lucene/index/IndexSplitter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"
#include "java/text/DecimalFormat.h"
#include "java/text/DecimalFormatSymbols.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "org/apache/lucene/codecs/Codec.h"
#include "org/apache/lucene/index/IndexSplitter.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentInfos.h"
#include "org/apache/lucene/store/FSDirectory.h"
#include "org/apache/lucene/util/Version.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"
#include "org/lukhnos/portmobile/file/Paths.h"
#include "org/lukhnos/portmobile/file/StandardCopyOption.h"

@interface OrgApacheLuceneIndexIndexSplitter ()

- (jint)getIdxWithNSString:(NSString *)name;

- (OrgApacheLuceneIndexSegmentCommitInfo *)getInfoWithNSString:(NSString *)name;

@end

__attribute__((unused)) static jint OrgApacheLuceneIndexIndexSplitter_getIdxWithNSString_(OrgApacheLuceneIndexIndexSplitter *self, NSString *name);

__attribute__((unused)) static OrgApacheLuceneIndexSegmentCommitInfo *OrgApacheLuceneIndexIndexSplitter_getInfoWithNSString_(OrgApacheLuceneIndexIndexSplitter *self, NSString *name);

@implementation OrgApacheLuceneIndexIndexSplitter

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  OrgApacheLuceneIndexIndexSplitter_mainWithNSStringArray_(args);
}

- (instancetype)initWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)dir {
  OrgApacheLuceneIndexIndexSplitter_initWithOrgLukhnosPortmobileFilePath_(self, dir);
  return self;
}

- (void)listSegments {
  JavaTextDecimalFormat *formatter = [new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_(@"###,###.###", JavaTextDecimalFormatSymbols_getInstanceWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, ROOT_))) autorelease];
  for (jint x = 0; x < [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(infos_)) size]; x++) {
    OrgApacheLuceneIndexSegmentCommitInfo *info = [infos_ infoWithInt:x];
    NSString *sizeStr = [formatter formatWithLong:[((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) sizeInBytes]];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out_))) printlnWithNSString:JreStrcat("$C$", ((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info->info_))->name_, ' ', sizeStr)];
  }
}

- (jint)getIdxWithNSString:(NSString *)name {
  return OrgApacheLuceneIndexIndexSplitter_getIdxWithNSString_(self, name);
}

- (OrgApacheLuceneIndexSegmentCommitInfo *)getInfoWithNSString:(NSString *)name {
  return OrgApacheLuceneIndexIndexSplitter_getInfoWithNSString_(self, name);
}

- (void)removeWithNSStringArray:(IOSObjectArray *)segs {
  {
    IOSObjectArray *a__ = segs;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *n = *b__++;
      jint idx = OrgApacheLuceneIndexIndexSplitter_getIdxWithNSString_(self, n);
      [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(infos_)) removeWithInt:idx];
    }
  }
  [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(infos_)) changed];
  [infos_ commitWithOrgApacheLuceneStoreDirectory:fsDir_];
}

- (void)splitWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)destDir
                            withNSStringArray:(IOSObjectArray *)segs {
  OrgLukhnosPortmobileFileFiles_createDirectoriesWithOrgLukhnosPortmobileFilePath_(destDir);
  OrgApacheLuceneStoreFSDirectory *destFSDir = OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_(destDir);
  OrgApacheLuceneIndexSegmentInfos *destInfos = [new_OrgApacheLuceneIndexSegmentInfos_init() autorelease];
  destInfos->counter_ = ((OrgApacheLuceneIndexSegmentInfos *) nil_chk(infos_))->counter_;
  {
    IOSObjectArray *a__ = segs;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *n = *b__++;
      OrgApacheLuceneIndexSegmentCommitInfo *infoPerCommit = OrgApacheLuceneIndexIndexSplitter_getInfoWithNSString_(self, n);
      OrgApacheLuceneIndexSegmentInfo *info = ((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(infoPerCommit))->info_;
      OrgApacheLuceneIndexSegmentInfo *newInfo = [new_OrgApacheLuceneIndexSegmentInfo_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilVersion_withNSString_withInt_withBoolean_withOrgApacheLuceneCodecsCodec_withJavaUtilMap_withByteArray_withJavaUtilMap_(destFSDir, [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info)) getVersion], info->name_, [info maxDoc], [info getUseCompoundFile], [info getCodec], [info getDiagnostics], [info getId], [new_JavaUtilHashMap_init() autorelease]) autorelease];
      [destInfos addWithOrgApacheLuceneIndexSegmentCommitInfo:[new_OrgApacheLuceneIndexSegmentCommitInfo_initWithOrgApacheLuceneIndexSegmentInfo_withInt_withLong_withLong_withLong_(newInfo, [infoPerCommit getDelCount], [infoPerCommit getDelGen], [infoPerCommit getFieldInfosGen], [infoPerCommit getDocValuesGen]) autorelease]];
      id<JavaUtilCollection> files = [infoPerCommit files];
      for (NSString * __strong srcName in nil_chk(files)) {
        OrgLukhnosPortmobileFilePath *srcFile = [((OrgLukhnosPortmobileFilePath *) nil_chk(dir_)) resolveWithNSString:srcName];
        OrgLukhnosPortmobileFilePath *destFile = [((OrgLukhnosPortmobileFilePath *) nil_chk(destDir)) resolveWithNSString:srcName];
        OrgLukhnosPortmobileFileFiles_copy__WithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardCopyOptionArray_(srcFile, destFile, [IOSObjectArray arrayWithLength:0 type:OrgLukhnosPortmobileFileStandardCopyOption_class_()]);
      }
    }
  }
  [destInfos changed];
  [destInfos commitWithOrgApacheLuceneStoreDirectory:destFSDir];
}

- (void)dealloc {
  RELEASE_(infos_);
  RELEASE_(fsDir_);
  RELEASE_(dir_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "mainWithNSStringArray:", "main", "V", 0x9, "Ljava.lang.Exception;", NULL },
    { "initWithOrgLukhnosPortmobileFilePath:", "IndexSplitter", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "listSegments", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getIdxWithNSString:", "getIdx", "I", 0x2, NULL, NULL },
    { "getInfoWithNSString:", "getInfo", "Lorg.apache.lucene.index.SegmentCommitInfo;", 0x2, NULL, NULL },
    { "removeWithNSStringArray:", "remove", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "splitWithOrgLukhnosPortmobileFilePath:withNSStringArray:", "split", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "infos_", NULL, 0x1, "Lorg.apache.lucene.index.SegmentInfos;", NULL, NULL, .constantValue.asLong = 0 },
    { "fsDir_", NULL, 0x0, "Lorg.apache.lucene.store.FSDirectory;", NULL, NULL, .constantValue.asLong = 0 },
    { "dir_", NULL, 0x0, "Lorg.lukhnos.portmobile.file.Path;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexIndexSplitter = { 2, "IndexSplitter", "org.apache.lucene.index", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexIndexSplitter;
}

@end

void OrgApacheLuceneIndexIndexSplitter_mainWithNSStringArray_(IOSObjectArray *args) {
  OrgApacheLuceneIndexIndexSplitter_initialize();
  if (((IOSObjectArray *) nil_chk(args))->size_ < 2) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err_))) printlnWithNSString:@"Usage: IndexSplitter <srcDir> -l (list the segments and their sizes)"];
    [JreLoadStatic(JavaLangSystem, err_) printlnWithNSString:@"IndexSplitter <srcDir> <destDir> <segments>+"];
    [JreLoadStatic(JavaLangSystem, err_) printlnWithNSString:@"IndexSplitter <srcDir> -d (delete the following segments)"];
    return;
  }
  OrgLukhnosPortmobileFilePath *srcDir = OrgLukhnosPortmobileFilePaths_getWithNSString_(IOSObjectArray_Get(args, 0));
  OrgApacheLuceneIndexIndexSplitter *is = [new_OrgApacheLuceneIndexIndexSplitter_initWithOrgLukhnosPortmobileFilePath_(srcDir) autorelease];
  if (!OrgLukhnosPortmobileFileFiles_existsWithOrgLukhnosPortmobileFilePath_(srcDir)) {
    @throw [new_JavaLangException_initWithNSString_(JreStrcat("$@$", @"srcdir:", [((OrgLukhnosPortmobileFilePath *) nil_chk(srcDir)) toAbsolutePath], @" doesn't exist")) autorelease];
  }
  if ([((NSString *) nil_chk(IOSObjectArray_Get(args, 1))) isEqual:@"-l"]) {
    [is listSegments];
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, 1))) isEqual:@"-d"]) {
    id<JavaUtilList> segs = [new_JavaUtilArrayList_init() autorelease];
    for (jint x = 2; x < args->size_; x++) {
      [segs addWithId:IOSObjectArray_Get(args, x)];
    }
    [is removeWithNSStringArray:[segs toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSString_class_()]]];
  }
  else {
    OrgLukhnosPortmobileFilePath *targetDir = OrgLukhnosPortmobileFilePaths_getWithNSString_(IOSObjectArray_Get(args, 1));
    id<JavaUtilList> segs = [new_JavaUtilArrayList_init() autorelease];
    for (jint x = 2; x < args->size_; x++) {
      [segs addWithId:IOSObjectArray_Get(args, x)];
    }
    [is splitWithOrgLukhnosPortmobileFilePath:targetDir withNSStringArray:[segs toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSString_class_()]]];
  }
}

void OrgApacheLuceneIndexIndexSplitter_initWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneIndexIndexSplitter *self, OrgLukhnosPortmobileFilePath *dir) {
  NSObject_init(self);
  JreStrongAssign(&self->dir_, dir);
  JreStrongAssign(&self->fsDir_, OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_(dir));
  JreStrongAssign(&self->infos_, OrgApacheLuceneIndexSegmentInfos_readLatestCommitWithOrgApacheLuceneStoreDirectory_(self->fsDir_));
}

OrgApacheLuceneIndexIndexSplitter *new_OrgApacheLuceneIndexIndexSplitter_initWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *dir) {
  OrgApacheLuceneIndexIndexSplitter *self = [OrgApacheLuceneIndexIndexSplitter alloc];
  OrgApacheLuceneIndexIndexSplitter_initWithOrgLukhnosPortmobileFilePath_(self, dir);
  return self;
}

jint OrgApacheLuceneIndexIndexSplitter_getIdxWithNSString_(OrgApacheLuceneIndexIndexSplitter *self, NSString *name) {
  for (jint x = 0; x < [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(self->infos_)) size]; x++) {
    if ([((NSString *) nil_chk(name)) isEqual:((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk([self->infos_ infoWithInt:x]))->info_))->name_]) return x;
  }
  return -1;
}

OrgApacheLuceneIndexSegmentCommitInfo *OrgApacheLuceneIndexIndexSplitter_getInfoWithNSString_(OrgApacheLuceneIndexIndexSplitter *self, NSString *name) {
  for (jint x = 0; x < [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(self->infos_)) size]; x++) {
    if ([((NSString *) nil_chk(name)) isEqual:((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk([self->infos_ infoWithInt:x]))->info_))->name_]) return [self->infos_ infoWithInt:x];
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexIndexSplitter)
