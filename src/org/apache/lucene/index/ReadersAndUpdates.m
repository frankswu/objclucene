//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/ReadersAndUpdates.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Thread.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/apache/lucene/codecs/Codec.h"
#include "org/apache/lucene/codecs/DocValuesConsumer.h"
#include "org/apache/lucene/codecs/DocValuesFormat.h"
#include "org/apache/lucene/codecs/FieldInfosFormat.h"
#include "org/apache/lucene/codecs/LiveDocsFormat.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/BinaryDocValuesFieldUpdates.h"
#include "org/apache/lucene/index/DocValuesFieldUpdates.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/NumericDocValues.h"
#include "org/apache/lucene/index/NumericDocValuesFieldUpdates.h"
#include "org/apache/lucene/index/ReadersAndUpdates.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/FlushInfo.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/TrackingDirectoryWrapper.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/MutableBits.h"

@interface OrgApacheLuceneIndexReadersAndUpdates () {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *refCount_;
  OrgApacheLuceneIndexIndexWriter *writer_;
  OrgApacheLuceneIndexSegmentReader *reader_;
  id<OrgApacheLuceneUtilBits> liveDocs_;
  jint pendingDeleteCount_;
  jboolean liveDocsShared_;
  jboolean isMerging_;
  id<JavaUtilMap> mergingDVUpdates_;
}

- (void)handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)infos
                                                 withJavaUtilMap:(id<JavaUtilMap>)updates
                               withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                        withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                           withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader
                                                 withJavaUtilMap:(id<JavaUtilMap>)fieldFiles;

- (void)handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)infos
                                                withJavaUtilMap:(id<JavaUtilMap>)updates
               withOrgApacheLuceneStoreTrackingDirectoryWrapper:(OrgApacheLuceneStoreTrackingDirectoryWrapper *)dir
                       withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                          withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader
                                                withJavaUtilMap:(id<JavaUtilMap>)fieldFiles;

- (id<JavaUtilSet>)writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos
                                      withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                               withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                              withOrgApacheLuceneCodecsFieldInfosFormat:(OrgApacheLuceneCodecsFieldInfosFormat *)infosFormat;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, refCount_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, writer_, OrgApacheLuceneIndexIndexWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, reader_, OrgApacheLuceneIndexSegmentReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, liveDocs_, id<OrgApacheLuceneUtilBits>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, mergingDVUpdates_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *infos, id<JavaUtilMap> updates, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneIndexSegmentReader *reader, id<JavaUtilMap> fieldFiles);

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreTrackingDirectoryWrapper_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *infos, id<JavaUtilMap> updates, OrgApacheLuceneStoreTrackingDirectoryWrapper *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneIndexSegmentReader *reader, id<JavaUtilMap> fieldFiles);

__attribute__((unused)) static id<JavaUtilSet> OrgApacheLuceneIndexReadersAndUpdates_writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneCodecsFieldInfosFormat_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *fieldInfos, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneCodecsFieldInfosFormat *infosFormat);

@interface OrgApacheLuceneIndexReadersAndUpdates_$1 : NSObject < JavaLangIterable > {
 @public
  OrgApacheLuceneIndexNumericDocValues *currentValues_;
  id<OrgApacheLuceneUtilBits> docsWithField_;
  jint maxDoc_;
  OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *updatesIter_;
  OrgApacheLuceneIndexSegmentReader *val$reader_;
  NSString *val$field_;
  OrgApacheLuceneIndexNumericDocValuesFieldUpdates *val$fieldUpdates_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)capture$0
                                             withNSString:(NSString *)capture$1
     withOrgApacheLuceneIndexNumericDocValuesFieldUpdates:(OrgApacheLuceneIndexNumericDocValuesFieldUpdates *)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexReadersAndUpdates_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$1, currentValues_, OrgApacheLuceneIndexNumericDocValues *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$1, docsWithField_, id<OrgApacheLuceneUtilBits>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$1, updatesIter_, OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$1, val$reader_, OrgApacheLuceneIndexSegmentReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$1, val$field_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$1, val$fieldUpdates_, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_$1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexReadersAndUpdates_$1 *self, OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2);

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_$1 *new_OrgApacheLuceneIndexReadersAndUpdates_$1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_$1 *create_OrgApacheLuceneIndexReadersAndUpdates_$1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexReadersAndUpdates_$1)

@interface OrgApacheLuceneIndexReadersAndUpdates_$1_$1 : NSObject < JavaUtilIterator > {
 @public
  OrgApacheLuceneIndexReadersAndUpdates_$1 *this$0_;
  jint curDoc_;
  jint updateDoc_;
}

- (jboolean)hasNext;

- (NSNumber *)next;

- (void)remove;

- (instancetype)initWithOrgApacheLuceneIndexReadersAndUpdates_$1:(OrgApacheLuceneIndexReadersAndUpdates_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexReadersAndUpdates_$1_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$1_$1, this$0_, OrgApacheLuceneIndexReadersAndUpdates_$1 *)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_$1_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$1_(OrgApacheLuceneIndexReadersAndUpdates_$1_$1 *self, OrgApacheLuceneIndexReadersAndUpdates_$1 *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_$1_$1 *new_OrgApacheLuceneIndexReadersAndUpdates_$1_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$1_(OrgApacheLuceneIndexReadersAndUpdates_$1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_$1_$1 *create_OrgApacheLuceneIndexReadersAndUpdates_$1_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$1_(OrgApacheLuceneIndexReadersAndUpdates_$1 *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexReadersAndUpdates_$1_$1)

@interface OrgApacheLuceneIndexReadersAndUpdates_$2 : NSObject < JavaLangIterable > {
 @public
  OrgApacheLuceneIndexBinaryDocValues *currentValues_;
  id<OrgApacheLuceneUtilBits> docsWithField_;
  jint maxDoc_;
  OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *updatesIter_;
  OrgApacheLuceneIndexSegmentReader *val$reader_;
  NSString *val$field_;
  OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *val$fieldUpdates_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)capture$0
                                             withNSString:(NSString *)capture$1
      withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates:(OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexReadersAndUpdates_$2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$2, currentValues_, OrgApacheLuceneIndexBinaryDocValues *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$2, docsWithField_, id<OrgApacheLuceneUtilBits>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$2, updatesIter_, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$2, val$reader_, OrgApacheLuceneIndexSegmentReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$2, val$field_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$2, val$fieldUpdates_, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_$2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexReadersAndUpdates_$2 *self, OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2);

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_$2 *new_OrgApacheLuceneIndexReadersAndUpdates_$2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_$2 *create_OrgApacheLuceneIndexReadersAndUpdates_$2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexReadersAndUpdates_$2)

@interface OrgApacheLuceneIndexReadersAndUpdates_$2_$1 : NSObject < JavaUtilIterator > {
 @public
  OrgApacheLuceneIndexReadersAndUpdates_$2 *this$0_;
  jint curDoc_;
  jint updateDoc_;
}

- (jboolean)hasNext;

- (OrgApacheLuceneUtilBytesRef *)next;

- (void)remove;

- (instancetype)initWithOrgApacheLuceneIndexReadersAndUpdates_$2:(OrgApacheLuceneIndexReadersAndUpdates_$2 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexReadersAndUpdates_$2_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_$2_$1, this$0_, OrgApacheLuceneIndexReadersAndUpdates_$2 *)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_$2_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$2_(OrgApacheLuceneIndexReadersAndUpdates_$2_$1 *self, OrgApacheLuceneIndexReadersAndUpdates_$2 *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_$2_$1 *new_OrgApacheLuceneIndexReadersAndUpdates_$2_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$2_(OrgApacheLuceneIndexReadersAndUpdates_$2 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_$2_$1 *create_OrgApacheLuceneIndexReadersAndUpdates_$2_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$2_(OrgApacheLuceneIndexReadersAndUpdates_$2 *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexReadersAndUpdates_$2_$1)

@implementation OrgApacheLuceneIndexReadersAndUpdates

- (instancetype)initWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
              withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info {
  OrgApacheLuceneIndexReadersAndUpdates_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_(self, writer, info);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                  withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader {
  OrgApacheLuceneIndexReadersAndUpdates_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_(self, writer, reader);
  return self;
}

- (void)incRef {
  jint rc = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(refCount_)) incrementAndGet];
  JreAssert((rc > 1), (@"org/apache/lucene/index/ReadersAndUpdates.java:105 condition failed: assert rc > 1;"));
}

- (void)decRef {
  jint rc = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(refCount_)) decrementAndGet];
  JreAssert((rc >= 0), (@"org/apache/lucene/index/ReadersAndUpdates.java:110 condition failed: assert rc >= 0;"));
}

- (jint)refCount {
  jint rc = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(refCount_)) get];
  JreAssert((rc >= 0), (@"org/apache/lucene/index/ReadersAndUpdates.java:115 condition failed: assert rc >= 0;"));
  return rc;
}

- (jint)getPendingDeleteCount {
  @synchronized(self) {
    return pendingDeleteCount_;
  }
}

- (jboolean)verifyDocCounts {
  @synchronized(self) {
    jint count;
    if (liveDocs_ != nil) {
      count = 0;
      for (jint docID = 0; docID < [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc]; docID++) {
        if ([((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) getWithInt:docID]) {
          count++;
        }
      }
    }
    else {
      count = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc];
    }
    JreAssert(([info_->info_ maxDoc] - [info_ getDelCount] - pendingDeleteCount_ == count), (JreStrcat("$I$I$I$I", @"info.maxDoc=", [info_->info_ maxDoc], @" info.getDelCount()=", [info_ getDelCount], @" pendingDeleteCount=", pendingDeleteCount_, @" count=", count)));
    return true;
  }
}

- (OrgApacheLuceneIndexSegmentReader *)getReaderWithOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  if (reader_ == nil) {
    JreStrongAssignAndConsume(&reader_, new_OrgApacheLuceneIndexSegmentReader_initWithOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_(info_, context));
    if (liveDocs_ == nil) {
      JreStrongAssign(&liveDocs_, [reader_ getLiveDocs]);
    }
  }
  [((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) incRef];
  return reader_;
}

- (void)release__WithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)sr {
  @synchronized(self) {
    JreAssert((info_ == [((OrgApacheLuceneIndexSegmentReader *) nil_chk(sr)) getSegmentInfo]), (@"org/apache/lucene/index/ReadersAndUpdates.java:157 condition failed: assert info == sr.getSegmentInfo();"));
    [sr decRef];
  }
}

- (jboolean)delete__WithInt:(jint)docID {
  @synchronized(self) {
    JreAssert((liveDocs_ != nil), (@"org/apache/lucene/index/ReadersAndUpdates.java:162 condition failed: assert liveDocs != null;"));
    JreAssert((JavaLangThread_holdsLockWithId_(writer_)), (@"org/apache/lucene/index/ReadersAndUpdates.java:163 condition failed: assert Thread.holdsLock(writer);"));
    JreAssert((docID >= 0 && docID < [((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) length]), (JreStrcat("$I$I$$$I", @"out of bounds: docid=", docID, @" liveDocsLength=", [((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) length], @" seg=", ((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_))->name_, @" maxDoc=", [info_->info_ maxDoc])));
    JreAssert((!liveDocsShared_), (@"org/apache/lucene/index/ReadersAndUpdates.java:165 condition failed: assert !liveDocsShared;"));
    jboolean didDelete = [((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) getWithInt:docID];
    if (didDelete) {
      [((id<OrgApacheLuceneUtilMutableBits>) nil_chk(((id<OrgApacheLuceneUtilMutableBits>) cast_check(liveDocs_, OrgApacheLuceneUtilMutableBits_class_())))) clearWithInt:docID];
      pendingDeleteCount_++;
    }
    return didDelete;
  }
}

- (void)dropReaders {
  @synchronized(self) {
    if (reader_ != nil) {
      @try {
        [reader_ decRef];
      }
      @finally {
        JreStrongAssign(&reader_, nil);
      }
    }
    [self decRef];
  }
}

- (OrgApacheLuceneIndexSegmentReader *)getReadOnlyCloneWithOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  @synchronized(self) {
    if (reader_ == nil) {
      [((OrgApacheLuceneIndexSegmentReader *) nil_chk([self getReaderWithOrgApacheLuceneStoreIOContext:context])) decRef];
      JreAssert((reader_ != nil), (@"org/apache/lucene/index/ReadersAndUpdates.java:198 condition failed: assert reader != null;"));
    }
    liveDocsShared_ = true;
    if (liveDocs_ != nil) {
      return create_OrgApacheLuceneIndexSegmentReader_initWithOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneUtilBits_withInt_([((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) getSegmentInfo], reader_, liveDocs_, [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc] - [info_ getDelCount] - pendingDeleteCount_);
    }
    else {
      JreAssert(([((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) getLiveDocs] == nil), (@"org/apache/lucene/index/ReadersAndUpdates.java:206 condition failed: assert reader.getLiveDocs() == null;"));
      [((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) incRef];
      return reader_;
    }
  }
}

- (void)initWritableLiveDocs {
  @synchronized(self) {
    JreAssert((JavaLangThread_holdsLockWithId_(writer_)), (@"org/apache/lucene/index/ReadersAndUpdates.java:213 condition failed: assert Thread.holdsLock(writer);"));
    JreAssert(([((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc] > 0), (@"org/apache/lucene/index/ReadersAndUpdates.java:214 condition failed: assert info.info.maxDoc() > 0;"));
    if (liveDocsShared_) {
      OrgApacheLuceneCodecsLiveDocsFormat *liveDocsFormat = [((OrgApacheLuceneCodecsCodec *) nil_chk([info_->info_ getCodec])) liveDocsFormat];
      if (liveDocs_ == nil) {
        JreStrongAssign(&liveDocs_, [((OrgApacheLuceneCodecsLiveDocsFormat *) nil_chk(liveDocsFormat)) newLiveDocsWithInt:[info_->info_ maxDoc]]);
      }
      else {
        JreStrongAssign(&liveDocs_, [((OrgApacheLuceneCodecsLiveDocsFormat *) nil_chk(liveDocsFormat)) newLiveDocsWithOrgApacheLuceneUtilBits:liveDocs_]);
      }
      liveDocsShared_ = false;
    }
  }
}

- (id<OrgApacheLuceneUtilBits>)getLiveDocs {
  @synchronized(self) {
    JreAssert((JavaLangThread_holdsLockWithId_(writer_)), (@"org/apache/lucene/index/ReadersAndUpdates.java:233 condition failed: assert Thread.holdsLock(writer);"));
    return liveDocs_;
  }
}

- (id<OrgApacheLuceneUtilBits>)getReadOnlyLiveDocs {
  @synchronized(self) {
    JreAssert((JavaLangThread_holdsLockWithId_(writer_)), (@"org/apache/lucene/index/ReadersAndUpdates.java:239 condition failed: assert Thread.holdsLock(writer);"));
    liveDocsShared_ = true;
    return liveDocs_;
  }
}

- (void)dropChanges {
  @synchronized(self) {
    pendingDeleteCount_ = 0;
    [self dropMergingUpdates];
  }
}

- (jboolean)writeLiveDocsWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  @synchronized(self) {
    JreAssert((JavaLangThread_holdsLockWithId_(writer_)), (@"org/apache/lucene/index/ReadersAndUpdates.java:263 condition failed: assert Thread.holdsLock(writer);"));
    if (pendingDeleteCount_ == 0) {
      return false;
    }
    JreAssert(([((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) length] == [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc]), (@"org/apache/lucene/index/ReadersAndUpdates.java:270 condition failed: assert liveDocs.length() == info.info.maxDoc();"));
    OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
    jboolean success = false;
    @try {
      OrgApacheLuceneCodecsCodec *codec = [info_->info_ getCodec];
      [((OrgApacheLuceneCodecsLiveDocsFormat *) nil_chk([((OrgApacheLuceneCodecsCodec *) nil_chk(codec)) liveDocsFormat])) writeLiveDocsWithOrgApacheLuceneUtilMutableBits:(id<OrgApacheLuceneUtilMutableBits>) cast_check(liveDocs_, OrgApacheLuceneUtilMutableBits_class_()) withOrgApacheLuceneStoreDirectory:trackingDir withOrgApacheLuceneIndexSegmentCommitInfo:info_ withInt:pendingDeleteCount_ withOrgApacheLuceneStoreIOContext:JreLoadStatic(OrgApacheLuceneStoreIOContext, DEFAULT)];
      success = true;
    }
    @finally {
      if (!success) {
        [info_ advanceNextWriteDelGen];
        for (NSString * __strong fileName in nil_chk([trackingDir getCreatedFiles])) {
          OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgApacheLuceneStoreDirectory_withNSStringArray_(dir, [IOSObjectArray arrayWithObjects:(id[]){ fileName } count:1 type:NSString_class_()]);
        }
      }
    }
    [info_ advanceDelGen];
    [info_ setDelCountWithInt:[info_ getDelCount] + pendingDeleteCount_];
    pendingDeleteCount_ = 0;
    return true;
  }
}

- (void)handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)infos
                                                 withJavaUtilMap:(id<JavaUtilMap>)updates
                               withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                        withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                           withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader
                                                 withJavaUtilMap:(id<JavaUtilMap>)fieldFiles {
  OrgApacheLuceneIndexReadersAndUpdates_handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(self, infos, updates, dir, dvFormat, reader, fieldFiles);
}

- (void)handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)infos
                                                withJavaUtilMap:(id<JavaUtilMap>)updates
               withOrgApacheLuceneStoreTrackingDirectoryWrapper:(OrgApacheLuceneStoreTrackingDirectoryWrapper *)dir
                       withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                          withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader
                                                withJavaUtilMap:(id<JavaUtilMap>)fieldFiles {
  OrgApacheLuceneIndexReadersAndUpdates_handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreTrackingDirectoryWrapper_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(self, infos, updates, dir, dvFormat, reader, fieldFiles);
}

- (id<JavaUtilSet>)writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos
                                      withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                               withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                              withOrgApacheLuceneCodecsFieldInfosFormat:(OrgApacheLuceneCodecsFieldInfosFormat *)infosFormat {
  return OrgApacheLuceneIndexReadersAndUpdates_writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneCodecsFieldInfosFormat_(self, fieldInfos, dir, dvFormat, infosFormat);
}

- (void)writeFieldUpdatesWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
   withOrgApacheLuceneIndexDocValuesFieldUpdates_Container:(OrgApacheLuceneIndexDocValuesFieldUpdates_Container *)dvUpdates {
  @synchronized(self) {
    JreAssert((JavaLangThread_holdsLockWithId_(writer_)), (@"org/apache/lucene/index/ReadersAndUpdates.java:472 condition failed: assert Thread.holdsLock(writer);"));
    JreAssert(([((OrgApacheLuceneIndexDocValuesFieldUpdates_Container *) nil_chk(dvUpdates)) any]), (@"org/apache/lucene/index/ReadersAndUpdates.java:475 condition failed: assert dvUpdates.any();"));
    OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
    id<JavaUtilMap> newDVFiles = create_JavaUtilHashMap_init();
    id<JavaUtilSet> fieldInfosFiles = nil;
    OrgApacheLuceneIndexFieldInfos *fieldInfos = nil;
    jboolean success = false;
    @try {
      OrgApacheLuceneCodecsCodec *codec = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) getCodec];
      OrgApacheLuceneIndexSegmentReader *reader = self->reader_ == nil ? create_OrgApacheLuceneIndexSegmentReader_initWithOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_(info_, JreLoadStatic(OrgApacheLuceneStoreIOContext, READONCE)) : self->reader_;
      @try {
        OrgApacheLuceneIndexFieldInfos_Builder *builder = create_OrgApacheLuceneIndexFieldInfos_Builder_initWithOrgApacheLuceneIndexFieldInfos_FieldNumbers_(((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_))->globalFieldNumberMap_);
        for (OrgApacheLuceneIndexFieldInfo * __strong fi in nil_chk([reader getFieldInfos])) {
          OrgApacheLuceneIndexFieldInfo *clone = [builder addWithOrgApacheLuceneIndexFieldInfo:fi];
          for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi)) attributes])) entrySet])) {
            [((OrgApacheLuceneIndexFieldInfo *) nil_chk(clone)) putAttributeWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey] withNSString:[e getValue]];
          }
          [((OrgApacheLuceneIndexFieldInfo *) nil_chk(clone)) setDocValuesGenWithLong:[fi getDocValuesGen]];
        }
        for (NSString * __strong f in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdates->numericDVUpdates_)) keySet])) {
          OrgApacheLuceneIndexFieldInfo *fieldInfo = [builder getOrAddWithNSString:f];
          [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) setDocValuesTypeWithOrgApacheLuceneIndexDocValuesType:JreLoadEnum(OrgApacheLuceneIndexDocValuesType, NUMERIC)];
        }
        for (NSString * __strong f in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdates->binaryDVUpdates_)) keySet])) {
          OrgApacheLuceneIndexFieldInfo *fieldInfo = [builder getOrAddWithNSString:f];
          [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) setDocValuesTypeWithOrgApacheLuceneIndexDocValuesType:JreLoadEnum(OrgApacheLuceneIndexDocValuesType, BINARY)];
        }
        fieldInfos = [builder finish];
        OrgApacheLuceneCodecsDocValuesFormat *docValuesFormat = [((OrgApacheLuceneCodecsCodec *) nil_chk(codec)) docValuesFormat];
        OrgApacheLuceneIndexReadersAndUpdates_handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(self, fieldInfos, dvUpdates->numericDVUpdates_, trackingDir, docValuesFormat, reader, newDVFiles);
        OrgApacheLuceneIndexReadersAndUpdates_handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreTrackingDirectoryWrapper_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(self, fieldInfos, dvUpdates->binaryDVUpdates_, trackingDir, docValuesFormat, reader, newDVFiles);
        fieldInfosFiles = OrgApacheLuceneIndexReadersAndUpdates_writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneCodecsFieldInfosFormat_(self, fieldInfos, trackingDir, docValuesFormat, [codec fieldInfosFormat]);
      }
      @finally {
        if (reader != self->reader_) {
          [reader close];
        }
      }
      success = true;
    }
    @finally {
      if (!success) {
        [info_ advanceNextWriteFieldInfosGen];
        [info_ advanceNextWriteDocValuesGen];
        for (NSString * __strong fileName in nil_chk([trackingDir getCreatedFiles])) {
          OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgApacheLuceneStoreDirectory_withNSStringArray_(dir, [IOSObjectArray arrayWithObjects:(id[]){ fileName } count:1 type:NSString_class_()]);
        }
      }
    }
    if (isMerging_) {
      for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdates->numericDVUpdates_)) entrySet])) {
        OrgApacheLuceneIndexDocValuesFieldUpdates *updates = [((id<JavaUtilMap>) nil_chk(mergingDVUpdates_)) getWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]];
        if (updates == nil) {
          [mergingDVUpdates_ putWithId:[e getKey] withId:[e getValue]];
        }
        else {
          [updates mergeWithOrgApacheLuceneIndexDocValuesFieldUpdates:[e getValue]];
        }
      }
      for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdates->binaryDVUpdates_)) entrySet])) {
        OrgApacheLuceneIndexDocValuesFieldUpdates *updates = [((id<JavaUtilMap>) nil_chk(mergingDVUpdates_)) getWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]];
        if (updates == nil) {
          [mergingDVUpdates_ putWithId:[e getKey] withId:[e getValue]];
        }
        else {
          [updates mergeWithOrgApacheLuceneIndexDocValuesFieldUpdates:[e getValue]];
        }
      }
    }
    JreAssert((fieldInfosFiles != nil), (@"org/apache/lucene/index/ReadersAndUpdates.java:571 condition failed: assert fieldInfosFiles != null;"));
    [info_ setFieldInfosFilesWithJavaUtilSet:fieldInfosFiles];
    JreAssert((![newDVFiles isEmpty]), (@"org/apache/lucene/index/ReadersAndUpdates.java:578 condition failed: assert !newDVFiles.isEmpty();"));
    for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk([info_ getDocValuesUpdatesFiles])) entrySet])) {
      if (![newDVFiles containsKeyWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]]) {
        [newDVFiles putWithId:[e getKey] withId:[e getValue]];
      }
    }
    [info_ setDocValuesUpdatesFilesWithJavaUtilMap:newDVFiles];
    [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) checkpoint];
    if (reader_ != nil) {
      OrgApacheLuceneIndexSegmentReader *newReader = create_OrgApacheLuceneIndexSegmentReader_initWithOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneUtilBits_withInt_(info_, reader_, liveDocs_, [info_->info_ maxDoc] - [info_ getDelCount] - pendingDeleteCount_);
      jboolean reopened = false;
      @try {
        [((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) decRef];
        JreStrongAssign(&reader_, newReader);
        reopened = true;
      }
      @finally {
        if (!reopened) {
          [newReader decRef];
        }
      }
    }
  }
}

- (OrgApacheLuceneIndexSegmentReader *)getReaderForMergeWithOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  @synchronized(self) {
    JreAssert((JavaLangThread_holdsLockWithId_(writer_)), (@"org/apache/lucene/index/ReadersAndUpdates.java:610 condition failed: assert Thread.holdsLock(writer);"));
    isMerging_ = true;
    return [self getReaderWithOrgApacheLuceneStoreIOContext:context];
  }
}

- (void)dropMergingUpdates {
  @synchronized(self) {
    [((id<JavaUtilMap>) nil_chk(mergingDVUpdates_)) clear];
    isMerging_ = false;
  }
}

- (id<JavaUtilMap>)getMergingFieldUpdates {
  @synchronized(self) {
    return mergingDVUpdates_;
  }
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"ReadersAndLiveDocs(seg="])) appendWithId:info_];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" pendingDeleteCount="])) appendWithInt:pendingDeleteCount_];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" liveDocsShared="])) appendWithBoolean:liveDocsShared_];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(info_);
  RELEASE_(refCount_);
  RELEASE_(writer_);
  RELEASE_(reader_);
  RELEASE_(liveDocs_);
  RELEASE_(mergingDVUpdates_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexIndexWriter:withOrgApacheLuceneIndexSegmentCommitInfo:", "ReadersAndUpdates", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneIndexIndexWriter:withOrgApacheLuceneIndexSegmentReader:", "ReadersAndUpdates", NULL, 0x1, NULL, NULL },
    { "incRef", NULL, "V", 0x1, NULL, NULL },
    { "decRef", NULL, "V", 0x1, NULL, NULL },
    { "refCount", NULL, "I", 0x1, NULL, NULL },
    { "getPendingDeleteCount", NULL, "I", 0x21, NULL, NULL },
    { "verifyDocCounts", NULL, "Z", 0x21, NULL, NULL },
    { "getReaderWithOrgApacheLuceneStoreIOContext:", "getReader", "Lorg.apache.lucene.index.SegmentReader;", 0x1, "Ljava.io.IOException;", NULL },
    { "release__WithOrgApacheLuceneIndexSegmentReader:", "release", "V", 0x21, "Ljava.io.IOException;", NULL },
    { "delete__WithInt:", "delete", "Z", 0x21, NULL, NULL },
    { "dropReaders", NULL, "V", 0x21, "Ljava.io.IOException;", NULL },
    { "getReadOnlyCloneWithOrgApacheLuceneStoreIOContext:", "getReadOnlyClone", "Lorg.apache.lucene.index.SegmentReader;", 0x21, "Ljava.io.IOException;", NULL },
    { "initWritableLiveDocs", NULL, "V", 0x21, "Ljava.io.IOException;", NULL },
    { "getLiveDocs", NULL, "Lorg.apache.lucene.util.Bits;", 0x21, NULL, NULL },
    { "getReadOnlyLiveDocs", NULL, "Lorg.apache.lucene.util.Bits;", 0x21, NULL, NULL },
    { "dropChanges", NULL, "V", 0x21, NULL, NULL },
    { "writeLiveDocsWithOrgApacheLuceneStoreDirectory:", "writeLiveDocs", "Z", 0x21, "Ljava.io.IOException;", NULL },
    { "handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos:withJavaUtilMap:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneIndexSegmentReader:withJavaUtilMap:", "handleNumericDVUpdates", "V", 0x2, "Ljava.io.IOException;", "(Lorg/apache/lucene/index/FieldInfos;Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/NumericDocValuesFieldUpdates;>;Lorg/apache/lucene/store/Directory;Lorg/apache/lucene/codecs/DocValuesFormat;Lorg/apache/lucene/index/SegmentReader;Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Set<Ljava/lang/String;>;>;)V" },
    { "handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos:withJavaUtilMap:withOrgApacheLuceneStoreTrackingDirectoryWrapper:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneIndexSegmentReader:withJavaUtilMap:", "handleBinaryDVUpdates", "V", 0x2, "Ljava.io.IOException;", "(Lorg/apache/lucene/index/FieldInfos;Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/BinaryDocValuesFieldUpdates;>;Lorg/apache/lucene/store/TrackingDirectoryWrapper;Lorg/apache/lucene/codecs/DocValuesFormat;Lorg/apache/lucene/index/SegmentReader;Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Set<Ljava/lang/String;>;>;)V" },
    { "writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneCodecsFieldInfosFormat:", "writeFieldInfosGen", "Ljava.util.Set;", 0x2, "Ljava.io.IOException;", "(Lorg/apache/lucene/index/FieldInfos;Lorg/apache/lucene/store/Directory;Lorg/apache/lucene/codecs/DocValuesFormat;Lorg/apache/lucene/codecs/FieldInfosFormat;)Ljava/util/Set<Ljava/lang/String;>;" },
    { "writeFieldUpdatesWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexDocValuesFieldUpdates_Container:", "writeFieldUpdates", "V", 0x21, "Ljava.io.IOException;", NULL },
    { "getReaderForMergeWithOrgApacheLuceneStoreIOContext:", "getReaderForMerge", "Lorg.apache.lucene.index.SegmentReader;", 0x20, "Ljava.io.IOException;", NULL },
    { "dropMergingUpdates", NULL, "V", 0x21, NULL, NULL },
    { "getMergingFieldUpdates", NULL, "Ljava.util.Map;", 0x21, NULL, "()Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/DocValuesFieldUpdates;>;" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "info_", NULL, 0x11, "Lorg.apache.lucene.index.SegmentCommitInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "refCount_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicInteger;", NULL, NULL, .constantValue.asLong = 0 },
    { "writer_", NULL, 0x12, "Lorg.apache.lucene.index.IndexWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "reader_", NULL, 0x2, "Lorg.apache.lucene.index.SegmentReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "liveDocs_", NULL, 0x2, "Lorg.apache.lucene.util.Bits;", NULL, NULL, .constantValue.asLong = 0 },
    { "pendingDeleteCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "liveDocsShared_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isMerging_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "mergingDVUpdates_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/DocValuesFieldUpdates;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates = { 2, "ReadersAndUpdates", "org.apache.lucene.index", NULL, 0x0, 25, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexReadersAndUpdates;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentCommitInfo *info) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->refCount_, new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(1));
  self->isMerging_ = false;
  JreStrongAssignAndConsume(&self->mergingDVUpdates_, new_JavaUtilHashMap_init());
  JreStrongAssign(&self->writer_, writer);
  JreStrongAssign(&self->info_, info);
  self->liveDocsShared_ = true;
}

OrgApacheLuceneIndexReadersAndUpdates *new_OrgApacheLuceneIndexReadersAndUpdates_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_(OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentCommitInfo *info) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates, initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_, writer, info)
}

OrgApacheLuceneIndexReadersAndUpdates *create_OrgApacheLuceneIndexReadersAndUpdates_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_(OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentCommitInfo *info) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates, initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_, writer, info)
}

void OrgApacheLuceneIndexReadersAndUpdates_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentReader *reader) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->refCount_, new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(1));
  self->isMerging_ = false;
  JreStrongAssignAndConsume(&self->mergingDVUpdates_, new_JavaUtilHashMap_init());
  JreStrongAssign(&self->writer_, writer);
  JreStrongAssign(&self->reader_, reader);
  JreStrongAssign(&self->info_, [((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader)) getSegmentInfo]);
  JreStrongAssign(&self->liveDocs_, [reader getLiveDocs]);
  self->liveDocsShared_ = true;
  self->pendingDeleteCount_ = [reader numDeletedDocs] - [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(self->info_)) getDelCount];
  JreAssert((self->pendingDeleteCount_ >= 0), (JreStrcat("$I$I$I$I$I", @"got ", self->pendingDeleteCount_, @" reader.numDeletedDocs()=", [reader numDeletedDocs], @" info.getDelCount()=", [self->info_ getDelCount], @" maxDoc=", [reader maxDoc], @" numDocs=", [reader numDocs])));
}

OrgApacheLuceneIndexReadersAndUpdates *new_OrgApacheLuceneIndexReadersAndUpdates_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_(OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentReader *reader) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates, initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_, writer, reader)
}

OrgApacheLuceneIndexReadersAndUpdates *create_OrgApacheLuceneIndexReadersAndUpdates_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_(OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentReader *reader) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates, initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_, writer, reader)
}

void OrgApacheLuceneIndexReadersAndUpdates_handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *infos, id<JavaUtilMap> updates, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneIndexSegmentReader *reader, id<JavaUtilMap> fieldFiles) {
  for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(updates)) entrySet])) {
    NSString *field = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
    OrgApacheLuceneIndexNumericDocValuesFieldUpdates *fieldUpdates = [e getValue];
    jlong nextDocValuesGen = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(self->info_)) getNextDocValuesGen];
    NSString *segmentSuffix = JavaLangLong_toStringWithLong_withInt_(nextDocValuesGen, JavaLangCharacter_MAX_RADIX);
    jlong estUpdatesSize = [((OrgApacheLuceneIndexNumericDocValuesFieldUpdates *) nil_chk(fieldUpdates)) ramBytesPerDoc] * [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(self->info_->info_)) maxDoc];
    OrgApacheLuceneStoreIOContext *updatesContext = create_OrgApacheLuceneStoreIOContext_initWithOrgApacheLuceneStoreFlushInfo_(create_OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_([self->info_->info_ maxDoc], estUpdatesSize));
    OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(infos)) fieldInfoWithNSString:field];
    JreAssert((fieldInfo != nil), (@"org/apache/lucene/index/ReadersAndUpdates.java:320 condition failed: assert fieldInfo != null;"));
    [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) setDocValuesGenWithLong:nextDocValuesGen];
    OrgApacheLuceneIndexFieldInfos *fieldInfos = create_OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_([IOSObjectArray arrayWithObjects:(id[]){ fieldInfo } count:1 type:OrgApacheLuceneIndexFieldInfo_class_()]);
    OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
    OrgApacheLuceneIndexSegmentWriteState *state = create_OrgApacheLuceneIndexSegmentWriteState_initWithOrgApacheLuceneUtilInfoStream_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneIndexBufferedUpdates_withOrgApacheLuceneStoreIOContext_withNSString_(nil, trackingDir, self->info_->info_, fieldInfos, nil, updatesContext, segmentSuffix);
    {
      OrgApacheLuceneCodecsDocValuesConsumer *fieldsConsumer = [((OrgApacheLuceneCodecsDocValuesFormat *) nil_chk(dvFormat)) fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:state];
      NSException *__primaryException1 = nil;
      @try {
        [((OrgApacheLuceneCodecsDocValuesConsumer *) nil_chk(fieldsConsumer)) addNumericFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo withJavaLangIterable:create_OrgApacheLuceneIndexReadersAndUpdates_$1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(reader, field, fieldUpdates)];
      }
      @catch (NSException *e) {
        __primaryException1 = e;
        @throw e;
      }
      @finally {
        if (fieldsConsumer != nil) {
          if (__primaryException1 != nil) {
            @try {
              [fieldsConsumer close];
            } @catch (NSException *e) {
              [__primaryException1 addSuppressedWithNSException:e];
            }
          } else {
            [fieldsConsumer close];
          }
        }
      }
    }
    [self->info_ advanceDocValuesGen];
    JreAssert((![((id<JavaUtilMap>) nil_chk(fieldFiles)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(fieldInfo->number_)]), (@"org/apache/lucene/index/ReadersAndUpdates.java:376 condition failed: assert !fieldFiles.containsKey(fieldInfo.number);"));
    [fieldFiles putWithId:JavaLangInteger_valueOfWithInt_(fieldInfo->number_) withId:[trackingDir getCreatedFiles]];
  }
}

void OrgApacheLuceneIndexReadersAndUpdates_handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreTrackingDirectoryWrapper_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *infos, id<JavaUtilMap> updates, OrgApacheLuceneStoreTrackingDirectoryWrapper *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneIndexSegmentReader *reader, id<JavaUtilMap> fieldFiles) {
  for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(updates)) entrySet])) {
    NSString *field = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
    OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *fieldUpdates = [e getValue];
    jlong nextDocValuesGen = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(self->info_)) getNextDocValuesGen];
    NSString *segmentSuffix = JavaLangLong_toStringWithLong_withInt_(nextDocValuesGen, JavaLangCharacter_MAX_RADIX);
    jlong estUpdatesSize = [((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *) nil_chk(fieldUpdates)) ramBytesPerDoc] * [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(self->info_->info_)) maxDoc];
    OrgApacheLuceneStoreIOContext *updatesContext = create_OrgApacheLuceneStoreIOContext_initWithOrgApacheLuceneStoreFlushInfo_(create_OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_([self->info_->info_ maxDoc], estUpdatesSize));
    OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(infos)) fieldInfoWithNSString:field];
    JreAssert((fieldInfo != nil), (@"org/apache/lucene/index/ReadersAndUpdates.java:393 condition failed: assert fieldInfo != null;"));
    [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) setDocValuesGenWithLong:nextDocValuesGen];
    OrgApacheLuceneIndexFieldInfos *fieldInfos = create_OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_([IOSObjectArray arrayWithObjects:(id[]){ fieldInfo } count:1 type:OrgApacheLuceneIndexFieldInfo_class_()]);
    OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
    OrgApacheLuceneIndexSegmentWriteState *state = create_OrgApacheLuceneIndexSegmentWriteState_initWithOrgApacheLuceneUtilInfoStream_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneIndexBufferedUpdates_withOrgApacheLuceneStoreIOContext_withNSString_(nil, trackingDir, self->info_->info_, fieldInfos, nil, updatesContext, segmentSuffix);
    {
      OrgApacheLuceneCodecsDocValuesConsumer *fieldsConsumer = [((OrgApacheLuceneCodecsDocValuesFormat *) nil_chk(dvFormat)) fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:state];
      NSException *__primaryException1 = nil;
      @try {
        [((OrgApacheLuceneCodecsDocValuesConsumer *) nil_chk(fieldsConsumer)) addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo withJavaLangIterable:create_OrgApacheLuceneIndexReadersAndUpdates_$2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(reader, field, fieldUpdates)];
      }
      @catch (NSException *e) {
        __primaryException1 = e;
        @throw e;
      }
      @finally {
        if (fieldsConsumer != nil) {
          if (__primaryException1 != nil) {
            @try {
              [fieldsConsumer close];
            } @catch (NSException *e) {
              [__primaryException1 addSuppressedWithNSException:e];
            }
          } else {
            [fieldsConsumer close];
          }
        }
      }
    }
    [self->info_ advanceDocValuesGen];
    JreAssert((![((id<JavaUtilMap>) nil_chk(fieldFiles)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(fieldInfo->number_)]), (@"org/apache/lucene/index/ReadersAndUpdates.java:449 condition failed: assert !fieldFiles.containsKey(fieldInfo.number);"));
    [fieldFiles putWithId:JavaLangInteger_valueOfWithInt_(fieldInfo->number_) withId:[trackingDir getCreatedFiles]];
  }
}

id<JavaUtilSet> OrgApacheLuceneIndexReadersAndUpdates_writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneCodecsFieldInfosFormat_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *fieldInfos, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneCodecsFieldInfosFormat *infosFormat) {
  jlong nextFieldInfosGen = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(self->info_)) getNextFieldInfosGen];
  NSString *segmentSuffix = JavaLangLong_toStringWithLong_withInt_(nextFieldInfosGen, JavaLangCharacter_MAX_RADIX);
  jlong estInfosSize = 40 + 90 * [((OrgApacheLuceneIndexFieldInfos *) nil_chk(fieldInfos)) size];
  OrgApacheLuceneStoreIOContext *infosContext = create_OrgApacheLuceneStoreIOContext_initWithOrgApacheLuceneStoreFlushInfo_(create_OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_([((OrgApacheLuceneIndexSegmentInfo *) nil_chk(self->info_->info_)) maxDoc], estInfosSize));
  OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
  [((OrgApacheLuceneCodecsFieldInfosFormat *) nil_chk(infosFormat)) writeWithOrgApacheLuceneStoreDirectory:trackingDir withOrgApacheLuceneIndexSegmentInfo:self->info_->info_ withNSString:segmentSuffix withOrgApacheLuceneIndexFieldInfos:fieldInfos withOrgApacheLuceneStoreIOContext:infosContext];
  [self->info_ advanceFieldInfosGen];
  return [trackingDir getCreatedFiles];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexReadersAndUpdates)

@implementation OrgApacheLuceneIndexReadersAndUpdates_$1

- (id<JavaUtilIterator>)iterator {
  [((OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *) nil_chk(updatesIter_)) reset];
  return create_OrgApacheLuceneIndexReadersAndUpdates_$1_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$1_(self);
}

- (instancetype)initWithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)capture$0
                                             withNSString:(NSString *)capture$1
     withOrgApacheLuceneIndexNumericDocValuesFieldUpdates:(OrgApacheLuceneIndexNumericDocValuesFieldUpdates *)capture$2 {
  OrgApacheLuceneIndexReadersAndUpdates_$1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(self, capture$0, capture$1, capture$2);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(currentValues_);
  RELEASE_(docsWithField_);
  RELEASE_(updatesIter_);
  RELEASE_(val$reader_);
  RELEASE_(val$field_);
  RELEASE_(val$fieldUpdates_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, "()Ljava/util/Iterator<Ljava/lang/Number;>;" },
    { "initWithOrgApacheLuceneIndexSegmentReader:withNSString:withOrgApacheLuceneIndexNumericDocValuesFieldUpdates:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "currentValues_", NULL, 0x10, "Lorg.apache.lucene.index.NumericDocValues;", NULL, NULL, .constantValue.asLong = 0 },
    { "docsWithField_", NULL, 0x10, "Lorg.apache.lucene.util.Bits;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxDoc_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "updatesIter_", NULL, 0x10, "Lorg.apache.lucene.index.NumericDocValuesFieldUpdates$Iterator;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$reader_", NULL, 0x1012, "Lorg.apache.lucene.index.SegmentReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$field_", NULL, 0x1012, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$fieldUpdates_", NULL, 0x1012, "Lorg.apache.lucene.index.NumericDocValuesFieldUpdates;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneIndexReadersAndUpdates", "handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos:withJavaUtilMap:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneIndexSegmentReader:withJavaUtilMap:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates_$1 = { 2, "", "org.apache.lucene.index", "ReadersAndUpdates", 0x8008, 2, methods, 7, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Number;>;" };
  return &_OrgApacheLuceneIndexReadersAndUpdates_$1;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_$1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexReadersAndUpdates_$1 *self, OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2) {
  JreStrongAssign(&self->val$reader_, capture$0);
  JreStrongAssign(&self->val$field_, capture$1);
  JreStrongAssign(&self->val$fieldUpdates_, capture$2);
  NSObject_init(self);
  JreStrongAssign(&self->currentValues_, [((OrgApacheLuceneIndexSegmentReader *) nil_chk(self->val$reader_)) getNumericDocValuesWithNSString:self->val$field_]);
  JreStrongAssign(&self->docsWithField_, [self->val$reader_ getDocsWithFieldWithNSString:self->val$field_]);
  self->maxDoc_ = [self->val$reader_ maxDoc];
  JreStrongAssign(&self->updatesIter_, [((OrgApacheLuceneIndexNumericDocValuesFieldUpdates *) nil_chk(self->val$fieldUpdates_)) iterator]);
}

OrgApacheLuceneIndexReadersAndUpdates_$1 *new_OrgApacheLuceneIndexReadersAndUpdates_$1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates_$1, initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_, capture$0, capture$1, capture$2)
}

OrgApacheLuceneIndexReadersAndUpdates_$1 *create_OrgApacheLuceneIndexReadersAndUpdates_$1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates_$1, initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexReadersAndUpdates_$1)

@implementation OrgApacheLuceneIndexReadersAndUpdates_$1_$1

- (jboolean)hasNext {
  return curDoc_ < this$0_->maxDoc_ - 1;
}

- (NSNumber *)next {
  if (++curDoc_ >= this$0_->maxDoc_) {
    @throw create_JavaUtilNoSuchElementException_initWithNSString_(@"no more documents to return values for");
  }
  if (curDoc_ == updateDoc_) {
    JavaLangLong *value = [((OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *) nil_chk(this$0_->updatesIter_)) value];
    updateDoc_ = [this$0_->updatesIter_ nextDoc];
    return value;
  }
  else {
    JreAssert((curDoc_ < updateDoc_), (@"org/apache/lucene/index/ReadersAndUpdates.java:357 condition failed: assert curDoc < updateDoc;"));
    if (this$0_->currentValues_ != nil && [((id<OrgApacheLuceneUtilBits>) nil_chk(this$0_->docsWithField_)) getWithInt:curDoc_]) {
      return JavaLangLong_valueOfWithLong_([this$0_->currentValues_ getWithInt:curDoc_]);
    }
    else {
      return nil;
    }
  }
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"this iterator does not support removing elements");
}

- (instancetype)initWithOrgApacheLuceneIndexReadersAndUpdates_$1:(OrgApacheLuceneIndexReadersAndUpdates_$1 *)outer$ {
  OrgApacheLuceneIndexReadersAndUpdates_$1_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$1_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "Ljava.lang.Number;", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneIndexReadersAndUpdates_$1:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.index.ReadersAndUpdates$1;", NULL, NULL, .constantValue.asLong = 0 },
    { "curDoc_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "updateDoc_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneIndexReadersAndUpdates_$1", "iterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates_$1_$1 = { 2, "", "org.apache.lucene.index", "ReadersAndUpdates$", 0x8008, 4, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Number;>;" };
  return &_OrgApacheLuceneIndexReadersAndUpdates_$1_$1;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_$1_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$1_(OrgApacheLuceneIndexReadersAndUpdates_$1_$1 *self, OrgApacheLuceneIndexReadersAndUpdates_$1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->curDoc_ = -1;
  self->updateDoc_ = [((OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *) nil_chk(outer$->updatesIter_)) nextDoc];
}

OrgApacheLuceneIndexReadersAndUpdates_$1_$1 *new_OrgApacheLuceneIndexReadersAndUpdates_$1_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$1_(OrgApacheLuceneIndexReadersAndUpdates_$1 *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates_$1_$1, initWithOrgApacheLuceneIndexReadersAndUpdates_$1_, outer$)
}

OrgApacheLuceneIndexReadersAndUpdates_$1_$1 *create_OrgApacheLuceneIndexReadersAndUpdates_$1_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$1_(OrgApacheLuceneIndexReadersAndUpdates_$1 *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates_$1_$1, initWithOrgApacheLuceneIndexReadersAndUpdates_$1_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexReadersAndUpdates_$1_$1)

@implementation OrgApacheLuceneIndexReadersAndUpdates_$2

- (id<JavaUtilIterator>)iterator {
  [((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *) nil_chk(updatesIter_)) reset];
  return create_OrgApacheLuceneIndexReadersAndUpdates_$2_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$2_(self);
}

- (instancetype)initWithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)capture$0
                                             withNSString:(NSString *)capture$1
      withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates:(OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *)capture$2 {
  OrgApacheLuceneIndexReadersAndUpdates_$2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(self, capture$0, capture$1, capture$2);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(currentValues_);
  RELEASE_(docsWithField_);
  RELEASE_(updatesIter_);
  RELEASE_(val$reader_);
  RELEASE_(val$field_);
  RELEASE_(val$fieldUpdates_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, "()Ljava/util/Iterator<Lorg/apache/lucene/util/BytesRef;>;" },
    { "initWithOrgApacheLuceneIndexSegmentReader:withNSString:withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "currentValues_", NULL, 0x10, "Lorg.apache.lucene.index.BinaryDocValues;", NULL, NULL, .constantValue.asLong = 0 },
    { "docsWithField_", NULL, 0x10, "Lorg.apache.lucene.util.Bits;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxDoc_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "updatesIter_", NULL, 0x10, "Lorg.apache.lucene.index.BinaryDocValuesFieldUpdates$Iterator;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$reader_", NULL, 0x1012, "Lorg.apache.lucene.index.SegmentReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$field_", NULL, 0x1012, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$fieldUpdates_", NULL, 0x1012, "Lorg.apache.lucene.index.BinaryDocValuesFieldUpdates;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneIndexReadersAndUpdates", "handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos:withJavaUtilMap:withOrgApacheLuceneStoreTrackingDirectoryWrapper:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneIndexSegmentReader:withJavaUtilMap:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates_$2 = { 2, "", "org.apache.lucene.index", "ReadersAndUpdates", 0x8008, 2, methods, 7, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/lang/Iterable<Lorg/apache/lucene/util/BytesRef;>;" };
  return &_OrgApacheLuceneIndexReadersAndUpdates_$2;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_$2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexReadersAndUpdates_$2 *self, OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2) {
  JreStrongAssign(&self->val$reader_, capture$0);
  JreStrongAssign(&self->val$field_, capture$1);
  JreStrongAssign(&self->val$fieldUpdates_, capture$2);
  NSObject_init(self);
  JreStrongAssign(&self->currentValues_, [((OrgApacheLuceneIndexSegmentReader *) nil_chk(self->val$reader_)) getBinaryDocValuesWithNSString:self->val$field_]);
  JreStrongAssign(&self->docsWithField_, [self->val$reader_ getDocsWithFieldWithNSString:self->val$field_]);
  self->maxDoc_ = [self->val$reader_ maxDoc];
  JreStrongAssign(&self->updatesIter_, [((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *) nil_chk(self->val$fieldUpdates_)) iterator]);
}

OrgApacheLuceneIndexReadersAndUpdates_$2 *new_OrgApacheLuceneIndexReadersAndUpdates_$2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates_$2, initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_, capture$0, capture$1, capture$2)
}

OrgApacheLuceneIndexReadersAndUpdates_$2 *create_OrgApacheLuceneIndexReadersAndUpdates_$2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates_$2, initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexReadersAndUpdates_$2)

@implementation OrgApacheLuceneIndexReadersAndUpdates_$2_$1

- (jboolean)hasNext {
  return curDoc_ < this$0_->maxDoc_ - 1;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if (++curDoc_ >= this$0_->maxDoc_) {
    @throw create_JavaUtilNoSuchElementException_initWithNSString_(@"no more documents to return values for");
  }
  if (curDoc_ == updateDoc_) {
    OrgApacheLuceneUtilBytesRef *value = [((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *) nil_chk(this$0_->updatesIter_)) value];
    updateDoc_ = [this$0_->updatesIter_ nextDoc];
    return value;
  }
  else {
    JreAssert((curDoc_ < updateDoc_), (@"org/apache/lucene/index/ReadersAndUpdates.java:430 condition failed: assert curDoc < updateDoc;"));
    if (this$0_->currentValues_ != nil && [((id<OrgApacheLuceneUtilBits>) nil_chk(this$0_->docsWithField_)) getWithInt:curDoc_]) {
      return [this$0_->currentValues_ getWithInt:curDoc_];
    }
    else {
      return nil;
    }
  }
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"this iterator does not support removing elements");
}

- (instancetype)initWithOrgApacheLuceneIndexReadersAndUpdates_$2:(OrgApacheLuceneIndexReadersAndUpdates_$2 *)outer$ {
  OrgApacheLuceneIndexReadersAndUpdates_$2_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$2_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneIndexReadersAndUpdates_$2:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.index.ReadersAndUpdates$2;", NULL, NULL, .constantValue.asLong = 0 },
    { "curDoc_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "updateDoc_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneIndexReadersAndUpdates_$2", "iterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates_$2_$1 = { 2, "", "org.apache.lucene.index", "ReadersAndUpdates$", 0x8008, 4, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Iterator<Lorg/apache/lucene/util/BytesRef;>;" };
  return &_OrgApacheLuceneIndexReadersAndUpdates_$2_$1;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_$2_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$2_(OrgApacheLuceneIndexReadersAndUpdates_$2_$1 *self, OrgApacheLuceneIndexReadersAndUpdates_$2 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->curDoc_ = -1;
  self->updateDoc_ = [((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *) nil_chk(outer$->updatesIter_)) nextDoc];
}

OrgApacheLuceneIndexReadersAndUpdates_$2_$1 *new_OrgApacheLuceneIndexReadersAndUpdates_$2_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$2_(OrgApacheLuceneIndexReadersAndUpdates_$2 *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates_$2_$1, initWithOrgApacheLuceneIndexReadersAndUpdates_$2_, outer$)
}

OrgApacheLuceneIndexReadersAndUpdates_$2_$1 *create_OrgApacheLuceneIndexReadersAndUpdates_$2_$1_initWithOrgApacheLuceneIndexReadersAndUpdates_$2_(OrgApacheLuceneIndexReadersAndUpdates_$2 *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates_$2_$1, initWithOrgApacheLuceneIndexReadersAndUpdates_$2_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexReadersAndUpdates_$2_$1)
