//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/MergePolicy.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/MergePolicy.h"
#include "org/apache/lucene/index/MergeRateLimiter.h"
#include "org/apache/lucene/index/MergeState.h"
#include "org/apache/lucene/index/MergeTrigger.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentInfos.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/MergeInfo.h"
#include "org/apache/lucene/util/FixedBitSet.h"

__attribute__((unused)) static jdouble OrgApacheLuceneIndexMergePolicy_getNoCFSRatio(OrgApacheLuceneIndexMergePolicy *self);

@interface OrgApacheLuceneIndexMergePolicy_OneMerge_$1 : OrgApacheLuceneIndexMergePolicy_DocMap

- (jint)mapWithInt:(jint)docID;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMergePolicy_OneMerge_$1)

__attribute__((unused)) static void OrgApacheLuceneIndexMergePolicy_OneMerge_$1_init(OrgApacheLuceneIndexMergePolicy_OneMerge_$1 *self);

__attribute__((unused)) static OrgApacheLuceneIndexMergePolicy_OneMerge_$1 *new_OrgApacheLuceneIndexMergePolicy_OneMerge_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMergePolicy_OneMerge_$1)

@interface OrgApacheLuceneIndexMergePolicy_MergeException () {
 @public
  OrgApacheLuceneStoreDirectory *dir_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMergePolicy_MergeException, dir_, OrgApacheLuceneStoreDirectory *)

@implementation OrgApacheLuceneIndexMergePolicy

- (instancetype)init {
  OrgApacheLuceneIndexMergePolicy_init(self);
  return self;
}

- (instancetype)initWithDouble:(jdouble)defaultNoCFSRatio
                      withLong:(jlong)defaultMaxCFSSegmentSize {
  OrgApacheLuceneIndexMergePolicy_initWithDouble_withLong_(self, defaultNoCFSRatio, defaultMaxCFSSegmentSize);
  return self;
}

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findMergesWithOrgApacheLuceneIndexMergeTriggerEnum:(OrgApacheLuceneIndexMergeTriggerEnum *)mergeTrigger
                                                                      withOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)segmentInfos
                                                                       withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findForcedMergesWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)segmentInfos
                                                                                                     withInt:(jint)maxSegmentCount
                                                                                             withJavaUtilMap:(id<JavaUtilMap>)segmentsToMerge
                                                                         withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findForcedDeletesMergesWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)segmentInfos
                                                                                withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)useCompoundFileWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)infos
                      withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)mergedInfo
                            withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  if (OrgApacheLuceneIndexMergePolicy_getNoCFSRatio(self) == 0.0) {
    return NO;
  }
  jlong mergedInfoSize = [self sizeWithOrgApacheLuceneIndexSegmentCommitInfo:mergedInfo withOrgApacheLuceneIndexIndexWriter:writer];
  if (mergedInfoSize > maxCFSSegmentSize_) {
    return NO;
  }
  if (OrgApacheLuceneIndexMergePolicy_getNoCFSRatio(self) >= 1.0) {
    return YES;
  }
  jlong totalSize = 0;
  for (OrgApacheLuceneIndexSegmentCommitInfo * __strong info in nil_chk(infos)) {
    totalSize += [self sizeWithOrgApacheLuceneIndexSegmentCommitInfo:info withOrgApacheLuceneIndexIndexWriter:writer];
  }
  return mergedInfoSize <= OrgApacheLuceneIndexMergePolicy_getNoCFSRatio(self) * totalSize;
}

- (jlong)sizeWithOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                   withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  jlong byteSize = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) sizeInBytes];
  jint delCount = [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer)) numDeletedDocsWithOrgApacheLuceneIndexSegmentCommitInfo:info];
  jdouble delRatio = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info->info_)) maxDoc] <= 0 ? 0.0f : (jfloat) delCount / (jfloat) [info->info_ maxDoc];
  JreAssert((delRatio <= 1.0), (@"org/apache/lucene/index/MergePolicy.java:453 condition failed: assert delRatio <= 1.0;"));
  return ([info->info_ maxDoc] <= 0 ? byteSize : JreFpToLong((byteSize * (1.0 - delRatio))));
}

- (jboolean)isMergedWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)infos
               withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                     withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  JreAssert((writer != nil), (@"org/apache/lucene/index/MergePolicy.java:461 condition failed: assert writer != null;"));
  jboolean hasDeletions = [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer)) numDeletedDocsWithOrgApacheLuceneIndexSegmentCommitInfo:info] > 0;
  return !hasDeletions && ((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info))->info_))->dir_ == [writer getDirectory] && [self useCompoundFileWithOrgApacheLuceneIndexSegmentInfos:infos withOrgApacheLuceneIndexSegmentCommitInfo:info withOrgApacheLuceneIndexIndexWriter:writer] == [info->info_ getUseCompoundFile];
}

- (jdouble)getNoCFSRatio {
  return OrgApacheLuceneIndexMergePolicy_getNoCFSRatio(self);
}

- (void)setNoCFSRatioWithDouble:(jdouble)noCFSRatio {
  if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"noCFSRatio must be 0.0 to 1.0 inclusive; got ", noCFSRatio)) autorelease];
  }
  self->noCFSRatio_ = noCFSRatio;
}

- (jdouble)getMaxCFSSegmentSizeMB {
  return maxCFSSegmentSize_ / 1024 / 1024.;
}

- (void)setMaxCFSSegmentSizeMBWithDouble:(jdouble)v {
  if (v < 0.0) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$DC", @"maxCFSSegmentSizeMB must be >=0 (got ", v, ')')) autorelease];
  }
  JreTimesAssignDoubleD(&v, 1024 * 1024);
  self->maxCFSSegmentSize_ = v > JavaLangLong_MAX_VALUE ? JavaLangLong_MAX_VALUE : JreFpToLong(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MergePolicy", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withLong:", "MergePolicy", NULL, 0x4, NULL, NULL },
    { "findMergesWithOrgApacheLuceneIndexMergeTriggerEnum:withOrgApacheLuceneIndexSegmentInfos:withOrgApacheLuceneIndexIndexWriter:", "findMerges", "Lorg.apache.lucene.index.MergePolicy$MergeSpecification;", 0x401, "Ljava.io.IOException;", NULL },
    { "findForcedMergesWithOrgApacheLuceneIndexSegmentInfos:withInt:withJavaUtilMap:withOrgApacheLuceneIndexIndexWriter:", "findForcedMerges", "Lorg.apache.lucene.index.MergePolicy$MergeSpecification;", 0x401, "Ljava.io.IOException;", NULL },
    { "findForcedDeletesMergesWithOrgApacheLuceneIndexSegmentInfos:withOrgApacheLuceneIndexIndexWriter:", "findForcedDeletesMerges", "Lorg.apache.lucene.index.MergePolicy$MergeSpecification;", 0x401, "Ljava.io.IOException;", NULL },
    { "useCompoundFileWithOrgApacheLuceneIndexSegmentInfos:withOrgApacheLuceneIndexSegmentCommitInfo:withOrgApacheLuceneIndexIndexWriter:", "useCompoundFile", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "sizeWithOrgApacheLuceneIndexSegmentCommitInfo:withOrgApacheLuceneIndexIndexWriter:", "size", "J", 0x4, "Ljava.io.IOException;", NULL },
    { "isMergedWithOrgApacheLuceneIndexSegmentInfos:withOrgApacheLuceneIndexSegmentCommitInfo:withOrgApacheLuceneIndexIndexWriter:", "isMerged", "Z", 0x14, "Ljava.io.IOException;", NULL },
    { "getNoCFSRatio", NULL, "D", 0x11, NULL, NULL },
    { "setNoCFSRatioWithDouble:", "setNoCFSRatio", "V", 0x11, NULL, NULL },
    { "getMaxCFSSegmentSizeMB", NULL, "D", 0x11, NULL, NULL },
    { "setMaxCFSSegmentSizeMBWithDouble:", "setMaxCFSSegmentSizeMB", "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_NO_CFS_RATIO", "DEFAULT_NO_CFS_RATIO", 0x1c, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneIndexMergePolicy_DEFAULT_NO_CFS_RATIO },
    { "DEFAULT_MAX_CFS_SEGMENT_SIZE", "DEFAULT_MAX_CFS_SEGMENT_SIZE", 0x1c, "J", NULL, NULL, .constantValue.asLong = OrgApacheLuceneIndexMergePolicy_DEFAULT_MAX_CFS_SEGMENT_SIZE },
    { "noCFSRatio_", NULL, 0x4, "D", NULL, NULL, .constantValue.asLong = 0 },
    { "maxCFSSegmentSize_", NULL, 0x4, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.index.MergePolicy$DocMap;", "Lorg.apache.lucene.index.MergePolicy$OneMerge;", "Lorg.apache.lucene.index.MergePolicy$MergeSpecification;", "Lorg.apache.lucene.index.MergePolicy$MergeException;", "Lorg.apache.lucene.index.MergePolicy$MergeAbortedException;"};
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergePolicy = { 2, "MergePolicy", "org.apache.lucene.index", NULL, 0x401, 12, methods, 4, fields, 0, NULL, 5, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneIndexMergePolicy;
}

@end

void OrgApacheLuceneIndexMergePolicy_init(OrgApacheLuceneIndexMergePolicy *self) {
  OrgApacheLuceneIndexMergePolicy_initWithDouble_withLong_(self, OrgApacheLuceneIndexMergePolicy_DEFAULT_NO_CFS_RATIO, OrgApacheLuceneIndexMergePolicy_DEFAULT_MAX_CFS_SEGMENT_SIZE);
}

void OrgApacheLuceneIndexMergePolicy_initWithDouble_withLong_(OrgApacheLuceneIndexMergePolicy *self, jdouble defaultNoCFSRatio, jlong defaultMaxCFSSegmentSize) {
  NSObject_init(self);
  self->noCFSRatio_ = OrgApacheLuceneIndexMergePolicy_DEFAULT_NO_CFS_RATIO;
  self->maxCFSSegmentSize_ = OrgApacheLuceneIndexMergePolicy_DEFAULT_MAX_CFS_SEGMENT_SIZE;
  self->noCFSRatio_ = defaultNoCFSRatio;
  self->maxCFSSegmentSize_ = defaultMaxCFSSegmentSize;
}

jdouble OrgApacheLuceneIndexMergePolicy_getNoCFSRatio(OrgApacheLuceneIndexMergePolicy *self) {
  return self->noCFSRatio_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergePolicy)

@implementation OrgApacheLuceneIndexMergePolicy_DocMap

- (instancetype)init {
  OrgApacheLuceneIndexMergePolicy_DocMap_init(self);
  return self;
}

- (jint)mapWithInt:(jint)old {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isConsistentWithInt:(jint)maxDoc {
  OrgApacheLuceneUtilFixedBitSet *targets = [new_OrgApacheLuceneUtilFixedBitSet_initWithInt_(maxDoc) autorelease];
  for (jint i = 0; i < maxDoc; ++i) {
    jint target = [self mapWithInt:i];
    if (target < 0 || target >= maxDoc) {
      JreAssert((NO), (JreStrcat("$I$IC", @"out of range: ", target, @" not in [0-", maxDoc, '[')));
      return NO;
    }
    else if ([targets getWithInt:target]) {
      JreAssert((NO), (JreStrcat("I$IC", target, @" is already taken (", i, ')')));
      return NO;
    }
  }
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DocMap", NULL, 0x4, NULL, NULL },
    { "mapWithInt:", "map", "I", 0x401, NULL, NULL },
    { "isConsistentWithInt:", "isConsistent", "Z", 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergePolicy_DocMap = { 2, "DocMap", "org.apache.lucene.index", "MergePolicy", 0x409, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexMergePolicy_DocMap;
}

@end

void OrgApacheLuceneIndexMergePolicy_DocMap_init(OrgApacheLuceneIndexMergePolicy_DocMap *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergePolicy_DocMap)

@implementation OrgApacheLuceneIndexMergePolicy_OneMerge

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)segments {
  OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_(self, segments);
  return self;
}

- (void)mergeFinished {
}

- (id<JavaUtilList>)getMergeReaders {
  if (readers_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"IndexWriter has not initialized readers from the segment infos yet") autorelease];
  }
  id<JavaUtilList> readers = [new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(self->readers_)) size]) autorelease];
  for (OrgApacheLuceneIndexSegmentReader * __strong reader in self->readers_) {
    if ([((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader)) numDocs] > 0) {
      [readers addWithId:reader];
    }
  }
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(readers);
}

- (void)setMergeInfoWithOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info {
  JreStrongAssign(&self->info_, info);
}

- (OrgApacheLuceneIndexSegmentCommitInfo *)getMergeInfo {
  return info_;
}

- (OrgApacheLuceneIndexMergePolicy_DocMap *)getDocMapWithOrgApacheLuceneIndexMergeState:(OrgApacheLuceneIndexMergeState *)mergeState {
  return [new_OrgApacheLuceneIndexMergePolicy_OneMerge_$1_init() autorelease];
}

- (void)setExceptionWithJavaLangThrowable:(JavaLangThrowable *)error {
  @synchronized(self) {
    JreStrongAssign(&self->error_, error);
  }
}

- (JavaLangThrowable *)getException {
  @synchronized(self) {
    return error_;
  }
}

- (NSString *)segString {
  JavaLangStringBuilder *b = [new_JavaLangStringBuilder_init() autorelease];
  jint numSegments = [((id<JavaUtilList>) nil_chk(segments_)) size];
  for (jint i = 0; i < numSegments; i++) {
    if (i > 0) {
      [b appendWithChar:' '];
    }
    [b appendWithNSString:[((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk([segments_ getWithInt:i])) description]];
  }
  if (info_ != nil) {
    [((JavaLangStringBuilder *) nil_chk([b appendWithNSString:@" into "])) appendWithNSString:((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info_->info_))->name_];
  }
  if (maxNumSegments_ != -1) {
    [b appendWithNSString:JreStrcat("$IC", @" [maxNumSegments=", maxNumSegments_, ']')];
  }
  if ([((OrgApacheLuceneIndexMergeRateLimiter *) nil_chk(rateLimiter_)) getAbort]) {
    [b appendWithNSString:@" [ABORTED]"];
  }
  return [b description];
}

- (jlong)totalBytesSize {
  return JreLoadVolatileLong(&totalMergeBytes_);
}

- (jint)totalNumDocs {
  jint total = 0;
  for (OrgApacheLuceneIndexSegmentCommitInfo * __strong info in nil_chk(segments_)) {
    total += [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info))->info_)) maxDoc];
  }
  return total;
}

- (OrgApacheLuceneStoreMergeInfo *)getStoreMergeInfo {
  return [new_OrgApacheLuceneStoreMergeInfo_initWithInt_withLong_withBoolean_withInt_(totalMaxDoc_, JreLoadVolatileLong(&estimatedMergeBytes_), isExternal_, maxNumSegments_) autorelease];
}

- (void)dealloc {
  RELEASE_(info_);
  RELEASE_(readers_);
  RELEASE_(segments_);
  RELEASE_(rateLimiter_);
  RELEASE_(error_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "OneMerge", NULL, 0x1, NULL, NULL },
    { "mergeFinished", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getMergeReaders", NULL, "Ljava.util.List;", 0x1, "Ljava.io.IOException;", NULL },
    { "setMergeInfoWithOrgApacheLuceneIndexSegmentCommitInfo:", "setMergeInfo", "V", 0x1, NULL, NULL },
    { "getMergeInfo", NULL, "Lorg.apache.lucene.index.SegmentCommitInfo;", 0x1, NULL, NULL },
    { "getDocMapWithOrgApacheLuceneIndexMergeState:", "getDocMap", "Lorg.apache.lucene.index.MergePolicy$DocMap;", 0x1, NULL, NULL },
    { "setExceptionWithJavaLangThrowable:", "setException", "V", 0x20, NULL, NULL },
    { "getException", NULL, "Ljava.lang.Throwable;", 0x20, NULL, NULL },
    { "segString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "totalBytesSize", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "totalNumDocs", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "getStoreMergeInfo", NULL, "Lorg.apache.lucene.store.MergeInfo;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "info_", NULL, 0x0, "Lorg.apache.lucene.index.SegmentCommitInfo;", NULL, NULL, .constantValue.asLong = 0 },
    { "registerDone_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "mergeGen_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "isExternal_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "maxNumSegments_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "estimatedMergeBytes_", NULL, 0x41, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "totalMergeBytes_", NULL, 0x40, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "readers_", NULL, 0x0, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/index/SegmentReader;>;", .constantValue.asLong = 0 },
    { "segments_", NULL, 0x11, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/index/SegmentCommitInfo;>;", .constantValue.asLong = 0 },
    { "rateLimiter_", NULL, 0x11, "Lorg.apache.lucene.index.MergeRateLimiter;", NULL, NULL, .constantValue.asLong = 0 },
    { "mergeStartNS_", NULL, 0x40, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "totalMaxDoc_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "error_", NULL, 0x0, "Ljava.lang.Throwable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergePolicy_OneMerge = { 2, "OneMerge", "org.apache.lucene.index", "MergePolicy", 0x9, 12, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexMergePolicy_OneMerge;
}

@end

void OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_(OrgApacheLuceneIndexMergePolicy_OneMerge *self, id<JavaUtilList> segments) {
  NSObject_init(self);
  self->maxNumSegments_ = -1;
  JreAssignVolatileLong(&self->mergeStartNS_, -1);
  if (0 == [((id<JavaUtilList>) nil_chk(segments)) size]) {
    @throw [new_JavaLangRuntimeException_initWithNSString_(@"segments must include at least one segment") autorelease];
  }
  JreStrongAssignAndConsume(&self->segments_, new_JavaUtilArrayList_initWithJavaUtilCollection_(segments));
  jint count = 0;
  for (OrgApacheLuceneIndexSegmentCommitInfo * __strong info in segments) {
    count += [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info))->info_)) maxDoc];
  }
  self->totalMaxDoc_ = count;
  JreStrongAssignAndConsume(&self->rateLimiter_, new_OrgApacheLuceneIndexMergeRateLimiter_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_(self));
}

OrgApacheLuceneIndexMergePolicy_OneMerge *new_OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_(id<JavaUtilList> segments) {
  OrgApacheLuceneIndexMergePolicy_OneMerge *self = [OrgApacheLuceneIndexMergePolicy_OneMerge alloc];
  OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_(self, segments);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergePolicy_OneMerge)

@implementation OrgApacheLuceneIndexMergePolicy_OneMerge_$1

- (jint)mapWithInt:(jint)docID {
  return docID;
}

- (instancetype)init {
  OrgApacheLuceneIndexMergePolicy_OneMerge_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "mapWithInt:", "map", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneIndexMergePolicy_OneMerge", "getDocMapWithOrgApacheLuceneIndexMergeState:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergePolicy_OneMerge_$1 = { 2, "", "org.apache.lucene.index", "MergePolicy$OneMerge", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneIndexMergePolicy_OneMerge_$1;
}

@end

void OrgApacheLuceneIndexMergePolicy_OneMerge_$1_init(OrgApacheLuceneIndexMergePolicy_OneMerge_$1 *self) {
  OrgApacheLuceneIndexMergePolicy_DocMap_init(self);
}

OrgApacheLuceneIndexMergePolicy_OneMerge_$1 *new_OrgApacheLuceneIndexMergePolicy_OneMerge_$1_init() {
  OrgApacheLuceneIndexMergePolicy_OneMerge_$1 *self = [OrgApacheLuceneIndexMergePolicy_OneMerge_$1 alloc];
  OrgApacheLuceneIndexMergePolicy_OneMerge_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergePolicy_OneMerge_$1)

@implementation OrgApacheLuceneIndexMergePolicy_MergeSpecification

- (instancetype)init {
  OrgApacheLuceneIndexMergePolicy_MergeSpecification_init(self);
  return self;
}

- (void)addWithOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge {
  [((id<JavaUtilList>) nil_chk(merges_)) addWithId:merge];
}

- (NSString *)segStringWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  JavaLangStringBuilder *b = [new_JavaLangStringBuilder_init() autorelease];
  [b appendWithNSString:@"MergeSpec:\n"];
  jint count = [((id<JavaUtilList>) nil_chk(merges_)) size];
  for (jint i = 0; i < count; i++) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([b appendWithNSString:@"  "])) appendWithInt:1 + i])) appendWithNSString:@": "])) appendWithNSString:[((OrgApacheLuceneIndexMergePolicy_OneMerge *) nil_chk([merges_ getWithInt:i])) segString]];
  }
  return [b description];
}

- (void)dealloc {
  RELEASE_(merges_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MergeSpecification", NULL, 0x1, NULL, NULL },
    { "addWithOrgApacheLuceneIndexMergePolicy_OneMerge:", "add", "V", 0x1, NULL, NULL },
    { "segStringWithOrgApacheLuceneStoreDirectory:", "segString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "merges_", NULL, 0x11, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/index/MergePolicy$OneMerge;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergePolicy_MergeSpecification = { 2, "MergeSpecification", "org.apache.lucene.index", "MergePolicy", 0x9, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexMergePolicy_MergeSpecification;
}

@end

void OrgApacheLuceneIndexMergePolicy_MergeSpecification_init(OrgApacheLuceneIndexMergePolicy_MergeSpecification *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->merges_, new_JavaUtilArrayList_init());
}

OrgApacheLuceneIndexMergePolicy_MergeSpecification *new_OrgApacheLuceneIndexMergePolicy_MergeSpecification_init() {
  OrgApacheLuceneIndexMergePolicy_MergeSpecification *self = [OrgApacheLuceneIndexMergePolicy_MergeSpecification alloc];
  OrgApacheLuceneIndexMergePolicy_MergeSpecification_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergePolicy_MergeSpecification)

@implementation OrgApacheLuceneIndexMergePolicy_MergeException

- (instancetype)initWithNSString:(NSString *)message
withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  OrgApacheLuceneIndexMergePolicy_MergeException_initWithNSString_withOrgApacheLuceneStoreDirectory_(self, message, dir);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)exc
        withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  OrgApacheLuceneIndexMergePolicy_MergeException_initWithJavaLangThrowable_withOrgApacheLuceneStoreDirectory_(self, exc, dir);
  return self;
}

- (OrgApacheLuceneStoreDirectory *)getDirectory {
  return dir_;
}

- (void)dealloc {
  RELEASE_(dir_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withOrgApacheLuceneStoreDirectory:", "MergeException", NULL, 0x1, NULL, NULL },
    { "initWithJavaLangThrowable:withOrgApacheLuceneStoreDirectory:", "MergeException", NULL, 0x1, NULL, NULL },
    { "getDirectory", NULL, "Lorg.apache.lucene.store.Directory;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dir_", NULL, 0x2, "Lorg.apache.lucene.store.Directory;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergePolicy_MergeException = { 2, "MergeException", "org.apache.lucene.index", "MergePolicy", 0x9, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexMergePolicy_MergeException;
}

@end

void OrgApacheLuceneIndexMergePolicy_MergeException_initWithNSString_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexMergePolicy_MergeException *self, NSString *message, OrgApacheLuceneStoreDirectory *dir) {
  JavaLangRuntimeException_initWithNSString_(self, message);
  JreStrongAssign(&self->dir_, dir);
}

OrgApacheLuceneIndexMergePolicy_MergeException *new_OrgApacheLuceneIndexMergePolicy_MergeException_initWithNSString_withOrgApacheLuceneStoreDirectory_(NSString *message, OrgApacheLuceneStoreDirectory *dir) {
  OrgApacheLuceneIndexMergePolicy_MergeException *self = [OrgApacheLuceneIndexMergePolicy_MergeException alloc];
  OrgApacheLuceneIndexMergePolicy_MergeException_initWithNSString_withOrgApacheLuceneStoreDirectory_(self, message, dir);
  return self;
}

void OrgApacheLuceneIndexMergePolicy_MergeException_initWithJavaLangThrowable_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexMergePolicy_MergeException *self, JavaLangThrowable *exc, OrgApacheLuceneStoreDirectory *dir) {
  JavaLangRuntimeException_initWithJavaLangThrowable_(self, exc);
  JreStrongAssign(&self->dir_, dir);
}

OrgApacheLuceneIndexMergePolicy_MergeException *new_OrgApacheLuceneIndexMergePolicy_MergeException_initWithJavaLangThrowable_withOrgApacheLuceneStoreDirectory_(JavaLangThrowable *exc, OrgApacheLuceneStoreDirectory *dir) {
  OrgApacheLuceneIndexMergePolicy_MergeException *self = [OrgApacheLuceneIndexMergePolicy_MergeException alloc];
  OrgApacheLuceneIndexMergePolicy_MergeException_initWithJavaLangThrowable_withOrgApacheLuceneStoreDirectory_(self, exc, dir);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergePolicy_MergeException)

@implementation OrgApacheLuceneIndexMergePolicy_MergeAbortedException

- (instancetype)init {
  OrgApacheLuceneIndexMergePolicy_MergeAbortedException_init(self);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message {
  OrgApacheLuceneIndexMergePolicy_MergeAbortedException_initWithNSString_(self, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MergeAbortedException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "MergeAbortedException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergePolicy_MergeAbortedException = { 2, "MergeAbortedException", "org.apache.lucene.index", "MergePolicy", 0x9, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneIndexMergePolicy_MergeAbortedException;
}

@end

void OrgApacheLuceneIndexMergePolicy_MergeAbortedException_init(OrgApacheLuceneIndexMergePolicy_MergeAbortedException *self) {
  JavaIoIOException_initWithNSString_(self, @"merge is aborted");
}

OrgApacheLuceneIndexMergePolicy_MergeAbortedException *new_OrgApacheLuceneIndexMergePolicy_MergeAbortedException_init() {
  OrgApacheLuceneIndexMergePolicy_MergeAbortedException *self = [OrgApacheLuceneIndexMergePolicy_MergeAbortedException alloc];
  OrgApacheLuceneIndexMergePolicy_MergeAbortedException_init(self);
  return self;
}

void OrgApacheLuceneIndexMergePolicy_MergeAbortedException_initWithNSString_(OrgApacheLuceneIndexMergePolicy_MergeAbortedException *self, NSString *message) {
  JavaIoIOException_initWithNSString_(self, message);
}

OrgApacheLuceneIndexMergePolicy_MergeAbortedException *new_OrgApacheLuceneIndexMergePolicy_MergeAbortedException_initWithNSString_(NSString *message) {
  OrgApacheLuceneIndexMergePolicy_MergeAbortedException *self = [OrgApacheLuceneIndexMergePolicy_MergeAbortedException alloc];
  OrgApacheLuceneIndexMergePolicy_MergeAbortedException_initWithNSString_(self, message);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergePolicy_MergeAbortedException)
