//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/GrowableByteArrayDataOutput.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/GrowableByteArrayDataOutput.h"

@implementation OrgApacheLuceneUtilGrowableByteArrayDataOutput

- (instancetype)initWithInt:(jint)cp {
  OrgApacheLuceneUtilGrowableByteArrayDataOutput_initWithInt_(self, cp);
  return self;
}

- (void)writeByteWithByte:(jbyte)b {
  if (length_ >= ((IOSByteArray *) nil_chk(bytes_))->size_) {
    JreStrongAssign(&bytes_, OrgApacheLuceneUtilArrayUtil_growWithByteArray_(bytes_));
  }
  *IOSByteArray_GetRef(nil_chk(bytes_), length_++) = b;
}

- (void)writeBytesWithByteArray:(IOSByteArray *)b
                        withInt:(jint)off
                        withInt:(jint)len {
  jint newLength = length_ + len;
  JreStrongAssign(&bytes_, OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(bytes_, newLength));
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, off, bytes_, length_, len);
  length_ = newLength;
}

- (void)dealloc {
  RELEASE_(bytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "GrowableByteArrayDataOutput", NULL, 0x1, NULL, NULL },
    { "writeByteWithByte:", "writeByte", "V", 0x1, NULL, NULL },
    { "writeBytesWithByteArray:withInt:withInt:", "writeBytes", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bytes_", NULL, 0x1, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "length_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilGrowableByteArrayDataOutput = { 2, "GrowableByteArrayDataOutput", "org.apache.lucene.util", NULL, 0x11, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilGrowableByteArrayDataOutput;
}

@end

void OrgApacheLuceneUtilGrowableByteArrayDataOutput_initWithInt_(OrgApacheLuceneUtilGrowableByteArrayDataOutput *self, jint cp) {
  OrgApacheLuceneStoreDataOutput_init(self);
  JreStrongAssignAndConsume(&self->bytes_, [IOSByteArray newArrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(cp, 1)]);
  self->length_ = 0;
}

OrgApacheLuceneUtilGrowableByteArrayDataOutput *new_OrgApacheLuceneUtilGrowableByteArrayDataOutput_initWithInt_(jint cp) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilGrowableByteArrayDataOutput, initWithInt_, cp)
}

OrgApacheLuceneUtilGrowableByteArrayDataOutput *create_OrgApacheLuceneUtilGrowableByteArrayDataOutput_initWithInt_(jint cp) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilGrowableByteArrayDataOutput, initWithInt_, cp)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilGrowableByteArrayDataOutput)
