//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/util/GeoUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/StrictMath.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "org/apache/lucene/util/BitUtil.h"
#include "org/apache/lucene/util/GeoProjectionUtils.h"
#include "org/apache/lucene/util/GeoUtils.h"
#include "org/apache/lucene/util/SloppyMath.h"

#define OrgApacheLuceneUtilGeoUtils_MIN_LON -180
#define OrgApacheLuceneUtilGeoUtils_MIN_LAT -90
#define OrgApacheLuceneUtilGeoUtils_LON_SCALE 1.1930464708333334E7
#define OrgApacheLuceneUtilGeoUtils_LAT_SCALE 2.3860929416666668E7

@interface OrgApacheLuceneUtilGeoUtils ()

- (instancetype)init;

+ (jlong)scaleLonWithDouble:(jdouble)val;

+ (jlong)scaleLatWithDouble:(jdouble)val;

+ (jdouble)unscaleLonWithLong:(jlong)val;

+ (jdouble)unscaleLatWithLong:(jlong)val;

+ (jboolean)rectAnyCornersOutsideCircleWithDouble:(jdouble)rMinX
                                       withDouble:(jdouble)rMinY
                                       withDouble:(jdouble)rMaxX
                                       withDouble:(jdouble)rMaxY
                                       withDouble:(jdouble)centerLon
                                       withDouble:(jdouble)centerLat
                                       withDouble:(jdouble)radius;

+ (jboolean)rectAnyCornersInCircleWithDouble:(jdouble)rMinX
                                  withDouble:(jdouble)rMinY
                                  withDouble:(jdouble)rMaxX
                                  withDouble:(jdouble)rMaxY
                                  withDouble:(jdouble)centerLon
                                  withDouble:(jdouble)centerLat
                                  withDouble:(jdouble)radius;

+ (jboolean)lineCrossesSphereWithDouble:(jdouble)lon1
                             withDouble:(jdouble)lat1
                             withDouble:(jdouble)alt1
                             withDouble:(jdouble)lon2
                             withDouble:(jdouble)lat2
                             withDouble:(jdouble)alt2
                             withDouble:(jdouble)centerLon
                             withDouble:(jdouble)centerLat
                             withDouble:(jdouble)centerAlt
                             withDouble:(jdouble)radius;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, MIN_LON, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, MIN_LAT, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, LON_SCALE, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilGeoUtils, LAT_SCALE, jdouble)

__attribute__((unused)) static void OrgApacheLuceneUtilGeoUtils_init(OrgApacheLuceneUtilGeoUtils *self);

__attribute__((unused)) static OrgApacheLuceneUtilGeoUtils *new_OrgApacheLuceneUtilGeoUtils_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static jlong OrgApacheLuceneUtilGeoUtils_scaleLonWithDouble_(jdouble val);

__attribute__((unused)) static jlong OrgApacheLuceneUtilGeoUtils_scaleLatWithDouble_(jdouble val);

__attribute__((unused)) static jdouble OrgApacheLuceneUtilGeoUtils_unscaleLonWithLong_(jlong val);

__attribute__((unused)) static jdouble OrgApacheLuceneUtilGeoUtils_unscaleLatWithLong_(jlong val);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilGeoUtils_rectAnyCornersOutsideCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilGeoUtils_rectAnyCornersInCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilGeoUtils_lineCrossesSphereWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble lon1, jdouble lat1, jdouble alt1, jdouble lon2, jdouble lat2, jdouble alt2, jdouble centerLon, jdouble centerLat, jdouble centerAlt, jdouble radius);

@implementation OrgApacheLuceneUtilGeoUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilGeoUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaLangLong *)mortonHashWithDouble:(jdouble)lon
                            withDouble:(jdouble)lat {
  return OrgApacheLuceneUtilGeoUtils_mortonHashWithDouble_withDouble_(lon, lat);
}

+ (jdouble)mortonUnhashLonWithLong:(jlong)hash_ {
  return OrgApacheLuceneUtilGeoUtils_mortonUnhashLonWithLong_(hash_);
}

+ (jdouble)mortonUnhashLatWithLong:(jlong)hash_ {
  return OrgApacheLuceneUtilGeoUtils_mortonUnhashLatWithLong_(hash_);
}

+ (jlong)scaleLonWithDouble:(jdouble)val {
  return OrgApacheLuceneUtilGeoUtils_scaleLonWithDouble_(val);
}

+ (jlong)scaleLatWithDouble:(jdouble)val {
  return OrgApacheLuceneUtilGeoUtils_scaleLatWithDouble_(val);
}

+ (jdouble)unscaleLonWithLong:(jlong)val {
  return OrgApacheLuceneUtilGeoUtils_unscaleLonWithLong_(val);
}

+ (jdouble)unscaleLatWithLong:(jlong)val {
  return OrgApacheLuceneUtilGeoUtils_unscaleLatWithLong_(val);
}

+ (jdouble)compareWithDouble:(jdouble)v1
                  withDouble:(jdouble)v2 {
  return OrgApacheLuceneUtilGeoUtils_compareWithDouble_withDouble_(v1, v2);
}

+ (jdouble)normalizeLonWithDouble:(jdouble)lon_deg {
  return OrgApacheLuceneUtilGeoUtils_normalizeLonWithDouble_(lon_deg);
}

+ (jdouble)normalizeLatWithDouble:(jdouble)lat_deg {
  return OrgApacheLuceneUtilGeoUtils_normalizeLatWithDouble_(lat_deg);
}

+ (jboolean)bboxContainsWithDouble:(jdouble)lon
                        withDouble:(jdouble)lat
                        withDouble:(jdouble)minLon
                        withDouble:(jdouble)minLat
                        withDouble:(jdouble)maxLon
                        withDouble:(jdouble)maxLat {
  return OrgApacheLuceneUtilGeoUtils_bboxContainsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(lon, lat, minLon, minLat, maxLon, maxLat);
}

+ (jboolean)pointInPolygonWithDoubleArray:(IOSDoubleArray *)x
                          withDoubleArray:(IOSDoubleArray *)y
                               withDouble:(jdouble)lat
                               withDouble:(jdouble)lon {
  return OrgApacheLuceneUtilGeoUtils_pointInPolygonWithDoubleArray_withDoubleArray_withDouble_withDouble_(x, y, lat, lon);
}

+ (NSString *)geoTermToStringWithLong:(jlong)term {
  return OrgApacheLuceneUtilGeoUtils_geoTermToStringWithLong_(term);
}

+ (jboolean)rectDisjointWithDouble:(jdouble)aMinX
                        withDouble:(jdouble)aMinY
                        withDouble:(jdouble)aMaxX
                        withDouble:(jdouble)aMaxY
                        withDouble:(jdouble)bMinX
                        withDouble:(jdouble)bMinY
                        withDouble:(jdouble)bMaxX
                        withDouble:(jdouble)bMaxY {
  return OrgApacheLuceneUtilGeoUtils_rectDisjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(aMinX, aMinY, aMaxX, aMaxY, bMinX, bMinY, bMaxX, bMaxY);
}

+ (jboolean)rectWithinWithDouble:(jdouble)aMinX
                      withDouble:(jdouble)aMinY
                      withDouble:(jdouble)aMaxX
                      withDouble:(jdouble)aMaxY
                      withDouble:(jdouble)bMinX
                      withDouble:(jdouble)bMinY
                      withDouble:(jdouble)bMaxX
                      withDouble:(jdouble)bMaxY {
  return OrgApacheLuceneUtilGeoUtils_rectWithinWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(aMinX, aMinY, aMaxX, aMaxY, bMinX, bMinY, bMaxX, bMaxY);
}

+ (jboolean)rectCrossesWithDouble:(jdouble)aMinX
                       withDouble:(jdouble)aMinY
                       withDouble:(jdouble)aMaxX
                       withDouble:(jdouble)aMaxY
                       withDouble:(jdouble)bMinX
                       withDouble:(jdouble)bMinY
                       withDouble:(jdouble)bMaxX
                       withDouble:(jdouble)bMaxY {
  return OrgApacheLuceneUtilGeoUtils_rectCrossesWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(aMinX, aMinY, aMaxX, aMaxY, bMinX, bMinY, bMaxX, bMaxY);
}

+ (jboolean)rectContainsWithDouble:(jdouble)aMinX
                        withDouble:(jdouble)aMinY
                        withDouble:(jdouble)aMaxX
                        withDouble:(jdouble)aMaxY
                        withDouble:(jdouble)bMinX
                        withDouble:(jdouble)bMinY
                        withDouble:(jdouble)bMaxX
                        withDouble:(jdouble)bMaxY {
  return OrgApacheLuceneUtilGeoUtils_rectContainsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(aMinX, aMinY, aMaxX, aMaxY, bMinX, bMinY, bMaxX, bMaxY);
}

+ (jboolean)rectIntersectsWithDouble:(jdouble)aMinX
                          withDouble:(jdouble)aMinY
                          withDouble:(jdouble)aMaxX
                          withDouble:(jdouble)aMaxY
                          withDouble:(jdouble)bMinX
                          withDouble:(jdouble)bMinY
                          withDouble:(jdouble)bMaxX
                          withDouble:(jdouble)bMaxY {
  return OrgApacheLuceneUtilGeoUtils_rectIntersectsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(aMinX, aMinY, aMaxX, aMaxY, bMinX, bMinY, bMaxX, bMaxY);
}

+ (jboolean)rectCrossesPolyWithDouble:(jdouble)rMinX
                           withDouble:(jdouble)rMinY
                           withDouble:(jdouble)rMaxX
                           withDouble:(jdouble)rMaxY
                      withDoubleArray:(IOSDoubleArray *)shapeX
                      withDoubleArray:(IOSDoubleArray *)shapeY
                           withDouble:(jdouble)sMinX
                           withDouble:(jdouble)sMinY
                           withDouble:(jdouble)sMaxX
                           withDouble:(jdouble)sMaxY {
  return OrgApacheLuceneUtilGeoUtils_rectCrossesPolyWithDouble_withDouble_withDouble_withDouble_withDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, shapeX, shapeY, sMinX, sMinY, sMaxX, sMaxY);
}

+ (JavaUtilArrayList *)circleToPolyWithDouble:(jdouble)lon
                                   withDouble:(jdouble)lat
                                   withDouble:(jdouble)radius {
  return OrgApacheLuceneUtilGeoUtils_circleToPolyWithDouble_withDouble_withDouble_(lon, lat, radius);
}

+ (jboolean)rectWithinPolyWithDouble:(jdouble)rMinX
                          withDouble:(jdouble)rMinY
                          withDouble:(jdouble)rMaxX
                          withDouble:(jdouble)rMaxY
                     withDoubleArray:(IOSDoubleArray *)shapeX
                     withDoubleArray:(IOSDoubleArray *)shapeY
                          withDouble:(jdouble)sMinX
                          withDouble:(jdouble)sMinY
                          withDouble:(jdouble)sMaxX
                          withDouble:(jdouble)sMaxY {
  return OrgApacheLuceneUtilGeoUtils_rectWithinPolyWithDouble_withDouble_withDouble_withDouble_withDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, shapeX, shapeY, sMinX, sMinY, sMaxX, sMaxY);
}

+ (jboolean)rectAnyCornersOutsideCircleWithDouble:(jdouble)rMinX
                                       withDouble:(jdouble)rMinY
                                       withDouble:(jdouble)rMaxX
                                       withDouble:(jdouble)rMaxY
                                       withDouble:(jdouble)centerLon
                                       withDouble:(jdouble)centerLat
                                       withDouble:(jdouble)radius {
  return OrgApacheLuceneUtilGeoUtils_rectAnyCornersOutsideCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius);
}

+ (jboolean)rectAnyCornersInCircleWithDouble:(jdouble)rMinX
                                  withDouble:(jdouble)rMinY
                                  withDouble:(jdouble)rMaxX
                                  withDouble:(jdouble)rMaxY
                                  withDouble:(jdouble)centerLon
                                  withDouble:(jdouble)centerLat
                                  withDouble:(jdouble)radius {
  return OrgApacheLuceneUtilGeoUtils_rectAnyCornersInCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius);
}

+ (jboolean)rectWithinCircleWithDouble:(jdouble)rMinX
                            withDouble:(jdouble)rMinY
                            withDouble:(jdouble)rMaxX
                            withDouble:(jdouble)rMaxY
                            withDouble:(jdouble)centerLon
                            withDouble:(jdouble)centerLat
                            withDouble:(jdouble)radius {
  return OrgApacheLuceneUtilGeoUtils_rectWithinCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius);
}

+ (jboolean)rectCrossesCircleWithDouble:(jdouble)rMinX
                             withDouble:(jdouble)rMinY
                             withDouble:(jdouble)rMaxX
                             withDouble:(jdouble)rMaxY
                             withDouble:(jdouble)centerLon
                             withDouble:(jdouble)centerLat
                             withDouble:(jdouble)radius {
  return OrgApacheLuceneUtilGeoUtils_rectCrossesCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius);
}

+ (jboolean)circleWithinRectWithDouble:(jdouble)rMinX
                            withDouble:(jdouble)rMinY
                            withDouble:(jdouble)rMaxX
                            withDouble:(jdouble)rMaxY
                            withDouble:(jdouble)centerLon
                            withDouble:(jdouble)centerLat
                            withDouble:(jdouble)radius {
  return OrgApacheLuceneUtilGeoUtils_circleWithinRectWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius);
}

+ (jboolean)lineCrossesSphereWithDouble:(jdouble)lon1
                             withDouble:(jdouble)lat1
                             withDouble:(jdouble)alt1
                             withDouble:(jdouble)lon2
                             withDouble:(jdouble)lat2
                             withDouble:(jdouble)alt2
                             withDouble:(jdouble)centerLon
                             withDouble:(jdouble)centerLat
                             withDouble:(jdouble)centerAlt
                             withDouble:(jdouble)radius {
  return OrgApacheLuceneUtilGeoUtils_lineCrossesSphereWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(lon1, lat1, alt1, lon2, lat2, alt2, centerLon, centerLat, centerAlt, radius);
}

+ (jboolean)isValidLatWithDouble:(jdouble)lat {
  return OrgApacheLuceneUtilGeoUtils_isValidLatWithDouble_(lat);
}

+ (jboolean)isValidLonWithDouble:(jdouble)lon {
  return OrgApacheLuceneUtilGeoUtils_isValidLonWithDouble_(lon);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "GeoUtils", NULL, 0x2, NULL, NULL },
    { "mortonHashWithDouble:withDouble:", "mortonHash", "Ljava.lang.Long;", 0x9, NULL, NULL },
    { "mortonUnhashLonWithLong:", "mortonUnhashLon", "D", 0x9, NULL, NULL },
    { "mortonUnhashLatWithLong:", "mortonUnhashLat", "D", 0x9, NULL, NULL },
    { "scaleLonWithDouble:", "scaleLon", "J", 0xa, NULL, NULL },
    { "scaleLatWithDouble:", "scaleLat", "J", 0xa, NULL, NULL },
    { "unscaleLonWithLong:", "unscaleLon", "D", 0xa, NULL, NULL },
    { "unscaleLatWithLong:", "unscaleLat", "D", 0xa, NULL, NULL },
    { "compareWithDouble:withDouble:", "compare", "D", 0x9, NULL, NULL },
    { "normalizeLonWithDouble:", "normalizeLon", "D", 0x9, NULL, NULL },
    { "normalizeLatWithDouble:", "normalizeLat", "D", 0x9, NULL, NULL },
    { "bboxContainsWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "bboxContains", "Z", 0x19, NULL, NULL },
    { "pointInPolygonWithDoubleArray:withDoubleArray:withDouble:withDouble:", "pointInPolygon", "Z", 0x9, NULL, NULL },
    { "geoTermToStringWithLong:", "geoTermToString", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "rectDisjointWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "rectDisjoint", "Z", 0x9, NULL, NULL },
    { "rectWithinWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "rectWithin", "Z", 0x9, NULL, NULL },
    { "rectCrossesWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "rectCrosses", "Z", 0x9, NULL, NULL },
    { "rectContainsWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "rectContains", "Z", 0x9, NULL, NULL },
    { "rectIntersectsWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "rectIntersects", "Z", 0x9, NULL, NULL },
    { "rectCrossesPolyWithDouble:withDouble:withDouble:withDouble:withDoubleArray:withDoubleArray:withDouble:withDouble:withDouble:withDouble:", "rectCrossesPoly", "Z", 0x9, NULL, NULL },
    { "circleToPolyWithDouble:withDouble:withDouble:", "circleToPoly", "Ljava.util.ArrayList;", 0x9, NULL, NULL },
    { "rectWithinPolyWithDouble:withDouble:withDouble:withDouble:withDoubleArray:withDoubleArray:withDouble:withDouble:withDouble:withDouble:", "rectWithinPoly", "Z", 0x9, NULL, NULL },
    { "rectAnyCornersOutsideCircleWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "rectAnyCornersOutsideCircle", "Z", 0xa, NULL, NULL },
    { "rectAnyCornersInCircleWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "rectAnyCornersInCircle", "Z", 0xa, NULL, NULL },
    { "rectWithinCircleWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "rectWithinCircle", "Z", 0x9, NULL, NULL },
    { "rectCrossesCircleWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "rectCrossesCircle", "Z", 0x9, NULL, NULL },
    { "circleWithinRectWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "circleWithinRect", "Z", 0x9, NULL, NULL },
    { "lineCrossesSphereWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "lineCrossesSphere", "Z", 0xa, NULL, NULL },
    { "isValidLatWithDouble:", "isValidLat", "Z", 0x9, NULL, NULL },
    { "isValidLonWithDouble:", "isValidLon", "Z", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MIN_LON", "MIN_LON", 0x1a, "S", NULL, NULL, .constantValue.asShort = OrgApacheLuceneUtilGeoUtils_MIN_LON },
    { "MIN_LAT", "MIN_LAT", 0x1a, "S", NULL, NULL, .constantValue.asShort = OrgApacheLuceneUtilGeoUtils_MIN_LAT },
    { "BITS", "BITS", 0x19, "S", NULL, NULL, .constantValue.asShort = OrgApacheLuceneUtilGeoUtils_BITS },
    { "LON_SCALE", "LON_SCALE", 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_LON_SCALE },
    { "LAT_SCALE", "LAT_SCALE", 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_LAT_SCALE },
    { "TOLERANCE", "TOLERANCE", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_TOLERANCE },
    { "MIN_LON_INCL", "MIN_LON_INCL", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_MIN_LON_INCL },
    { "MAX_LON_INCL", "MAX_LON_INCL", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_MAX_LON_INCL },
    { "MIN_LAT_INCL", "MIN_LAT_INCL", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_MIN_LAT_INCL },
    { "MAX_LAT_INCL", "MAX_LAT_INCL", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_MAX_LAT_INCL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilGeoUtils = { 2, "GeoUtils", "org.apache.lucene.util", NULL, 0x11, 30, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilGeoUtils;
}

@end

void OrgApacheLuceneUtilGeoUtils_init(OrgApacheLuceneUtilGeoUtils *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilGeoUtils *new_OrgApacheLuceneUtilGeoUtils_init() {
  OrgApacheLuceneUtilGeoUtils *self = [OrgApacheLuceneUtilGeoUtils alloc];
  OrgApacheLuceneUtilGeoUtils_init(self);
  return self;
}

JavaLangLong *OrgApacheLuceneUtilGeoUtils_mortonHashWithDouble_withDouble_(jdouble lon, jdouble lat) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return JavaLangLong_valueOfWithLong_(OrgApacheLuceneUtilBitUtil_interleaveWithLong_withLong_(OrgApacheLuceneUtilGeoUtils_scaleLonWithDouble_(lon), OrgApacheLuceneUtilGeoUtils_scaleLatWithDouble_(lat)));
}

jdouble OrgApacheLuceneUtilGeoUtils_mortonUnhashLonWithLong_(jlong hash_) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return OrgApacheLuceneUtilGeoUtils_unscaleLonWithLong_(OrgApacheLuceneUtilBitUtil_deinterleaveWithLong_(hash_));
}

jdouble OrgApacheLuceneUtilGeoUtils_mortonUnhashLatWithLong_(jlong hash_) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return OrgApacheLuceneUtilGeoUtils_unscaleLatWithLong_(OrgApacheLuceneUtilBitUtil_deinterleaveWithLong_(JreURShift64(hash_, 1)));
}

jlong OrgApacheLuceneUtilGeoUtils_scaleLonWithDouble_(jdouble val) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return JreFpToLong(((val - OrgApacheLuceneUtilGeoUtils_MIN_LON) * OrgApacheLuceneUtilGeoUtils_LON_SCALE));
}

jlong OrgApacheLuceneUtilGeoUtils_scaleLatWithDouble_(jdouble val) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return JreFpToLong(((val - OrgApacheLuceneUtilGeoUtils_MIN_LAT) * OrgApacheLuceneUtilGeoUtils_LAT_SCALE));
}

jdouble OrgApacheLuceneUtilGeoUtils_unscaleLonWithLong_(jlong val) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return (val / OrgApacheLuceneUtilGeoUtils_LON_SCALE) + OrgApacheLuceneUtilGeoUtils_MIN_LON;
}

jdouble OrgApacheLuceneUtilGeoUtils_unscaleLatWithLong_(jlong val) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return (val / OrgApacheLuceneUtilGeoUtils_LAT_SCALE) + OrgApacheLuceneUtilGeoUtils_MIN_LAT;
}

jdouble OrgApacheLuceneUtilGeoUtils_compareWithDouble_withDouble_(jdouble v1, jdouble v2) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  jdouble compare = v1 - v2;
  return JavaLangMath_absWithDouble_(compare) <= OrgApacheLuceneUtilGeoUtils_TOLERANCE ? 0 : compare;
}

jdouble OrgApacheLuceneUtilGeoUtils_normalizeLonWithDouble_(jdouble lon_deg) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  if (lon_deg >= -180 && lon_deg <= 180) {
    return lon_deg;
  }
  jdouble off = fmod((lon_deg + 180), 360);
  if (off < 0) {
    return 180 + off;
  }
  else if (off == 0 && lon_deg > 0) {
    return 180;
  }
  else {
    return -180 + off;
  }
}

jdouble OrgApacheLuceneUtilGeoUtils_normalizeLatWithDouble_(jdouble lat_deg) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  if (lat_deg >= -90 && lat_deg <= 90) {
    return lat_deg;
  }
  jdouble off = JavaLangMath_absWithDouble_(fmod((lat_deg + 90), 360));
  return (off <= 180 ? off : 360 - off) - 90;
}

jboolean OrgApacheLuceneUtilGeoUtils_bboxContainsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble lon, jdouble lat, jdouble minLon, jdouble minLat, jdouble maxLon, jdouble maxLat) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return (OrgApacheLuceneUtilGeoUtils_compareWithDouble_withDouble_(lon, minLon) >= 0 && OrgApacheLuceneUtilGeoUtils_compareWithDouble_withDouble_(lon, maxLon) <= 0 && OrgApacheLuceneUtilGeoUtils_compareWithDouble_withDouble_(lat, minLat) >= 0 && OrgApacheLuceneUtilGeoUtils_compareWithDouble_withDouble_(lat, maxLat) <= 0);
}

jboolean OrgApacheLuceneUtilGeoUtils_pointInPolygonWithDoubleArray_withDoubleArray_withDouble_withDouble_(IOSDoubleArray *x, IOSDoubleArray *y, jdouble lat, jdouble lon) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  JreAssert((((IOSDoubleArray *) nil_chk(x))->size_ == ((IOSDoubleArray *) nil_chk(y))->size_), (@"org/apache/lucene/util/GeoUtils.java:128 condition failed: assert x.length == y.length;"));
  jboolean inPoly = false;
  for (jint i = 1; i < x->size_; i++) {
    if ((IOSDoubleArray_Get(x, i) < lon && IOSDoubleArray_Get(x, i - 1) >= lon) || (IOSDoubleArray_Get(x, i - 1) < lon && IOSDoubleArray_Get(x, i) >= lon)) {
      if (IOSDoubleArray_Get(y, i) + (lon - IOSDoubleArray_Get(x, i)) / (IOSDoubleArray_Get(x, i - 1) - IOSDoubleArray_Get(x, i)) * (IOSDoubleArray_Get(y, i - 1) - IOSDoubleArray_Get(y, i)) < lat) {
        inPoly = !inPoly;
      }
    }
  }
  return inPoly;
}

NSString *OrgApacheLuceneUtilGeoUtils_geoTermToStringWithLong_(jlong term) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  JavaLangStringBuilder *s = [new_JavaLangStringBuilder_initWithInt_(64) autorelease];
  jint numberOfLeadingZeros = JavaLangLong_numberOfLeadingZerosWithLong_(term);
  for (jint i = 0; i < numberOfLeadingZeros; i++) {
    [s appendWithChar:'0'];
  }
  if (term != 0) {
    [s appendWithNSString:JavaLangLong_toBinaryStringWithLong_(term)];
  }
  return [s description];
}

jboolean OrgApacheLuceneUtilGeoUtils_rectDisjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return (aMaxX < bMinX || aMinX > bMaxX || aMaxY < bMinY || aMinY > bMaxY);
}

jboolean OrgApacheLuceneUtilGeoUtils_rectWithinWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return !(aMinX < bMinX || aMinY < bMinY || aMaxX > bMaxX || aMaxY > bMaxY);
}

jboolean OrgApacheLuceneUtilGeoUtils_rectCrossesWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return !(OrgApacheLuceneUtilGeoUtils_rectDisjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(aMinX, aMinY, aMaxX, aMaxY, bMinX, bMinY, bMaxX, bMaxY) || OrgApacheLuceneUtilGeoUtils_rectWithinWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(aMinX, aMinY, aMaxX, aMaxY, bMinX, bMinY, bMaxX, bMaxY));
}

jboolean OrgApacheLuceneUtilGeoUtils_rectContainsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return !(bMinX < aMinX || bMinY < aMinY || bMaxX > aMaxX || bMaxY > aMaxY);
}

jboolean OrgApacheLuceneUtilGeoUtils_rectIntersectsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble aMinX, jdouble aMinY, jdouble aMaxX, jdouble aMaxY, jdouble bMinX, jdouble bMinY, jdouble bMaxX, jdouble bMaxY) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return !((aMaxX < bMinX || aMinX > bMaxX || aMaxY < bMinY || aMinY > bMaxY));
}

jboolean OrgApacheLuceneUtilGeoUtils_rectCrossesPolyWithDouble_withDouble_withDouble_withDouble_withDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, IOSDoubleArray *shapeX, IOSDoubleArray *shapeY, jdouble sMinX, jdouble sMinY, jdouble sMaxX, jdouble sMaxY) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  if (OrgApacheLuceneUtilGeoUtils_rectDisjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, sMinX, sMinY, sMaxX, sMaxY)) {
    return false;
  }
  IOSObjectArray *bbox = [IOSObjectArray arrayWithObjects:(id[]){ [IOSDoubleArray arrayWithDoubles:(jdouble[]){ rMinX, rMinY } count:2], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ rMaxX, rMinY } count:2], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ rMaxX, rMaxY } count:2], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ rMinX, rMaxY } count:2], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ rMinX, rMinY } count:2] } count:5 type:IOSClass_doubleArray(1)];
  jint polyLength = ((IOSDoubleArray *) nil_chk(shapeX))->size_ - 1;
  jdouble d, s, t, a1, b1, c1, a2, b2, c2;
  jdouble x00, y00, x01, y01, x10, y10, x11, y11;
  for (jshort b = 0; b < 4; ++b) {
    a1 = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b + 1)), 1) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b)), 1);
    b1 = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b)), 0) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b + 1)), 0);
    c1 = a1 * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b + 1)), 0) + b1 * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b + 1)), 1);
    for (jint p = 0; p < polyLength; ++p) {
      a2 = IOSDoubleArray_Get(nil_chk(shapeY), p + 1) - IOSDoubleArray_Get(shapeY, p);
      b2 = IOSDoubleArray_Get(shapeX, p) - IOSDoubleArray_Get(shapeX, p + 1);
      d = a1 * b2 - a2 * b1;
      if (d != 0) {
        c2 = a2 * IOSDoubleArray_Get(shapeX, p + 1) + b2 * IOSDoubleArray_Get(shapeY, p + 1);
        s = (1 / d) * (b2 * c1 - b1 * c2);
        t = (1 / d) * (a1 * c2 - a2 * c1);
        x00 = JavaLangStrictMath_minWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b)), 0), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b + 1)), 0)) - OrgApacheLuceneUtilGeoUtils_TOLERANCE;
        x01 = JavaLangStrictMath_maxWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b)), 0), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b + 1)), 0)) + OrgApacheLuceneUtilGeoUtils_TOLERANCE;
        y00 = JavaLangStrictMath_minWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b)), 1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b + 1)), 1)) - OrgApacheLuceneUtilGeoUtils_TOLERANCE;
        y01 = JavaLangStrictMath_maxWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b)), 1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(bbox, b + 1)), 1)) + OrgApacheLuceneUtilGeoUtils_TOLERANCE;
        x10 = JavaLangStrictMath_minWithDouble_withDouble_(IOSDoubleArray_Get(shapeX, p), IOSDoubleArray_Get(shapeX, p + 1)) - OrgApacheLuceneUtilGeoUtils_TOLERANCE;
        x11 = JavaLangStrictMath_maxWithDouble_withDouble_(IOSDoubleArray_Get(shapeX, p), IOSDoubleArray_Get(shapeX, p + 1)) + OrgApacheLuceneUtilGeoUtils_TOLERANCE;
        y10 = JavaLangStrictMath_minWithDouble_withDouble_(IOSDoubleArray_Get(shapeY, p), IOSDoubleArray_Get(shapeY, p + 1)) - OrgApacheLuceneUtilGeoUtils_TOLERANCE;
        y11 = JavaLangStrictMath_maxWithDouble_withDouble_(IOSDoubleArray_Get(shapeY, p), IOSDoubleArray_Get(shapeY, p + 1)) + OrgApacheLuceneUtilGeoUtils_TOLERANCE;
        jboolean touching = ((x00 == s && y00 == t) || (x01 == s && y01 == t)) || ((x10 == s && y10 == t) || (x11 == s && y11 == t));
        if (!(touching || x00 > s || x01 < s || y00 > t || y01 < t || x10 > s || x11 < s || y10 > t || y11 < t)) {
          return true;
        }
      }
    }
  }
  return false;
}

JavaUtilArrayList *OrgApacheLuceneUtilGeoUtils_circleToPolyWithDouble_withDouble_withDouble_(jdouble lon, jdouble lat, jdouble radius) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  jdouble angle;
  jint sides = 25;
  JavaUtilArrayList *geometry = [new_JavaUtilArrayList_init() autorelease];
  IOSDoubleArray *lons = [IOSDoubleArray arrayWithLength:sides];
  IOSDoubleArray *lats = [IOSDoubleArray arrayWithLength:sides];
  IOSDoubleArray *pt = [IOSDoubleArray arrayWithLength:2];
  jint sidesLen = sides - 1;
  for (jint i = 0; i < sidesLen; ++i) {
    angle = (i * 360 / sides);
    pt = OrgApacheLuceneUtilGeoProjectionUtils_pointFromLonLatBearingWithDouble_withDouble_withDouble_withDouble_withDoubleArray_(lon, lat, angle, radius, pt);
    *IOSDoubleArray_GetRef(lons, i) = IOSDoubleArray_Get(nil_chk(pt), 0);
    *IOSDoubleArray_GetRef(lats, i) = IOSDoubleArray_Get(pt, 1);
  }
  *IOSDoubleArray_GetRef(lons, sidesLen) = IOSDoubleArray_Get(lons, 0);
  *IOSDoubleArray_GetRef(lats, sidesLen) = IOSDoubleArray_Get(lats, 0);
  [geometry addWithId:lons];
  [geometry addWithId:lats];
  return geometry;
}

jboolean OrgApacheLuceneUtilGeoUtils_rectWithinPolyWithDouble_withDouble_withDouble_withDouble_withDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, IOSDoubleArray *shapeX, IOSDoubleArray *shapeY, jdouble sMinX, jdouble sMinY, jdouble sMaxX, jdouble sMaxY) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return !(OrgApacheLuceneUtilGeoUtils_rectCrossesPolyWithDouble_withDouble_withDouble_withDouble_withDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, shapeX, shapeY, sMinX, sMinY, sMaxX, sMaxY) || !OrgApacheLuceneUtilGeoUtils_pointInPolygonWithDoubleArray_withDoubleArray_withDouble_withDouble_(shapeX, shapeY, rMinY, rMinX) || !OrgApacheLuceneUtilGeoUtils_pointInPolygonWithDoubleArray_withDoubleArray_withDouble_withDouble_(shapeX, shapeY, rMinY, rMaxX) || !OrgApacheLuceneUtilGeoUtils_pointInPolygonWithDoubleArray_withDoubleArray_withDouble_withDouble_(shapeX, shapeY, rMaxY, rMaxX) || !OrgApacheLuceneUtilGeoUtils_pointInPolygonWithDoubleArray_withDoubleArray_withDouble_withDouble_(shapeX, shapeY, rMaxY, rMinX));
}

jboolean OrgApacheLuceneUtilGeoUtils_rectAnyCornersOutsideCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return (OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, centerLon, rMinY, rMinX) * 1000.0 > radius || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, centerLon, rMaxY, rMinX) * 1000.0 > radius || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, centerLon, rMaxY, rMaxX) * 1000.0 > radius || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, centerLon, rMinY, rMaxX) * 1000.0 > radius);
}

jboolean OrgApacheLuceneUtilGeoUtils_rectAnyCornersInCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return (OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, centerLon, rMinY, rMinX) * 1000.0 <= radius || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, centerLon, rMaxY, rMinX) * 1000.0 <= radius || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, centerLon, rMaxY, rMaxX) * 1000.0 <= radius || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, centerLon, rMinY, rMaxX) * 1000.0 <= radius);
}

jboolean OrgApacheLuceneUtilGeoUtils_rectWithinCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return !(OrgApacheLuceneUtilGeoUtils_rectAnyCornersOutsideCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius));
}

jboolean OrgApacheLuceneUtilGeoUtils_rectCrossesCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return OrgApacheLuceneUtilGeoUtils_rectAnyCornersInCircleWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, rMaxX, rMaxY, centerLon, centerLat, radius) || OrgApacheLuceneUtilGeoUtils_lineCrossesSphereWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMinY, 0, rMaxX, rMinY, 0, centerLon, centerLat, 0, radius) || OrgApacheLuceneUtilGeoUtils_lineCrossesSphereWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMaxX, rMinY, 0, rMaxX, rMaxY, 0, centerLon, centerLat, 0, radius) || OrgApacheLuceneUtilGeoUtils_lineCrossesSphereWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMaxX, rMaxY, 0, rMinX, rMaxY, 0, centerLon, centerLat, 0, radius) || OrgApacheLuceneUtilGeoUtils_lineCrossesSphereWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(rMinX, rMaxY, 0, rMinX, rMinY, 0, centerLon, centerLat, 0, radius);
}

jboolean OrgApacheLuceneUtilGeoUtils_circleWithinRectWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble rMinX, jdouble rMinY, jdouble rMaxX, jdouble rMaxY, jdouble centerLon, jdouble centerLat, jdouble radius) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return !(centerLon < rMinX || centerLon > rMaxX || centerLat > rMaxY || centerLat < rMinY || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(rMinY, centerLon, centerLat, centerLon) < radius || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(rMaxY, centerLon, centerLat, centerLon) < radius || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, rMinX, centerLat, centerLon) < radius || OrgApacheLuceneUtilSloppyMath_haversinWithDouble_withDouble_withDouble_withDouble_(centerLat, rMaxX, centerLat, centerLon) < radius);
}

jboolean OrgApacheLuceneUtilGeoUtils_lineCrossesSphereWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble lon1, jdouble lat1, jdouble alt1, jdouble lon2, jdouble lat2, jdouble alt2, jdouble centerLon, jdouble centerLat, jdouble centerAlt, jdouble radius) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  IOSDoubleArray *ecf1 = OrgApacheLuceneUtilGeoProjectionUtils_llaToECFWithDouble_withDouble_withDouble_withDoubleArray_(lon1, lat1, alt1, nil);
  IOSDoubleArray *ecf2 = OrgApacheLuceneUtilGeoProjectionUtils_llaToECFWithDouble_withDouble_withDouble_withDoubleArray_(lon2, lat2, alt2, nil);
  IOSDoubleArray *cntr = OrgApacheLuceneUtilGeoProjectionUtils_llaToECFWithDouble_withDouble_withDouble_withDoubleArray_(centerLon, centerLat, centerAlt, nil);
  jdouble dX = IOSDoubleArray_Get(nil_chk(ecf2), 0) - IOSDoubleArray_Get(nil_chk(ecf1), 0);
  jdouble dY = IOSDoubleArray_Get(ecf2, 1) - IOSDoubleArray_Get(ecf1, 1);
  jdouble dZ = IOSDoubleArray_Get(ecf2, 2) - IOSDoubleArray_Get(ecf1, 2);
  jdouble fX = IOSDoubleArray_Get(ecf1, 0) - IOSDoubleArray_Get(nil_chk(cntr), 0);
  jdouble fY = IOSDoubleArray_Get(ecf1, 1) - IOSDoubleArray_Get(cntr, 1);
  jdouble fZ = IOSDoubleArray_Get(ecf1, 2) - IOSDoubleArray_Get(cntr, 2);
  jdouble a = dX * dX + dY * dY + dZ * dZ;
  jdouble b = 2 * (fX * dX + fY * dY + fZ * dZ);
  jdouble c = (fX * fX + fY * fY + fZ * fZ) - (radius * radius);
  jdouble discrim = (b * b) - (4 * a * c);
  if (discrim < 0) {
    return false;
  }
  discrim = JavaLangStrictMath_sqrtWithDouble_(discrim);
  jdouble a2 = 2 * a;
  jdouble t1 = (-b - discrim) / a2;
  jdouble t2 = (-b + discrim) / a2;
  if ((t1 < 0 || t1 > 1)) {
    return !(t2 < 0 || t2 > 1);
  }
  return true;
}

jboolean OrgApacheLuceneUtilGeoUtils_isValidLatWithDouble_(jdouble lat) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return JavaLangDouble_isNaNWithDouble_(lat) == false && lat >= OrgApacheLuceneUtilGeoUtils_MIN_LAT_INCL && lat <= OrgApacheLuceneUtilGeoUtils_MAX_LAT_INCL;
}

jboolean OrgApacheLuceneUtilGeoUtils_isValidLonWithDouble_(jdouble lon) {
  OrgApacheLuceneUtilGeoUtils_initialize();
  return JavaLangDouble_isNaNWithDouble_(lon) == false && lon >= OrgApacheLuceneUtilGeoUtils_MIN_LON_INCL && lon <= OrgApacheLuceneUtilGeoUtils_MAX_LON_INCL;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilGeoUtils)
