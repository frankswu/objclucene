//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/util/GeoUtils.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/util/GeoUtils.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation OrgApacheLuceneUtilGeoUtils

- (instancetype)init {
  OrgApacheLuceneUtilGeoUtils_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BITS", "BITS", 0x19, "S", NULL, NULL, .constantValue.asShort = OrgApacheLuceneUtilGeoUtils_BITS },
    { "TOLERANCE", "TOLERANCE", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_TOLERANCE },
    { "MIN_LON_INCL", "MIN_LON_INCL", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_MIN_LON_INCL },
    { "MAX_LON_INCL", "MAX_LON_INCL", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_MAX_LON_INCL },
    { "MIN_LAT_INCL", "MIN_LAT_INCL", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_MIN_LAT_INCL },
    { "MAX_LAT_INCL", "MAX_LAT_INCL", 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheLuceneUtilGeoUtils_MAX_LAT_INCL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilGeoUtils = { 2, "GeoUtils", "org.apache.lucene.util", NULL, 0x11, 1, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilGeoUtils;
}

@end

void OrgApacheLuceneUtilGeoUtils_init(OrgApacheLuceneUtilGeoUtils *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilGeoUtils *new_OrgApacheLuceneUtilGeoUtils_init() {
  OrgApacheLuceneUtilGeoUtils *self = [OrgApacheLuceneUtilGeoUtils alloc];
  OrgApacheLuceneUtilGeoUtils_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilGeoUtils)
