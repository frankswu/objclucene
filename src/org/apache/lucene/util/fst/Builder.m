//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/fst/Builder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/fst/Builder.h"
#include "org/apache/lucene/util/fst/BytesStore.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/NodeHash.h"
#include "org/apache/lucene/util/fst/Outputs.h"
#include "org/apache/lucene/util/packed/PackedInts.h"

@interface OrgApacheLuceneUtilFstBuilder () {
 @public
  OrgApacheLuceneUtilFstNodeHash *dedupHash_;
  id NO_OUTPUT_;
  jint minSuffixCount1_;
  jint minSuffixCount2_;
  jboolean doShareNonSingletonNodes_;
  jint shareMaxTailLength_;
  OrgApacheLuceneUtilIntsRefBuilder *lastInput_;
  jboolean doPackFST_;
  jfloat acceptableOverheadRatio_;
  IOSObjectArray *frontier_;
}

- (OrgApacheLuceneUtilFstBuilder_CompiledNode *)compileNodeWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode:(OrgApacheLuceneUtilFstBuilder_UnCompiledNode *)nodeIn
                                                                                                    withInt:(jint)tailLength;

- (void)freezeTailWithInt:(jint)prefixLenPlus1;

- (jboolean)validOutputWithId:(id)output;

- (void)compileAllTargetsWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode:(OrgApacheLuceneUtilFstBuilder_UnCompiledNode *)node
                                                                  withInt:(jint)tailLength;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstBuilder, dedupHash_, OrgApacheLuceneUtilFstNodeHash *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstBuilder, NO_OUTPUT_, id)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstBuilder, lastInput_, OrgApacheLuceneUtilIntsRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstBuilder, frontier_, IOSObjectArray *)

__attribute__((unused)) static OrgApacheLuceneUtilFstBuilder_CompiledNode *OrgApacheLuceneUtilFstBuilder_compileNodeWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(OrgApacheLuceneUtilFstBuilder *self, OrgApacheLuceneUtilFstBuilder_UnCompiledNode *nodeIn, jint tailLength);

__attribute__((unused)) static void OrgApacheLuceneUtilFstBuilder_freezeTailWithInt_(OrgApacheLuceneUtilFstBuilder *self, jint prefixLenPlus1);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilFstBuilder_validOutputWithId_(OrgApacheLuceneUtilFstBuilder *self, id output);

__attribute__((unused)) static void OrgApacheLuceneUtilFstBuilder_compileAllTargetsWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(OrgApacheLuceneUtilFstBuilder *self, OrgApacheLuceneUtilFstBuilder_UnCompiledNode *node, jint tailLength);

@interface OrgApacheLuceneUtilFstBuilder_Node : NSObject

@end

@implementation OrgApacheLuceneUtilFstBuilder

- (instancetype)initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum:(OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum *)inputType
                               withOrgApacheLuceneUtilFstOutputs:(OrgApacheLuceneUtilFstOutputs *)outputs {
  OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withOrgApacheLuceneUtilFstOutputs_(self, inputType, outputs);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum:(OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum *)inputType
                                                         withInt:(jint)minSuffixCount1
                                                         withInt:(jint)minSuffixCount2
                                                     withBoolean:(jboolean)doShareSuffix
                                                     withBoolean:(jboolean)doShareNonSingletonNodes
                                                         withInt:(jint)shareMaxTailLength
                               withOrgApacheLuceneUtilFstOutputs:(OrgApacheLuceneUtilFstOutputs *)outputs
                                                     withBoolean:(jboolean)doPackFST
                                                       withFloat:(jfloat)acceptableOverheadRatio
                                                     withBoolean:(jboolean)allowArrayArcs
                                                         withInt:(jint)bytesPageBits {
  OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withInt_withInt_withBoolean_withBoolean_withInt_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withBoolean_withInt_(self, inputType, minSuffixCount1, minSuffixCount2, doShareSuffix, doShareNonSingletonNodes, shareMaxTailLength, outputs, doPackFST, acceptableOverheadRatio, allowArrayArcs, bytesPageBits);
  return self;
}

- (jlong)getTermCount {
  return ((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(IOSObjectArray_Get(nil_chk(frontier_), 0)))->inputCount_;
}

- (jlong)getNodeCount {
  return 1 + nodeCount_;
}

- (jlong)getArcCount {
  return arcCount_;
}

- (jlong)getMappedStateCount {
  return dedupHash_ == nil ? 0 : nodeCount_;
}

- (OrgApacheLuceneUtilFstBuilder_CompiledNode *)compileNodeWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode:(OrgApacheLuceneUtilFstBuilder_UnCompiledNode *)nodeIn
                                                                                                    withInt:(jint)tailLength {
  return OrgApacheLuceneUtilFstBuilder_compileNodeWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(self, nodeIn, tailLength);
}

- (void)freezeTailWithInt:(jint)prefixLenPlus1 {
  OrgApacheLuceneUtilFstBuilder_freezeTailWithInt_(self, prefixLenPlus1);
}

- (void)addWithOrgApacheLuceneUtilIntsRef:(OrgApacheLuceneUtilIntsRef *)input
                                   withId:(id)output {
  if ([nil_chk(output) isEqual:NO_OUTPUT_]) {
    output = NO_OUTPUT_;
  }
  JreAssert(([((OrgApacheLuceneUtilIntsRefBuilder *) nil_chk(lastInput_)) length] == 0 || [((OrgApacheLuceneUtilIntsRef *) nil_chk(input)) compareToWithId:[lastInput_ get]] >= 0), (JreStrcat("$@$@", @"inputs are added out of order lastInput=", [lastInput_ get], @" vs input=", input)));
  JreAssert((OrgApacheLuceneUtilFstBuilder_validOutputWithId_(self, output)), (@"org/apache/lucene/util/fst/Builder.java:378 condition failed: assert validOutput(output);"));
  if (((OrgApacheLuceneUtilIntsRef *) nil_chk(input))->length_ == 0) {
    ((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(IOSObjectArray_Get(nil_chk(frontier_), 0)))->inputCount_++;
    ((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(IOSObjectArray_Get(frontier_, 0)))->isFinal_ = true;
    [((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) setEmptyOutputWithId:output];
    return;
  }
  jint pos1 = 0;
  jint pos2 = input->offset_;
  jint pos1Stop = JavaLangMath_minWithInt_withInt_([lastInput_ length], input->length_);
  while (true) {
    ((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(IOSObjectArray_Get(nil_chk(frontier_), pos1)))->inputCount_++;
    if (pos1 >= pos1Stop || [lastInput_ intAtWithInt:pos1] != IOSIntArray_Get(nil_chk(input->ints_), pos2)) {
      break;
    }
    pos1++;
    pos2++;
  }
  jint prefixLenPlus1 = pos1 + 1;
  if (((IOSObjectArray *) nil_chk(frontier_))->size_ < input->length_ + 1) {
    IOSObjectArray *next = [IOSObjectArray arrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(input->length_ + 1, JreLoadStatic(OrgApacheLuceneUtilRamUsageEstimator, NUM_BYTES_OBJECT_REF_)) type:OrgApacheLuceneUtilFstBuilder_UnCompiledNode_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(frontier_, 0, next, 0, frontier_->size_);
    for (jint idx = frontier_->size_; idx < next->size_; idx++) {
      IOSObjectArray_SetAndConsume(next, idx, new_OrgApacheLuceneUtilFstBuilder_UnCompiledNode_initWithOrgApacheLuceneUtilFstBuilder_withInt_(self, idx));
    }
    JreStrongAssign(&frontier_, next);
  }
  OrgApacheLuceneUtilFstBuilder_freezeTailWithInt_(self, prefixLenPlus1);
  for (jint idx = prefixLenPlus1; idx <= input->length_; idx++) {
    [((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(IOSObjectArray_Get(frontier_, idx - 1))) addArcWithInt:IOSIntArray_Get(nil_chk(input->ints_), input->offset_ + idx - 1) withOrgApacheLuceneUtilFstBuilder_Node:IOSObjectArray_Get(frontier_, idx)];
    ((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(IOSObjectArray_Get(frontier_, idx)))->inputCount_++;
  }
  OrgApacheLuceneUtilFstBuilder_UnCompiledNode *lastNode = IOSObjectArray_Get(frontier_, input->length_);
  if ([lastInput_ length] != input->length_ || prefixLenPlus1 != input->length_ + 1) {
    ((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(lastNode))->isFinal_ = true;
    JreStrongAssign(&lastNode->output_, NO_OUTPUT_);
  }
  for (jint idx = 1; idx < prefixLenPlus1; idx++) {
    OrgApacheLuceneUtilFstBuilder_UnCompiledNode *node = IOSObjectArray_Get(frontier_, idx);
    OrgApacheLuceneUtilFstBuilder_UnCompiledNode *parentNode = IOSObjectArray_Get(frontier_, idx - 1);
    id lastOutput = [((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(parentNode)) getLastOutputWithInt:IOSIntArray_Get(nil_chk(input->ints_), input->offset_ + idx - 1)];
    JreAssert((OrgApacheLuceneUtilFstBuilder_validOutputWithId_(self, lastOutput)), (@"org/apache/lucene/util/fst/Builder.java:442 condition failed: assert validOutput(lastOutput);"));
    id commonOutputPrefix;
    id wordSuffix;
    if (lastOutput != NO_OUTPUT_) {
      commonOutputPrefix = [((OrgApacheLuceneUtilFstOutputs *) nil_chk(((OrgApacheLuceneUtilFstFST *) nil_chk(fst_))->outputs_)) commonWithId:output withId:lastOutput];
      JreAssert((OrgApacheLuceneUtilFstBuilder_validOutputWithId_(self, commonOutputPrefix)), (@"org/apache/lucene/util/fst/Builder.java:449 condition failed: assert validOutput(commonOutputPrefix);"));
      wordSuffix = [fst_->outputs_ subtractWithId:lastOutput withId:commonOutputPrefix];
      JreAssert((OrgApacheLuceneUtilFstBuilder_validOutputWithId_(self, wordSuffix)), (@"org/apache/lucene/util/fst/Builder.java:451 condition failed: assert validOutput(wordSuffix);"));
      [parentNode setLastOutputWithInt:IOSIntArray_Get(input->ints_, input->offset_ + idx - 1) withId:commonOutputPrefix];
      [((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(node)) prependOutputWithId:wordSuffix];
    }
    else {
      commonOutputPrefix = wordSuffix = NO_OUTPUT_;
    }
    output = [((OrgApacheLuceneUtilFstOutputs *) nil_chk(((OrgApacheLuceneUtilFstFST *) nil_chk(fst_))->outputs_)) subtractWithId:output withId:commonOutputPrefix];
    JreAssert((OrgApacheLuceneUtilFstBuilder_validOutputWithId_(self, output)), (@"org/apache/lucene/util/fst/Builder.java:459 condition failed: assert validOutput(output);"));
  }
  if ([lastInput_ length] == input->length_ && prefixLenPlus1 == 1 + input->length_) {
    JreStrongAssign(&((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(lastNode))->output_, [((OrgApacheLuceneUtilFstOutputs *) nil_chk(((OrgApacheLuceneUtilFstFST *) nil_chk(fst_))->outputs_)) mergeWithId:lastNode->output_ withId:output]);
  }
  else {
    [((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(IOSObjectArray_Get(frontier_, prefixLenPlus1 - 1))) setLastOutputWithInt:IOSIntArray_Get(nil_chk(input->ints_), input->offset_ + prefixLenPlus1 - 1) withId:output];
  }
  [lastInput_ copyIntsWithOrgApacheLuceneUtilIntsRef:input];
}

- (jboolean)validOutputWithId:(id)output {
  return OrgApacheLuceneUtilFstBuilder_validOutputWithId_(self, output);
}

- (OrgApacheLuceneUtilFstFST *)finish {
  OrgApacheLuceneUtilFstBuilder_UnCompiledNode *root = IOSObjectArray_Get(nil_chk(frontier_), 0);
  OrgApacheLuceneUtilFstBuilder_freezeTailWithInt_(self, 0);
  if (((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(root))->inputCount_ < minSuffixCount1_ || root->inputCount_ < minSuffixCount2_ || root->numArcs_ == 0) {
    if (((OrgApacheLuceneUtilFstFST *) nil_chk(fst_))->emptyOutput_ == nil) {
      return nil;
    }
    else if (minSuffixCount1_ > 0 || minSuffixCount2_ > 0) {
      return nil;
    }
  }
  else {
    if (minSuffixCount2_ != 0) {
      OrgApacheLuceneUtilFstBuilder_compileAllTargetsWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(self, root, [((OrgApacheLuceneUtilIntsRefBuilder *) nil_chk(lastInput_)) length]);
    }
  }
  [((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) finishWithLong:((OrgApacheLuceneUtilFstBuilder_CompiledNode *) nil_chk(OrgApacheLuceneUtilFstBuilder_compileNodeWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(self, root, [((OrgApacheLuceneUtilIntsRefBuilder *) nil_chk(lastInput_)) length])))->node_];
  if (doPackFST_) {
    return [fst_ packWithOrgApacheLuceneUtilFstBuilder:self withInt:3 withInt:JavaLangMath_maxWithInt_withInt_(10, (jint) ([self getNodeCount] / 4)) withFloat:acceptableOverheadRatio_];
  }
  else {
    return fst_;
  }
}

- (void)compileAllTargetsWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode:(OrgApacheLuceneUtilFstBuilder_UnCompiledNode *)node
                                                                  withInt:(jint)tailLength {
  OrgApacheLuceneUtilFstBuilder_compileAllTargetsWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(self, node, tailLength);
}

- (jlong)fstRamBytesUsed {
  return [((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) ramBytesUsed];
}

- (void)dealloc {
  RELEASE_(dedupHash_);
  RELEASE_(fst_);
  RELEASE_(NO_OUTPUT_);
  RELEASE_(lastInput_);
  RELEASE_(frontier_);
  RELEASE_(reusedBytesPerArc_);
  RELEASE_(bytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum:withOrgApacheLuceneUtilFstOutputs:", "Builder", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum:withInt:withInt:withBoolean:withBoolean:withInt:withOrgApacheLuceneUtilFstOutputs:withBoolean:withFloat:withBoolean:withInt:", "Builder", NULL, 0x1, NULL, NULL },
    { "getTermCount", NULL, "J", 0x1, NULL, NULL },
    { "getNodeCount", NULL, "J", 0x1, NULL, NULL },
    { "getArcCount", NULL, "J", 0x1, NULL, NULL },
    { "getMappedStateCount", NULL, "J", 0x1, NULL, NULL },
    { "compileNodeWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode:withInt:", "compileNode", "Lorg.apache.lucene.util.fst.Builder$CompiledNode;", 0x2, "Ljava.io.IOException;", NULL },
    { "freezeTailWithInt:", "freezeTail", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "addWithOrgApacheLuceneUtilIntsRef:withId:", "add", "V", 0x1, "Ljava.io.IOException;", "(Lorg/apache/lucene/util/IntsRef;TT;)V" },
    { "validOutputWithId:", "validOutput", "Z", 0x2, NULL, "(TT;)Z" },
    { "finish", NULL, "Lorg.apache.lucene.util.fst.FST;", 0x1, "Ljava.io.IOException;", NULL },
    { "compileAllTargetsWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode:withInt:", "compileAllTargets", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "fstRamBytesUsed", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dedupHash_", NULL, 0x12, "Lorg.apache.lucene.util.fst.NodeHash;", NULL, "Lorg/apache/lucene/util/fst/NodeHash<TT;>;", .constantValue.asLong = 0 },
    { "fst_", NULL, 0x10, "Lorg.apache.lucene.util.fst.FST;", NULL, "Lorg/apache/lucene/util/fst/FST<TT;>;", .constantValue.asLong = 0 },
    { "NO_OUTPUT_", NULL, 0x12, "TT;", NULL, "TT;", .constantValue.asLong = 0 },
    { "minSuffixCount1_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "minSuffixCount2_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "doShareNonSingletonNodes_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "shareMaxTailLength_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastInput_", NULL, 0x12, "Lorg.apache.lucene.util.IntsRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "doPackFST_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "acceptableOverheadRatio_", NULL, 0x12, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "frontier_", NULL, 0x2, "[Lorg.apache.lucene.util.fst.Builder$UnCompiledNode;", NULL, "[Lorg/apache/lucene/util/fst/Builder$UnCompiledNode<TT;>;", .constantValue.asLong = 0 },
    { "lastFrozenNode_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "reusedBytesPerArc_", NULL, 0x0, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "arcCount_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "nodeCount_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "allowArrayArcs_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "bytes_", NULL, 0x0, "Lorg.apache.lucene.util.fst.BytesStore;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.util.fst.Builder$Arc;", "Lorg.apache.lucene.util.fst.Builder$Node;", "Lorg.apache.lucene.util.fst.Builder$CompiledNode;", "Lorg.apache.lucene.util.fst.Builder$UnCompiledNode;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstBuilder = { 2, "Builder", "org.apache.lucene.util.fst", NULL, 0x1, 13, methods, 17, fields, 0, NULL, 4, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgApacheLuceneUtilFstBuilder;
}

@end

void OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneUtilFstBuilder *self, OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum *inputType, OrgApacheLuceneUtilFstOutputs *outputs) {
  OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withInt_withInt_withBoolean_withBoolean_withInt_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withBoolean_withInt_(self, inputType, 0, 0, true, true, JavaLangInteger_MAX_VALUE, outputs, false, OrgApacheLuceneUtilPackedPackedInts_COMPACT, true, 15);
}

OrgApacheLuceneUtilFstBuilder *new_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum *inputType, OrgApacheLuceneUtilFstOutputs *outputs) {
  OrgApacheLuceneUtilFstBuilder *self = [OrgApacheLuceneUtilFstBuilder alloc];
  OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withOrgApacheLuceneUtilFstOutputs_(self, inputType, outputs);
  return self;
}

void OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withInt_withInt_withBoolean_withBoolean_withInt_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withBoolean_withInt_(OrgApacheLuceneUtilFstBuilder *self, OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum *inputType, jint minSuffixCount1, jint minSuffixCount2, jboolean doShareSuffix, jboolean doShareNonSingletonNodes, jint shareMaxTailLength, OrgApacheLuceneUtilFstOutputs *outputs, jboolean doPackFST, jfloat acceptableOverheadRatio, jboolean allowArrayArcs, jint bytesPageBits) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->lastInput_, new_OrgApacheLuceneUtilIntsRefBuilder_init());
  JreStrongAssignAndConsume(&self->reusedBytesPerArc_, [IOSIntArray newArrayWithLength:4]);
  self->minSuffixCount1_ = minSuffixCount1;
  self->minSuffixCount2_ = minSuffixCount2;
  self->doShareNonSingletonNodes_ = doShareNonSingletonNodes;
  self->shareMaxTailLength_ = shareMaxTailLength;
  self->doPackFST_ = doPackFST;
  self->acceptableOverheadRatio_ = acceptableOverheadRatio;
  self->allowArrayArcs_ = allowArrayArcs;
  JreStrongAssignAndConsume(&self->fst_, new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withInt_(inputType, outputs, doPackFST, acceptableOverheadRatio, bytesPageBits));
  JreStrongAssign(&self->bytes_, self->fst_->bytes_);
  JreAssert((self->bytes_ != nil), (@"org/apache/lucene/util/fst/Builder.java:177 condition failed: assert bytes != null;"));
  if (doShareSuffix) {
    JreStrongAssignAndConsume(&self->dedupHash_, new_OrgApacheLuceneUtilFstNodeHash_initWithOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilFstFST_BytesReader_(self->fst_, [((OrgApacheLuceneUtilFstBytesStore *) nil_chk(self->bytes_)) getReverseReaderWithBoolean:false]));
  }
  else {
    JreStrongAssign(&self->dedupHash_, nil);
  }
  JreStrongAssign(&self->NO_OUTPUT_, [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs)) getNoOutput]);
  IOSObjectArray *f = (IOSObjectArray *) check_class_cast([IOSObjectArray arrayWithLength:10 type:OrgApacheLuceneUtilFstBuilder_UnCompiledNode_class_()], [IOSObjectArray class]);
  JreStrongAssign(&self->frontier_, f);
  for (jint idx = 0; idx < self->frontier_->size_; idx++) {
    IOSObjectArray_SetAndConsume(self->frontier_, idx, new_OrgApacheLuceneUtilFstBuilder_UnCompiledNode_initWithOrgApacheLuceneUtilFstBuilder_withInt_(self, idx));
  }
}

OrgApacheLuceneUtilFstBuilder *new_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withInt_withInt_withBoolean_withBoolean_withInt_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withBoolean_withInt_(OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum *inputType, jint minSuffixCount1, jint minSuffixCount2, jboolean doShareSuffix, jboolean doShareNonSingletonNodes, jint shareMaxTailLength, OrgApacheLuceneUtilFstOutputs *outputs, jboolean doPackFST, jfloat acceptableOverheadRatio, jboolean allowArrayArcs, jint bytesPageBits) {
  OrgApacheLuceneUtilFstBuilder *self = [OrgApacheLuceneUtilFstBuilder alloc];
  OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withInt_withInt_withBoolean_withBoolean_withInt_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withBoolean_withInt_(self, inputType, minSuffixCount1, minSuffixCount2, doShareSuffix, doShareNonSingletonNodes, shareMaxTailLength, outputs, doPackFST, acceptableOverheadRatio, allowArrayArcs, bytesPageBits);
  return self;
}

OrgApacheLuceneUtilFstBuilder_CompiledNode *OrgApacheLuceneUtilFstBuilder_compileNodeWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(OrgApacheLuceneUtilFstBuilder *self, OrgApacheLuceneUtilFstBuilder_UnCompiledNode *nodeIn, jint tailLength) {
  jlong node;
  jlong bytesPosStart = [((OrgApacheLuceneUtilFstBytesStore *) nil_chk(self->bytes_)) getPosition];
  if (self->dedupHash_ != nil && (self->doShareNonSingletonNodes_ || ((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(nodeIn))->numArcs_ <= 1) && tailLength <= self->shareMaxTailLength_) {
    if (((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(nodeIn))->numArcs_ == 0) {
      node = [((OrgApacheLuceneUtilFstFST *) nil_chk(self->fst_)) addNodeWithOrgApacheLuceneUtilFstBuilder:self withOrgApacheLuceneUtilFstBuilder_UnCompiledNode:nodeIn];
      self->lastFrozenNode_ = node;
    }
    else {
      node = [self->dedupHash_ addWithOrgApacheLuceneUtilFstBuilder:self withOrgApacheLuceneUtilFstBuilder_UnCompiledNode:nodeIn];
    }
  }
  else {
    node = [((OrgApacheLuceneUtilFstFST *) nil_chk(self->fst_)) addNodeWithOrgApacheLuceneUtilFstBuilder:self withOrgApacheLuceneUtilFstBuilder_UnCompiledNode:nodeIn];
  }
  JreAssert((node != -2), (@"org/apache/lucene/util/fst/Builder.java:223 condition failed: assert node != -2;"));
  jlong bytesPosEnd = [self->bytes_ getPosition];
  if (bytesPosEnd != bytesPosStart) {
    JreAssert((bytesPosEnd > bytesPosStart), (@"org/apache/lucene/util/fst/Builder.java:228 condition failed: assert bytesPosEnd > bytesPosStart;"));
    self->lastFrozenNode_ = node;
  }
  [((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(nodeIn)) clear];
  OrgApacheLuceneUtilFstBuilder_CompiledNode *fn = [new_OrgApacheLuceneUtilFstBuilder_CompiledNode_init() autorelease];
  fn->node_ = node;
  return fn;
}

void OrgApacheLuceneUtilFstBuilder_freezeTailWithInt_(OrgApacheLuceneUtilFstBuilder *self, jint prefixLenPlus1) {
  jint downTo = JavaLangMath_maxWithInt_withInt_(1, prefixLenPlus1);
  for (jint idx = [((OrgApacheLuceneUtilIntsRefBuilder *) nil_chk(self->lastInput_)) length]; idx >= downTo; idx--) {
    jboolean doPrune = false;
    jboolean doCompile = false;
    OrgApacheLuceneUtilFstBuilder_UnCompiledNode *node = IOSObjectArray_Get(nil_chk(self->frontier_), idx);
    OrgApacheLuceneUtilFstBuilder_UnCompiledNode *parent = IOSObjectArray_Get(self->frontier_, idx - 1);
    if (((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(node))->inputCount_ < self->minSuffixCount1_) {
      doPrune = true;
      doCompile = true;
    }
    else if (idx > prefixLenPlus1) {
      if (((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(parent))->inputCount_ < self->minSuffixCount2_ || (self->minSuffixCount2_ == 1 && parent->inputCount_ == 1 && idx > 1)) {
        doPrune = true;
      }
      else {
        doPrune = false;
      }
      doCompile = true;
    }
    else {
      doCompile = (self->minSuffixCount2_ == 0);
    }
    if (node->inputCount_ < self->minSuffixCount2_ || (self->minSuffixCount2_ == 1 && node->inputCount_ == 1 && idx > 1)) {
      for (jint arcIdx = 0; arcIdx < node->numArcs_; arcIdx++) {
        OrgApacheLuceneUtilFstBuilder_UnCompiledNode *target = (OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) check_class_cast(((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(nil_chk(node->arcs_), arcIdx)))->target_, [OrgApacheLuceneUtilFstBuilder_UnCompiledNode class]);
        [((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(target)) clear];
      }
      node->numArcs_ = 0;
    }
    if (doPrune) {
      [node clear];
      [((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(parent)) deleteLastWithInt:[self->lastInput_ intAtWithInt:idx - 1] withOrgApacheLuceneUtilFstBuilder_Node:node];
    }
    else {
      if (self->minSuffixCount2_ != 0) {
        OrgApacheLuceneUtilFstBuilder_compileAllTargetsWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(self, node, [self->lastInput_ length] - idx);
      }
      id nextFinalOutput = node->output_;
      jboolean isFinal = node->isFinal_ || node->numArcs_ == 0;
      if (doCompile) {
        [((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(parent)) replaceLastWithInt:[self->lastInput_ intAtWithInt:idx - 1] withOrgApacheLuceneUtilFstBuilder_Node:OrgApacheLuceneUtilFstBuilder_compileNodeWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(self, node, 1 + [self->lastInput_ length] - idx) withId:nextFinalOutput withBoolean:isFinal];
      }
      else {
        [((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(parent)) replaceLastWithInt:[self->lastInput_ intAtWithInt:idx - 1] withOrgApacheLuceneUtilFstBuilder_Node:node withId:nextFinalOutput withBoolean:isFinal];
        IOSObjectArray_SetAndConsume(self->frontier_, idx, new_OrgApacheLuceneUtilFstBuilder_UnCompiledNode_initWithOrgApacheLuceneUtilFstBuilder_withInt_(self, idx));
      }
    }
  }
}

jboolean OrgApacheLuceneUtilFstBuilder_validOutputWithId_(OrgApacheLuceneUtilFstBuilder *self, id output) {
  return output == self->NO_OUTPUT_ || ![nil_chk(output) isEqual:self->NO_OUTPUT_];
}

void OrgApacheLuceneUtilFstBuilder_compileAllTargetsWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(OrgApacheLuceneUtilFstBuilder *self, OrgApacheLuceneUtilFstBuilder_UnCompiledNode *node, jint tailLength) {
  for (jint arcIdx = 0; arcIdx < ((OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) nil_chk(node))->numArcs_; arcIdx++) {
    OrgApacheLuceneUtilFstBuilder_Arc *arc = IOSObjectArray_Get(nil_chk(node->arcs_), arcIdx);
    if (![((id<OrgApacheLuceneUtilFstBuilder_Node>) nil_chk(((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(arc))->target_)) isCompiled]) {
      OrgApacheLuceneUtilFstBuilder_UnCompiledNode *n = (OrgApacheLuceneUtilFstBuilder_UnCompiledNode *) check_class_cast(arc->target_, [OrgApacheLuceneUtilFstBuilder_UnCompiledNode class]);
      if (n->numArcs_ == 0) {
        arc->isFinal_ = n->isFinal_ = true;
      }
      arc->target_ = OrgApacheLuceneUtilFstBuilder_compileNodeWithOrgApacheLuceneUtilFstBuilder_UnCompiledNode_withInt_(self, n, tailLength - 1);
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstBuilder)

@implementation OrgApacheLuceneUtilFstBuilder_Arc

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilFstBuilder_Arc_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(output_);
  RELEASE_(nextFinalOutput_);
  [super dealloc];
}

- (void)__javaClone {
  [super __javaClone];
  [target_ release];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "label_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "target_", NULL, 0x1, "Lorg.apache.lucene.util.fst.Builder$Node;", NULL, NULL, .constantValue.asLong = 0 },
    { "isFinal_", NULL, 0x1, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "output_", NULL, 0x1, "TT;", NULL, "TT;", .constantValue.asLong = 0 },
    { "nextFinalOutput_", NULL, 0x1, "TT;", NULL, "TT;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstBuilder_Arc = { 2, "Arc", "org.apache.lucene.util.fst", "Builder", 0x9, 1, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgApacheLuceneUtilFstBuilder_Arc;
}

@end

void OrgApacheLuceneUtilFstBuilder_Arc_init(OrgApacheLuceneUtilFstBuilder_Arc *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilFstBuilder_Arc *new_OrgApacheLuceneUtilFstBuilder_Arc_init() {
  OrgApacheLuceneUtilFstBuilder_Arc *self = [OrgApacheLuceneUtilFstBuilder_Arc alloc];
  OrgApacheLuceneUtilFstBuilder_Arc_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstBuilder_Arc)

@implementation OrgApacheLuceneUtilFstBuilder_Node

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isCompiled", NULL, "Z", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstBuilder_Node = { 2, "Node", "org.apache.lucene.util.fst", "Builder", 0x608, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilFstBuilder_Node;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstBuilder_Node)

@implementation OrgApacheLuceneUtilFstBuilder_CompiledNode

- (jboolean)isCompiled {
  return true;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilFstBuilder_CompiledNode_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isCompiled", NULL, "Z", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "node_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstBuilder_CompiledNode = { 2, "CompiledNode", "org.apache.lucene.util.fst", "Builder", 0x18, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilFstBuilder_CompiledNode;
}

@end

void OrgApacheLuceneUtilFstBuilder_CompiledNode_init(OrgApacheLuceneUtilFstBuilder_CompiledNode *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilFstBuilder_CompiledNode *new_OrgApacheLuceneUtilFstBuilder_CompiledNode_init() {
  OrgApacheLuceneUtilFstBuilder_CompiledNode *self = [OrgApacheLuceneUtilFstBuilder_CompiledNode alloc];
  OrgApacheLuceneUtilFstBuilder_CompiledNode_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstBuilder_CompiledNode)

@implementation OrgApacheLuceneUtilFstBuilder_UnCompiledNode

- (instancetype)initWithOrgApacheLuceneUtilFstBuilder:(OrgApacheLuceneUtilFstBuilder *)owner
                                              withInt:(jint)depth {
  OrgApacheLuceneUtilFstBuilder_UnCompiledNode_initWithOrgApacheLuceneUtilFstBuilder_withInt_(self, owner, depth);
  return self;
}

- (jboolean)isCompiled {
  return false;
}

- (void)clear {
  numArcs_ = 0;
  isFinal_ = false;
  JreStrongAssign(&output_, ((OrgApacheLuceneUtilFstBuilder *) nil_chk(owner_))->NO_OUTPUT_);
  inputCount_ = 0;
}

- (id)getLastOutputWithInt:(jint)labelToMatch {
  JreAssert((numArcs_ > 0), (@"org/apache/lucene/util/fst/Builder.java:605 condition failed: assert numArcs > 0;"));
  JreAssert((((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(nil_chk(arcs_), numArcs_ - 1)))->label_ == labelToMatch), (@"org/apache/lucene/util/fst/Builder.java:606 condition failed: assert arcs[numArcs-1].label == labelToMatch;"));
  return ((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(arcs_, numArcs_ - 1)))->output_;
}

- (void)addArcWithInt:(jint)label
withOrgApacheLuceneUtilFstBuilder_Node:(id<OrgApacheLuceneUtilFstBuilder_Node>)target {
  JreAssert((label >= 0), (@"org/apache/lucene/util/fst/Builder.java:611 condition failed: assert label >= 0;"));
  JreAssert((numArcs_ == 0 || label > ((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(nil_chk(arcs_), numArcs_ - 1)))->label_), (JreStrcat("$I$I$I", @"arc[-1].label=", ((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(nil_chk(arcs_), numArcs_ - 1)))->label_, @" new label=", label, @" numArcs=", numArcs_)));
  if (numArcs_ == arcs_->size_) {
    IOSObjectArray *newArcs = [IOSObjectArray arrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(numArcs_ + 1, JreLoadStatic(OrgApacheLuceneUtilRamUsageEstimator, NUM_BYTES_OBJECT_REF_)) type:OrgApacheLuceneUtilFstBuilder_Arc_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(arcs_, 0, newArcs, 0, arcs_->size_);
    for (jint arcIdx = numArcs_; arcIdx < newArcs->size_; arcIdx++) {
      IOSObjectArray_SetAndConsume(newArcs, arcIdx, new_OrgApacheLuceneUtilFstBuilder_Arc_init());
    }
    JreStrongAssign(&arcs_, newArcs);
  }
  OrgApacheLuceneUtilFstBuilder_Arc *arc = IOSObjectArray_Get(arcs_, numArcs_++);
  ((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(arc))->label_ = label;
  arc->target_ = target;
  JreStrongAssign(&arc->output_, JreStrongAssign(&arc->nextFinalOutput_, ((OrgApacheLuceneUtilFstBuilder *) nil_chk(owner_))->NO_OUTPUT_));
  arc->isFinal_ = false;
}

- (void)replaceLastWithInt:(jint)labelToMatch
withOrgApacheLuceneUtilFstBuilder_Node:(id<OrgApacheLuceneUtilFstBuilder_Node>)target
                    withId:(id)nextFinalOutput
               withBoolean:(jboolean)isFinal {
  JreAssert((numArcs_ > 0), (@"org/apache/lucene/util/fst/Builder.java:630 condition failed: assert numArcs > 0;"));
  OrgApacheLuceneUtilFstBuilder_Arc *arc = IOSObjectArray_Get(nil_chk(arcs_), numArcs_ - 1);
  JreAssert((((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(arc))->label_ == labelToMatch), (JreStrcat("$I$I", @"arc.label=", arc->label_, @" vs ", labelToMatch)));
  arc->target_ = target;
  JreStrongAssign(&arc->nextFinalOutput_, nextFinalOutput);
  arc->isFinal_ = isFinal;
}

- (void)deleteLastWithInt:(jint)label
withOrgApacheLuceneUtilFstBuilder_Node:(id<OrgApacheLuceneUtilFstBuilder_Node>)target {
  JreAssert((numArcs_ > 0), (@"org/apache/lucene/util/fst/Builder.java:640 condition failed: assert numArcs > 0;"));
  JreAssert((label == ((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(nil_chk(arcs_), numArcs_ - 1)))->label_), (@"org/apache/lucene/util/fst/Builder.java:641 condition failed: assert label == arcs[numArcs-1].label;"));
  JreAssert((target == ((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(arcs_, numArcs_ - 1)))->target_), (@"org/apache/lucene/util/fst/Builder.java:642 condition failed: assert target == arcs[numArcs-1].target;"));
  numArcs_--;
}

- (void)setLastOutputWithInt:(jint)labelToMatch
                      withId:(id)newOutput {
  JreAssert((OrgApacheLuceneUtilFstBuilder_validOutputWithId_(nil_chk(owner_), newOutput)), (@"org/apache/lucene/util/fst/Builder.java:647 condition failed: assert owner.validOutput(newOutput);"));
  JreAssert((numArcs_ > 0), (@"org/apache/lucene/util/fst/Builder.java:648 condition failed: assert numArcs > 0;"));
  OrgApacheLuceneUtilFstBuilder_Arc *arc = IOSObjectArray_Get(nil_chk(arcs_), numArcs_ - 1);
  JreAssert((((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(arc))->label_ == labelToMatch), (@"org/apache/lucene/util/fst/Builder.java:650 condition failed: assert arc.label == labelToMatch;"));
  JreStrongAssign(&arc->output_, newOutput);
}

- (void)prependOutputWithId:(id)outputPrefix {
  JreAssert((OrgApacheLuceneUtilFstBuilder_validOutputWithId_(nil_chk(owner_), outputPrefix)), (@"org/apache/lucene/util/fst/Builder.java:656 condition failed: assert owner.validOutput(outputPrefix);"));
  for (jint arcIdx = 0; arcIdx < numArcs_; arcIdx++) {
    JreStrongAssign(&((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(nil_chk(arcs_), arcIdx)))->output_, [((OrgApacheLuceneUtilFstOutputs *) nil_chk(((OrgApacheLuceneUtilFstFST *) nil_chk(owner_->fst_))->outputs_)) addWithId:outputPrefix withId:((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(arcs_, arcIdx)))->output_]);
    JreAssert((OrgApacheLuceneUtilFstBuilder_validOutputWithId_(owner_, ((OrgApacheLuceneUtilFstBuilder_Arc *) nil_chk(IOSObjectArray_Get(arcs_, arcIdx)))->output_)), (@"org/apache/lucene/util/fst/Builder.java:660 condition failed: assert owner.validOutput(arcs[arcIdx].output);"));
  }
  if (isFinal_) {
    JreStrongAssign(&output_, [((OrgApacheLuceneUtilFstOutputs *) nil_chk(((OrgApacheLuceneUtilFstFST *) nil_chk(owner_->fst_))->outputs_)) addWithId:outputPrefix withId:output_]);
    JreAssert((OrgApacheLuceneUtilFstBuilder_validOutputWithId_(owner_, output_)), (@"org/apache/lucene/util/fst/Builder.java:665 condition failed: assert owner.validOutput(output);"));
  }
}

- (void)dealloc {
  RELEASE_(arcs_);
  RELEASE_(output_);
  [super dealloc];
}

- (void)__javaClone {
  [super __javaClone];
  [owner_ release];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUtilFstBuilder:withInt:", "UnCompiledNode", NULL, 0x1, NULL, NULL },
    { "isCompiled", NULL, "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "getLastOutputWithInt:", "getLastOutput", "TT;", 0x1, NULL, "(I)TT;" },
    { "addArcWithInt:withOrgApacheLuceneUtilFstBuilder_Node:", "addArc", "V", 0x1, NULL, NULL },
    { "replaceLastWithInt:withOrgApacheLuceneUtilFstBuilder_Node:withId:withBoolean:", "replaceLast", "V", 0x1, NULL, "(ILorg/apache/lucene/util/fst/Builder$Node;TT;Z)V" },
    { "deleteLastWithInt:withOrgApacheLuceneUtilFstBuilder_Node:", "deleteLast", "V", 0x1, NULL, NULL },
    { "setLastOutputWithInt:withId:", "setLastOutput", "V", 0x1, NULL, "(ITT;)V" },
    { "prependOutputWithId:", "prependOutput", "V", 0x1, NULL, "(TT;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "owner_", NULL, 0x10, "Lorg.apache.lucene.util.fst.Builder;", NULL, "Lorg/apache/lucene/util/fst/Builder<TT;>;", .constantValue.asLong = 0 },
    { "numArcs_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "arcs_", NULL, 0x1, "[Lorg.apache.lucene.util.fst.Builder$Arc;", NULL, "[Lorg/apache/lucene/util/fst/Builder$Arc<TT;>;", .constantValue.asLong = 0 },
    { "output_", NULL, 0x1, "TT;", NULL, "TT;", .constantValue.asLong = 0 },
    { "isFinal_", NULL, 0x1, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "inputCount_", NULL, 0x1, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "depth_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstBuilder_UnCompiledNode = { 2, "UnCompiledNode", "org.apache.lucene.util.fst", "Builder", 0x19, 9, methods, 7, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/lucene/util/fst/Builder$Node;" };
  return &_OrgApacheLuceneUtilFstBuilder_UnCompiledNode;
}

@end

void OrgApacheLuceneUtilFstBuilder_UnCompiledNode_initWithOrgApacheLuceneUtilFstBuilder_withInt_(OrgApacheLuceneUtilFstBuilder_UnCompiledNode *self, OrgApacheLuceneUtilFstBuilder *owner, jint depth) {
  NSObject_init(self);
  self->owner_ = owner;
  JreStrongAssign(&self->arcs_, (IOSObjectArray *) check_class_cast([IOSObjectArray arrayWithLength:1 type:OrgApacheLuceneUtilFstBuilder_Arc_class_()], [IOSObjectArray class]));
  IOSObjectArray_SetAndConsume(self->arcs_, 0, new_OrgApacheLuceneUtilFstBuilder_Arc_init());
  JreStrongAssign(&self->output_, ((OrgApacheLuceneUtilFstBuilder *) nil_chk(owner))->NO_OUTPUT_);
  self->depth_ = depth;
}

OrgApacheLuceneUtilFstBuilder_UnCompiledNode *new_OrgApacheLuceneUtilFstBuilder_UnCompiledNode_initWithOrgApacheLuceneUtilFstBuilder_withInt_(OrgApacheLuceneUtilFstBuilder *owner, jint depth) {
  OrgApacheLuceneUtilFstBuilder_UnCompiledNode *self = [OrgApacheLuceneUtilFstBuilder_UnCompiledNode alloc];
  OrgApacheLuceneUtilFstBuilder_UnCompiledNode_initWithOrgApacheLuceneUtilFstBuilder_withInt_(self, owner, depth);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstBuilder_UnCompiledNode)
