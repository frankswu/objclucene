//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/RamUsageEstimator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/reflect/Array.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/text/DecimalFormat.h"
#include "java/text/DecimalFormatSymbols.h"
#include "java/util/IdentityHashMap.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Constants.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

@interface OrgApacheLuceneUtilRamUsageEstimator ()

- (instancetype)init;

+ (jlong)shallowSizeOfArrayWithId:(id)array;

@end

static id<JavaUtilMap> OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilRamUsageEstimator, primitiveSizes_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneUtilRamUsageEstimator_init(OrgApacheLuceneUtilRamUsageEstimator *self);

__attribute__((unused)) static OrgApacheLuceneUtilRamUsageEstimator *new_OrgApacheLuceneUtilRamUsageEstimator_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static jlong OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfArrayWithId_(id array);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilRamUsageEstimator)

jboolean OrgApacheLuceneUtilRamUsageEstimator_COMPRESSED_REFS_ENABLED_;
jint OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_REF_;
jint OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_HEADER_;
jint OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_;
jint OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_ALIGNMENT_;
jlong OrgApacheLuceneUtilRamUsageEstimator_LONG_CACHE_MIN_VALUE_;
jlong OrgApacheLuceneUtilRamUsageEstimator_LONG_CACHE_MAX_VALUE_;
jint OrgApacheLuceneUtilRamUsageEstimator_LONG_SIZE_;
jboolean OrgApacheLuceneUtilRamUsageEstimator_JVM_IS_HOTSPOT_64BIT_;
NSString *OrgApacheLuceneUtilRamUsageEstimator_MANAGEMENT_FACTORY_CLASS_ = @"java.lang.management.ManagementFactory";
NSString *OrgApacheLuceneUtilRamUsageEstimator_HOTSPOT_BEAN_CLASS_ = @"com.sun.management.HotSpotDiagnosticMXBean";

@implementation OrgApacheLuceneUtilRamUsageEstimator

- (instancetype)init {
  OrgApacheLuceneUtilRamUsageEstimator_init(self);
  return self;
}

+ (jlong)alignObjectSizeWithLong:(jlong)size {
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_(size);
}

+ (jlong)sizeOfWithJavaLangLong:(JavaLangLong *)value {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithJavaLangLong_(value);
}

+ (jlong)sizeOfWithByteArray:(IOSByteArray *)arr {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithByteArray_(arr);
}

+ (jlong)sizeOfWithBooleanArray:(IOSBooleanArray *)arr {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithBooleanArray_(arr);
}

+ (jlong)sizeOfWithCharArray:(IOSCharArray *)arr {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithCharArray_(arr);
}

+ (jlong)sizeOfWithShortArray:(IOSShortArray *)arr {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithShortArray_(arr);
}

+ (jlong)sizeOfWithIntArray:(IOSIntArray *)arr {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(arr);
}

+ (jlong)sizeOfWithFloatArray:(IOSFloatArray *)arr {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithFloatArray_(arr);
}

+ (jlong)sizeOfWithLongArray:(IOSLongArray *)arr {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithLongArray_(arr);
}

+ (jlong)sizeOfWithDoubleArray:(IOSDoubleArray *)arr {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithDoubleArray_(arr);
}

+ (jlong)shallowSizeOfWithNSObjectArray:(IOSObjectArray *)arr {
  return OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(arr);
}

+ (jlong)shallowSizeOfWithId:(id)obj {
  return OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithId_(obj);
}

+ (jlong)shallowSizeOfInstanceWithIOSClass:(IOSClass *)clazz {
  return OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(clazz);
}

+ (jlong)shallowSizeOfArrayWithId:(id)array {
  return OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfArrayWithId_(array);
}

+ (jlong)adjustForFieldWithLong:(jlong)sizeSoFar
       withJavaLangReflectField:(JavaLangReflectField *)f {
  return OrgApacheLuceneUtilRamUsageEstimator_adjustForFieldWithLong_withJavaLangReflectField_(sizeSoFar, f);
}

+ (NSString *)humanReadableUnitsWithLong:(jlong)bytes {
  return OrgApacheLuceneUtilRamUsageEstimator_humanReadableUnitsWithLong_(bytes);
}

+ (NSString *)humanReadableUnitsWithLong:(jlong)bytes
               withJavaTextDecimalFormat:(JavaTextDecimalFormat *)df {
  return OrgApacheLuceneUtilRamUsageEstimator_humanReadableUnitsWithLong_withJavaTextDecimalFormat_(bytes, df);
}

+ (jlong)sizeOfWithOrgApacheLuceneUtilAccountableArray:(IOSObjectArray *)accountables {
  return OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithOrgApacheLuceneUtilAccountableArray_(accountables);
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilRamUsageEstimator class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_, new_JavaUtilIdentityHashMap_init());
    {
      [OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_ putWithId:[IOSClass booleanClass] withId:JavaLangInteger_valueOfWithInt_(OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_BOOLEAN)];
      [OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_ putWithId:[IOSClass byteClass] withId:JavaLangInteger_valueOfWithInt_(OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_BYTE)];
      [OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_ putWithId:[IOSClass charClass] withId:JavaLangInteger_valueOfWithInt_(OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_CHAR)];
      [OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_ putWithId:[IOSClass shortClass] withId:JavaLangInteger_valueOfWithInt_(OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_SHORT)];
      [OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_ putWithId:[IOSClass intClass] withId:JavaLangInteger_valueOfWithInt_(OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT)];
      [OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_ putWithId:[IOSClass floatClass] withId:JavaLangInteger_valueOfWithInt_(OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_FLOAT)];
      [OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_ putWithId:[IOSClass doubleClass] withId:JavaLangInteger_valueOfWithInt_(OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_DOUBLE)];
      [OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_ putWithId:[IOSClass longClass] withId:JavaLangInteger_valueOfWithInt_(OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_LONG)];
    }
    {
      if (JreLoadStatic(OrgApacheLuceneUtilConstants, JRE_IS_64BIT_)) {
        jboolean compressedOops = NO;
        jint objectAlignment = 8;
        jboolean isHotspot = NO;
        @try {
          IOSClass *beanClazz = IOSClass_forName_(OrgApacheLuceneUtilRamUsageEstimator_HOTSPOT_BEAN_CLASS_);
          id hotSpotBean = [((JavaLangReflectMethod *) nil_chk([((IOSClass *) nil_chk(IOSClass_forName_(OrgApacheLuceneUtilRamUsageEstimator_MANAGEMENT_FACTORY_CLASS_))) getMethod:@"getPlatformMXBean" parameterTypes:[IOSObjectArray arrayWithObjects:(id[]){ IOSClass_class_() } count:1 type:IOSClass_class_()]])) invokeWithId:nil withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ beanClazz } count:1 type:NSObject_class_()]];
          if (hotSpotBean != nil) {
            isHotspot = YES;
            JavaLangReflectMethod *getVMOptionMethod = [((IOSClass *) nil_chk(beanClazz)) getMethod:@"getVMOption" parameterTypes:[IOSObjectArray arrayWithObjects:(id[]){ NSString_class_() } count:1 type:IOSClass_class_()]];
            @try {
              id vmOption = [((JavaLangReflectMethod *) nil_chk(getVMOptionMethod)) invokeWithId:hotSpotBean withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ @"UseCompressedOops" } count:1 type:NSObject_class_()]];
              compressedOops = JavaLangBoolean_parseBooleanWithNSString_([nil_chk([((JavaLangReflectMethod *) nil_chk([[nil_chk(vmOption) getClass] getMethod:@"getValue" parameterTypes:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]])) invokeWithId:vmOption withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]]) description]);
            }
            @catch (JavaLangException *e) {
              isHotspot = NO;
            }
            @try {
              id vmOption = [((JavaLangReflectMethod *) nil_chk(getVMOptionMethod)) invokeWithId:hotSpotBean withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ @"ObjectAlignmentInBytes" } count:1 type:NSObject_class_()]];
              objectAlignment = JavaLangInteger_parseIntWithNSString_([nil_chk([((JavaLangReflectMethod *) nil_chk([[nil_chk(vmOption) getClass] getMethod:@"getValue" parameterTypes:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]])) invokeWithId:vmOption withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]]) description]);
            }
            @catch (JavaLangException *e) {
              isHotspot = NO;
            }
          }
        }
        @catch (JavaLangException *e) {
          isHotspot = NO;
        }
        OrgApacheLuceneUtilRamUsageEstimator_JVM_IS_HOTSPOT_64BIT_ = isHotspot;
        OrgApacheLuceneUtilRamUsageEstimator_COMPRESSED_REFS_ENABLED_ = compressedOops;
        OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_ALIGNMENT_ = objectAlignment;
        OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_REF_ = OrgApacheLuceneUtilRamUsageEstimator_COMPRESSED_REFS_ENABLED_ ? 4 : 8;
        OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_HEADER_ = 8 + OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_REF_;
        OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ = (jint) OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_(OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_HEADER_ + OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT);
      }
      else {
        OrgApacheLuceneUtilRamUsageEstimator_JVM_IS_HOTSPOT_64BIT_ = NO;
        OrgApacheLuceneUtilRamUsageEstimator_COMPRESSED_REFS_ENABLED_ = NO;
        OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_ALIGNMENT_ = 8;
        OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_REF_ = 4;
        OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_HEADER_ = 8;
        OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_HEADER_ + OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT;
      }
      jlong longCacheMinValue = 0;
      while (longCacheMinValue > JavaLangLong_MIN_VALUE && JavaLangLong_valueOfWithLong_(longCacheMinValue - 1) == JavaLangLong_valueOfWithLong_(longCacheMinValue - 1)) {
        longCacheMinValue -= 1;
      }
      jlong longCacheMaxValue = -1;
      while (longCacheMaxValue < JavaLangLong_MAX_VALUE && JavaLangLong_valueOfWithLong_(longCacheMaxValue + 1) == JavaLangLong_valueOfWithLong_(longCacheMaxValue + 1)) {
        longCacheMaxValue += 1;
      }
      OrgApacheLuceneUtilRamUsageEstimator_LONG_CACHE_MIN_VALUE_ = longCacheMinValue;
      OrgApacheLuceneUtilRamUsageEstimator_LONG_CACHE_MAX_VALUE_ = longCacheMaxValue;
      OrgApacheLuceneUtilRamUsageEstimator_LONG_SIZE_ = (jint) OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(JavaLangLong_class_());
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilRamUsageEstimator)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "RamUsageEstimator", NULL, 0x2, NULL, NULL },
    { "alignObjectSizeWithLong:", "alignObjectSize", "J", 0x9, NULL, NULL },
    { "sizeOfWithJavaLangLong:", "sizeOf", "J", 0x9, NULL, NULL },
    { "sizeOfWithByteArray:", "sizeOf", "J", 0x9, NULL, NULL },
    { "sizeOfWithBooleanArray:", "sizeOf", "J", 0x9, NULL, NULL },
    { "sizeOfWithCharArray:", "sizeOf", "J", 0x9, NULL, NULL },
    { "sizeOfWithShortArray:", "sizeOf", "J", 0x9, NULL, NULL },
    { "sizeOfWithIntArray:", "sizeOf", "J", 0x9, NULL, NULL },
    { "sizeOfWithFloatArray:", "sizeOf", "J", 0x9, NULL, NULL },
    { "sizeOfWithLongArray:", "sizeOf", "J", 0x9, NULL, NULL },
    { "sizeOfWithDoubleArray:", "sizeOf", "J", 0x9, NULL, NULL },
    { "shallowSizeOfWithNSObjectArray:", "shallowSizeOf", "J", 0x9, NULL, NULL },
    { "shallowSizeOfWithId:", "shallowSizeOf", "J", 0x9, NULL, NULL },
    { "shallowSizeOfInstanceWithIOSClass:", "shallowSizeOfInstance", "J", 0x9, NULL, NULL },
    { "shallowSizeOfArrayWithId:", "shallowSizeOfArray", "J", 0xa, NULL, NULL },
    { "adjustForFieldWithLong:withJavaLangReflectField:", "adjustForField", "J", 0x8, NULL, NULL },
    { "humanReadableUnitsWithLong:", "humanReadableUnits", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "humanReadableUnitsWithLong:withJavaTextDecimalFormat:", "humanReadableUnits", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "sizeOfWithOrgApacheLuceneUtilAccountableArray:", "sizeOf", "J", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ONE_KB", "ONE_KB", 0x19, "J", NULL, NULL, .constantValue.asLong = OrgApacheLuceneUtilRamUsageEstimator_ONE_KB },
    { "ONE_MB", "ONE_MB", 0x19, "J", NULL, NULL, .constantValue.asLong = OrgApacheLuceneUtilRamUsageEstimator_ONE_MB },
    { "ONE_GB", "ONE_GB", 0x19, "J", NULL, NULL, .constantValue.asLong = OrgApacheLuceneUtilRamUsageEstimator_ONE_GB },
    { "NUM_BYTES_BOOLEAN", "NUM_BYTES_BOOLEAN", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_BOOLEAN },
    { "NUM_BYTES_BYTE", "NUM_BYTES_BYTE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_BYTE },
    { "NUM_BYTES_CHAR", "NUM_BYTES_CHAR", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_CHAR },
    { "NUM_BYTES_SHORT", "NUM_BYTES_SHORT", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_SHORT },
    { "NUM_BYTES_INT", "NUM_BYTES_INT", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT },
    { "NUM_BYTES_FLOAT", "NUM_BYTES_FLOAT", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_FLOAT },
    { "NUM_BYTES_LONG", "NUM_BYTES_LONG", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_LONG },
    { "NUM_BYTES_DOUBLE", "NUM_BYTES_DOUBLE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_DOUBLE },
    { "COMPRESSED_REFS_ENABLED_", NULL, 0x19, "Z", &OrgApacheLuceneUtilRamUsageEstimator_COMPRESSED_REFS_ENABLED_, NULL, .constantValue.asLong = 0 },
    { "NUM_BYTES_OBJECT_REF_", NULL, 0x19, "I", &OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_REF_, NULL, .constantValue.asLong = 0 },
    { "NUM_BYTES_OBJECT_HEADER_", NULL, 0x19, "I", &OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_HEADER_, NULL, .constantValue.asLong = 0 },
    { "NUM_BYTES_ARRAY_HEADER_", NULL, 0x19, "I", &OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_, NULL, .constantValue.asLong = 0 },
    { "NUM_BYTES_OBJECT_ALIGNMENT_", NULL, 0x19, "I", &OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_ALIGNMENT_, NULL, .constantValue.asLong = 0 },
    { "primitiveSizes_", NULL, 0x1a, "Ljava.util.Map;", &OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_, "Ljava/util/Map<Ljava/lang/Class<*>;Ljava/lang/Integer;>;", .constantValue.asLong = 0 },
    { "LONG_CACHE_MIN_VALUE_", NULL, 0x18, "J", &OrgApacheLuceneUtilRamUsageEstimator_LONG_CACHE_MIN_VALUE_, NULL, .constantValue.asLong = 0 },
    { "LONG_CACHE_MAX_VALUE_", NULL, 0x18, "J", &OrgApacheLuceneUtilRamUsageEstimator_LONG_CACHE_MAX_VALUE_, NULL, .constantValue.asLong = 0 },
    { "LONG_SIZE_", NULL, 0x18, "I", &OrgApacheLuceneUtilRamUsageEstimator_LONG_SIZE_, NULL, .constantValue.asLong = 0 },
    { "JVM_IS_HOTSPOT_64BIT_", NULL, 0x18, "Z", &OrgApacheLuceneUtilRamUsageEstimator_JVM_IS_HOTSPOT_64BIT_, NULL, .constantValue.asLong = 0 },
    { "MANAGEMENT_FACTORY_CLASS_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneUtilRamUsageEstimator_MANAGEMENT_FACTORY_CLASS_, NULL, .constantValue.asLong = 0 },
    { "HOTSPOT_BEAN_CLASS_", NULL, 0x18, "Ljava.lang.String;", &OrgApacheLuceneUtilRamUsageEstimator_HOTSPOT_BEAN_CLASS_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilRamUsageEstimator = { 2, "RamUsageEstimator", "org.apache.lucene.util", NULL, 0x11, 19, methods, 23, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilRamUsageEstimator;
}

@end

void OrgApacheLuceneUtilRamUsageEstimator_init(OrgApacheLuceneUtilRamUsageEstimator *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilRamUsageEstimator *new_OrgApacheLuceneUtilRamUsageEstimator_init() {
  OrgApacheLuceneUtilRamUsageEstimator *self = [OrgApacheLuceneUtilRamUsageEstimator alloc];
  OrgApacheLuceneUtilRamUsageEstimator_init(self);
  return self;
}

jlong OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_(jlong size) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  size += (jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_ALIGNMENT_ - 1LL;
  return size - (size % OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_ALIGNMENT_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithJavaLangLong_(JavaLangLong *value) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  if ([((JavaLangLong *) nil_chk(value)) longLongValue] >= OrgApacheLuceneUtilRamUsageEstimator_LONG_CACHE_MIN_VALUE_ && [value longLongValue] <= OrgApacheLuceneUtilRamUsageEstimator_LONG_CACHE_MAX_VALUE_) {
    return 0;
  }
  return OrgApacheLuceneUtilRamUsageEstimator_LONG_SIZE_;
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithByteArray_(IOSByteArray *arr) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_((jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ + ((IOSByteArray *) nil_chk(arr))->size_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithBooleanArray_(IOSBooleanArray *arr) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_((jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ + ((IOSBooleanArray *) nil_chk(arr))->size_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithCharArray_(IOSCharArray *arr) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_((jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ + (jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_CHAR * ((IOSCharArray *) nil_chk(arr))->size_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithShortArray_(IOSShortArray *arr) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_((jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ + (jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_SHORT * ((IOSShortArray *) nil_chk(arr))->size_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(IOSIntArray *arr) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_((jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ + (jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT * ((IOSIntArray *) nil_chk(arr))->size_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithFloatArray_(IOSFloatArray *arr) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_((jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ + (jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_FLOAT * ((IOSFloatArray *) nil_chk(arr))->size_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithLongArray_(IOSLongArray *arr) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_((jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ + (jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_LONG * ((IOSLongArray *) nil_chk(arr))->size_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithDoubleArray_(IOSDoubleArray *arr) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_((jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ + (jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_DOUBLE * ((IOSDoubleArray *) nil_chk(arr))->size_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(IOSObjectArray *arr) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_((jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_ + (jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_REF_ * ((IOSObjectArray *) nil_chk(arr))->size_);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithId_(id obj) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  if (obj == nil) return 0;
  IOSClass *clz = [nil_chk(obj) getClass];
  if ([clz isArray]) {
    return OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfArrayWithId_(obj);
  }
  else {
    return OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(clz);
  }
}

jlong OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(IOSClass *clazz) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  if ([((IOSClass *) nil_chk(clazz)) isArray]) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"This method does not work with array classes.") autorelease];
  if ([clazz isPrimitive]) return [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_)) getWithId:clazz])) intValue];
  jlong size = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_HEADER_;
  for (; clazz != nil; clazz = [clazz getSuperclass]) {
    IOSObjectArray *fields = [clazz getDeclaredFields];
    {
      IOSObjectArray *a__ = fields;
      JavaLangReflectField * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaLangReflectField * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangReflectField *f = *b__++;
        if (!JavaLangReflectModifier_isStaticWithInt_([((JavaLangReflectField *) nil_chk(f)) getModifiers])) {
          size = OrgApacheLuceneUtilRamUsageEstimator_adjustForFieldWithLong_withJavaLangReflectField_(size, f);
        }
      }
    }
  }
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_(size);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfArrayWithId_(id array) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  jlong size = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_ARRAY_HEADER_;
  jint len = JavaLangReflectArray_getLengthWithId_(array);
  if (len > 0) {
    IOSClass *arrayElementClazz = [[nil_chk(array) getClass] getComponentType];
    if ([((IOSClass *) nil_chk(arrayElementClazz)) isPrimitive]) {
      size += (jlong) len * [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_)) getWithId:arrayElementClazz])) intValue];
    }
    else {
      size += (jlong) OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_REF_ * len;
    }
  }
  return OrgApacheLuceneUtilRamUsageEstimator_alignObjectSizeWithLong_(size);
}

jlong OrgApacheLuceneUtilRamUsageEstimator_adjustForFieldWithLong_withJavaLangReflectField_(jlong sizeSoFar, JavaLangReflectField *f) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  IOSClass *type = [((JavaLangReflectField *) nil_chk(f)) getType];
  jint fsize = [((IOSClass *) nil_chk(type)) isPrimitive] ? [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(OrgApacheLuceneUtilRamUsageEstimator_primitiveSizes_)) getWithId:type])) intValue] : OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_OBJECT_REF_;
  return sizeSoFar + fsize;
}

NSString *OrgApacheLuceneUtilRamUsageEstimator_humanReadableUnitsWithLong_(jlong bytes) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  return OrgApacheLuceneUtilRamUsageEstimator_humanReadableUnitsWithLong_withJavaTextDecimalFormat_(bytes, [new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_(@"0.#", JavaTextDecimalFormatSymbols_getInstanceWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, ROOT_))) autorelease]);
}

NSString *OrgApacheLuceneUtilRamUsageEstimator_humanReadableUnitsWithLong_withJavaTextDecimalFormat_(jlong bytes, JavaTextDecimalFormat *df) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  if (bytes / OrgApacheLuceneUtilRamUsageEstimator_ONE_GB > 0) {
    return JreStrcat("$$", [((JavaTextDecimalFormat *) nil_chk(df)) formatWithDouble:(jfloat) bytes / OrgApacheLuceneUtilRamUsageEstimator_ONE_GB], @" GB");
  }
  else if (bytes / OrgApacheLuceneUtilRamUsageEstimator_ONE_MB > 0) {
    return JreStrcat("$$", [((JavaTextDecimalFormat *) nil_chk(df)) formatWithDouble:(jfloat) bytes / OrgApacheLuceneUtilRamUsageEstimator_ONE_MB], @" MB");
  }
  else if (bytes / OrgApacheLuceneUtilRamUsageEstimator_ONE_KB > 0) {
    return JreStrcat("$$", [((JavaTextDecimalFormat *) nil_chk(df)) formatWithDouble:(jfloat) bytes / OrgApacheLuceneUtilRamUsageEstimator_ONE_KB], @" KB");
  }
  else {
    return JreStrcat("J$", bytes, @" bytes");
  }
}

jlong OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithOrgApacheLuceneUtilAccountableArray_(IOSObjectArray *accountables) {
  OrgApacheLuceneUtilRamUsageEstimator_initialize();
  jlong size = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithNSObjectArray_(accountables);
  {
    IOSObjectArray *a__ = accountables;
    id<OrgApacheLuceneUtilAccountable> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<OrgApacheLuceneUtilAccountable> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<OrgApacheLuceneUtilAccountable> accountable = *b__++;
      if (accountable != nil) {
        size += [accountable ramBytesUsed];
      }
    }
  }
  return size;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilRamUsageEstimator)
