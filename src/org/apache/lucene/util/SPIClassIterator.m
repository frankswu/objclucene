//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/SPIClassIterator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Thread.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/ServiceConfigurationError.h"
#include "java/util/Set.h"
#include "org/apache/lucene/util/SPIClassIterator.h"

@interface OrgApacheLuceneUtilSPIClassIterator () {
 @public
  IOSClass *clazz_;
  JavaLangClassLoader *loader_;
  jboolean loaded_;
  id<JavaUtilIterator> linesIterator_;
}

- (instancetype)initWithIOSClass:(IOSClass *)clazz
         withJavaLangClassLoader:(JavaLangClassLoader *)loader;

- (jboolean)loadNextProfile;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilSPIClassIterator, clazz_, IOSClass *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilSPIClassIterator, loader_, JavaLangClassLoader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilSPIClassIterator, linesIterator_, id<JavaUtilIterator>)

inline id<JavaUtilMap> OrgApacheLuceneUtilSPIClassIterator_get_hardCodedServices();
static id<JavaUtilMap> OrgApacheLuceneUtilSPIClassIterator_hardCodedServices;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilSPIClassIterator, hardCodedServices, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneUtilSPIClassIterator_initWithIOSClass_withJavaLangClassLoader_(OrgApacheLuceneUtilSPIClassIterator *self, IOSClass *clazz, JavaLangClassLoader *loader);

__attribute__((unused)) static OrgApacheLuceneUtilSPIClassIterator *new_OrgApacheLuceneUtilSPIClassIterator_initWithIOSClass_withJavaLangClassLoader_(IOSClass *clazz, JavaLangClassLoader *loader) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilSPIClassIterator *create_OrgApacheLuceneUtilSPIClassIterator_initWithIOSClass_withJavaLangClassLoader_(IOSClass *clazz, JavaLangClassLoader *loader);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilSPIClassIterator_loadNextProfile(OrgApacheLuceneUtilSPIClassIterator *self);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilSPIClassIterator)

@implementation OrgApacheLuceneUtilSPIClassIterator

+ (OrgApacheLuceneUtilSPIClassIterator *)getWithIOSClass:(IOSClass *)clazz {
  return OrgApacheLuceneUtilSPIClassIterator_getWithIOSClass_(clazz);
}

+ (OrgApacheLuceneUtilSPIClassIterator *)getWithIOSClass:(IOSClass *)clazz
                                 withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return OrgApacheLuceneUtilSPIClassIterator_getWithIOSClass_withJavaLangClassLoader_(clazz, loader);
}

+ (jboolean)isParentClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *)parent
                               withJavaLangClassLoader:(JavaLangClassLoader *)child {
  return OrgApacheLuceneUtilSPIClassIterator_isParentClassLoaderWithJavaLangClassLoader_withJavaLangClassLoader_(parent, child);
}

- (instancetype)initWithIOSClass:(IOSClass *)clazz
         withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  OrgApacheLuceneUtilSPIClassIterator_initWithIOSClass_withJavaLangClassLoader_(self, clazz, loader);
  return self;
}

- (jboolean)loadNextProfile {
  return OrgApacheLuceneUtilSPIClassIterator_loadNextProfile(self);
}

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(linesIterator_)) hasNext] || OrgApacheLuceneUtilSPIClassIterator_loadNextProfile(self);
}

- (IOSClass *)next {
  if (![self hasNext]) {
    @throw create_JavaUtilNoSuchElementException_init();
  }
  JreAssert(([((id<JavaUtilIterator>) nil_chk(linesIterator_)) hasNext]), (@"org/apache/lucene/util/SPIClassIterator.java:259 condition failed: assert linesIterator.hasNext();"));
  NSString *c = [((id<JavaUtilIterator>) nil_chk(linesIterator_)) next];
  @try {
    return [((IOSClass *) nil_chk(IOSClass_forName_initialize_classLoader_(c, false, loader_))) asSubclass:clazz_];
  }
  @catch (JavaLangClassNotFoundException *cnfe) {
    @throw create_JavaUtilServiceConfigurationError_initWithNSString_(NSString_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT), @"An SPI class of type %s with classname %s does not exist.", [IOSObjectArray arrayWithObjects:(id[]){ [((IOSClass *) nil_chk(clazz_)) getName], c } count:2 type:NSObject_class_()]));
  }
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)dealloc {
  RELEASE_(clazz_);
  RELEASE_(loader_);
  RELEASE_(linesIterator_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilSPIClassIterator class]) {
    {
      JreStrongAssignAndConsume(&OrgApacheLuceneUtilSPIClassIterator_hardCodedServices, new_JavaUtilHashMap_init());
      id<JavaUtilList> list;
      list = create_JavaUtilArrayList_init();
      [OrgApacheLuceneUtilSPIClassIterator_hardCodedServices putWithId:@"org.apache.lucene.codecs.Codec" withId:list];
      [list addWithId:@"org.apache.lucene.codecs.lucene53.Lucene53Codec"];
      list = create_JavaUtilArrayList_init();
      [OrgApacheLuceneUtilSPIClassIterator_hardCodedServices putWithId:@"org.apache.lucene.codecs.DocValuesFormat" withId:list];
      [list addWithId:@"org.apache.lucene.codecs.lucene50.Lucene50DocValuesFormat"];
      list = create_JavaUtilArrayList_init();
      [OrgApacheLuceneUtilSPIClassIterator_hardCodedServices putWithId:@"org.apache.lucene.codecs.PostingsFormat" withId:list];
      [list addWithId:@"org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat"];
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilSPIClassIterator)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWithIOSClass:", "get", "Lorg.apache.lucene.util.SPIClassIterator;", 0x9, NULL, "<S:Ljava/lang/Object;>(Ljava/lang/Class<TS;>;)Lorg/apache/lucene/util/SPIClassIterator<TS;>;" },
    { "getWithIOSClass:withJavaLangClassLoader:", "get", "Lorg.apache.lucene.util.SPIClassIterator;", 0x9, NULL, "<S:Ljava/lang/Object;>(Ljava/lang/Class<TS;>;Ljava/lang/ClassLoader;)Lorg/apache/lucene/util/SPIClassIterator<TS;>;" },
    { "isParentClassLoaderWithJavaLangClassLoader:withJavaLangClassLoader:", "isParentClassLoader", "Z", 0x9, NULL, NULL },
    { "initWithIOSClass:withJavaLangClassLoader:", "SPIClassIterator", NULL, 0x2, NULL, "(Ljava/lang/Class<TS;>;Ljava/lang/ClassLoader;)V" },
    { "loadNextProfile", NULL, "Z", 0x2, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<+TS;>;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "hardCodedServices", "hardCodedServices", 0x1a, "Ljava.util.Map;", &OrgApacheLuceneUtilSPIClassIterator_hardCodedServices, "Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;", .constantValue.asLong = 0 },
    { "clazz_", NULL, 0x12, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<TS;>;", .constantValue.asLong = 0 },
    { "loader_", NULL, 0x12, "Ljava.lang.ClassLoader;", NULL, NULL, .constantValue.asLong = 0 },
    { "loaded_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "linesIterator_", NULL, 0x2, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilSPIClassIterator = { 2, "SPIClassIterator", "org.apache.lucene.util", NULL, 0x11, 8, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<S:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Class<+TS;>;>;" };
  return &_OrgApacheLuceneUtilSPIClassIterator;
}

@end

OrgApacheLuceneUtilSPIClassIterator *OrgApacheLuceneUtilSPIClassIterator_getWithIOSClass_(IOSClass *clazz) {
  OrgApacheLuceneUtilSPIClassIterator_initialize();
  return create_OrgApacheLuceneUtilSPIClassIterator_initWithIOSClass_withJavaLangClassLoader_(clazz, [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getContextClassLoader]);
}

OrgApacheLuceneUtilSPIClassIterator *OrgApacheLuceneUtilSPIClassIterator_getWithIOSClass_withJavaLangClassLoader_(IOSClass *clazz, JavaLangClassLoader *loader) {
  OrgApacheLuceneUtilSPIClassIterator_initialize();
  return create_OrgApacheLuceneUtilSPIClassIterator_initWithIOSClass_withJavaLangClassLoader_(clazz, loader);
}

jboolean OrgApacheLuceneUtilSPIClassIterator_isParentClassLoaderWithJavaLangClassLoader_withJavaLangClassLoader_(JavaLangClassLoader *parent, JavaLangClassLoader *child) {
  OrgApacheLuceneUtilSPIClassIterator_initialize();
  while (child != nil) {
    if (child == parent) {
      return true;
    }
    child = [child getParent];
  }
  return false;
}

void OrgApacheLuceneUtilSPIClassIterator_initWithIOSClass_withJavaLangClassLoader_(OrgApacheLuceneUtilSPIClassIterator *self, IOSClass *clazz, JavaLangClassLoader *loader) {
  NSObject_init(self);
  JreStrongAssign(&self->clazz_, clazz);
  id<JavaUtilList> classList = [((id<JavaUtilMap>) nil_chk(OrgApacheLuceneUtilSPIClassIterator_hardCodedServices)) getWithId:[((IOSClass *) nil_chk(clazz)) getName]];
  if (classList == nil || [classList isEmpty]) {
    @throw create_JavaUtilServiceConfigurationError_initWithNSString_(JreStrcat("$$$", @"Error loading SPI profiles for type ", [clazz getName], @" from hard-coded services"));
  }
  JreStrongAssign(&self->loader_, (loader == nil) ? JavaLangClassLoader_getSystemClassLoader() : loader);
  JreStrongAssign(&self->linesIterator_, [((id<JavaUtilSet>) nil_chk(JavaUtilCollections_emptySet())) iterator]);
  self->loaded_ = false;
}

OrgApacheLuceneUtilSPIClassIterator *new_OrgApacheLuceneUtilSPIClassIterator_initWithIOSClass_withJavaLangClassLoader_(IOSClass *clazz, JavaLangClassLoader *loader) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilSPIClassIterator, initWithIOSClass_withJavaLangClassLoader_, clazz, loader)
}

OrgApacheLuceneUtilSPIClassIterator *create_OrgApacheLuceneUtilSPIClassIterator_initWithIOSClass_withJavaLangClassLoader_(IOSClass *clazz, JavaLangClassLoader *loader) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilSPIClassIterator, initWithIOSClass_withJavaLangClassLoader_, clazz, loader)
}

jboolean OrgApacheLuceneUtilSPIClassIterator_loadNextProfile(OrgApacheLuceneUtilSPIClassIterator *self) {
  if (self->loaded_) {
    return false;
  }
  self->loaded_ = true;
  JreStrongAssign(&self->linesIterator_, [((id<JavaUtilList>) nil_chk([((id<JavaUtilMap>) nil_chk(OrgApacheLuceneUtilSPIClassIterator_hardCodedServices)) getWithId:[((IOSClass *) nil_chk(self->clazz_)) getName]])) iterator]);
  return true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilSPIClassIterator)
