//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/LSBRadixSorter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/LSBRadixSorter.h"

#define OrgApacheLuceneUtilLSBRadixSorter_INSERTION_SORT_THRESHOLD 30
#define OrgApacheLuceneUtilLSBRadixSorter_HISTOGRAM_SIZE 256

@interface OrgApacheLuceneUtilLSBRadixSorter () {
 @public
  IOSIntArray *histogram_;
  IOSIntArray *buffer_;
}

+ (void)buildHistogramWithIntArray:(IOSIntArray *)array
                           withInt:(jint)off
                           withInt:(jint)len
                      withIntArray:(IOSIntArray *)histogram
                           withInt:(jint)shift;

+ (void)sumHistogramWithIntArray:(IOSIntArray *)histogram;

+ (void)reorderWithIntArray:(IOSIntArray *)array
                    withInt:(jint)off
                    withInt:(jint)len
               withIntArray:(IOSIntArray *)histogram
                    withInt:(jint)shift
               withIntArray:(IOSIntArray *)dest
                    withInt:(jint)destOff;

+ (jboolean)sortWithIntArray:(IOSIntArray *)array
                     withInt:(jint)off
                     withInt:(jint)len
                withIntArray:(IOSIntArray *)histogram
                     withInt:(jint)shift
                withIntArray:(IOSIntArray *)dest
                     withInt:(jint)destOff;

+ (void)insertionSortWithIntArray:(IOSIntArray *)array
                          withInt:(jint)off
                          withInt:(jint)len;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilLSBRadixSorter, histogram_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilLSBRadixSorter, buffer_, IOSIntArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilLSBRadixSorter, INSERTION_SORT_THRESHOLD, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilLSBRadixSorter, HISTOGRAM_SIZE, jint)

__attribute__((unused)) static void OrgApacheLuceneUtilLSBRadixSorter_buildHistogramWithIntArray_withInt_withInt_withIntArray_withInt_(IOSIntArray *array, jint off, jint len, IOSIntArray *histogram, jint shift);

__attribute__((unused)) static void OrgApacheLuceneUtilLSBRadixSorter_sumHistogramWithIntArray_(IOSIntArray *histogram);

__attribute__((unused)) static void OrgApacheLuceneUtilLSBRadixSorter_reorderWithIntArray_withInt_withInt_withIntArray_withInt_withIntArray_withInt_(IOSIntArray *array, jint off, jint len, IOSIntArray *histogram, jint shift, IOSIntArray *dest, jint destOff);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilLSBRadixSorter_sortWithIntArray_withInt_withInt_withIntArray_withInt_withIntArray_withInt_(IOSIntArray *array, jint off, jint len, IOSIntArray *histogram, jint shift, IOSIntArray *dest, jint destOff);

__attribute__((unused)) static void OrgApacheLuceneUtilLSBRadixSorter_insertionSortWithIntArray_withInt_withInt_(IOSIntArray *array, jint off, jint len);

@implementation OrgApacheLuceneUtilLSBRadixSorter

+ (void)buildHistogramWithIntArray:(IOSIntArray *)array
                           withInt:(jint)off
                           withInt:(jint)len
                      withIntArray:(IOSIntArray *)histogram
                           withInt:(jint)shift {
  OrgApacheLuceneUtilLSBRadixSorter_buildHistogramWithIntArray_withInt_withInt_withIntArray_withInt_(array, off, len, histogram, shift);
}

+ (void)sumHistogramWithIntArray:(IOSIntArray *)histogram {
  OrgApacheLuceneUtilLSBRadixSorter_sumHistogramWithIntArray_(histogram);
}

+ (void)reorderWithIntArray:(IOSIntArray *)array
                    withInt:(jint)off
                    withInt:(jint)len
               withIntArray:(IOSIntArray *)histogram
                    withInt:(jint)shift
               withIntArray:(IOSIntArray *)dest
                    withInt:(jint)destOff {
  OrgApacheLuceneUtilLSBRadixSorter_reorderWithIntArray_withInt_withInt_withIntArray_withInt_withIntArray_withInt_(array, off, len, histogram, shift, dest, destOff);
}

+ (jboolean)sortWithIntArray:(IOSIntArray *)array
                     withInt:(jint)off
                     withInt:(jint)len
                withIntArray:(IOSIntArray *)histogram
                     withInt:(jint)shift
                withIntArray:(IOSIntArray *)dest
                     withInt:(jint)destOff {
  return OrgApacheLuceneUtilLSBRadixSorter_sortWithIntArray_withInt_withInt_withIntArray_withInt_withIntArray_withInt_(array, off, len, histogram, shift, dest, destOff);
}

+ (void)insertionSortWithIntArray:(IOSIntArray *)array
                          withInt:(jint)off
                          withInt:(jint)len {
  OrgApacheLuceneUtilLSBRadixSorter_insertionSortWithIntArray_withInt_withInt_(array, off, len);
}

- (void)sortWithIntArray:(IOSIntArray *)array
                 withInt:(jint)off
                 withInt:(jint)len {
  if (len < OrgApacheLuceneUtilLSBRadixSorter_INSERTION_SORT_THRESHOLD) {
    OrgApacheLuceneUtilLSBRadixSorter_insertionSortWithIntArray_withInt_withInt_(array, off, len);
    return;
  }
  JreStrongAssign(&buffer_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(buffer_, len));
  IOSIntArray *arr = array;
  jint arrOff = off;
  IOSIntArray *buf = buffer_;
  jint bufOff = 0;
  for (jint shift = 0; shift <= 24; shift += 8) {
    if (OrgApacheLuceneUtilLSBRadixSorter_sortWithIntArray_withInt_withInt_withIntArray_withInt_withIntArray_withInt_(arr, arrOff, len, histogram_, shift, buf, bufOff)) {
      IOSIntArray *tmp = arr;
      jint tmpOff = arrOff;
      arr = buf;
      arrOff = bufOff;
      buf = tmp;
      bufOff = tmpOff;
    }
  }
  if (array == buf) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(arr, arrOff, array, off, len);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilLSBRadixSorter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(histogram_);
  RELEASE_(buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "buildHistogramWithIntArray:withInt:withInt:withIntArray:withInt:", "buildHistogram", "V", 0xa, NULL, NULL },
    { "sumHistogramWithIntArray:", "sumHistogram", "V", 0xa, NULL, NULL },
    { "reorderWithIntArray:withInt:withInt:withIntArray:withInt:withIntArray:withInt:", "reorder", "V", 0xa, NULL, NULL },
    { "sortWithIntArray:withInt:withInt:withIntArray:withInt:withIntArray:withInt:", "sort", "Z", 0xa, NULL, NULL },
    { "insertionSortWithIntArray:withInt:withInt:", "insertionSort", "V", 0xa, NULL, NULL },
    { "sortWithIntArray:withInt:withInt:", "sort", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSERTION_SORT_THRESHOLD", "INSERTION_SORT_THRESHOLD", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilLSBRadixSorter_INSERTION_SORT_THRESHOLD },
    { "HISTOGRAM_SIZE", "HISTOGRAM_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilLSBRadixSorter_HISTOGRAM_SIZE },
    { "histogram_", NULL, 0x12, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "buffer_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilLSBRadixSorter = { 2, "LSBRadixSorter", "org.apache.lucene.util", NULL, 0x10, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilLSBRadixSorter;
}

@end

void OrgApacheLuceneUtilLSBRadixSorter_buildHistogramWithIntArray_withInt_withInt_withIntArray_withInt_(IOSIntArray *array, jint off, jint len, IOSIntArray *histogram, jint shift) {
  OrgApacheLuceneUtilLSBRadixSorter_initialize();
  for (jint i = 0; i < len; ++i) {
    jint b = (JreURShift32(IOSIntArray_Get(nil_chk(array), off + i), shift)) & (jint) 0xFF;
    *IOSIntArray_GetRef(nil_chk(histogram), b) += 1;
  }
}

void OrgApacheLuceneUtilLSBRadixSorter_sumHistogramWithIntArray_(IOSIntArray *histogram) {
  OrgApacheLuceneUtilLSBRadixSorter_initialize();
  jint accum = 0;
  for (jint i = 0; i < OrgApacheLuceneUtilLSBRadixSorter_HISTOGRAM_SIZE; ++i) {
    jint count = IOSIntArray_Get(nil_chk(histogram), i);
    *IOSIntArray_GetRef(histogram, i) = accum;
    accum += count;
  }
}

void OrgApacheLuceneUtilLSBRadixSorter_reorderWithIntArray_withInt_withInt_withIntArray_withInt_withIntArray_withInt_(IOSIntArray *array, jint off, jint len, IOSIntArray *histogram, jint shift, IOSIntArray *dest, jint destOff) {
  OrgApacheLuceneUtilLSBRadixSorter_initialize();
  for (jint i = 0; i < len; ++i) {
    jint v = IOSIntArray_Get(nil_chk(array), off + i);
    jint b = (JreURShift32(v, shift)) & (jint) 0xFF;
    *IOSIntArray_GetRef(nil_chk(dest), destOff + (*IOSIntArray_GetRef(nil_chk(histogram), b))++) = v;
  }
}

jboolean OrgApacheLuceneUtilLSBRadixSorter_sortWithIntArray_withInt_withInt_withIntArray_withInt_withIntArray_withInt_(IOSIntArray *array, jint off, jint len, IOSIntArray *histogram, jint shift, IOSIntArray *dest, jint destOff) {
  OrgApacheLuceneUtilLSBRadixSorter_initialize();
  JavaUtilArrays_fillWithIntArray_withInt_(histogram, 0);
  OrgApacheLuceneUtilLSBRadixSorter_buildHistogramWithIntArray_withInt_withInt_withIntArray_withInt_(array, off, len, histogram, shift);
  if (IOSIntArray_Get(nil_chk(histogram), 0) == len) {
    return false;
  }
  OrgApacheLuceneUtilLSBRadixSorter_sumHistogramWithIntArray_(histogram);
  OrgApacheLuceneUtilLSBRadixSorter_reorderWithIntArray_withInt_withInt_withIntArray_withInt_withIntArray_withInt_(array, off, len, histogram, shift, dest, destOff);
  return true;
}

void OrgApacheLuceneUtilLSBRadixSorter_insertionSortWithIntArray_withInt_withInt_(IOSIntArray *array, jint off, jint len) {
  OrgApacheLuceneUtilLSBRadixSorter_initialize();
  for (jint i = off + 1, end = off + len; i < end; ++i) {
    for (jint j = i; j > off; --j) {
      if (IOSIntArray_Get(nil_chk(array), j - 1) > IOSIntArray_Get(array, j)) {
        jint tmp = IOSIntArray_Get(array, j - 1);
        *IOSIntArray_GetRef(array, j - 1) = IOSIntArray_Get(array, j);
        *IOSIntArray_GetRef(array, j) = tmp;
      }
      else {
        break;
      }
    }
  }
}

void OrgApacheLuceneUtilLSBRadixSorter_init(OrgApacheLuceneUtilLSBRadixSorter *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->histogram_, [IOSIntArray newArrayWithLength:OrgApacheLuceneUtilLSBRadixSorter_HISTOGRAM_SIZE]);
  JreStrongAssignAndConsume(&self->buffer_, [IOSIntArray newArrayWithLength:0]);
}

OrgApacheLuceneUtilLSBRadixSorter *new_OrgApacheLuceneUtilLSBRadixSorter_init() {
  OrgApacheLuceneUtilLSBRadixSorter *self = [OrgApacheLuceneUtilLSBRadixSorter alloc];
  OrgApacheLuceneUtilLSBRadixSorter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilLSBRadixSorter)
