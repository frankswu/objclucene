//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/mutable/MutableValueDouble.java
//

#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "org/apache/lucene/util/mutable/MutableValue.h"
#include "org/apache/lucene/util/mutable/MutableValueDouble.h"

@implementation OrgApacheLuceneUtilMutableMutableValueDouble

- (id)toObject {
  JreAssert((exists_ || 0.0 == value_), (@"org/apache/lucene/util/mutable/MutableValueDouble.java:30 condition failed: assert exists || 0.0D == value;"));
  return exists_ ? JavaLangDouble_valueOfWithDouble_(value_) : nil;
}

- (void)copy__WithOrgApacheLuceneUtilMutableMutableValue:(OrgApacheLuceneUtilMutableMutableValue *)source {
  OrgApacheLuceneUtilMutableMutableValueDouble *s = (OrgApacheLuceneUtilMutableMutableValueDouble *) check_class_cast(source, [OrgApacheLuceneUtilMutableMutableValueDouble class]);
  value_ = ((OrgApacheLuceneUtilMutableMutableValueDouble *) nil_chk(s))->value_;
  exists_ = s->exists_;
}

- (OrgApacheLuceneUtilMutableMutableValue *)duplicate {
  OrgApacheLuceneUtilMutableMutableValueDouble *v = [new_OrgApacheLuceneUtilMutableMutableValueDouble_init() autorelease];
  v->value_ = self->value_;
  v->exists_ = self->exists_;
  return v;
}

- (jboolean)equalsSameTypeWithId:(id)other {
  JreAssert((exists_ || 0.0 == value_), (@"org/apache/lucene/util/mutable/MutableValueDouble.java:51 condition failed: assert exists || 0.0D == value;"));
  OrgApacheLuceneUtilMutableMutableValueDouble *b = (OrgApacheLuceneUtilMutableMutableValueDouble *) check_class_cast(other, [OrgApacheLuceneUtilMutableMutableValueDouble class]);
  return value_ == ((OrgApacheLuceneUtilMutableMutableValueDouble *) nil_chk(b))->value_ && exists_ == b->exists_;
}

- (jint)compareSameTypeWithId:(id)other {
  JreAssert((exists_ || 0.0 == value_), (@"org/apache/lucene/util/mutable/MutableValueDouble.java:58 condition failed: assert exists || 0.0D == value;"));
  OrgApacheLuceneUtilMutableMutableValueDouble *b = (OrgApacheLuceneUtilMutableMutableValueDouble *) check_class_cast(other, [OrgApacheLuceneUtilMutableMutableValueDouble class]);
  jint c = JavaLangDouble_compareWithDouble_withDouble_(value_, ((OrgApacheLuceneUtilMutableMutableValueDouble *) nil_chk(b))->value_);
  if (c != 0) return c;
  if (exists_ == b->exists_) return 0;
  return exists_ ? 1 : -1;
}

- (NSUInteger)hash {
  JreAssert((exists_ || 0.0 == value_), (@"org/apache/lucene/util/mutable/MutableValueDouble.java:68 condition failed: assert exists || 0.0D == value;"));
  jlong x = JavaLangDouble_doubleToLongBitsWithDouble_(value_);
  return (jint) x + (jint) (JreURShift64(x, 32));
}

- (instancetype)init {
  OrgApacheLuceneUtilMutableMutableValueDouble_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "toObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "copy__WithOrgApacheLuceneUtilMutableMutableValue:", "copy", "V", 0x1, NULL, NULL },
    { "duplicate", NULL, "Lorg.apache.lucene.util.mutable.MutableValue;", 0x1, NULL, NULL },
    { "equalsSameTypeWithId:", "equalsSameType", "Z", 0x1, NULL, NULL },
    { "compareSameTypeWithId:", "compareSameType", "I", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x1, "D", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilMutableMutableValueDouble = { 2, "MutableValueDouble", "org.apache.lucene.util.mutable", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilMutableMutableValueDouble;
}

@end

void OrgApacheLuceneUtilMutableMutableValueDouble_init(OrgApacheLuceneUtilMutableMutableValueDouble *self) {
  OrgApacheLuceneUtilMutableMutableValue_init(self);
  self->value_ = 0.0;
}

OrgApacheLuceneUtilMutableMutableValueDouble *new_OrgApacheLuceneUtilMutableMutableValueDouble_init() {
  OrgApacheLuceneUtilMutableMutableValueDouble *self = [OrgApacheLuceneUtilMutableMutableValueDouble alloc];
  OrgApacheLuceneUtilMutableMutableValueDouble_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilMutableMutableValueDouble)
