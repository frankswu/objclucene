//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/mutable/MutableValueFloat.java
//

#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "org/apache/lucene/util/mutable/MutableValue.h"
#include "org/apache/lucene/util/mutable/MutableValueFloat.h"

@implementation OrgApacheLuceneUtilMutableMutableValueFloat

- (id)toObject {
  JreAssert((exists_ || 0.0f == value_), (@"org/apache/lucene/util/mutable/MutableValueFloat.java:30 condition failed: assert exists || 0.0F == value;"));
  return exists_ ? JavaLangFloat_valueOfWithFloat_(value_) : nil;
}

- (void)copy__WithOrgApacheLuceneUtilMutableMutableValue:(OrgApacheLuceneUtilMutableMutableValue *)source {
  OrgApacheLuceneUtilMutableMutableValueFloat *s = (OrgApacheLuceneUtilMutableMutableValueFloat *) check_class_cast(source, [OrgApacheLuceneUtilMutableMutableValueFloat class]);
  value_ = ((OrgApacheLuceneUtilMutableMutableValueFloat *) nil_chk(s))->value_;
  exists_ = s->exists_;
}

- (OrgApacheLuceneUtilMutableMutableValue *)duplicate {
  OrgApacheLuceneUtilMutableMutableValueFloat *v = [new_OrgApacheLuceneUtilMutableMutableValueFloat_init() autorelease];
  v->value_ = self->value_;
  v->exists_ = self->exists_;
  return v;
}

- (jboolean)equalsSameTypeWithId:(id)other {
  JreAssert((exists_ || 0.0f == value_), (@"org/apache/lucene/util/mutable/MutableValueFloat.java:51 condition failed: assert exists || 0.0F == value;"));
  OrgApacheLuceneUtilMutableMutableValueFloat *b = (OrgApacheLuceneUtilMutableMutableValueFloat *) check_class_cast(other, [OrgApacheLuceneUtilMutableMutableValueFloat class]);
  return value_ == ((OrgApacheLuceneUtilMutableMutableValueFloat *) nil_chk(b))->value_ && exists_ == b->exists_;
}

- (jint)compareSameTypeWithId:(id)other {
  JreAssert((exists_ || 0.0f == value_), (@"org/apache/lucene/util/mutable/MutableValueFloat.java:58 condition failed: assert exists || 0.0F == value;"));
  OrgApacheLuceneUtilMutableMutableValueFloat *b = (OrgApacheLuceneUtilMutableMutableValueFloat *) check_class_cast(other, [OrgApacheLuceneUtilMutableMutableValueFloat class]);
  jint c = JavaLangFloat_compareWithFloat_withFloat_(value_, ((OrgApacheLuceneUtilMutableMutableValueFloat *) nil_chk(b))->value_);
  if (c != 0) return c;
  if (exists_ == b->exists_) return 0;
  return exists_ ? 1 : -1;
}

- (NSUInteger)hash {
  JreAssert((exists_ || 0.0f == value_), (@"org/apache/lucene/util/mutable/MutableValueFloat.java:68 condition failed: assert exists || 0.0F == value;"));
  return JavaLangFloat_floatToIntBitsWithFloat_(value_);
}

- (instancetype)init {
  OrgApacheLuceneUtilMutableMutableValueFloat_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "toObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "copy__WithOrgApacheLuceneUtilMutableMutableValue:", "copy", "V", 0x1, NULL, NULL },
    { "duplicate", NULL, "Lorg.apache.lucene.util.mutable.MutableValue;", 0x1, NULL, NULL },
    { "equalsSameTypeWithId:", "equalsSameType", "Z", 0x1, NULL, NULL },
    { "compareSameTypeWithId:", "compareSameType", "I", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x1, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilMutableMutableValueFloat = { 2, "MutableValueFloat", "org.apache.lucene.util.mutable", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilMutableMutableValueFloat;
}

@end

void OrgApacheLuceneUtilMutableMutableValueFloat_init(OrgApacheLuceneUtilMutableMutableValueFloat *self) {
  OrgApacheLuceneUtilMutableMutableValue_init(self);
}

OrgApacheLuceneUtilMutableMutableValueFloat *new_OrgApacheLuceneUtilMutableMutableValueFloat_init() {
  OrgApacheLuceneUtilMutableMutableValueFloat *self = [OrgApacheLuceneUtilMutableMutableValueFloat alloc];
  OrgApacheLuceneUtilMutableMutableValueFloat_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilMutableMutableValueFloat)
