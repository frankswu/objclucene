//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/automaton/RegExp.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Character.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/apache/lucene/util/automaton/Automata.h"
#include "org/apache/lucene/util/automaton/Automaton.h"
#include "org/apache/lucene/util/automaton/AutomatonProvider.h"
#include "org/apache/lucene/util/automaton/MinimizationOperations.h"
#include "org/apache/lucene/util/automaton/Operations.h"
#include "org/apache/lucene/util/automaton/RegExp.h"
#include "org/apache/lucene/util/automaton/TooComplexToDeterminizeException.h"

@interface OrgApacheLuceneUtilAutomatonRegExp () {
 @public
  NSString *originalString_;
}

- (OrgApacheLuceneUtilAutomatonAutomaton *)toAutomatonWithJavaUtilMap:(id<JavaUtilMap>)automata
                    withOrgApacheLuceneUtilAutomatonAutomatonProvider:(id<OrgApacheLuceneUtilAutomatonAutomatonProvider>)automaton_provider
                                                              withInt:(jint)maxDeterminizedStates;

- (OrgApacheLuceneUtilAutomatonAutomaton *)toAutomatonInternalWithJavaUtilMap:(id<JavaUtilMap>)automata
                            withOrgApacheLuceneUtilAutomatonAutomatonProvider:(id<OrgApacheLuceneUtilAutomatonAutomatonProvider>)automaton_provider
                                                                      withInt:(jint)maxDeterminizedStates;

- (void)findLeavesWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp
         withOrgApacheLuceneUtilAutomatonRegExp_KindEnum:(OrgApacheLuceneUtilAutomatonRegExp_KindEnum *)kind
                                        withJavaUtilList:(id<JavaUtilList>)list
                                         withJavaUtilMap:(id<JavaUtilMap>)automata
       withOrgApacheLuceneUtilAutomatonAutomatonProvider:(id<OrgApacheLuceneUtilAutomatonAutomatonProvider>)automaton_provider
                                                 withInt:(jint)maxDeterminizedStates;

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeStringWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp1
                                                  withOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp2;

- (jboolean)peekWithNSString:(NSString *)s;

- (jboolean)matchWithInt:(jint)c;

- (jboolean)more;

- (jint)next;

- (jboolean)checkWithInt:(jint)flag;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonRegExp, originalString_, NSString *)

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneUtilAutomatonRegExp_toAutomatonWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(OrgApacheLuceneUtilAutomatonRegExp *self, id<JavaUtilMap> automata, id<OrgApacheLuceneUtilAutomatonAutomatonProvider> automaton_provider, jint maxDeterminizedStates);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(OrgApacheLuceneUtilAutomatonRegExp *self, id<JavaUtilMap> automata, id<OrgApacheLuceneUtilAutomatonAutomatonProvider> automaton_provider, jint maxDeterminizedStates);

__attribute__((unused)) static void OrgApacheLuceneUtilAutomatonRegExp_findLeavesWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_KindEnum_withJavaUtilList_withJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(OrgApacheLuceneUtilAutomatonRegExp *self, OrgApacheLuceneUtilAutomatonRegExp *exp, OrgApacheLuceneUtilAutomatonRegExp_KindEnum *kind, id<JavaUtilList> list, id<JavaUtilMap> automata, id<OrgApacheLuceneUtilAutomatonAutomatonProvider> automaton_provider, jint maxDeterminizedStates);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeStringWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp *exp1, OrgApacheLuceneUtilAutomatonRegExp *exp2);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(OrgApacheLuceneUtilAutomatonRegExp *self, NSString *s);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(OrgApacheLuceneUtilAutomatonRegExp *self, jint c);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilAutomatonRegExp_more(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static jint OrgApacheLuceneUtilAutomatonRegExp_next(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static jboolean OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(OrgApacheLuceneUtilAutomatonRegExp *self, jint flag);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseUnionExp(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseInterExp(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseConcatExp(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseRepeatExp(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseComplExp(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseCharClassExp(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseCharClasses(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseCharClass(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseSimpleExp(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static jint OrgApacheLuceneUtilAutomatonRegExp_parseCharExp(OrgApacheLuceneUtilAutomatonRegExp *self);

__attribute__((unused)) static void OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(OrgApacheLuceneUtilAutomatonRegExp_KindEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonRegExp_KindEnum *new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgApacheLuceneUtilAutomatonRegExp

- (instancetype)init {
  OrgApacheLuceneUtilAutomatonRegExp_init(self);
  return self;
}

- (instancetype)initWithNSString:(NSString *)s
                         withInt:(jint)syntax_flags {
  OrgApacheLuceneUtilAutomatonRegExp_initWithNSString_withInt_(self, s, syntax_flags);
  return self;
}

- (OrgApacheLuceneUtilAutomatonAutomaton *)toAutomatonWithOrgApacheLuceneUtilAutomatonAutomatonProvider:(id<OrgApacheLuceneUtilAutomatonAutomatonProvider>)automaton_provider
                                                                                                withInt:(jint)maxDeterminizedStates {
  return OrgApacheLuceneUtilAutomatonRegExp_toAutomatonWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, nil, automaton_provider, maxDeterminizedStates);
}

- (OrgApacheLuceneUtilAutomatonAutomaton *)toAutomatonWithJavaUtilMap:(id<JavaUtilMap>)automata
                    withOrgApacheLuceneUtilAutomatonAutomatonProvider:(id<OrgApacheLuceneUtilAutomatonAutomatonProvider>)automaton_provider
                                                              withInt:(jint)maxDeterminizedStates {
  return OrgApacheLuceneUtilAutomatonRegExp_toAutomatonWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, automata, automaton_provider, maxDeterminizedStates);
}

- (OrgApacheLuceneUtilAutomatonAutomaton *)toAutomatonInternalWithJavaUtilMap:(id<JavaUtilMap>)automata
                            withOrgApacheLuceneUtilAutomatonAutomatonProvider:(id<OrgApacheLuceneUtilAutomatonAutomatonProvider>)automaton_provider
                                                                      withInt:(jint)maxDeterminizedStates {
  return OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, automata, automaton_provider, maxDeterminizedStates);
}

- (void)findLeavesWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp
         withOrgApacheLuceneUtilAutomatonRegExp_KindEnum:(OrgApacheLuceneUtilAutomatonRegExp_KindEnum *)kind
                                        withJavaUtilList:(id<JavaUtilList>)list
                                         withJavaUtilMap:(id<JavaUtilMap>)automata
       withOrgApacheLuceneUtilAutomatonAutomatonProvider:(id<OrgApacheLuceneUtilAutomatonAutomatonProvider>)automaton_provider
                                                 withInt:(jint)maxDeterminizedStates {
  OrgApacheLuceneUtilAutomatonRegExp_findLeavesWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_KindEnum_withJavaUtilList_withJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, exp, kind, list, automata, automaton_provider, maxDeterminizedStates);
}

- (NSString *)getOriginalString {
  return originalString_;
}

- (NSString *)description {
  JavaLangStringBuilder *b = [new_JavaLangStringBuilder_init() autorelease];
  [self toStringBuilderWithJavaLangStringBuilder:b];
  return [b description];
}

- (void)toStringBuilderWithJavaLangStringBuilder:(JavaLangStringBuilder *)b {
  {
    NSString *s1;
    NSString *s2;
    switch ([kind_ ordinal]) {
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_UNION:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"("];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1_)) toStringBuilderWithJavaLangStringBuilder:b];
      [b appendWithNSString:@"|"];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp2_)) toStringBuilderWithJavaLangStringBuilder:b];
      [b appendWithNSString:@")"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_CONCATENATION:
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1_)) toStringBuilderWithJavaLangStringBuilder:b];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp2_)) toStringBuilderWithJavaLangStringBuilder:b];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_INTERSECTION:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"("];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1_)) toStringBuilderWithJavaLangStringBuilder:b];
      [b appendWithNSString:@"&"];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp2_)) toStringBuilderWithJavaLangStringBuilder:b];
      [b appendWithNSString:@")"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_OPTIONAL:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"("];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1_)) toStringBuilderWithJavaLangStringBuilder:b];
      [b appendWithNSString:@")?"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_REPEAT:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"("];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1_)) toStringBuilderWithJavaLangStringBuilder:b];
      [b appendWithNSString:@")*"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_REPEAT_MIN:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"("];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1_)) toStringBuilderWithJavaLangStringBuilder:b];
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([b appendWithNSString:@"){"])) appendWithInt:min_])) appendWithNSString:@",}"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_REPEAT_MINMAX:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"("];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1_)) toStringBuilderWithJavaLangStringBuilder:b];
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([b appendWithNSString:@"){"])) appendWithInt:min_])) appendWithNSString:@","])) appendWithInt:max_])) appendWithNSString:@"}"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_COMPLEMENT:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"~("];
      [((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1_)) toStringBuilderWithJavaLangStringBuilder:b];
      [b appendWithNSString:@")"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_CHAR:
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"\\"])) appendCodePointWithInt:c_];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_CHAR_RANGE:
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"[\\"])) appendCodePointWithInt:from_])) appendWithNSString:@"-\\"])) appendCodePointWithInt:to_])) appendWithNSString:@"]"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_ANYCHAR:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"."];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_EMPTY:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"#"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_STRING:
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"\""])) appendWithNSString:s_])) appendWithNSString:@"\""];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_ANYSTRING:
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"@"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_AUTOMATON:
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"<"])) appendWithNSString:s_])) appendWithNSString:@">"];
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_INTERVAL:
      s1 = JavaLangInteger_toStringWithInt_(min_);
      s2 = JavaLangInteger_toStringWithInt_(max_);
      [((JavaLangStringBuilder *) nil_chk(b)) appendWithNSString:@"<"];
      if (digits_ > 0) for (jint i = ((jint) [((NSString *) nil_chk(s1)) length]); i < digits_; i++) [b appendWithChar:'0'];
      [((JavaLangStringBuilder *) nil_chk([b appendWithNSString:s1])) appendWithNSString:@"-"];
      if (digits_ > 0) for (jint i = ((jint) [((NSString *) nil_chk(s2)) length]); i < digits_; i++) [b appendWithChar:'0'];
      [((JavaLangStringBuilder *) nil_chk([b appendWithNSString:s2])) appendWithNSString:@">"];
      break;
    }
  }
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeUnionWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp1
                                                 withOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp2 {
  return OrgApacheLuceneUtilAutomatonRegExp_makeUnionWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(exp1, exp2);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeConcatenationWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp1
                                                         withOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp2 {
  return OrgApacheLuceneUtilAutomatonRegExp_makeConcatenationWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(exp1, exp2);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeStringWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp1
                                                  withOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp2 {
  return OrgApacheLuceneUtilAutomatonRegExp_makeStringWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(exp1, exp2);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeIntersectionWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp1
                                                        withOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp2 {
  return OrgApacheLuceneUtilAutomatonRegExp_makeIntersectionWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(exp1, exp2);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeOptionalWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp {
  return OrgApacheLuceneUtilAutomatonRegExp_makeOptionalWithOrgApacheLuceneUtilAutomatonRegExp_(exp);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp {
  return OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_(exp);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp
                                                                                 withInt:(jint)min {
  return OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_withInt_(exp, min);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp
                                                                                 withInt:(jint)min
                                                                                 withInt:(jint)max {
  return OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_withInt_withInt_(exp, min, max);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeComplementWithOrgApacheLuceneUtilAutomatonRegExp:(OrgApacheLuceneUtilAutomatonRegExp *)exp {
  return OrgApacheLuceneUtilAutomatonRegExp_makeComplementWithOrgApacheLuceneUtilAutomatonRegExp_(exp);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeCharWithInt:(jint)c {
  return OrgApacheLuceneUtilAutomatonRegExp_makeCharWithInt_(c);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeCharRangeWithInt:(jint)from
                                                     withInt:(jint)to {
  return OrgApacheLuceneUtilAutomatonRegExp_makeCharRangeWithInt_withInt_(from, to);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeAnyChar {
  return OrgApacheLuceneUtilAutomatonRegExp_makeAnyChar();
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeEmpty {
  return OrgApacheLuceneUtilAutomatonRegExp_makeEmpty();
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeStringWithNSString:(NSString *)s {
  return OrgApacheLuceneUtilAutomatonRegExp_makeStringWithNSString_(s);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeAnyString {
  return OrgApacheLuceneUtilAutomatonRegExp_makeAnyString();
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeAutomatonWithNSString:(NSString *)s {
  return OrgApacheLuceneUtilAutomatonRegExp_makeAutomatonWithNSString_(s);
}

+ (OrgApacheLuceneUtilAutomatonRegExp *)makeIntervalWithInt:(jint)min
                                                    withInt:(jint)max
                                                    withInt:(jint)digits {
  return OrgApacheLuceneUtilAutomatonRegExp_makeIntervalWithInt_withInt_withInt_(min, max, digits);
}

- (jboolean)peekWithNSString:(NSString *)s {
  return OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(self, s);
}

- (jboolean)matchWithInt:(jint)c {
  return OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, c);
}

- (jboolean)more {
  return OrgApacheLuceneUtilAutomatonRegExp_more(self);
}

- (jint)next {
  return OrgApacheLuceneUtilAutomatonRegExp_next(self);
}

- (jboolean)checkWithInt:(jint)flag {
  return OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, flag);
}

- (OrgApacheLuceneUtilAutomatonRegExp *)parseUnionExp {
  return OrgApacheLuceneUtilAutomatonRegExp_parseUnionExp(self);
}

- (OrgApacheLuceneUtilAutomatonRegExp *)parseInterExp {
  return OrgApacheLuceneUtilAutomatonRegExp_parseInterExp(self);
}

- (OrgApacheLuceneUtilAutomatonRegExp *)parseConcatExp {
  return OrgApacheLuceneUtilAutomatonRegExp_parseConcatExp(self);
}

- (OrgApacheLuceneUtilAutomatonRegExp *)parseRepeatExp {
  return OrgApacheLuceneUtilAutomatonRegExp_parseRepeatExp(self);
}

- (OrgApacheLuceneUtilAutomatonRegExp *)parseComplExp {
  return OrgApacheLuceneUtilAutomatonRegExp_parseComplExp(self);
}

- (OrgApacheLuceneUtilAutomatonRegExp *)parseCharClassExp {
  return OrgApacheLuceneUtilAutomatonRegExp_parseCharClassExp(self);
}

- (OrgApacheLuceneUtilAutomatonRegExp *)parseCharClasses {
  return OrgApacheLuceneUtilAutomatonRegExp_parseCharClasses(self);
}

- (OrgApacheLuceneUtilAutomatonRegExp *)parseCharClass {
  return OrgApacheLuceneUtilAutomatonRegExp_parseCharClass(self);
}

- (OrgApacheLuceneUtilAutomatonRegExp *)parseSimpleExp {
  return OrgApacheLuceneUtilAutomatonRegExp_parseSimpleExp(self);
}

- (jint)parseCharExp {
  return OrgApacheLuceneUtilAutomatonRegExp_parseCharExp(self);
}

- (void)dealloc {
  RELEASE_(originalString_);
  RELEASE_(kind_);
  RELEASE_(exp1_);
  RELEASE_(exp2_);
  RELEASE_(s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "RegExp", NULL, 0x0, NULL, NULL },
    { "initWithNSString:withInt:", "RegExp", NULL, 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "toAutomatonWithOrgApacheLuceneUtilAutomatonAutomatonProvider:withInt:", "toAutomaton", "Lorg.apache.lucene.util.automaton.Automaton;", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.lucene.util.automaton.TooComplexToDeterminizeException;", NULL },
    { "toAutomatonWithJavaUtilMap:withOrgApacheLuceneUtilAutomatonAutomatonProvider:withInt:", "toAutomaton", "Lorg.apache.lucene.util.automaton.Automaton;", 0x2, "Ljava.lang.IllegalArgumentException;Lorg.apache.lucene.util.automaton.TooComplexToDeterminizeException;", NULL },
    { "toAutomatonInternalWithJavaUtilMap:withOrgApacheLuceneUtilAutomatonAutomatonProvider:withInt:", "toAutomatonInternal", "Lorg.apache.lucene.util.automaton.Automaton;", 0x2, "Ljava.lang.IllegalArgumentException;", NULL },
    { "findLeavesWithOrgApacheLuceneUtilAutomatonRegExp:withOrgApacheLuceneUtilAutomatonRegExp_KindEnum:withJavaUtilList:withJavaUtilMap:withOrgApacheLuceneUtilAutomatonAutomatonProvider:withInt:", "findLeaves", "V", 0x2, NULL, NULL },
    { "getOriginalString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toStringBuilderWithJavaLangStringBuilder:", "toStringBuilder", "V", 0x0, NULL, NULL },
    { "makeUnionWithOrgApacheLuceneUtilAutomatonRegExp:withOrgApacheLuceneUtilAutomatonRegExp:", "makeUnion", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeConcatenationWithOrgApacheLuceneUtilAutomatonRegExp:withOrgApacheLuceneUtilAutomatonRegExp:", "makeConcatenation", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeStringWithOrgApacheLuceneUtilAutomatonRegExp:withOrgApacheLuceneUtilAutomatonRegExp:", "makeString", "Lorg.apache.lucene.util.automaton.RegExp;", 0xa, NULL, NULL },
    { "makeIntersectionWithOrgApacheLuceneUtilAutomatonRegExp:withOrgApacheLuceneUtilAutomatonRegExp:", "makeIntersection", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeOptionalWithOrgApacheLuceneUtilAutomatonRegExp:", "makeOptional", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp:", "makeRepeat", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp:withInt:", "makeRepeat", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp:withInt:withInt:", "makeRepeat", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeComplementWithOrgApacheLuceneUtilAutomatonRegExp:", "makeComplement", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeCharWithInt:", "makeChar", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeCharRangeWithInt:withInt:", "makeCharRange", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeAnyChar", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeEmpty", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeStringWithNSString:", "makeString", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeAnyString", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeAutomatonWithNSString:", "makeAutomaton", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "makeIntervalWithInt:withInt:withInt:", "makeInterval", "Lorg.apache.lucene.util.automaton.RegExp;", 0x8, NULL, NULL },
    { "peekWithNSString:", "peek", "Z", 0x2, NULL, NULL },
    { "matchWithInt:", "match", "Z", 0x2, NULL, NULL },
    { "more", NULL, "Z", 0x2, NULL, NULL },
    { "next", NULL, "I", 0x2, "Ljava.lang.IllegalArgumentException;", NULL },
    { "checkWithInt:", "check", "Z", 0x2, NULL, NULL },
    { "parseUnionExp", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
    { "parseInterExp", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
    { "parseConcatExp", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
    { "parseRepeatExp", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
    { "parseComplExp", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
    { "parseCharClassExp", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
    { "parseCharClasses", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
    { "parseCharClass", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
    { "parseSimpleExp", NULL, "Lorg.apache.lucene.util.automaton.RegExp;", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
    { "parseCharExp", NULL, "I", 0x10, "Ljava.lang.IllegalArgumentException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INTERSECTION", "INTERSECTION", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilAutomatonRegExp_INTERSECTION },
    { "COMPLEMENT", "COMPLEMENT", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilAutomatonRegExp_COMPLEMENT },
    { "EMPTY", "EMPTY", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilAutomatonRegExp_EMPTY },
    { "ANYSTRING", "ANYSTRING", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilAutomatonRegExp_ANYSTRING },
    { "AUTOMATON", "AUTOMATON", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilAutomatonRegExp_AUTOMATON },
    { "INTERVAL", "INTERVAL", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilAutomatonRegExp_INTERVAL },
    { "ALL", "ALL", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilAutomatonRegExp_ALL },
    { "NONE", "NONE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneUtilAutomatonRegExp_NONE },
    { "originalString_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "kind_", NULL, 0x0, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", NULL, NULL, .constantValue.asLong = 0 },
    { "exp1_", NULL, 0x0, "Lorg.apache.lucene.util.automaton.RegExp;", NULL, NULL, .constantValue.asLong = 0 },
    { "exp2_", NULL, 0x0, "Lorg.apache.lucene.util.automaton.RegExp;", NULL, NULL, .constantValue.asLong = 0 },
    { "s_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "c_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "min_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "max_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "digits_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "from_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "to_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "flags_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "pos_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.util.automaton.RegExp$Kind;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAutomatonRegExp = { 2, "RegExp", "org.apache.lucene.util.automaton", NULL, 0x1, 41, methods, 21, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneUtilAutomatonRegExp;
}

@end

void OrgApacheLuceneUtilAutomatonRegExp_init(OrgApacheLuceneUtilAutomatonRegExp *self) {
  NSObject_init(self);
  JreStrongAssign(&self->originalString_, nil);
}

OrgApacheLuceneUtilAutomatonRegExp *new_OrgApacheLuceneUtilAutomatonRegExp_init() {
  OrgApacheLuceneUtilAutomatonRegExp *self = [OrgApacheLuceneUtilAutomatonRegExp alloc];
  OrgApacheLuceneUtilAutomatonRegExp_init(self);
  return self;
}

void OrgApacheLuceneUtilAutomatonRegExp_initWithNSString_withInt_(OrgApacheLuceneUtilAutomatonRegExp *self, NSString *s, jint syntax_flags) {
  NSObject_init(self);
  JreStrongAssign(&self->originalString_, s);
  self->flags_ = syntax_flags;
  OrgApacheLuceneUtilAutomatonRegExp *e;
  if (((jint) [((NSString *) nil_chk(s)) length]) == 0) e = OrgApacheLuceneUtilAutomatonRegExp_makeStringWithNSString_(@"");
  else {
    e = OrgApacheLuceneUtilAutomatonRegExp_parseUnionExp(self);
    if (self->pos_ < ((jint) [((NSString *) nil_chk(self->originalString_)) length])) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"end-of-string expected at position ", self->pos_)) autorelease];
  }
  JreStrongAssign(&self->kind_, ((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(e))->kind_);
  JreStrongAssign(&self->exp1_, e->exp1_);
  JreStrongAssign(&self->exp2_, e->exp2_);
  JreStrongAssign(&self->s_, e->s_);
  self->c_ = e->c_;
  self->min_ = e->min_;
  self->max_ = e->max_;
  self->digits_ = e->digits_;
  self->from_ = e->from_;
  self->to_ = e->to_;
}

OrgApacheLuceneUtilAutomatonRegExp *new_OrgApacheLuceneUtilAutomatonRegExp_initWithNSString_withInt_(NSString *s, jint syntax_flags) {
  OrgApacheLuceneUtilAutomatonRegExp *self = [OrgApacheLuceneUtilAutomatonRegExp alloc];
  OrgApacheLuceneUtilAutomatonRegExp_initWithNSString_withInt_(self, s, syntax_flags);
  return self;
}

OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneUtilAutomatonRegExp_toAutomatonWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(OrgApacheLuceneUtilAutomatonRegExp *self, id<JavaUtilMap> automata, id<OrgApacheLuceneUtilAutomatonAutomatonProvider> automaton_provider, jint maxDeterminizedStates) {
  @try {
    return OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, automata, automaton_provider, maxDeterminizedStates);
  }
  @catch (OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException *e) {
    @throw [new_OrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_initWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonTooComplexToDeterminizeException_(self, e) autorelease];
  }
}

OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(OrgApacheLuceneUtilAutomatonRegExp *self, id<JavaUtilMap> automata, id<OrgApacheLuceneUtilAutomatonAutomatonProvider> automaton_provider, jint maxDeterminizedStates) {
  id<JavaUtilList> list;
  OrgApacheLuceneUtilAutomatonAutomaton *a = nil;
  {
    OrgApacheLuceneUtilAutomatonAutomaton *aa;
    switch ([self->kind_ ordinal]) {
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_UNION:
      list = [new_JavaUtilArrayList_init() autorelease];
      OrgApacheLuceneUtilAutomatonRegExp_findLeavesWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_KindEnum_withJavaUtilList_withJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, self->exp1_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_UNION), list, automata, automaton_provider, maxDeterminizedStates);
      OrgApacheLuceneUtilAutomatonRegExp_findLeavesWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_KindEnum_withJavaUtilList_withJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, self->exp2_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_UNION), list, automata, automaton_provider, maxDeterminizedStates);
      a = OrgApacheLuceneUtilAutomatonOperations_union__WithJavaUtilCollection_(list);
      a = OrgApacheLuceneUtilAutomatonMinimizationOperations_minimizeWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(a, maxDeterminizedStates);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_CONCATENATION:
      list = [new_JavaUtilArrayList_init() autorelease];
      OrgApacheLuceneUtilAutomatonRegExp_findLeavesWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_KindEnum_withJavaUtilList_withJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, self->exp1_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CONCATENATION), list, automata, automaton_provider, maxDeterminizedStates);
      OrgApacheLuceneUtilAutomatonRegExp_findLeavesWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_KindEnum_withJavaUtilList_withJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, self->exp2_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CONCATENATION), list, automata, automaton_provider, maxDeterminizedStates);
      a = OrgApacheLuceneUtilAutomatonOperations_concatenateWithJavaUtilList_(list);
      a = OrgApacheLuceneUtilAutomatonMinimizationOperations_minimizeWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(a, maxDeterminizedStates);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_INTERSECTION:
      a = OrgApacheLuceneUtilAutomatonOperations_intersectionWithOrgApacheLuceneUtilAutomatonAutomaton_withOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(nil_chk(self->exp1_), automata, automaton_provider, maxDeterminizedStates), OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(nil_chk(self->exp2_), automata, automaton_provider, maxDeterminizedStates));
      a = OrgApacheLuceneUtilAutomatonMinimizationOperations_minimizeWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(a, maxDeterminizedStates);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_OPTIONAL:
      a = OrgApacheLuceneUtilAutomatonOperations_optionalWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(nil_chk(self->exp1_), automata, automaton_provider, maxDeterminizedStates));
      a = OrgApacheLuceneUtilAutomatonMinimizationOperations_minimizeWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(a, maxDeterminizedStates);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_REPEAT:
      a = OrgApacheLuceneUtilAutomatonOperations_repeatWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(nil_chk(self->exp1_), automata, automaton_provider, maxDeterminizedStates));
      a = OrgApacheLuceneUtilAutomatonMinimizationOperations_minimizeWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(a, maxDeterminizedStates);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_REPEAT_MIN:
      a = OrgApacheLuceneUtilAutomatonOperations_repeatWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(nil_chk(self->exp1_), automata, automaton_provider, maxDeterminizedStates), self->min_);
      a = OrgApacheLuceneUtilAutomatonMinimizationOperations_minimizeWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(a, maxDeterminizedStates);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_REPEAT_MINMAX:
      a = OrgApacheLuceneUtilAutomatonOperations_repeatWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_withInt_(OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(nil_chk(self->exp1_), automata, automaton_provider, maxDeterminizedStates), self->min_, self->max_);
      a = OrgApacheLuceneUtilAutomatonMinimizationOperations_minimizeWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(a, maxDeterminizedStates);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_COMPLEMENT:
      a = OrgApacheLuceneUtilAutomatonOperations_complementWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(nil_chk(self->exp1_), automata, automaton_provider, maxDeterminizedStates), maxDeterminizedStates);
      a = OrgApacheLuceneUtilAutomatonMinimizationOperations_minimizeWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(a, maxDeterminizedStates);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_CHAR:
      a = OrgApacheLuceneUtilAutomatonAutomata_makeCharWithInt_(self->c_);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_CHAR_RANGE:
      a = OrgApacheLuceneUtilAutomatonAutomata_makeCharRangeWithInt_withInt_(self->from_, self->to_);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_ANYCHAR:
      a = OrgApacheLuceneUtilAutomatonAutomata_makeAnyChar();
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_EMPTY:
      a = OrgApacheLuceneUtilAutomatonAutomata_makeEmpty();
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_STRING:
      a = OrgApacheLuceneUtilAutomatonAutomata_makeStringWithNSString_(self->s_);
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_ANYSTRING:
      a = OrgApacheLuceneUtilAutomatonAutomata_makeAnyString();
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_AUTOMATON:
      aa = nil;
      if (automata != nil) {
        aa = [automata getWithId:self->s_];
      }
      if (aa == nil && automaton_provider != nil) {
        @try {
          aa = [automaton_provider getAutomatonWithNSString:self->s_];
        }
        @catch (JavaIoIOException *e) {
          @throw [new_JavaLangIllegalArgumentException_initWithJavaLangThrowable_(e) autorelease];
        }
      }
      if (aa == nil) {
        @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("C$$", '\'', self->s_, @"' not found")) autorelease];
      }
      a = aa;
      break;
      case OrgApacheLuceneUtilAutomatonRegExp_Kind_REGEXP_INTERVAL:
      a = OrgApacheLuceneUtilAutomatonAutomata_makeDecimalIntervalWithInt_withInt_withInt_(self->min_, self->max_, self->digits_);
      break;
    }
  }
  return a;
}

void OrgApacheLuceneUtilAutomatonRegExp_findLeavesWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_KindEnum_withJavaUtilList_withJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(OrgApacheLuceneUtilAutomatonRegExp *self, OrgApacheLuceneUtilAutomatonRegExp *exp, OrgApacheLuceneUtilAutomatonRegExp_KindEnum *kind, id<JavaUtilList> list, id<JavaUtilMap> automata, id<OrgApacheLuceneUtilAutomatonAutomatonProvider> automaton_provider, jint maxDeterminizedStates) {
  if (((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp))->kind_ == kind) {
    OrgApacheLuceneUtilAutomatonRegExp_findLeavesWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_KindEnum_withJavaUtilList_withJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, exp->exp1_, kind, list, automata, automaton_provider, maxDeterminizedStates);
    OrgApacheLuceneUtilAutomatonRegExp_findLeavesWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_KindEnum_withJavaUtilList_withJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, exp->exp2_, kind, list, automata, automaton_provider, maxDeterminizedStates);
  }
  else {
    [((id<JavaUtilList>) nil_chk(list)) addWithId:OrgApacheLuceneUtilAutomatonRegExp_toAutomatonInternalWithJavaUtilMap_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(exp, automata, automaton_provider, maxDeterminizedStates)];
  }
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeUnionWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp *exp1, OrgApacheLuceneUtilAutomatonRegExp *exp2) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_UNION));
  JreStrongAssign(&r->exp1_, exp1);
  JreStrongAssign(&r->exp2_, exp2);
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeConcatenationWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp *exp1, OrgApacheLuceneUtilAutomatonRegExp *exp2) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  if ((((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1))->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CHAR) || exp1->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_STRING)) && (((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp2))->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CHAR) || exp2->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_STRING))) return OrgApacheLuceneUtilAutomatonRegExp_makeStringWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(exp1, exp2);
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CONCATENATION));
  if (exp1->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CONCATENATION) && (((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1->exp2_))->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CHAR) || exp1->exp2_->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_STRING)) && (((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp2))->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CHAR) || exp2->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_STRING))) {
    JreStrongAssign(&r->exp1_, exp1->exp1_);
    JreStrongAssign(&r->exp2_, OrgApacheLuceneUtilAutomatonRegExp_makeStringWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(exp1->exp2_, exp2));
  }
  else if ((exp1->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CHAR) || exp1->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_STRING)) && ((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp2))->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CONCATENATION) && (((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp2->exp1_))->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CHAR) || exp2->exp1_->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_STRING))) {
    JreStrongAssign(&r->exp1_, OrgApacheLuceneUtilAutomatonRegExp_makeStringWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(exp1, exp2->exp1_));
    JreStrongAssign(&r->exp2_, exp2->exp2_);
  }
  else {
    JreStrongAssign(&r->exp1_, exp1);
    JreStrongAssign(&r->exp2_, exp2);
  }
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeStringWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp *exp1, OrgApacheLuceneUtilAutomatonRegExp *exp2) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  JavaLangStringBuilder *b = [new_JavaLangStringBuilder_init() autorelease];
  if (((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp1))->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_STRING)) [b appendWithNSString:exp1->s_];
  else [b appendCodePointWithInt:exp1->c_];
  if (((OrgApacheLuceneUtilAutomatonRegExp *) nil_chk(exp2))->kind_ == JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_STRING)) [b appendWithNSString:exp2->s_];
  else [b appendCodePointWithInt:exp2->c_];
  return OrgApacheLuceneUtilAutomatonRegExp_makeStringWithNSString_([b description]);
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeIntersectionWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp *exp1, OrgApacheLuceneUtilAutomatonRegExp *exp2) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_INTERSECTION));
  JreStrongAssign(&r->exp1_, exp1);
  JreStrongAssign(&r->exp2_, exp2);
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeOptionalWithOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp *exp) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_OPTIONAL));
  JreStrongAssign(&r->exp1_, exp);
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp *exp) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_REPEAT));
  JreStrongAssign(&r->exp1_, exp);
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_withInt_(OrgApacheLuceneUtilAutomatonRegExp *exp, jint min) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_REPEAT_MIN));
  JreStrongAssign(&r->exp1_, exp);
  r->min_ = min;
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_withInt_withInt_(OrgApacheLuceneUtilAutomatonRegExp *exp, jint min, jint max) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_REPEAT_MINMAX));
  JreStrongAssign(&r->exp1_, exp);
  r->min_ = min;
  r->max_ = max;
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeComplementWithOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp *exp) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_COMPLEMENT));
  JreStrongAssign(&r->exp1_, exp);
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeCharWithInt_(jint c) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CHAR));
  r->c_ = c;
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeCharRangeWithInt_withInt_(jint from, jint to) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  if (from > to) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$IC", @"invalid range: from (", from, @") cannot be > to (", to, ')')) autorelease];
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_CHAR_RANGE));
  r->from_ = from;
  r->to_ = to;
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeAnyChar() {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_ANYCHAR));
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeEmpty() {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_EMPTY));
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeStringWithNSString_(NSString *s) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_STRING));
  JreStrongAssign(&r->s_, s);
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeAnyString() {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_ANYSTRING));
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeAutomatonWithNSString_(NSString *s) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_AUTOMATON));
  JreStrongAssign(&r->s_, s);
  return r;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_makeIntervalWithInt_withInt_withInt_(jint min, jint max, jint digits) {
  OrgApacheLuceneUtilAutomatonRegExp_initialize();
  OrgApacheLuceneUtilAutomatonRegExp *r = [new_OrgApacheLuceneUtilAutomatonRegExp_init() autorelease];
  JreStrongAssign(&r->kind_, JreLoadStatic(OrgApacheLuceneUtilAutomatonRegExp_KindEnum, REGEXP_INTERVAL));
  r->min_ = min;
  r->max_ = max;
  r->digits_ = digits;
  return r;
}

jboolean OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(OrgApacheLuceneUtilAutomatonRegExp *self, NSString *s) {
  return OrgApacheLuceneUtilAutomatonRegExp_more(self) && [((NSString *) nil_chk(s)) indexOf:[((NSString *) nil_chk(self->originalString_)) codePointAt:self->pos_]] != -1;
}

jboolean OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(OrgApacheLuceneUtilAutomatonRegExp *self, jint c) {
  if (self->pos_ >= ((jint) [((NSString *) nil_chk(self->originalString_)) length])) return NO;
  if ([self->originalString_ codePointAt:self->pos_] == c) {
    self->pos_ += JavaLangCharacter_charCountWithInt_(c);
    return YES;
  }
  return NO;
}

jboolean OrgApacheLuceneUtilAutomatonRegExp_more(OrgApacheLuceneUtilAutomatonRegExp *self) {
  return self->pos_ < ((jint) [((NSString *) nil_chk(self->originalString_)) length]);
}

jint OrgApacheLuceneUtilAutomatonRegExp_next(OrgApacheLuceneUtilAutomatonRegExp *self) {
  if (!OrgApacheLuceneUtilAutomatonRegExp_more(self)) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"unexpected end-of-string") autorelease];
  jint ch = [((NSString *) nil_chk(self->originalString_)) codePointAt:self->pos_];
  self->pos_ += JavaLangCharacter_charCountWithInt_(ch);
  return ch;
}

jboolean OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(OrgApacheLuceneUtilAutomatonRegExp *self, jint flag) {
  return (self->flags_ & flag) != 0;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseUnionExp(OrgApacheLuceneUtilAutomatonRegExp *self) {
  OrgApacheLuceneUtilAutomatonRegExp *e = OrgApacheLuceneUtilAutomatonRegExp_parseInterExp(self);
  if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '|')) e = OrgApacheLuceneUtilAutomatonRegExp_makeUnionWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(e, OrgApacheLuceneUtilAutomatonRegExp_parseUnionExp(self));
  return e;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseInterExp(OrgApacheLuceneUtilAutomatonRegExp *self) {
  OrgApacheLuceneUtilAutomatonRegExp *e = OrgApacheLuceneUtilAutomatonRegExp_parseConcatExp(self);
  if (OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, OrgApacheLuceneUtilAutomatonRegExp_INTERSECTION) && OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '&')) e = OrgApacheLuceneUtilAutomatonRegExp_makeIntersectionWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(e, OrgApacheLuceneUtilAutomatonRegExp_parseInterExp(self));
  return e;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseConcatExp(OrgApacheLuceneUtilAutomatonRegExp *self) {
  OrgApacheLuceneUtilAutomatonRegExp *e = OrgApacheLuceneUtilAutomatonRegExp_parseRepeatExp(self);
  if (OrgApacheLuceneUtilAutomatonRegExp_more(self) && !OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(self, @")|") && (!OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, OrgApacheLuceneUtilAutomatonRegExp_INTERSECTION) || !OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(self, @"&"))) e = OrgApacheLuceneUtilAutomatonRegExp_makeConcatenationWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(e, OrgApacheLuceneUtilAutomatonRegExp_parseConcatExp(self));
  return e;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseRepeatExp(OrgApacheLuceneUtilAutomatonRegExp *self) {
  OrgApacheLuceneUtilAutomatonRegExp *e = OrgApacheLuceneUtilAutomatonRegExp_parseComplExp(self);
  while (OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(self, @"?*+{")) {
    if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '?')) e = OrgApacheLuceneUtilAutomatonRegExp_makeOptionalWithOrgApacheLuceneUtilAutomatonRegExp_(e);
    else if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '*')) e = OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_(e);
    else if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '+')) e = OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_withInt_(e, 1);
    else if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '{')) {
      jint start = self->pos_;
      while (OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(self, @"0123456789")) OrgApacheLuceneUtilAutomatonRegExp_next(self);
      if (start == self->pos_) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"integer expected at position ", self->pos_)) autorelease];
      jint n = JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(self->originalString_)) substring:start endIndex:self->pos_]);
      jint m = -1;
      if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, ',')) {
        start = self->pos_;
        while (OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(self, @"0123456789")) OrgApacheLuceneUtilAutomatonRegExp_next(self);
        if (start != self->pos_) m = JavaLangInteger_parseIntWithNSString_([self->originalString_ substring:start endIndex:self->pos_]);
      }
      else m = n;
      if (!OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '}')) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"expected '}' at position ", self->pos_)) autorelease];
      if (m == -1) e = OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_withInt_(e, n);
      else e = OrgApacheLuceneUtilAutomatonRegExp_makeRepeatWithOrgApacheLuceneUtilAutomatonRegExp_withInt_withInt_(e, n, m);
    }
  }
  return e;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseComplExp(OrgApacheLuceneUtilAutomatonRegExp *self) {
  if (OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, OrgApacheLuceneUtilAutomatonRegExp_COMPLEMENT) && OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '~')) return OrgApacheLuceneUtilAutomatonRegExp_makeComplementWithOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp_parseComplExp(self));
  else return OrgApacheLuceneUtilAutomatonRegExp_parseCharClassExp(self);
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseCharClassExp(OrgApacheLuceneUtilAutomatonRegExp *self) {
  if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '[')) {
    jboolean negate = NO;
    if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '^')) negate = YES;
    OrgApacheLuceneUtilAutomatonRegExp *e = OrgApacheLuceneUtilAutomatonRegExp_parseCharClasses(self);
    if (negate) e = OrgApacheLuceneUtilAutomatonRegExp_makeIntersectionWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(OrgApacheLuceneUtilAutomatonRegExp_makeAnyChar(), OrgApacheLuceneUtilAutomatonRegExp_makeComplementWithOrgApacheLuceneUtilAutomatonRegExp_(e));
    if (!OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, ']')) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"expected ']' at position ", self->pos_)) autorelease];
    return e;
  }
  else return OrgApacheLuceneUtilAutomatonRegExp_parseSimpleExp(self);
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseCharClasses(OrgApacheLuceneUtilAutomatonRegExp *self) {
  OrgApacheLuceneUtilAutomatonRegExp *e = OrgApacheLuceneUtilAutomatonRegExp_parseCharClass(self);
  while (OrgApacheLuceneUtilAutomatonRegExp_more(self) && !OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(self, @"]")) e = OrgApacheLuceneUtilAutomatonRegExp_makeUnionWithOrgApacheLuceneUtilAutomatonRegExp_withOrgApacheLuceneUtilAutomatonRegExp_(e, OrgApacheLuceneUtilAutomatonRegExp_parseCharClass(self));
  return e;
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseCharClass(OrgApacheLuceneUtilAutomatonRegExp *self) {
  jint c = OrgApacheLuceneUtilAutomatonRegExp_parseCharExp(self);
  if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '-')) return OrgApacheLuceneUtilAutomatonRegExp_makeCharRangeWithInt_withInt_(c, OrgApacheLuceneUtilAutomatonRegExp_parseCharExp(self));
  else return OrgApacheLuceneUtilAutomatonRegExp_makeCharWithInt_(c);
}

OrgApacheLuceneUtilAutomatonRegExp *OrgApacheLuceneUtilAutomatonRegExp_parseSimpleExp(OrgApacheLuceneUtilAutomatonRegExp *self) {
  if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '.')) return OrgApacheLuceneUtilAutomatonRegExp_makeAnyChar();
  else if (OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, OrgApacheLuceneUtilAutomatonRegExp_EMPTY) && OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '#')) return OrgApacheLuceneUtilAutomatonRegExp_makeEmpty();
  else if (OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, OrgApacheLuceneUtilAutomatonRegExp_ANYSTRING) && OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '@')) return OrgApacheLuceneUtilAutomatonRegExp_makeAnyString();
  else if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '"')) {
    jint start = self->pos_;
    while (OrgApacheLuceneUtilAutomatonRegExp_more(self) && !OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(self, @"\"")) OrgApacheLuceneUtilAutomatonRegExp_next(self);
    if (!OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '"')) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"expected '\"' at position ", self->pos_)) autorelease];
    return OrgApacheLuceneUtilAutomatonRegExp_makeStringWithNSString_([((NSString *) nil_chk(self->originalString_)) substring:start endIndex:self->pos_ - 1]);
  }
  else if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '(')) {
    if (OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, ')')) return OrgApacheLuceneUtilAutomatonRegExp_makeStringWithNSString_(@"");
    OrgApacheLuceneUtilAutomatonRegExp *e = OrgApacheLuceneUtilAutomatonRegExp_parseUnionExp(self);
    if (!OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, ')')) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"expected ')' at position ", self->pos_)) autorelease];
    return e;
  }
  else if ((OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, OrgApacheLuceneUtilAutomatonRegExp_AUTOMATON) || OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, OrgApacheLuceneUtilAutomatonRegExp_INTERVAL)) && OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '<')) {
    jint start = self->pos_;
    while (OrgApacheLuceneUtilAutomatonRegExp_more(self) && !OrgApacheLuceneUtilAutomatonRegExp_peekWithNSString_(self, @">")) OrgApacheLuceneUtilAutomatonRegExp_next(self);
    if (!OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '>')) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"expected '>' at position ", self->pos_)) autorelease];
    NSString *s = [((NSString *) nil_chk(self->originalString_)) substring:start endIndex:self->pos_ - 1];
    jint i = [((NSString *) nil_chk(s)) indexOf:'-'];
    if (i == -1) {
      if (!OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, OrgApacheLuceneUtilAutomatonRegExp_AUTOMATON)) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"interval syntax error at position ", (self->pos_ - 1))) autorelease];
      return OrgApacheLuceneUtilAutomatonRegExp_makeAutomatonWithNSString_(s);
    }
    else {
      if (!OrgApacheLuceneUtilAutomatonRegExp_checkWithInt_(self, OrgApacheLuceneUtilAutomatonRegExp_INTERVAL)) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"illegal identifier at position ", (self->pos_ - 1))) autorelease];
      @try {
        if (i == 0 || i == ((jint) [s length]) - 1 || i != [s lastIndexOf:'-']) @throw [new_JavaLangNumberFormatException_init() autorelease];
        NSString *smin = [s substring:0 endIndex:i];
        NSString *smax = [s substring:i + 1 endIndex:((jint) [s length])];
        jint imin = JavaLangInteger_parseIntWithNSString_(smin);
        jint imax = JavaLangInteger_parseIntWithNSString_(smax);
        jint digits;
        if (((jint) [((NSString *) nil_chk(smin)) length]) == ((jint) [((NSString *) nil_chk(smax)) length])) digits = ((jint) [smin length]);
        else digits = 0;
        if (imin > imax) {
          jint t = imin;
          imin = imax;
          imax = t;
        }
        return OrgApacheLuceneUtilAutomatonRegExp_makeIntervalWithInt_withInt_withInt_(imin, imax, digits);
      }
      @catch (JavaLangNumberFormatException *e) {
        @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"interval syntax error at position ", (self->pos_ - 1))) autorelease];
      }
    }
  }
  else return OrgApacheLuceneUtilAutomatonRegExp_makeCharWithInt_(OrgApacheLuceneUtilAutomatonRegExp_parseCharExp(self));
}

jint OrgApacheLuceneUtilAutomatonRegExp_parseCharExp(OrgApacheLuceneUtilAutomatonRegExp *self) {
  OrgApacheLuceneUtilAutomatonRegExp_matchWithInt_(self, '\\');
  return OrgApacheLuceneUtilAutomatonRegExp_next(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilAutomatonRegExp)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilAutomatonRegExp_KindEnum)

OrgApacheLuceneUtilAutomatonRegExp_KindEnum *OrgApacheLuceneUtilAutomatonRegExp_KindEnum_values_[16];

@implementation OrgApacheLuceneUtilAutomatonRegExp_KindEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgApacheLuceneUtilAutomatonRegExp_KindEnum_values() {
  OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneUtilAutomatonRegExp_KindEnum_values_ count:16 type:OrgApacheLuceneUtilAutomatonRegExp_KindEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneUtilAutomatonRegExp_KindEnum_values();
}

+ (OrgApacheLuceneUtilAutomatonRegExp_KindEnum *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneUtilAutomatonRegExp_KindEnum_valueOfWithNSString_(name);
}

OrgApacheLuceneUtilAutomatonRegExp_KindEnum *OrgApacheLuceneUtilAutomatonRegExp_KindEnum_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initialize();
  for (int i = 0; i < 16; i++) {
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum *e = OrgApacheLuceneUtilAutomatonRegExp_KindEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilAutomatonRegExp_KindEnum class]) {
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_UNION = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_UNION", 0);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_CONCATENATION = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_CONCATENATION", 1);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_INTERSECTION = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_INTERSECTION", 2);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_OPTIONAL = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_OPTIONAL", 3);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_REPEAT = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_REPEAT", 4);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_REPEAT_MIN = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_REPEAT_MIN", 5);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_REPEAT_MINMAX = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_REPEAT_MINMAX", 6);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_COMPLEMENT = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_COMPLEMENT", 7);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_CHAR = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_CHAR", 8);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_CHAR_RANGE = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_CHAR_RANGE", 9);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_ANYCHAR = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_ANYCHAR", 10);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_EMPTY = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_EMPTY", 11);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_STRING = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_STRING", 12);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_ANYSTRING = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_ANYSTRING", 13);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_AUTOMATON = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_AUTOMATON", 14);
    OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_INTERVAL = new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(@"REGEXP_INTERVAL", 15);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilAutomatonRegExp_KindEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "REGEXP_UNION", "REGEXP_UNION", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_UNION, NULL, .constantValue.asLong = 0 },
    { "REGEXP_CONCATENATION", "REGEXP_CONCATENATION", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_CONCATENATION, NULL, .constantValue.asLong = 0 },
    { "REGEXP_INTERSECTION", "REGEXP_INTERSECTION", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_INTERSECTION, NULL, .constantValue.asLong = 0 },
    { "REGEXP_OPTIONAL", "REGEXP_OPTIONAL", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_OPTIONAL, NULL, .constantValue.asLong = 0 },
    { "REGEXP_REPEAT", "REGEXP_REPEAT", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_REPEAT, NULL, .constantValue.asLong = 0 },
    { "REGEXP_REPEAT_MIN", "REGEXP_REPEAT_MIN", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_REPEAT_MIN, NULL, .constantValue.asLong = 0 },
    { "REGEXP_REPEAT_MINMAX", "REGEXP_REPEAT_MINMAX", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_REPEAT_MINMAX, NULL, .constantValue.asLong = 0 },
    { "REGEXP_COMPLEMENT", "REGEXP_COMPLEMENT", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_COMPLEMENT, NULL, .constantValue.asLong = 0 },
    { "REGEXP_CHAR", "REGEXP_CHAR", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_CHAR, NULL, .constantValue.asLong = 0 },
    { "REGEXP_CHAR_RANGE", "REGEXP_CHAR_RANGE", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_CHAR_RANGE, NULL, .constantValue.asLong = 0 },
    { "REGEXP_ANYCHAR", "REGEXP_ANYCHAR", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_ANYCHAR, NULL, .constantValue.asLong = 0 },
    { "REGEXP_EMPTY", "REGEXP_EMPTY", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_EMPTY, NULL, .constantValue.asLong = 0 },
    { "REGEXP_STRING", "REGEXP_STRING", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_STRING, NULL, .constantValue.asLong = 0 },
    { "REGEXP_ANYSTRING", "REGEXP_ANYSTRING", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_ANYSTRING, NULL, .constantValue.asLong = 0 },
    { "REGEXP_AUTOMATON", "REGEXP_AUTOMATON", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_AUTOMATON, NULL, .constantValue.asLong = 0 },
    { "REGEXP_INTERVAL", "REGEXP_INTERVAL", 0x4019, "Lorg.apache.lucene.util.automaton.RegExp$Kind;", &OrgApacheLuceneUtilAutomatonRegExp_KindEnum_REGEXP_INTERVAL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.util.automaton.RegExp$Kind;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAutomatonRegExp_KindEnum = { 2, "Kind", "org.apache.lucene.util.automaton", "RegExp", 0x4018, 0, NULL, 16, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/apache/lucene/util/automaton/RegExp$Kind;>;" };
  return &_OrgApacheLuceneUtilAutomatonRegExp_KindEnum;
}

@end

void OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(OrgApacheLuceneUtilAutomatonRegExp_KindEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneUtilAutomatonRegExp_KindEnum *new_OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgApacheLuceneUtilAutomatonRegExp_KindEnum *self = [OrgApacheLuceneUtilAutomatonRegExp_KindEnum alloc];
  OrgApacheLuceneUtilAutomatonRegExp_KindEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilAutomatonRegExp_KindEnum)
