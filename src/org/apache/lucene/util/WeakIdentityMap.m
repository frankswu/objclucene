//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/WeakIdentityMap.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/ref/Reference.h"
#include "java/lang/ref/ReferenceQueue.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "org/apache/lucene/util/WeakIdentityMap.h"

@interface OrgApacheLuceneUtilWeakIdentityMap () {
 @public
  JavaLangRefReferenceQueue *queue_;
  id<JavaUtilMap> backingStore_;
  jboolean reapOnRead_;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backingStore
                        withBoolean:(jboolean)reapOnRead;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilWeakIdentityMap, queue_, JavaLangRefReferenceQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilWeakIdentityMap, backingStore_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneUtilWeakIdentityMap_initWithJavaUtilMap_withBoolean_(OrgApacheLuceneUtilWeakIdentityMap *self, id<JavaUtilMap> backingStore, jboolean reapOnRead);

__attribute__((unused)) static OrgApacheLuceneUtilWeakIdentityMap *new_OrgApacheLuceneUtilWeakIdentityMap_initWithJavaUtilMap_withBoolean_(id<JavaUtilMap> backingStore, jboolean reapOnRead) NS_RETURNS_RETAINED;

@interface OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference : JavaLangRefWeakReference {
 @public
  jint hash__;
}

- (instancetype)initWithId:(id)obj
withJavaLangRefReferenceQueue:(JavaLangRefReferenceQueue *)queue;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference)

__attribute__((unused)) static void OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference_initWithId_withJavaLangRefReferenceQueue_(OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference *self, id obj, JavaLangRefReferenceQueue *queue);

__attribute__((unused)) static OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference *new_OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference_initWithId_withJavaLangRefReferenceQueue_(id obj, JavaLangRefReferenceQueue *queue) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference)

@interface OrgApacheLuceneUtilWeakIdentityMap_$1 : NSObject < JavaUtilIterator > {
 @public
  id next_;
  jboolean nextIsSet_;
  id<JavaUtilIterator> val$iterator_;
}

- (jboolean)hasNext;

- (id)next;

- (void)remove;

- (jboolean)setNext;

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilWeakIdentityMap_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilWeakIdentityMap_$1, next_, id)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilWeakIdentityMap_$1, val$iterator_, id<JavaUtilIterator>)

__attribute__((unused)) static jboolean OrgApacheLuceneUtilWeakIdentityMap_$1_setNext(OrgApacheLuceneUtilWeakIdentityMap_$1 *self);

__attribute__((unused)) static void OrgApacheLuceneUtilWeakIdentityMap_$1_initWithJavaUtilIterator_(OrgApacheLuceneUtilWeakIdentityMap_$1 *self, id<JavaUtilIterator> capture$0);

__attribute__((unused)) static OrgApacheLuceneUtilWeakIdentityMap_$1 *new_OrgApacheLuceneUtilWeakIdentityMap_$1_initWithJavaUtilIterator_(id<JavaUtilIterator> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilWeakIdentityMap_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilWeakIdentityMap)

id OrgApacheLuceneUtilWeakIdentityMap_NULL__;

@implementation OrgApacheLuceneUtilWeakIdentityMap

+ (OrgApacheLuceneUtilWeakIdentityMap *)newConcurrentHashMap {
  return OrgApacheLuceneUtilWeakIdentityMap_newConcurrentHashMap();
}

+ (OrgApacheLuceneUtilWeakIdentityMap *)newConcurrentHashMapWithBoolean:(jboolean)reapOnRead {
  return OrgApacheLuceneUtilWeakIdentityMap_newConcurrentHashMapWithBoolean_(reapOnRead);
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backingStore
                        withBoolean:(jboolean)reapOnRead {
  OrgApacheLuceneUtilWeakIdentityMap_initWithJavaUtilMap_withBoolean_(self, backingStore, reapOnRead);
  return self;
}

- (void)clear {
  [((id<JavaUtilMap>) nil_chk(backingStore_)) clear];
  [self reap];
}

- (id)putWithId:(id)key
         withId:(id)value {
  [self reap];
  return [((id<JavaUtilMap>) nil_chk(backingStore_)) putWithId:[new_OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference_initWithId_withJavaLangRefReferenceQueue_(key, queue_) autorelease] withId:value];
}

- (id)removeWithId:(id)key {
  [self reap];
  return [((id<JavaUtilMap>) nil_chk(backingStore_)) removeWithId:[new_OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference_initWithId_withJavaLangRefReferenceQueue_(key, nil) autorelease]];
}

- (id<JavaUtilIterator>)keyIterator {
  [self reap];
  id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(backingStore_)) keySet])) iterator];
  return [new_OrgApacheLuceneUtilWeakIdentityMap_$1_initWithJavaUtilIterator_(iterator) autorelease];
}

- (void)reap {
  JavaLangRefReference *zombie;
  while ((zombie = [((JavaLangRefReferenceQueue *) nil_chk(queue_)) poll]) != nil) {
    [((id<JavaUtilMap>) nil_chk(backingStore_)) removeWithId:zombie];
  }
}

- (void)dealloc {
  RELEASE_(queue_);
  RELEASE_(backingStore_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilWeakIdentityMap class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilWeakIdentityMap_NULL__, new_NSObject_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilWeakIdentityMap)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newConcurrentHashMap", NULL, "Lorg.apache.lucene.util.WeakIdentityMap;", 0x9, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lorg/apache/lucene/util/WeakIdentityMap<TK;TV;>;" },
    { "newConcurrentHashMapWithBoolean:", "newConcurrentHashMap", "Lorg.apache.lucene.util.WeakIdentityMap;", 0x9, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Z)Lorg/apache/lucene/util/WeakIdentityMap<TK;TV;>;" },
    { "initWithJavaUtilMap:withBoolean:", "WeakIdentityMap", NULL, 0x2, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "putWithId:withId:", "put", "TV;", 0x1, NULL, "(TK;TV;)TV;" },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "keyIterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "reap", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "queue_", NULL, 0x12, "Ljava.lang.ref.ReferenceQueue;", NULL, "Ljava/lang/ref/ReferenceQueue<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "backingStore_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/apache/lucene/util/WeakIdentityMap$IdentityWeakReference;TV;>;", .constantValue.asLong = 0 },
    { "reapOnRead_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "NULL__", "NULL", 0x18, "Ljava.lang.Object;", &OrgApacheLuceneUtilWeakIdentityMap_NULL__, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.util.WeakIdentityMap$IdentityWeakReference;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUtilWeakIdentityMap = { 2, "WeakIdentityMap", "org.apache.lucene.util", NULL, 0x11, 8, methods, 4, fields, 0, NULL, 1, inner_classes, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgApacheLuceneUtilWeakIdentityMap;
}

@end

OrgApacheLuceneUtilWeakIdentityMap *OrgApacheLuceneUtilWeakIdentityMap_newConcurrentHashMap() {
  OrgApacheLuceneUtilWeakIdentityMap_initialize();
  return OrgApacheLuceneUtilWeakIdentityMap_newConcurrentHashMapWithBoolean_(YES);
}

OrgApacheLuceneUtilWeakIdentityMap *OrgApacheLuceneUtilWeakIdentityMap_newConcurrentHashMapWithBoolean_(jboolean reapOnRead) {
  OrgApacheLuceneUtilWeakIdentityMap_initialize();
  return [new_OrgApacheLuceneUtilWeakIdentityMap_initWithJavaUtilMap_withBoolean_([new_JavaUtilConcurrentConcurrentHashMap_init() autorelease], reapOnRead) autorelease];
}

void OrgApacheLuceneUtilWeakIdentityMap_initWithJavaUtilMap_withBoolean_(OrgApacheLuceneUtilWeakIdentityMap *self, id<JavaUtilMap> backingStore, jboolean reapOnRead) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->queue_, new_JavaLangRefReferenceQueue_init());
  JreStrongAssign(&self->backingStore_, backingStore);
  self->reapOnRead_ = reapOnRead;
}

OrgApacheLuceneUtilWeakIdentityMap *new_OrgApacheLuceneUtilWeakIdentityMap_initWithJavaUtilMap_withBoolean_(id<JavaUtilMap> backingStore, jboolean reapOnRead) {
  OrgApacheLuceneUtilWeakIdentityMap *self = [OrgApacheLuceneUtilWeakIdentityMap alloc];
  OrgApacheLuceneUtilWeakIdentityMap_initWithJavaUtilMap_withBoolean_(self, backingStore, reapOnRead);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilWeakIdentityMap)

@implementation OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference

- (instancetype)initWithId:(id)obj
withJavaLangRefReferenceQueue:(JavaLangRefReferenceQueue *)queue {
  OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference_initWithId_withJavaLangRefReferenceQueue_(self, obj, queue);
  return self;
}

- (NSUInteger)hash {
  return hash__;
}

- (jboolean)isEqual:(id)o {
  if (self == o) {
    return YES;
  }
  if ([o isKindOfClass:[OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference class]]) {
    OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference *ref = (OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference *) check_class_cast(o, [OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference class]);
    if ([self get] == [((OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference *) nil_chk(ref)) get]) {
      return YES;
    }
  }
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withJavaLangRefReferenceQueue:", "IdentityWeakReference", NULL, 0x0, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "hash__", "hash", 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Ljava.lang.Object;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference = { 2, "IdentityWeakReference", "org.apache.lucene.util", "WeakIdentityMap", 0x1a, 3, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/ref/WeakReference<Ljava/lang/Object;>;" };
  return &_OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference;
}

@end

void OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference_initWithId_withJavaLangRefReferenceQueue_(OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference *self, id obj, JavaLangRefReferenceQueue *queue) {
  JavaLangRefWeakReference_initWithId_withJavaLangRefReferenceQueue_(self, obj == nil ? JreLoadStatic(OrgApacheLuceneUtilWeakIdentityMap, NULL__) : obj, queue);
  self->hash__ = JavaLangSystem_identityHashCodeWithId_(obj);
}

OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference *new_OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference_initWithId_withJavaLangRefReferenceQueue_(id obj, JavaLangRefReferenceQueue *queue) {
  OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference *self = [OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference alloc];
  OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference_initWithId_withJavaLangRefReferenceQueue_(self, obj, queue);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference)

@implementation OrgApacheLuceneUtilWeakIdentityMap_$1

- (jboolean)hasNext {
  return nextIsSet_ || OrgApacheLuceneUtilWeakIdentityMap_$1_setNext(self);
}

- (id)next {
  if (![self hasNext]) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  JreAssert((nextIsSet_), (@"org/apache/lucene/util/WeakIdentityMap.java:184 condition failed: assert nextIsSet;"));
  @try {
    return (id) next_;
  }
  @finally {
    nextIsSet_ = NO;
    JreStrongAssign(&next_, nil);
  }
}

- (void)remove {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (jboolean)setNext {
  return OrgApacheLuceneUtilWeakIdentityMap_$1_setNext(self);
}

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)capture$0 {
  OrgApacheLuceneUtilWeakIdentityMap_$1_initWithJavaUtilIterator_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(next_);
  RELEASE_(val$iterator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "setNext", NULL, "Z", 0x2, NULL, NULL },
    { "initWithJavaUtilIterator:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "next_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "nextIsSet_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "val$iterator_", NULL, 0x1012, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Lorg/apache/lucene/util/WeakIdentityMap$IdentityWeakReference;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneUtilWeakIdentityMap", "keyIterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilWeakIdentityMap_$1 = { 2, "", "org.apache.lucene.util", "WeakIdentityMap", 0x8008, 5, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Iterator<TK;>;" };
  return &_OrgApacheLuceneUtilWeakIdentityMap_$1;
}

@end

jboolean OrgApacheLuceneUtilWeakIdentityMap_$1_setNext(OrgApacheLuceneUtilWeakIdentityMap_$1 *self) {
  JreAssert((!self->nextIsSet_), (@"org/apache/lucene/util/WeakIdentityMap.java:200 condition failed: assert !nextIsSet;"));
  while ([((id<JavaUtilIterator>) nil_chk(self->val$iterator_)) hasNext]) {
    JreStrongAssign(&self->next_, [((OrgApacheLuceneUtilWeakIdentityMap_IdentityWeakReference *) nil_chk([self->val$iterator_ next])) get]);
    if (self->next_ == nil) {
      [self->val$iterator_ remove];
    }
    else {
      if (self->next_ == JreLoadStatic(OrgApacheLuceneUtilWeakIdentityMap, NULL__)) {
        JreStrongAssign(&self->next_, nil);
      }
      return self->nextIsSet_ = YES;
    }
  }
  return NO;
}

void OrgApacheLuceneUtilWeakIdentityMap_$1_initWithJavaUtilIterator_(OrgApacheLuceneUtilWeakIdentityMap_$1 *self, id<JavaUtilIterator> capture$0) {
  JreStrongAssign(&self->val$iterator_, capture$0);
  NSObject_init(self);
  JreStrongAssign(&self->next_, nil);
  self->nextIsSet_ = NO;
}

OrgApacheLuceneUtilWeakIdentityMap_$1 *new_OrgApacheLuceneUtilWeakIdentityMap_$1_initWithJavaUtilIterator_(id<JavaUtilIterator> capture$0) {
  OrgApacheLuceneUtilWeakIdentityMap_$1 *self = [OrgApacheLuceneUtilWeakIdentityMap_$1 alloc];
  OrgApacheLuceneUtilWeakIdentityMap_$1_initWithJavaUtilIterator_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilWeakIdentityMap_$1)
