//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/CharsRefBuilder.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/CharsRef.h"
#include "org/apache/lucene/util/CharsRefBuilder.h"
#include "org/apache/lucene/util/UnicodeUtil.h"

@interface OrgApacheLuceneUtilCharsRefBuilder () {
 @public
  OrgApacheLuceneUtilCharsRef *ref_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilCharsRefBuilder, ref_, OrgApacheLuceneUtilCharsRef *)

static NSString *OrgApacheLuceneUtilCharsRefBuilder_NULL_STRING_ = @"null";
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneUtilCharsRefBuilder, NULL_STRING_, NSString *)

@implementation OrgApacheLuceneUtilCharsRefBuilder

- (instancetype)init {
  OrgApacheLuceneUtilCharsRefBuilder_init(self);
  return self;
}

- (IOSCharArray *)chars {
  return ((OrgApacheLuceneUtilCharsRef *) nil_chk(ref_))->chars_;
}

- (jint)length {
  return ((OrgApacheLuceneUtilCharsRef *) nil_chk(ref_))->length_;
}

- (void)setCharAtWithInt:(jint)offset
                withChar:(jchar)b {
  *IOSCharArray_GetRef(nil_chk(((OrgApacheLuceneUtilCharsRef *) nil_chk(ref_))->chars_), offset) = b;
}

- (OrgApacheLuceneUtilCharsRefBuilder *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq {
  if (csq == nil) {
    return [self appendWithJavaLangCharSequence:OrgApacheLuceneUtilCharsRefBuilder_NULL_STRING_];
  }
  return [self appendWithJavaLangCharSequence:csq withInt:0 withInt:[((id<JavaLangCharSequence>) nil_chk(csq)) length]];
}

- (OrgApacheLuceneUtilCharsRefBuilder *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq
                                                               withInt:(jint)start
                                                               withInt:(jint)end {
  if (csq == nil) {
    return [self appendWithJavaLangCharSequence:OrgApacheLuceneUtilCharsRefBuilder_NULL_STRING_];
  }
  [self growWithInt:((OrgApacheLuceneUtilCharsRef *) nil_chk(ref_))->length_ + end - start];
  for (jint i = start; i < end; ++i) {
    [self setCharAtWithInt:ref_->length_++ withChar:[((id<JavaLangCharSequence>) nil_chk(csq)) charAtWithInt:i]];
  }
  return self;
}

- (OrgApacheLuceneUtilCharsRefBuilder *)appendWithChar:(jchar)c {
  [self growWithInt:((OrgApacheLuceneUtilCharsRef *) nil_chk(ref_))->length_ + 1];
  [self setCharAtWithInt:ref_->length_++ withChar:c];
  return self;
}

- (void)growWithInt:(jint)newLength {
  JreStrongAssign(&((OrgApacheLuceneUtilCharsRef *) nil_chk(ref_))->chars_, OrgApacheLuceneUtilArrayUtil_growWithCharArray_withInt_(ref_->chars_, newLength));
}

- (void)copyUTF8BytesWithByteArray:(IOSByteArray *)bytes
                           withInt:(jint)offset
                           withInt:(jint)length {
  [self growWithInt:length];
  ((OrgApacheLuceneUtilCharsRef *) nil_chk(ref_))->length_ = OrgApacheLuceneUtilUnicodeUtil_UTF8toUTF16WithByteArray_withInt_withInt_withCharArray_(bytes, offset, length, ref_->chars_);
}

- (void)copyUTF8BytesWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes {
  [self copyUTF8BytesWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes))->bytes_ withInt:bytes->offset_ withInt:bytes->length_];
}

- (void)appendWithCharArray:(IOSCharArray *)otherChars
                    withInt:(jint)otherOffset
                    withInt:(jint)otherLength {
  jint newLen = ((OrgApacheLuceneUtilCharsRef *) nil_chk(ref_))->length_ + otherLength;
  [self growWithInt:newLen];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(otherChars, otherOffset, ref_->chars_, ref_->length_, otherLength);
  ref_->length_ = newLen;
}

- (OrgApacheLuceneUtilCharsRef *)get {
  JreAssert((((OrgApacheLuceneUtilCharsRef *) nil_chk(ref_))->offset_ == 0), (@"Modifying the offset of the returned ref is illegal"));
  return ref_;
}

- (NSString *)description {
  return [((OrgApacheLuceneUtilCharsRef *) nil_chk([self get])) description];
}

- (jboolean)isEqual:(id)obj {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (NSUInteger)hash {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (void)dealloc {
  RELEASE_(ref_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CharsRefBuilder", NULL, 0x1, NULL, NULL },
    { "chars", NULL, "[C", 0x1, NULL, NULL },
    { "length", NULL, "I", 0x1, NULL, NULL },
    { "setCharAtWithInt:withChar:", "setCharAt", "V", 0x1, NULL, NULL },
    { "appendWithJavaLangCharSequence:", "append", "Lorg.apache.lucene.util.CharsRefBuilder;", 0x1, NULL, NULL },
    { "appendWithJavaLangCharSequence:withInt:withInt:", "append", "Lorg.apache.lucene.util.CharsRefBuilder;", 0x1, NULL, NULL },
    { "appendWithChar:", "append", "Lorg.apache.lucene.util.CharsRefBuilder;", 0x1, NULL, NULL },
    { "growWithInt:", "grow", "V", 0x1, NULL, NULL },
    { "copyUTF8BytesWithByteArray:withInt:withInt:", "copyUTF8Bytes", "V", 0x1, NULL, NULL },
    { "copyUTF8BytesWithOrgApacheLuceneUtilBytesRef:", "copyUTF8Bytes", "V", 0x1, NULL, NULL },
    { "appendWithCharArray:withInt:withInt:", "append", "V", 0x1, NULL, NULL },
    { "get", NULL, "Lorg.apache.lucene.util.CharsRef;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NULL_STRING_", NULL, 0x1a, "Ljava.lang.String;", &OrgApacheLuceneUtilCharsRefBuilder_NULL_STRING_, NULL, .constantValue.asLong = 0 },
    { "ref_", NULL, 0x12, "Lorg.apache.lucene.util.CharsRef;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilCharsRefBuilder = { 2, "CharsRefBuilder", "org.apache.lucene.util", NULL, 0x1, 15, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilCharsRefBuilder;
}

@end

void OrgApacheLuceneUtilCharsRefBuilder_init(OrgApacheLuceneUtilCharsRefBuilder *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->ref_, new_OrgApacheLuceneUtilCharsRef_init());
}

OrgApacheLuceneUtilCharsRefBuilder *new_OrgApacheLuceneUtilCharsRefBuilder_init() {
  OrgApacheLuceneUtilCharsRefBuilder *self = [OrgApacheLuceneUtilCharsRefBuilder alloc];
  OrgApacheLuceneUtilCharsRefBuilder_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilCharsRefBuilder)
