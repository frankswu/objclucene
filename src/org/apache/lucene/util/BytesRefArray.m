//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/BytesRefArray.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/ByteBlockPool.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefArray.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/Counter.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneUtilBytesRefArray () {
 @public
  OrgApacheLuceneUtilByteBlockPool *pool_;
  IOSIntArray *offsets_;
  jint lastElement_;
  jint currentOffset_;
  OrgApacheLuceneUtilCounter *bytesUsed_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray, pool_, OrgApacheLuceneUtilByteBlockPool *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray, offsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray, bytesUsed_, OrgApacheLuceneUtilCounter *)

@implementation OrgApacheLuceneUtilBytesRefArray

- (instancetype)initWithOrgApacheLuceneUtilCounter:(OrgApacheLuceneUtilCounter *)bytesUsed {
  OrgApacheLuceneUtilBytesRefArray_initWithOrgApacheLuceneUtilCounter_(self, bytesUsed);
  return self;
}

- (jint)appendWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes {
  if (lastElement_ >= ((IOSIntArray *) nil_chk(offsets_))->size_) {
    jint oldLen = offsets_->size_;
    JreStrongAssign(&offsets_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(offsets_, offsets_->size_ + 1));
    [((OrgApacheLuceneUtilCounter *) nil_chk(bytesUsed_)) addAndGetWithLong:(((IOSIntArray *) nil_chk(offsets_))->size_ - oldLen) * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT];
  }
  [((OrgApacheLuceneUtilByteBlockPool *) nil_chk(pool_)) appendWithOrgApacheLuceneUtilBytesRef:bytes];
  *IOSIntArray_GetRef(nil_chk(offsets_), lastElement_++) = currentOffset_;
  currentOffset_ += ((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes))->length_;
  return lastElement_ - 1;
}

- (OrgApacheLuceneUtilBytesRef *)getWithOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)spare
                                                                   withInt:(jint)index {
  if (lastElement_ > index) {
    jint offset = IOSIntArray_Get(nil_chk(offsets_), index);
    jint length = index == lastElement_ - 1 ? currentOffset_ - offset : IOSIntArray_Get(offsets_, index + 1) - offset;
    [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(spare)) growWithInt:length];
    [spare setLengthWithInt:length];
    [((OrgApacheLuceneUtilByteBlockPool *) nil_chk(pool_)) readBytesWithLong:offset withByteArray:[spare bytes] withInt:0 withInt:[spare length]];
    return [spare get];
  }
  @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"index ", index, @" must be less than the size: ", lastElement_)) autorelease];
}

- (void)dealloc {
  RELEASE_(pool_);
  RELEASE_(offsets_);
  RELEASE_(bytesUsed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUtilCounter:", "BytesRefArray", NULL, 0x1, NULL, NULL },
    { "appendWithOrgApacheLuceneUtilBytesRef:", "append", "I", 0x1, NULL, NULL },
    { "getWithOrgApacheLuceneUtilBytesRefBuilder:withInt:", "get", "Lorg.apache.lucene.util.BytesRef;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pool_", NULL, 0x12, "Lorg.apache.lucene.util.ByteBlockPool;", NULL, NULL, .constantValue.asLong = 0 },
    { "offsets_", NULL, 0x2, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "lastElement_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "currentOffset_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bytesUsed_", NULL, 0x12, "Lorg.apache.lucene.util.Counter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilBytesRefArray = { 2, "BytesRefArray", "org.apache.lucene.util", NULL, 0x11, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilBytesRefArray;
}

@end

void OrgApacheLuceneUtilBytesRefArray_initWithOrgApacheLuceneUtilCounter_(OrgApacheLuceneUtilBytesRefArray *self, OrgApacheLuceneUtilCounter *bytesUsed) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->offsets_, [IOSIntArray newArrayWithLength:1]);
  self->lastElement_ = 0;
  self->currentOffset_ = 0;
  JreStrongAssignAndConsume(&self->pool_, new_OrgApacheLuceneUtilByteBlockPool_initWithOrgApacheLuceneUtilByteBlockPool_Allocator_([new_OrgApacheLuceneUtilByteBlockPool_DirectTrackingAllocator_initWithOrgApacheLuceneUtilCounter_(bytesUsed) autorelease]));
  [self->pool_ nextBuffer];
  [((OrgApacheLuceneUtilCounter *) nil_chk(bytesUsed)) addAndGetWithLong:JreLoadStatic(OrgApacheLuceneUtilRamUsageEstimator, NUM_BYTES_ARRAY_HEADER_) + OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT];
  JreStrongAssign(&self->bytesUsed_, bytesUsed);
}

OrgApacheLuceneUtilBytesRefArray *new_OrgApacheLuceneUtilBytesRefArray_initWithOrgApacheLuceneUtilCounter_(OrgApacheLuceneUtilCounter *bytesUsed) {
  OrgApacheLuceneUtilBytesRefArray *self = [OrgApacheLuceneUtilBytesRefArray alloc];
  OrgApacheLuceneUtilBytesRefArray_initWithOrgApacheLuceneUtilCounter_(self, bytesUsed);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilBytesRefArray)
