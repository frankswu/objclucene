//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/IOUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/BufferedReader.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/Reader.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Error.h"
#include "java/lang/Exception.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Iterable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/nio/channels/FileChannel.h"
#include "java/nio/charset/Charset.h"
#include "java/nio/charset/CharsetDecoder.h"
#include "java/nio/charset/CodingErrorAction.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/FSDirectory.h"
#include "org/apache/lucene/store/FileSwitchDirectory.h"
#include "org/apache/lucene/store/FilterDirectory.h"
#include "org/apache/lucene/store/RAMDirectory.h"
#include "org/apache/lucene/util/Constants.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/ThreadInterruptedException.h"
#include "org/lukhnos/portmobile/channels/utils/FileChannelUtils.h"
#include "org/lukhnos/portmobile/charset/StandardCharsets.h"
#include "org/lukhnos/portmobile/file/FileVisitResult.h"
#include "org/lukhnos/portmobile/file/FileVisitor.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"
#include "org/lukhnos/portmobile/file/StandardOpenOption.h"
#include "org/lukhnos/portmobile/file/attribute/BasicFileAttributes.h"

@interface OrgApacheLuceneUtilIOUtils ()

- (instancetype)init;

/*!
 @brief adds a Throwable to the list of suppressed Exceptions of the first Throwable
 @param exception this exception should get the suppressed one added
 @param suppressed the suppressed exception
 */
+ (void)addSuppressedWithNSException:(NSException *)exception
                     withNSException:(NSException *)suppressed;

+ (JavaUtilLinkedHashMap *)rmWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)unremoved
                 withOrgLukhnosPortmobileFilePathArray:(IOSObjectArray *)locations;

@end

__attribute__((unused)) static void OrgApacheLuceneUtilIOUtils_init(OrgApacheLuceneUtilIOUtils *self);

__attribute__((unused)) static OrgApacheLuceneUtilIOUtils *new_OrgApacheLuceneUtilIOUtils_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilIOUtils *create_OrgApacheLuceneUtilIOUtils_init();

__attribute__((unused)) static void OrgApacheLuceneUtilIOUtils_addSuppressedWithNSException_withNSException_(NSException *exception, NSException *suppressed);

__attribute__((unused)) static JavaUtilLinkedHashMap *OrgApacheLuceneUtilIOUtils_rmWithJavaUtilLinkedHashMap_withOrgLukhnosPortmobileFilePathArray_(JavaUtilLinkedHashMap *unremoved, IOSObjectArray *locations);

@interface OrgApacheLuceneUtilIOUtils_$1 : NSObject < OrgLukhnosPortmobileFileFileVisitor > {
 @public
  JavaUtilLinkedHashMap *val$unremoved_;
}

- (OrgLukhnosPortmobileFileFileVisitResult *)preVisitDirectoryWithId:(OrgLukhnosPortmobileFilePath *)dir
            withOrgLukhnosPortmobileFileAttributeBasicFileAttributes:(OrgLukhnosPortmobileFileAttributeBasicFileAttributes *)attrs;

- (OrgLukhnosPortmobileFileFileVisitResult *)postVisitDirectoryWithId:(OrgLukhnosPortmobileFilePath *)dir
                                                withJavaIoIOException:(JavaIoIOException *)impossible;

- (OrgLukhnosPortmobileFileFileVisitResult *)visitFileWithId:(OrgLukhnosPortmobileFilePath *)file
    withOrgLukhnosPortmobileFileAttributeBasicFileAttributes:(OrgLukhnosPortmobileFileAttributeBasicFileAttributes *)attrs;

- (OrgLukhnosPortmobileFileFileVisitResult *)visitFileFailedWithId:(OrgLukhnosPortmobileFilePath *)file
                                             withJavaIoIOException:(JavaIoIOException *)exc;

- (instancetype)initWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilIOUtils_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilIOUtils_$1, val$unremoved_, JavaUtilLinkedHashMap *)

__attribute__((unused)) static void OrgApacheLuceneUtilIOUtils_$1_initWithJavaUtilLinkedHashMap_(OrgApacheLuceneUtilIOUtils_$1 *self, JavaUtilLinkedHashMap *capture$0);

__attribute__((unused)) static OrgApacheLuceneUtilIOUtils_$1 *new_OrgApacheLuceneUtilIOUtils_$1_initWithJavaUtilLinkedHashMap_(JavaUtilLinkedHashMap *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilIOUtils_$1 *create_OrgApacheLuceneUtilIOUtils_$1_initWithJavaUtilLinkedHashMap_(JavaUtilLinkedHashMap *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilIOUtils_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilIOUtils)

JavaNioCharsetCharset *OrgApacheLuceneUtilIOUtils_CHARSET_UTF_8;
NSString *OrgApacheLuceneUtilIOUtils_UTF_8;

@implementation OrgApacheLuceneUtilIOUtils

+ (JavaNioCharsetCharset *)CHARSET_UTF_8 {
  return OrgApacheLuceneUtilIOUtils_CHARSET_UTF_8;
}

+ (NSString *)UTF_8 {
  return OrgApacheLuceneUtilIOUtils_UTF_8;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilIOUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)closeWithJavaIoCloseableArray:(IOSObjectArray *)objects {
  OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_(objects);
}

+ (void)closeWithJavaLangIterable:(id<JavaLangIterable>)objects {
  OrgApacheLuceneUtilIOUtils_closeWithJavaLangIterable_(objects);
}

+ (void)closeWhileHandlingExceptionWithJavaIoCloseableArray:(IOSObjectArray *)objects {
  OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_(objects);
}

+ (void)closeWhileHandlingExceptionWithJavaLangIterable:(id<JavaLangIterable>)objects {
  OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaLangIterable_(objects);
}

+ (void)addSuppressedWithNSException:(NSException *)exception
                     withNSException:(NSException *)suppressed {
  OrgApacheLuceneUtilIOUtils_addSuppressedWithNSException_withNSException_(exception, suppressed);
}

+ (JavaIoReader *)getDecodingReaderWithJavaIoInputStream:(JavaIoInputStream *)stream
                               withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charSet {
  return OrgApacheLuceneUtilIOUtils_getDecodingReaderWithJavaIoInputStream_withJavaNioCharsetCharset_(stream, charSet);
}

+ (JavaIoReader *)getDecodingReaderWithIOSClass:(IOSClass *)clazz
                                   withNSString:(NSString *)resource
                      withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charSet {
  return OrgApacheLuceneUtilIOUtils_getDecodingReaderWithIOSClass_withNSString_withJavaNioCharsetCharset_(clazz, resource, charSet);
}

+ (void)deleteFilesIgnoringExceptionsWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                                     withNSStringArray:(IOSObjectArray *)files {
  OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgApacheLuceneStoreDirectory_withNSStringArray_(dir, files);
}

+ (void)deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray:(IOSObjectArray *)files {
  OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray_(files);
}

+ (void)deleteFilesIgnoringExceptionsWithJavaUtilCollection:(id<JavaUtilCollection>)files {
  OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithJavaUtilCollection_(files);
}

+ (void)deleteFilesIfExistWithOrgLukhnosPortmobileFilePathArray:(IOSObjectArray *)files {
  OrgApacheLuceneUtilIOUtils_deleteFilesIfExistWithOrgLukhnosPortmobileFilePathArray_(files);
}

+ (void)deleteFilesIfExistWithJavaUtilCollection:(id<JavaUtilCollection>)files {
  OrgApacheLuceneUtilIOUtils_deleteFilesIfExistWithJavaUtilCollection_(files);
}

+ (void)rmWithOrgLukhnosPortmobileFilePathArray:(IOSObjectArray *)locations {
  OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_(locations);
}

+ (JavaUtilLinkedHashMap *)rmWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)unremoved
                 withOrgLukhnosPortmobileFilePathArray:(IOSObjectArray *)locations {
  return OrgApacheLuceneUtilIOUtils_rmWithJavaUtilLinkedHashMap_withOrgLukhnosPortmobileFilePathArray_(unremoved, locations);
}

+ (void)reThrowWithNSException:(NSException *)th {
  OrgApacheLuceneUtilIOUtils_reThrowWithNSException_(th);
}

+ (void)reThrowUncheckedWithNSException:(NSException *)th {
  OrgApacheLuceneUtilIOUtils_reThrowUncheckedWithNSException_(th);
}

+ (void)fsyncWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)fileToSync
                                  withBoolean:(jboolean)isDir {
  OrgApacheLuceneUtilIOUtils_fsyncWithOrgLukhnosPortmobileFilePath_withBoolean_(fileToSync, isDir);
}

+ (jboolean)spinsWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  return OrgApacheLuceneUtilIOUtils_spinsWithOrgApacheLuceneStoreDirectory_(dir);
}

+ (jboolean)spinsWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgApacheLuceneUtilIOUtils_spinsWithOrgLukhnosPortmobileFilePath_(path);
}

+ (jboolean)spinsLinuxWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgApacheLuceneUtilIOUtils_spinsLinuxWithOrgLukhnosPortmobileFilePath_(path);
}

+ (IOSObjectArray *)__annotations_CHARSET_UTF_8_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilIOUtils class]) {
    JreStrongAssign(&OrgApacheLuceneUtilIOUtils_CHARSET_UTF_8, JreLoadStatic(OrgLukhnosPortmobileCharsetStandardCharsets, UTF_8));
    JreStrongAssign(&OrgApacheLuceneUtilIOUtils_UTF_8, [((JavaNioCharsetCharset *) nil_chk(JreLoadStatic(OrgLukhnosPortmobileCharsetStandardCharsets, UTF_8))) name]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilIOUtils)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "IOUtils", NULL, 0x2, NULL, NULL },
    { "closeWithJavaIoCloseableArray:", "close", "V", 0x89, "Ljava.io.IOException;", NULL },
    { "closeWithJavaLangIterable:", "close", "V", 0x9, "Ljava.io.IOException;", "(Ljava/lang/Iterable<+Ljava/io/Closeable;>;)V" },
    { "closeWhileHandlingExceptionWithJavaIoCloseableArray:", "closeWhileHandlingException", "V", 0x89, NULL, NULL },
    { "closeWhileHandlingExceptionWithJavaLangIterable:", "closeWhileHandlingException", "V", 0x9, NULL, "(Ljava/lang/Iterable<+Ljava/io/Closeable;>;)V" },
    { "addSuppressedWithNSException:withNSException:", "addSuppressed", "V", 0xa, NULL, NULL },
    { "getDecodingReaderWithJavaIoInputStream:withJavaNioCharsetCharset:", "getDecodingReader", "Ljava.io.Reader;", 0x9, NULL, NULL },
    { "getDecodingReaderWithIOSClass:withNSString:withJavaNioCharsetCharset:", "getDecodingReader", "Ljava.io.Reader;", 0x9, "Ljava.io.IOException;", "(Ljava/lang/Class<*>;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/io/Reader;" },
    { "deleteFilesIgnoringExceptionsWithOrgApacheLuceneStoreDirectory:withNSStringArray:", "deleteFilesIgnoringExceptions", "V", 0x89, NULL, NULL },
    { "deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray:", "deleteFilesIgnoringExceptions", "V", 0x89, NULL, NULL },
    { "deleteFilesIgnoringExceptionsWithJavaUtilCollection:", "deleteFilesIgnoringExceptions", "V", 0x9, NULL, "(Ljava/util/Collection<+Lorg/lukhnos/portmobile/file/Path;>;)V" },
    { "deleteFilesIfExistWithOrgLukhnosPortmobileFilePathArray:", "deleteFilesIfExist", "V", 0x89, "Ljava.io.IOException;", NULL },
    { "deleteFilesIfExistWithJavaUtilCollection:", "deleteFilesIfExist", "V", 0x9, "Ljava.io.IOException;", "(Ljava/util/Collection<+Lorg/lukhnos/portmobile/file/Path;>;)V" },
    { "rmWithOrgLukhnosPortmobileFilePathArray:", "rm", "V", 0x89, "Ljava.io.IOException;", NULL },
    { "rmWithJavaUtilLinkedHashMap:withOrgLukhnosPortmobileFilePathArray:", "rm", "Ljava.util.LinkedHashMap;", 0x8a, NULL, "(Ljava/util/LinkedHashMap<Lorg/lukhnos/portmobile/file/Path;Ljava/lang/Throwable;>;[Lorg/lukhnos/portmobile/file/Path;)Ljava/util/LinkedHashMap<Lorg/lukhnos/portmobile/file/Path;Ljava/lang/Throwable;>;" },
    { "reThrowWithNSException:", "reThrow", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "reThrowUncheckedWithNSException:", "reThrowUnchecked", "V", 0x9, NULL, NULL },
    { "fsyncWithOrgLukhnosPortmobileFilePath:withBoolean:", "fsync", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "spinsWithOrgApacheLuceneStoreDirectory:", "spins", "Z", 0x9, "Ljava.io.IOException;", NULL },
    { "spinsWithOrgLukhnosPortmobileFilePath:", "spins", "Z", 0x9, "Ljava.io.IOException;", NULL },
    { "spinsLinuxWithOrgLukhnosPortmobileFilePath:", "spinsLinux", "Z", 0x8, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CHARSET_UTF_8", "CHARSET_UTF_8", 0x19, "Ljava.nio.charset.Charset;", &OrgApacheLuceneUtilIOUtils_CHARSET_UTF_8, NULL, .constantValue.asLong = 0 },
    { "UTF_8", "UTF_8", 0x19, "Ljava.lang.String;", &OrgApacheLuceneUtilIOUtils_UTF_8, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilIOUtils = { 2, "IOUtils", "org.apache.lucene.util", NULL, 0x11, 21, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilIOUtils;
}

@end

void OrgApacheLuceneUtilIOUtils_init(OrgApacheLuceneUtilIOUtils *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilIOUtils *new_OrgApacheLuceneUtilIOUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilIOUtils, init)
}

OrgApacheLuceneUtilIOUtils *create_OrgApacheLuceneUtilIOUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilIOUtils, init)
}

void OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_(IOSObjectArray *objects) {
  OrgApacheLuceneUtilIOUtils_initialize();
  OrgApacheLuceneUtilIOUtils_closeWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_(objects));
}

void OrgApacheLuceneUtilIOUtils_closeWithJavaLangIterable_(id<JavaLangIterable> objects) {
  OrgApacheLuceneUtilIOUtils_initialize();
  NSException *th = nil;
  for (id<JavaIoCloseable> __strong object in nil_chk(objects)) {
    @try {
      if (object != nil) {
        [object close];
      }
    }
    @catch (NSException *t) {
      OrgApacheLuceneUtilIOUtils_addSuppressedWithNSException_withNSException_(th, t);
      if (th == nil) {
        th = t;
      }
    }
  }
  OrgApacheLuceneUtilIOUtils_reThrowWithNSException_(th);
}

void OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_(IOSObjectArray *objects) {
  OrgApacheLuceneUtilIOUtils_initialize();
  OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_(objects));
}

void OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaLangIterable_(id<JavaLangIterable> objects) {
  OrgApacheLuceneUtilIOUtils_initialize();
  for (id<JavaIoCloseable> __strong object in nil_chk(objects)) {
    @try {
      if (object != nil) {
        [object close];
      }
    }
    @catch (NSException *t) {
    }
  }
}

void OrgApacheLuceneUtilIOUtils_addSuppressedWithNSException_withNSException_(NSException *exception, NSException *suppressed) {
  OrgApacheLuceneUtilIOUtils_initialize();
  if (exception != nil && suppressed != nil) {
    [exception addSuppressedWithNSException:suppressed];
  }
}

JavaIoReader *OrgApacheLuceneUtilIOUtils_getDecodingReaderWithJavaIoInputStream_withJavaNioCharsetCharset_(JavaIoInputStream *stream, JavaNioCharsetCharset *charSet) {
  OrgApacheLuceneUtilIOUtils_initialize();
  JavaNioCharsetCharsetDecoder *charSetDecoder = [((JavaNioCharsetCharsetDecoder *) nil_chk([((JavaNioCharsetCharsetDecoder *) nil_chk([((JavaNioCharsetCharset *) nil_chk(charSet)) newDecoder])) onMalformedInputWithJavaNioCharsetCodingErrorAction:JreLoadStatic(JavaNioCharsetCodingErrorAction, REPORT)])) onUnmappableCharacterWithJavaNioCharsetCodingErrorAction:JreLoadStatic(JavaNioCharsetCodingErrorAction, REPORT)];
  return create_JavaIoBufferedReader_initWithJavaIoReader_(create_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharsetDecoder_(stream, charSetDecoder));
}

JavaIoReader *OrgApacheLuceneUtilIOUtils_getDecodingReaderWithIOSClass_withNSString_withJavaNioCharsetCharset_(IOSClass *clazz, NSString *resource, JavaNioCharsetCharset *charSet) {
  OrgApacheLuceneUtilIOUtils_initialize();
  JavaIoInputStream *stream = nil;
  jboolean success = false;
  @try {
    stream = [((IOSClass *) nil_chk(clazz)) getResourceAsStream:resource];
    JavaIoReader *reader = OrgApacheLuceneUtilIOUtils_getDecodingReaderWithJavaIoInputStream_withJavaNioCharsetCharset_(stream, charSet);
    success = true;
    return reader;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ stream } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

void OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgApacheLuceneStoreDirectory_withNSStringArray_(OrgApacheLuceneStoreDirectory *dir, IOSObjectArray *files) {
  OrgApacheLuceneUtilIOUtils_initialize();
  {
    IOSObjectArray *a__ = files;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *name = *b__++;
      @try {
        [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) deleteFileWithNSString:name];
      }
      @catch (NSException *ignored) {
      }
    }
  }
}

void OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray_(IOSObjectArray *files) {
  OrgApacheLuceneUtilIOUtils_initialize();
  OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(files));
}

void OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithJavaUtilCollection_(id<JavaUtilCollection> files) {
  OrgApacheLuceneUtilIOUtils_initialize();
  for (OrgLukhnosPortmobileFilePath * __strong name in nil_chk(files)) {
    if (name != nil) {
      @try {
        OrgLukhnosPortmobileFileFiles_delete__WithOrgLukhnosPortmobileFilePath_(name);
      }
      @catch (NSException *ignored) {
      }
    }
  }
}

void OrgApacheLuceneUtilIOUtils_deleteFilesIfExistWithOrgLukhnosPortmobileFilePathArray_(IOSObjectArray *files) {
  OrgApacheLuceneUtilIOUtils_initialize();
  OrgApacheLuceneUtilIOUtils_deleteFilesIfExistWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(files));
}

void OrgApacheLuceneUtilIOUtils_deleteFilesIfExistWithJavaUtilCollection_(id<JavaUtilCollection> files) {
  OrgApacheLuceneUtilIOUtils_initialize();
  NSException *th = nil;
  for (OrgLukhnosPortmobileFilePath * __strong file in nil_chk(files)) {
    @try {
      if (file != nil) {
        OrgLukhnosPortmobileFileFiles_deleteIfExistsWithOrgLukhnosPortmobileFilePath_(file);
      }
    }
    @catch (NSException *t) {
      OrgApacheLuceneUtilIOUtils_addSuppressedWithNSException_withNSException_(th, t);
      if (th == nil) {
        th = t;
      }
    }
  }
  OrgApacheLuceneUtilIOUtils_reThrowWithNSException_(th);
}

void OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_(IOSObjectArray *locations) {
  OrgApacheLuceneUtilIOUtils_initialize();
  JavaUtilLinkedHashMap *unremoved = OrgApacheLuceneUtilIOUtils_rmWithJavaUtilLinkedHashMap_withOrgLukhnosPortmobileFilePathArray_(create_JavaUtilLinkedHashMap_init(), locations);
  if (![((JavaUtilLinkedHashMap *) nil_chk(unremoved)) isEmpty]) {
    JavaLangStringBuilder *b = create_JavaLangStringBuilder_initWithNSString_(@"Could not remove the following files (in the order of attempts):\n");
    for (id<JavaUtilMap_Entry> __strong kv in nil_chk([unremoved entrySet])) {
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([b appendWithNSString:@"   "])) appendWithId:[((OrgLukhnosPortmobileFilePath *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(kv)) getKey])) toAbsolutePath]])) appendWithNSString:@": "])) appendWithId:[kv getValue]])) appendWithNSString:@"\n"];
    }
    @throw create_JavaIoIOException_initWithNSString_([b description]);
  }
}

JavaUtilLinkedHashMap *OrgApacheLuceneUtilIOUtils_rmWithJavaUtilLinkedHashMap_withOrgLukhnosPortmobileFilePathArray_(JavaUtilLinkedHashMap *unremoved, IOSObjectArray *locations) {
  OrgApacheLuceneUtilIOUtils_initialize();
  if (locations != nil) {
    {
      IOSObjectArray *a__ = locations;
      OrgLukhnosPortmobileFilePath * const *b__ = a__->buffer_;
      OrgLukhnosPortmobileFilePath * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        OrgLukhnosPortmobileFilePath *location = *b__++;
        if (location != nil && OrgLukhnosPortmobileFileFiles_existsWithOrgLukhnosPortmobileFilePath_(location)) {
          @try {
            OrgLukhnosPortmobileFileFiles_walkFileTreeWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileFileVisitor_(location, create_OrgApacheLuceneUtilIOUtils_$1_initWithJavaUtilLinkedHashMap_(unremoved));
          }
          @catch (JavaIoIOException *impossible) {
            @throw create_JavaLangAssertionError_initWithNSString_withNSException_(@"visitor threw exception", impossible);
          }
        }
      }
    }
  }
  return unremoved;
}

void OrgApacheLuceneUtilIOUtils_reThrowWithNSException_(NSException *th) {
  OrgApacheLuceneUtilIOUtils_initialize();
  if (th != nil) {
    if ([th isKindOfClass:[JavaIoIOException class]]) {
      @throw (JavaIoIOException *) cast_chk(th, [JavaIoIOException class]);
    }
    OrgApacheLuceneUtilIOUtils_reThrowUncheckedWithNSException_(th);
  }
}

void OrgApacheLuceneUtilIOUtils_reThrowUncheckedWithNSException_(NSException *th) {
  OrgApacheLuceneUtilIOUtils_initialize();
  if (th != nil) {
    if ([th isKindOfClass:[JavaLangRuntimeException class]]) {
      @throw (JavaLangRuntimeException *) cast_chk(th, [JavaLangRuntimeException class]);
    }
    if ([th isKindOfClass:[JavaLangError class]]) {
      @throw (JavaLangError *) cast_chk(th, [JavaLangError class]);
    }
    @throw create_JavaLangRuntimeException_initWithNSException_(th);
  }
}

void OrgApacheLuceneUtilIOUtils_fsyncWithOrgLukhnosPortmobileFilePath_withBoolean_(OrgLukhnosPortmobileFilePath *fileToSync, jboolean isDir) {
  OrgApacheLuceneUtilIOUtils_initialize();
  JavaIoIOException *exc = nil;
  if (isDir) {
    return;
  }
  @try {
    JavaNioChannelsFileChannel *file = OrgLukhnosPortmobileChannelsUtilsFileChannelUtils_openWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardOpenOptionArray_(fileToSync, [IOSObjectArray arrayWithObjects:(id[]){ isDir ? JreLoadEnum(OrgLukhnosPortmobileFileStandardOpenOption, READ) : JreLoadEnum(OrgLukhnosPortmobileFileStandardOpenOption, WRITE) } count:1 type:OrgLukhnosPortmobileFileStandardOpenOption_class_()]);
    NSException *__primaryException1 = nil;
    @try {
      for (jint retry = 0; retry < 5; retry++) {
        @try {
          [((JavaNioChannelsFileChannel *) nil_chk(file)) forceWithBoolean:true];
          return;
        }
        @catch (JavaIoIOException *ioe) {
          if (exc == nil) {
            exc = ioe;
          }
          @try {
            JavaLangThread_sleepWithLong_(5LL);
          }
          @catch (JavaLangInterruptedException *ie) {
            OrgApacheLuceneUtilThreadInterruptedException *ex = create_OrgApacheLuceneUtilThreadInterruptedException_initWithJavaLangInterruptedException_(ie);
            [ex addSuppressedWithNSException:exc];
            @throw ex;
          }
        }
      }
    }
    @catch (NSException *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (file != nil) {
        if (__primaryException1 != nil) {
          @try {
            [file close];
          } @catch (NSException *e) {
            [__primaryException1 addSuppressedWithNSException:e];
          }
        } else {
          [file close];
        }
      }
    }
  }
  @catch (JavaIoIOException *ioe) {
    if (exc == nil) {
      exc = ioe;
    }
  }
  if (isDir) {
    JreAssert(((JreLoadStatic(OrgApacheLuceneUtilConstants, LINUX) || JreLoadStatic(OrgApacheLuceneUtilConstants, MAC_OS_X)) == false || JreLoadStatic(OrgApacheLuceneUtilConstants, JRE_IS_MINIMUM_JAVA9)), (JreStrcat("$@", @"On Linux and MacOSX fsyncing a directory should not throw IOException, we just don't want to rely on that in production (undocumented). Got: ", exc)));
    return;
  }
  @throw exc;
}

jboolean OrgApacheLuceneUtilIOUtils_spinsWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreDirectory *dir) {
  OrgApacheLuceneUtilIOUtils_initialize();
  dir = OrgApacheLuceneStoreFilterDirectory_unwrapWithOrgApacheLuceneStoreDirectory_(dir);
  if ([dir isKindOfClass:[OrgApacheLuceneStoreFileSwitchDirectory class]]) {
    OrgApacheLuceneStoreFileSwitchDirectory *fsd = (OrgApacheLuceneStoreFileSwitchDirectory *) cast_chk(dir, [OrgApacheLuceneStoreFileSwitchDirectory class]);
    return OrgApacheLuceneUtilIOUtils_spinsWithOrgApacheLuceneStoreDirectory_([((OrgApacheLuceneStoreFileSwitchDirectory *) nil_chk(fsd)) getPrimaryDir]) || OrgApacheLuceneUtilIOUtils_spinsWithOrgApacheLuceneStoreDirectory_([fsd getSecondaryDir]);
  }
  else if ([dir isKindOfClass:[OrgApacheLuceneStoreRAMDirectory class]]) {
    return false;
  }
  else if ([dir isKindOfClass:[OrgApacheLuceneStoreFSDirectory class]]) {
    return OrgApacheLuceneUtilIOUtils_spinsWithOrgLukhnosPortmobileFilePath_([((OrgApacheLuceneStoreFSDirectory *) nil_chk(((OrgApacheLuceneStoreFSDirectory *) cast_chk(dir, [OrgApacheLuceneStoreFSDirectory class])))) getDirectory]);
  }
  else {
    return true;
  }
}

jboolean OrgApacheLuceneUtilIOUtils_spinsWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgApacheLuceneUtilIOUtils_initialize();
  path = [((OrgLukhnosPortmobileFilePath *) nil_chk(path)) toRealPath];
  if (!JreLoadStatic(OrgApacheLuceneUtilConstants, LINUX)) {
    return true;
  }
  @try {
    return OrgApacheLuceneUtilIOUtils_spinsLinuxWithOrgLukhnosPortmobileFilePath_(path);
  }
  @catch (JavaLangException *exc) {
    return true;
  }
}

jboolean OrgApacheLuceneUtilIOUtils_spinsLinuxWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgApacheLuceneUtilIOUtils_initialize();
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilIOUtils)

@implementation OrgApacheLuceneUtilIOUtils_$1

- (OrgLukhnosPortmobileFileFileVisitResult *)preVisitDirectoryWithId:(OrgLukhnosPortmobileFilePath *)dir
            withOrgLukhnosPortmobileFileAttributeBasicFileAttributes:(OrgLukhnosPortmobileFileAttributeBasicFileAttributes *)attrs {
  return JreLoadEnum(OrgLukhnosPortmobileFileFileVisitResult, CONTINUE);
}

- (OrgLukhnosPortmobileFileFileVisitResult *)postVisitDirectoryWithId:(OrgLukhnosPortmobileFilePath *)dir
                                                withJavaIoIOException:(JavaIoIOException *)impossible {
  JreAssert((impossible == nil), (@"org/apache/lucene/util/IOUtils.java:316 condition failed: assert impossible == null;"));
  @try {
    OrgLukhnosPortmobileFileFiles_delete__WithOrgLukhnosPortmobileFilePath_(dir);
  }
  @catch (JavaIoIOException *e) {
    [((JavaUtilLinkedHashMap *) nil_chk(val$unremoved_)) putWithId:dir withId:e];
  }
  return JreLoadEnum(OrgLukhnosPortmobileFileFileVisitResult, CONTINUE);
}

- (OrgLukhnosPortmobileFileFileVisitResult *)visitFileWithId:(OrgLukhnosPortmobileFilePath *)file
    withOrgLukhnosPortmobileFileAttributeBasicFileAttributes:(OrgLukhnosPortmobileFileAttributeBasicFileAttributes *)attrs {
  @try {
    OrgLukhnosPortmobileFileFiles_delete__WithOrgLukhnosPortmobileFilePath_(file);
  }
  @catch (JavaIoIOException *exc) {
    [((JavaUtilLinkedHashMap *) nil_chk(val$unremoved_)) putWithId:file withId:exc];
  }
  return JreLoadEnum(OrgLukhnosPortmobileFileFileVisitResult, CONTINUE);
}

- (OrgLukhnosPortmobileFileFileVisitResult *)visitFileFailedWithId:(OrgLukhnosPortmobileFilePath *)file
                                             withJavaIoIOException:(JavaIoIOException *)exc {
  if (exc != nil) {
    [((JavaUtilLinkedHashMap *) nil_chk(val$unremoved_)) putWithId:file withId:exc];
  }
  return JreLoadEnum(OrgLukhnosPortmobileFileFileVisitResult, CONTINUE);
}

- (instancetype)initWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)capture$0 {
  OrgApacheLuceneUtilIOUtils_$1_initWithJavaUtilLinkedHashMap_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$unremoved_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "preVisitDirectoryWithId:withOrgLukhnosPortmobileFileAttributeBasicFileAttributes:", "preVisitDirectory", "Lorg.lukhnos.portmobile.file.FileVisitResult;", 0x1, "Ljava.io.IOException;", NULL },
    { "postVisitDirectoryWithId:withJavaIoIOException:", "postVisitDirectory", "Lorg.lukhnos.portmobile.file.FileVisitResult;", 0x1, "Ljava.io.IOException;", NULL },
    { "visitFileWithId:withOrgLukhnosPortmobileFileAttributeBasicFileAttributes:", "visitFile", "Lorg.lukhnos.portmobile.file.FileVisitResult;", 0x1, "Ljava.io.IOException;", NULL },
    { "visitFileFailedWithId:withJavaIoIOException:", "visitFileFailed", "Lorg.lukhnos.portmobile.file.FileVisitResult;", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithJavaUtilLinkedHashMap:", "", NULL, 0x0, NULL, "(Ljava/util/LinkedHashMap<Lorg/lukhnos/portmobile/file/Path;Ljava/lang/Throwable;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$unremoved_", NULL, 0x1012, "Ljava.util.LinkedHashMap;", NULL, "Ljava/util/LinkedHashMap<Lorg/lukhnos/portmobile/file/Path;Ljava/lang/Throwable;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneUtilIOUtils", "rmWithJavaUtilLinkedHashMap:withOrgLukhnosPortmobileFilePathArray:" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilIOUtils_$1 = { 2, "", "org.apache.lucene.util", "IOUtils", 0x8008, 5, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/lukhnos/portmobile/file/FileVisitor<Lorg/lukhnos/portmobile/file/Path;>;" };
  return &_OrgApacheLuceneUtilIOUtils_$1;
}

@end

void OrgApacheLuceneUtilIOUtils_$1_initWithJavaUtilLinkedHashMap_(OrgApacheLuceneUtilIOUtils_$1 *self, JavaUtilLinkedHashMap *capture$0) {
  JreStrongAssign(&self->val$unremoved_, capture$0);
  NSObject_init(self);
}

OrgApacheLuceneUtilIOUtils_$1 *new_OrgApacheLuceneUtilIOUtils_$1_initWithJavaUtilLinkedHashMap_(JavaUtilLinkedHashMap *capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilIOUtils_$1, initWithJavaUtilLinkedHashMap_, capture$0)
}

OrgApacheLuceneUtilIOUtils_$1 *create_OrgApacheLuceneUtilIOUtils_$1_initWithJavaUtilLinkedHashMap_(JavaUtilLinkedHashMap *capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilIOUtils_$1, initWithJavaUtilLinkedHashMap_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilIOUtils_$1)
