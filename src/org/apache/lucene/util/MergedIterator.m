//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/MergedIterator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Comparable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Iterator.h"
#include "java/util/NoSuchElementException.h"
#include "org/apache/lucene/util/MergedIterator.h"
#include "org/apache/lucene/util/PriorityQueue.h"

@class OrgApacheLuceneUtilMergedIterator_TermMergeQueue;

@interface OrgApacheLuceneUtilMergedIterator () {
 @public
  id<JavaLangComparable> current_;
  OrgApacheLuceneUtilMergedIterator_TermMergeQueue *queue_;
  IOSObjectArray *top_;
  jboolean removeDuplicates_;
  jint numTop_;
}

- (void)pullTop;

- (void)pushTop;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilMergedIterator, current_, id)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilMergedIterator, queue_, OrgApacheLuceneUtilMergedIterator_TermMergeQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilMergedIterator, top_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheLuceneUtilMergedIterator_pullTop(OrgApacheLuceneUtilMergedIterator *self);

__attribute__((unused)) static void OrgApacheLuceneUtilMergedIterator_pushTop(OrgApacheLuceneUtilMergedIterator *self);

@interface OrgApacheLuceneUtilMergedIterator_SubIterator : NSObject {
 @public
  id<JavaUtilIterator> iterator_;
  id<JavaLangComparable> current_;
  jint index_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilMergedIterator_SubIterator)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilMergedIterator_SubIterator, iterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilMergedIterator_SubIterator, current_, id)

__attribute__((unused)) static void OrgApacheLuceneUtilMergedIterator_SubIterator_init(OrgApacheLuceneUtilMergedIterator_SubIterator *self);

__attribute__((unused)) static OrgApacheLuceneUtilMergedIterator_SubIterator *new_OrgApacheLuceneUtilMergedIterator_SubIterator_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilMergedIterator_SubIterator *create_OrgApacheLuceneUtilMergedIterator_SubIterator_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilMergedIterator_SubIterator)

@interface OrgApacheLuceneUtilMergedIterator_TermMergeQueue : OrgApacheLuceneUtilPriorityQueue

- (instancetype)initWithInt:(jint)size;

- (jboolean)lessThanWithId:(OrgApacheLuceneUtilMergedIterator_SubIterator *)a
                    withId:(OrgApacheLuceneUtilMergedIterator_SubIterator *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilMergedIterator_TermMergeQueue)

__attribute__((unused)) static void OrgApacheLuceneUtilMergedIterator_TermMergeQueue_initWithInt_(OrgApacheLuceneUtilMergedIterator_TermMergeQueue *self, jint size);

__attribute__((unused)) static OrgApacheLuceneUtilMergedIterator_TermMergeQueue *new_OrgApacheLuceneUtilMergedIterator_TermMergeQueue_initWithInt_(jint size) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilMergedIterator_TermMergeQueue *create_OrgApacheLuceneUtilMergedIterator_TermMergeQueue_initWithInt_(jint size);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilMergedIterator_TermMergeQueue)

@implementation OrgApacheLuceneUtilMergedIterator

- (instancetype)initWithJavaUtilIteratorArray:(IOSObjectArray *)iterators {
  OrgApacheLuceneUtilMergedIterator_initWithJavaUtilIteratorArray_(self, iterators);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)removeDuplicates
      withJavaUtilIteratorArray:(IOSObjectArray *)iterators {
  OrgApacheLuceneUtilMergedIterator_initWithBoolean_withJavaUtilIteratorArray_(self, removeDuplicates, iterators);
  return self;
}

- (jboolean)hasNext {
  if ([((OrgApacheLuceneUtilMergedIterator_TermMergeQueue *) nil_chk(queue_)) size] > 0) {
    return true;
  }
  for (jint i = 0; i < numTop_; i++) {
    if ([((id<JavaUtilIterator>) nil_chk(((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk(IOSObjectArray_Get(nil_chk(top_), i)))->iterator_)) hasNext]) {
      return true;
    }
  }
  return false;
}

- (id)next {
  OrgApacheLuceneUtilMergedIterator_pushTop(self);
  if ([((OrgApacheLuceneUtilMergedIterator_TermMergeQueue *) nil_chk(queue_)) size] > 0) {
    OrgApacheLuceneUtilMergedIterator_pullTop(self);
  }
  else {
    JreStrongAssign(&current_, nil);
  }
  if (current_ == nil) {
    @throw create_JavaUtilNoSuchElementException_init();
  }
  return current_;
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)pullTop {
  OrgApacheLuceneUtilMergedIterator_pullTop(self);
}

- (void)pushTop {
  OrgApacheLuceneUtilMergedIterator_pushTop(self);
}

- (void)dealloc {
  RELEASE_(current_);
  RELEASE_(queue_);
  RELEASE_(top_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilIteratorArray:", "MergedIterator", NULL, 0x81, NULL, NULL },
    { "initWithBoolean:withJavaUtilIteratorArray:", "MergedIterator", NULL, 0x81, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "pullTop", NULL, "V", 0x2, NULL, NULL },
    { "pushTop", NULL, "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "current_", NULL, 0x2, "TT;", NULL, "TT;", .constantValue.asLong = 0 },
    { "queue_", NULL, 0x12, "Lorg.apache.lucene.util.MergedIterator$TermMergeQueue;", NULL, "Lorg/apache/lucene/util/MergedIterator$TermMergeQueue<TT;>;", .constantValue.asLong = 0 },
    { "top_", NULL, 0x12, "[Lorg.apache.lucene.util.MergedIterator$SubIterator;", NULL, "[Lorg/apache/lucene/util/MergedIterator$SubIterator<TT;>;", .constantValue.asLong = 0 },
    { "removeDuplicates_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "numTop_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.util.MergedIterator$SubIterator;", "Lorg.apache.lucene.util.MergedIterator$TermMergeQueue;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUtilMergedIterator = { 2, "MergedIterator", "org.apache.lucene.util", NULL, 0x11, 7, methods, 5, fields, 0, NULL, 2, inner_classes, NULL, "<T::Ljava/lang/Comparable<TT;>;>Ljava/lang/Object;Ljava/util/Iterator<TT;>;" };
  return &_OrgApacheLuceneUtilMergedIterator;
}

@end

void OrgApacheLuceneUtilMergedIterator_initWithJavaUtilIteratorArray_(OrgApacheLuceneUtilMergedIterator *self, IOSObjectArray *iterators) {
  OrgApacheLuceneUtilMergedIterator_initWithBoolean_withJavaUtilIteratorArray_(self, true, iterators);
}

OrgApacheLuceneUtilMergedIterator *new_OrgApacheLuceneUtilMergedIterator_initWithJavaUtilIteratorArray_(IOSObjectArray *iterators) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilMergedIterator, initWithJavaUtilIteratorArray_, iterators)
}

OrgApacheLuceneUtilMergedIterator *create_OrgApacheLuceneUtilMergedIterator_initWithJavaUtilIteratorArray_(IOSObjectArray *iterators) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilMergedIterator, initWithJavaUtilIteratorArray_, iterators)
}

void OrgApacheLuceneUtilMergedIterator_initWithBoolean_withJavaUtilIteratorArray_(OrgApacheLuceneUtilMergedIterator *self, jboolean removeDuplicates, IOSObjectArray *iterators) {
  NSObject_init(self);
  self->removeDuplicates_ = removeDuplicates;
  JreStrongAssignAndConsume(&self->queue_, new_OrgApacheLuceneUtilMergedIterator_TermMergeQueue_initWithInt_(((IOSObjectArray *) nil_chk(iterators))->size_));
  JreStrongAssignAndConsume(&self->top_, [IOSObjectArray newArrayWithLength:iterators->size_ type:OrgApacheLuceneUtilMergedIterator_SubIterator_class_()]);
  jint index = 0;
  {
    IOSObjectArray *a__ = iterators;
    id<JavaUtilIterator> const *b__ = a__->buffer_;
    id<JavaUtilIterator> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaUtilIterator> iterator = *b__++;
      if ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
        OrgApacheLuceneUtilMergedIterator_SubIterator *sub = create_OrgApacheLuceneUtilMergedIterator_SubIterator_init();
        JreStrongAssign(&sub->current_, [iterator next]);
        JreStrongAssign(&sub->iterator_, iterator);
        sub->index_ = index++;
        [self->queue_ addWithId:sub];
      }
    }
  }
}

OrgApacheLuceneUtilMergedIterator *new_OrgApacheLuceneUtilMergedIterator_initWithBoolean_withJavaUtilIteratorArray_(jboolean removeDuplicates, IOSObjectArray *iterators) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilMergedIterator, initWithBoolean_withJavaUtilIteratorArray_, removeDuplicates, iterators)
}

OrgApacheLuceneUtilMergedIterator *create_OrgApacheLuceneUtilMergedIterator_initWithBoolean_withJavaUtilIteratorArray_(jboolean removeDuplicates, IOSObjectArray *iterators) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilMergedIterator, initWithBoolean_withJavaUtilIteratorArray_, removeDuplicates, iterators)
}

void OrgApacheLuceneUtilMergedIterator_pullTop(OrgApacheLuceneUtilMergedIterator *self) {
  JreAssert((self->numTop_ == 0), (@"org/apache/lucene/util/MergedIterator.java:113 condition failed: assert numTop == 0;"));
  IOSObjectArray_Set(nil_chk(self->top_), self->numTop_++, [((OrgApacheLuceneUtilMergedIterator_TermMergeQueue *) nil_chk(self->queue_)) pop]);
  if (self->removeDuplicates_) {
    while ([self->queue_ size] != 0 && [((id<JavaLangComparable>) nil_chk(((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk([self->queue_ top]))->current_)) isEqual:((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk(IOSObjectArray_Get(self->top_, 0)))->current_]) {
      IOSObjectArray_Set(self->top_, self->numTop_++, [self->queue_ pop]);
    }
  }
  JreStrongAssign(&self->current_, ((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk(IOSObjectArray_Get(self->top_, 0)))->current_);
}

void OrgApacheLuceneUtilMergedIterator_pushTop(OrgApacheLuceneUtilMergedIterator *self) {
  for (jint i = 0; i < self->numTop_; i++) {
    if ([((id<JavaUtilIterator>) nil_chk(((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk(IOSObjectArray_Get(nil_chk(self->top_), i)))->iterator_)) hasNext]) {
      JreStrongAssign(&((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk(IOSObjectArray_Get(self->top_, i)))->current_, [((id<JavaUtilIterator>) nil_chk(((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk(IOSObjectArray_Get(self->top_, i)))->iterator_)) next]);
      [((OrgApacheLuceneUtilMergedIterator_TermMergeQueue *) nil_chk(self->queue_)) addWithId:IOSObjectArray_Get(self->top_, i)];
    }
    else {
      JreStrongAssign(&((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk(IOSObjectArray_Get(self->top_, i)))->current_, nil);
    }
  }
  self->numTop_ = 0;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilMergedIterator)

@implementation OrgApacheLuceneUtilMergedIterator_SubIterator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilMergedIterator_SubIterator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(iterator_);
  RELEASE_(current_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SubIterator", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iterator_", NULL, 0x0, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<TI;>;", .constantValue.asLong = 0 },
    { "current_", NULL, 0x0, "TI;", NULL, "TI;", .constantValue.asLong = 0 },
    { "index_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilMergedIterator_SubIterator = { 2, "SubIterator", "org.apache.lucene.util", "MergedIterator", 0xa, 1, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<I::Ljava/lang/Comparable<TI;>;>Ljava/lang/Object;" };
  return &_OrgApacheLuceneUtilMergedIterator_SubIterator;
}

@end

void OrgApacheLuceneUtilMergedIterator_SubIterator_init(OrgApacheLuceneUtilMergedIterator_SubIterator *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilMergedIterator_SubIterator *new_OrgApacheLuceneUtilMergedIterator_SubIterator_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilMergedIterator_SubIterator, init)
}

OrgApacheLuceneUtilMergedIterator_SubIterator *create_OrgApacheLuceneUtilMergedIterator_SubIterator_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilMergedIterator_SubIterator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilMergedIterator_SubIterator)

@implementation OrgApacheLuceneUtilMergedIterator_TermMergeQueue

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneUtilMergedIterator_TermMergeQueue_initWithInt_(self, size);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneUtilMergedIterator_SubIterator *)a
                    withId:(OrgApacheLuceneUtilMergedIterator_SubIterator *)b {
  jint cmp = [((id<JavaLangComparable>) nil_chk(((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk(a))->current_)) compareToWithId:((id<JavaLangComparable>) ((OrgApacheLuceneUtilMergedIterator_SubIterator *) nil_chk(b))->current_)];
  if (cmp != 0) {
    return cmp < 0;
  }
  else {
    return a->index_ < b->index_;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "TermMergeQueue", NULL, 0x0, NULL, NULL },
    { "lessThanWithId:withId:", "lessThan", "Z", 0x4, NULL, "(Lorg/apache/lucene/util/MergedIterator$SubIterator<TC;>;Lorg/apache/lucene/util/MergedIterator$SubIterator<TC;>;)Z" },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.util.MergedIterator$SubIterator;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUtilMergedIterator_TermMergeQueue = { 2, "TermMergeQueue", "org.apache.lucene.util", "MergedIterator", 0xa, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "<C::Ljava/lang/Comparable<TC;>;>Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/util/MergedIterator$SubIterator<TC;>;>;" };
  return &_OrgApacheLuceneUtilMergedIterator_TermMergeQueue;
}

@end

void OrgApacheLuceneUtilMergedIterator_TermMergeQueue_initWithInt_(OrgApacheLuceneUtilMergedIterator_TermMergeQueue *self, jint size) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, size);
}

OrgApacheLuceneUtilMergedIterator_TermMergeQueue *new_OrgApacheLuceneUtilMergedIterator_TermMergeQueue_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilMergedIterator_TermMergeQueue, initWithInt_, size)
}

OrgApacheLuceneUtilMergedIterator_TermMergeQueue *create_OrgApacheLuceneUtilMergedIterator_TermMergeQueue_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilMergedIterator_TermMergeQueue, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilMergedIterator_TermMergeQueue)
