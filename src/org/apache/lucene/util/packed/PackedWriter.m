//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/packed/PackedWriter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/EOFException.h"
#include "java/io/IOException.h"
#include "java/util/Arrays.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/util/packed/BulkOperation.h"
#include "org/apache/lucene/util/packed/PackedInts.h"
#include "org/apache/lucene/util/packed/PackedWriter.h"

@interface OrgApacheLuceneUtilPackedPackedWriter ()

- (void)flush;

@end

__attribute__((unused)) static void OrgApacheLuceneUtilPackedPackedWriter_flush(OrgApacheLuceneUtilPackedPackedWriter *self);

@implementation OrgApacheLuceneUtilPackedPackedWriter

- (instancetype)initWithOrgApacheLuceneUtilPackedPackedInts_FormatEnum:(OrgApacheLuceneUtilPackedPackedInts_FormatEnum *)format
                                    withOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)outArg
                                                               withInt:(jint)valueCount
                                                               withInt:(jint)bitsPerValue
                                                               withInt:(jint)mem {
  OrgApacheLuceneUtilPackedPackedWriter_initWithOrgApacheLuceneUtilPackedPackedInts_FormatEnum_withOrgApacheLuceneStoreDataOutput_withInt_withInt_withInt_(self, format, outArg, valueCount, bitsPerValue, mem);
  return self;
}

- (OrgApacheLuceneUtilPackedPackedInts_FormatEnum *)getFormat {
  return format_;
}

- (void)addWithLong:(jlong)v {
  JreAssert((OrgApacheLuceneUtilPackedPackedInts_unsignedBitsRequiredWithLong_(v) <= bitsPerValue_), (@"org/apache/lucene/util/packed/PackedWriter.java:59 condition failed: assert PackedInts.unsignedBitsRequired(v) <= bitsPerValue;"));
  JreAssert((!finished_), (@"org/apache/lucene/util/packed/PackedWriter.java:60 condition failed: assert !finished;"));
  if (valueCount_ != -1 && written_ >= valueCount_) {
    @throw [new_JavaIoEOFException_initWithNSString_(@"Writing past end of stream") autorelease];
  }
  *IOSLongArray_GetRef(nil_chk(nextValues_), off_++) = v;
  if (off_ == nextValues_->size_) {
    OrgApacheLuceneUtilPackedPackedWriter_flush(self);
  }
  ++written_;
}

- (void)finish {
  JreAssert((!finished_), (@"org/apache/lucene/util/packed/PackedWriter.java:73 condition failed: assert !finished;"));
  if (valueCount_ != -1) {
    while (written_ < valueCount_) {
      [self addWithLong:0LL];
    }
  }
  OrgApacheLuceneUtilPackedPackedWriter_flush(self);
  finished_ = YES;
}

- (void)flush {
  OrgApacheLuceneUtilPackedPackedWriter_flush(self);
}

- (jint)ord {
  return written_ - 1;
}

- (void)dealloc {
  RELEASE_(format_);
  RELEASE_(encoder_);
  RELEASE_(nextBlocks_);
  RELEASE_(nextValues_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUtilPackedPackedInts_FormatEnum:withOrgApacheLuceneStoreDataOutput:withInt:withInt:withInt:", "PackedWriter", NULL, 0x0, NULL, NULL },
    { "getFormat", NULL, "Lorg.apache.lucene.util.packed.PackedInts$Format;", 0x4, NULL, NULL },
    { "addWithLong:", "add", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "finish", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "flush", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "ord", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "finished_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "format_", NULL, 0x10, "Lorg.apache.lucene.util.packed.PackedInts$Format;", NULL, NULL, .constantValue.asLong = 0 },
    { "encoder_", NULL, 0x10, "Lorg.apache.lucene.util.packed.BulkOperation;", NULL, NULL, .constantValue.asLong = 0 },
    { "nextBlocks_", NULL, 0x10, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "nextValues_", NULL, 0x10, "[J", NULL, NULL, .constantValue.asLong = 0 },
    { "iterations_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "off_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "written_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilPackedPackedWriter = { 2, "PackedWriter", "org.apache.lucene.util.packed", NULL, 0x10, 6, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilPackedPackedWriter;
}

@end

void OrgApacheLuceneUtilPackedPackedWriter_initWithOrgApacheLuceneUtilPackedPackedInts_FormatEnum_withOrgApacheLuceneStoreDataOutput_withInt_withInt_withInt_(OrgApacheLuceneUtilPackedPackedWriter *self, OrgApacheLuceneUtilPackedPackedInts_FormatEnum *format, OrgApacheLuceneStoreDataOutput *outArg, jint valueCount, jint bitsPerValue, jint mem) {
  OrgApacheLuceneUtilPackedPackedInts_Writer_initWithOrgApacheLuceneStoreDataOutput_withInt_withInt_(self, outArg, valueCount, bitsPerValue);
  JreStrongAssign(&self->format_, format);
  JreStrongAssign(&self->encoder_, OrgApacheLuceneUtilPackedBulkOperation_ofWithOrgApacheLuceneUtilPackedPackedInts_FormatEnum_withInt_(format, bitsPerValue));
  self->iterations_ = [((OrgApacheLuceneUtilPackedBulkOperation *) nil_chk(self->encoder_)) computeIterationsWithInt:valueCount withInt:mem];
  JreStrongAssignAndConsume(&self->nextBlocks_, [IOSByteArray newArrayWithLength:self->iterations_ * [self->encoder_ byteBlockCount]]);
  JreStrongAssignAndConsume(&self->nextValues_, [IOSLongArray newArrayWithLength:self->iterations_ * [self->encoder_ byteValueCount]]);
  self->off_ = 0;
  self->written_ = 0;
  self->finished_ = NO;
}

OrgApacheLuceneUtilPackedPackedWriter *new_OrgApacheLuceneUtilPackedPackedWriter_initWithOrgApacheLuceneUtilPackedPackedInts_FormatEnum_withOrgApacheLuceneStoreDataOutput_withInt_withInt_withInt_(OrgApacheLuceneUtilPackedPackedInts_FormatEnum *format, OrgApacheLuceneStoreDataOutput *outArg, jint valueCount, jint bitsPerValue, jint mem) {
  OrgApacheLuceneUtilPackedPackedWriter *self = [OrgApacheLuceneUtilPackedPackedWriter alloc];
  OrgApacheLuceneUtilPackedPackedWriter_initWithOrgApacheLuceneUtilPackedPackedInts_FormatEnum_withOrgApacheLuceneStoreDataOutput_withInt_withInt_withInt_(self, format, outArg, valueCount, bitsPerValue, mem);
  return self;
}

void OrgApacheLuceneUtilPackedPackedWriter_flush(OrgApacheLuceneUtilPackedPackedWriter *self) {
  [((OrgApacheLuceneUtilPackedBulkOperation *) nil_chk(self->encoder_)) encodeWithLongArray:self->nextValues_ withInt:0 withByteArray:self->nextBlocks_ withInt:0 withInt:self->iterations_];
  jint blockCount = (jint) [((OrgApacheLuceneUtilPackedPackedInts_FormatEnum *) nil_chk(self->format_)) byteCountWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT withInt:self->off_ withInt:self->bitsPerValue_];
  [((OrgApacheLuceneStoreDataOutput *) nil_chk(self->out_)) writeBytesWithByteArray:self->nextBlocks_ withInt:blockCount];
  JavaUtilArrays_fillWithLongArray_withLong_(self->nextValues_, 0LL);
  self->off_ = 0;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilPackedPackedWriter)
