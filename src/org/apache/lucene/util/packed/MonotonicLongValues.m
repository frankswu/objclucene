//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/packed/MonotonicLongValues.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/Arrays.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/packed/DeltaPackedLongValues.h"
#include "org/apache/lucene/util/packed/MonotonicBlockPackedReader.h"
#include "org/apache/lucene/util/packed/MonotonicLongValues.h"
#include "org/apache/lucene/util/packed/PackedInts.h"
#include "org/apache/lucene/util/packed/PackedLongValues.h"

inline jlong OrgApacheLuceneUtilPackedMonotonicLongValues_get_BASE_RAM_BYTES_USED();
static jlong OrgApacheLuceneUtilPackedMonotonicLongValues_BASE_RAM_BYTES_USED;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneUtilPackedMonotonicLongValues, BASE_RAM_BYTES_USED, jlong)

inline jlong OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_get_BASE_RAM_BYTES_USED();
static jlong OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_BASE_RAM_BYTES_USED;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneUtilPackedMonotonicLongValues_Builder, BASE_RAM_BYTES_USED, jlong)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilPackedMonotonicLongValues)

@implementation OrgApacheLuceneUtilPackedMonotonicLongValues

- (instancetype)initWithInt:(jint)pageShift
                    withInt:(jint)pageMask
withOrgApacheLuceneUtilPackedPackedInts_ReaderArray:(IOSObjectArray *)values
              withLongArray:(IOSLongArray *)mins
             withFloatArray:(IOSFloatArray *)averages
                   withLong:(jlong)size
                   withLong:(jlong)ramBytesUsed {
  OrgApacheLuceneUtilPackedMonotonicLongValues_initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLongArray_withFloatArray_withLong_withLong_(self, pageShift, pageMask, values, mins, averages, size, ramBytesUsed);
  return self;
}

- (jlong)getWithInt:(jint)block
            withInt:(jint)element {
  return OrgApacheLuceneUtilPackedMonotonicBlockPackedReader_expectedWithLong_withFloat_withInt_(IOSLongArray_Get(nil_chk(mins_), block), IOSFloatArray_Get(nil_chk(averages_), block), element) + [((OrgApacheLuceneUtilPackedPackedInts_Reader *) nil_chk(IOSObjectArray_Get(nil_chk(values_), block))) getWithInt:element];
}

- (jint)decodeBlockWithInt:(jint)block
             withLongArray:(IOSLongArray *)dest {
  jint count = [super decodeBlockWithInt:block withLongArray:dest];
  jfloat average = IOSFloatArray_Get(nil_chk(averages_), block);
  for (jint i = 0; i < count; ++i) {
    *IOSLongArray_GetRef(nil_chk(dest), i) += OrgApacheLuceneUtilPackedMonotonicBlockPackedReader_expectedWithLong_withFloat_withInt_(0, average, i);
  }
  return count;
}

- (void)dealloc {
  RELEASE_(averages_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilPackedMonotonicLongValues class]) {
    OrgApacheLuceneUtilPackedMonotonicLongValues_BASE_RAM_BYTES_USED = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneUtilPackedMonotonicLongValues_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilPackedMonotonicLongValues)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withOrgApacheLuceneUtilPackedPackedInts_ReaderArray:withLongArray:withFloatArray:withLong:withLong:", "MonotonicLongValues", NULL, 0x0, NULL, NULL },
    { "getWithInt:withInt:", "get", "J", 0x0, NULL, NULL },
    { "decodeBlockWithInt:withLongArray:", "decodeBlock", "I", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED", "BASE_RAM_BYTES_USED", 0x1a, "J", &OrgApacheLuceneUtilPackedMonotonicLongValues_BASE_RAM_BYTES_USED, NULL, .constantValue.asLong = 0 },
    { "averages_", NULL, 0x10, "[F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.util.packed.MonotonicLongValues$Builder;"};
  static const J2ObjcClassInfo _OrgApacheLuceneUtilPackedMonotonicLongValues = { 2, "MonotonicLongValues", "org.apache.lucene.util.packed", NULL, 0x0, 3, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneUtilPackedMonotonicLongValues;
}

@end

void OrgApacheLuceneUtilPackedMonotonicLongValues_initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLongArray_withFloatArray_withLong_withLong_(OrgApacheLuceneUtilPackedMonotonicLongValues *self, jint pageShift, jint pageMask, IOSObjectArray *values, IOSLongArray *mins, IOSFloatArray *averages, jlong size, jlong ramBytesUsed) {
  OrgApacheLuceneUtilPackedDeltaPackedLongValues_initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLongArray_withLong_withLong_(self, pageShift, pageMask, values, mins, size, ramBytesUsed);
  JreAssert((((IOSObjectArray *) nil_chk(values))->size_ == ((IOSFloatArray *) nil_chk(averages))->size_), (@"org/apache/lucene/util/packed/MonotonicLongValues.java:36 condition failed: assert values.length == averages.length;"));
  JreStrongAssign(&self->averages_, averages);
}

OrgApacheLuceneUtilPackedMonotonicLongValues *new_OrgApacheLuceneUtilPackedMonotonicLongValues_initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLongArray_withFloatArray_withLong_withLong_(jint pageShift, jint pageMask, IOSObjectArray *values, IOSLongArray *mins, IOSFloatArray *averages, jlong size, jlong ramBytesUsed) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilPackedMonotonicLongValues, initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLongArray_withFloatArray_withLong_withLong_, pageShift, pageMask, values, mins, averages, size, ramBytesUsed)
}

OrgApacheLuceneUtilPackedMonotonicLongValues *create_OrgApacheLuceneUtilPackedMonotonicLongValues_initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLongArray_withFloatArray_withLong_withLong_(jint pageShift, jint pageMask, IOSObjectArray *values, IOSLongArray *mins, IOSFloatArray *averages, jlong size, jlong ramBytesUsed) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilPackedMonotonicLongValues, initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLongArray_withFloatArray_withLong_withLong_, pageShift, pageMask, values, mins, averages, size, ramBytesUsed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilPackedMonotonicLongValues)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilPackedMonotonicLongValues_Builder)

@implementation OrgApacheLuceneUtilPackedMonotonicLongValues_Builder

- (instancetype)initWithInt:(jint)pageSize
                  withFloat:(jfloat)acceptableOverheadRatio {
  OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_initWithInt_withFloat_(self, pageSize, acceptableOverheadRatio);
  return self;
}

- (jlong)baseRamBytesUsed {
  return OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_BASE_RAM_BYTES_USED;
}

- (OrgApacheLuceneUtilPackedMonotonicLongValues *)build {
  [self finish];
  JreStrongAssign(&pending_, nil);
  IOSObjectArray *values = JavaUtilArrays_copyOfWithNSObjectArray_withInt_(self->values_, valuesOff_);
  IOSLongArray *mins = JavaUtilArrays_copyOfWithLongArray_withInt_(self->mins_, valuesOff_);
  IOSFloatArray *averages = JavaUtilArrays_copyOfWithFloatArray_withInt_(self->averages_, valuesOff_);
  jlong ramBytesUsed = JreLoadStatic(OrgApacheLuceneUtilPackedMonotonicLongValues, BASE_RAM_BYTES_USED) + OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithOrgApacheLuceneUtilAccountableArray_(values) + OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithLongArray_(mins) + OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithFloatArray_(averages);
  return create_OrgApacheLuceneUtilPackedMonotonicLongValues_initWithInt_withInt_withOrgApacheLuceneUtilPackedPackedInts_ReaderArray_withLongArray_withFloatArray_withLong_withLong_(pageShift_, pageMask_, values, mins, averages, size_, ramBytesUsed);
}

- (void)packWithLongArray:(IOSLongArray *)values
                  withInt:(jint)numValues
                  withInt:(jint)block
                withFloat:(jfloat)acceptableOverheadRatio {
  jfloat average = numValues == 1 ? 0 : (jfloat) (IOSLongArray_Get(nil_chk(values), numValues - 1) - IOSLongArray_Get(values, 0)) / (numValues - 1);
  for (jint i = 0; i < numValues; ++i) {
    *IOSLongArray_GetRef(nil_chk(values), i) -= OrgApacheLuceneUtilPackedMonotonicBlockPackedReader_expectedWithLong_withFloat_withInt_(0, average, i);
  }
  [super packWithLongArray:values withInt:numValues withInt:block withFloat:acceptableOverheadRatio];
  *IOSFloatArray_GetRef(nil_chk(averages_), block) = average;
}

- (void)growWithInt:(jint)newBlockCount {
  [super growWithInt:newBlockCount];
  ramBytesUsed_ -= OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithFloatArray_(averages_);
  JreStrongAssign(&averages_, JavaUtilArrays_copyOfWithFloatArray_withInt_(averages_, newBlockCount));
  ramBytesUsed_ += OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithFloatArray_(averages_);
}

- (void)dealloc {
  RELEASE_(averages_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilPackedMonotonicLongValues_Builder class]) {
    OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_BASE_RAM_BYTES_USED = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilPackedMonotonicLongValues_Builder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withFloat:", "Builder", NULL, 0x0, NULL, NULL },
    { "baseRamBytesUsed", NULL, "J", 0x0, NULL, NULL },
    { "build", NULL, "Lorg.apache.lucene.util.packed.MonotonicLongValues;", 0x1, NULL, NULL },
    { "packWithLongArray:withInt:withInt:withFloat:", "pack", "V", 0x0, NULL, NULL },
    { "growWithInt:", "grow", "V", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED", "BASE_RAM_BYTES_USED", 0x1a, "J", &OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_BASE_RAM_BYTES_USED, NULL, .constantValue.asLong = 0 },
    { "averages_", NULL, 0x0, "[F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilPackedMonotonicLongValues_Builder = { 2, "Builder", "org.apache.lucene.util.packed", "MonotonicLongValues", 0x8, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneUtilPackedMonotonicLongValues_Builder;
}

@end

void OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_initWithInt_withFloat_(OrgApacheLuceneUtilPackedMonotonicLongValues_Builder *self, jint pageSize, jfloat acceptableOverheadRatio) {
  OrgApacheLuceneUtilPackedDeltaPackedLongValues_Builder_initWithInt_withFloat_(self, pageSize, acceptableOverheadRatio);
  JreStrongAssignAndConsume(&self->averages_, [IOSFloatArray newArrayWithLength:((IOSObjectArray *) nil_chk(self->values_))->size_]);
  self->ramBytesUsed_ += OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithFloatArray_(self->averages_);
}

OrgApacheLuceneUtilPackedMonotonicLongValues_Builder *new_OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_initWithInt_withFloat_(jint pageSize, jfloat acceptableOverheadRatio) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilPackedMonotonicLongValues_Builder, initWithInt_withFloat_, pageSize, acceptableOverheadRatio)
}

OrgApacheLuceneUtilPackedMonotonicLongValues_Builder *create_OrgApacheLuceneUtilPackedMonotonicLongValues_Builder_initWithInt_withFloat_(jint pageSize, jfloat acceptableOverheadRatio) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilPackedMonotonicLongValues_Builder, initWithInt_withFloat_, pageSize, acceptableOverheadRatio)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilPackedMonotonicLongValues_Builder)
