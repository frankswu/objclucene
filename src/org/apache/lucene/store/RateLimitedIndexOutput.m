//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/RateLimitedIndexOutput.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/RateLimitedIndexOutput.h"
#include "org/apache/lucene/store/RateLimiter.h"

@interface OrgApacheLuceneStoreRateLimitedIndexOutput () {
 @public
  OrgApacheLuceneStoreIndexOutput *delegate_;
  OrgApacheLuceneStoreRateLimiter *rateLimiter_;
  jlong bytesSinceLastPause_;
  jlong currentMinPauseCheckBytes_;
}

- (void)checkRate;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreRateLimitedIndexOutput, delegate_, OrgApacheLuceneStoreIndexOutput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreRateLimitedIndexOutput, rateLimiter_, OrgApacheLuceneStoreRateLimiter *)

__attribute__((unused)) static void OrgApacheLuceneStoreRateLimitedIndexOutput_checkRate(OrgApacheLuceneStoreRateLimitedIndexOutput *self);

@implementation OrgApacheLuceneStoreRateLimitedIndexOutput

- (instancetype)initWithOrgApacheLuceneStoreRateLimiter:(OrgApacheLuceneStoreRateLimiter *)rateLimiter
                    withOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)delegate {
  OrgApacheLuceneStoreRateLimitedIndexOutput_initWithOrgApacheLuceneStoreRateLimiter_withOrgApacheLuceneStoreIndexOutput_(self, rateLimiter, delegate);
  return self;
}

- (void)close {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(delegate_)) close];
}

- (jlong)getFilePointer {
  return [((OrgApacheLuceneStoreIndexOutput *) nil_chk(delegate_)) getFilePointer];
}

- (jlong)getChecksum {
  return [((OrgApacheLuceneStoreIndexOutput *) nil_chk(delegate_)) getChecksum];
}

- (void)writeByteWithByte:(jbyte)b {
  bytesSinceLastPause_++;
  OrgApacheLuceneStoreRateLimitedIndexOutput_checkRate(self);
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(delegate_)) writeByteWithByte:b];
}

- (void)writeBytesWithByteArray:(IOSByteArray *)b
                        withInt:(jint)offset
                        withInt:(jint)length {
  bytesSinceLastPause_ += length;
  OrgApacheLuceneStoreRateLimitedIndexOutput_checkRate(self);
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(delegate_)) writeBytesWithByteArray:b withInt:offset withInt:length];
}

- (void)checkRate {
  OrgApacheLuceneStoreRateLimitedIndexOutput_checkRate(self);
}

- (void)dealloc {
  RELEASE_(delegate_);
  RELEASE_(rateLimiter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreRateLimiter:withOrgApacheLuceneStoreIndexOutput:", "RateLimitedIndexOutput", NULL, 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getFilePointer", NULL, "J", 0x1, NULL, NULL },
    { "getChecksum", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "writeByteWithByte:", "writeByte", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "writeBytesWithByteArray:withInt:withInt:", "writeBytes", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "checkRate", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", NULL, 0x12, "Lorg.apache.lucene.store.IndexOutput;", NULL, NULL, .constantValue.asLong = 0 },
    { "rateLimiter_", NULL, 0x12, "Lorg.apache.lucene.store.RateLimiter;", NULL, NULL, .constantValue.asLong = 0 },
    { "bytesSinceLastPause_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "currentMinPauseCheckBytes_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreRateLimitedIndexOutput = { 2, "RateLimitedIndexOutput", "org.apache.lucene.store", NULL, 0x11, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneStoreRateLimitedIndexOutput;
}

@end

void OrgApacheLuceneStoreRateLimitedIndexOutput_initWithOrgApacheLuceneStoreRateLimiter_withOrgApacheLuceneStoreIndexOutput_(OrgApacheLuceneStoreRateLimitedIndexOutput *self, OrgApacheLuceneStoreRateLimiter *rateLimiter, OrgApacheLuceneStoreIndexOutput *delegate) {
  OrgApacheLuceneStoreIndexOutput_initWithNSString_(self, JreStrcat("$@C", @"RateLimitedIndexOutput(", delegate, ')'));
  JreStrongAssign(&self->delegate_, delegate);
  JreStrongAssign(&self->rateLimiter_, rateLimiter);
  self->currentMinPauseCheckBytes_ = [((OrgApacheLuceneStoreRateLimiter *) nil_chk(rateLimiter)) getMinPauseCheckBytes];
}

OrgApacheLuceneStoreRateLimitedIndexOutput *new_OrgApacheLuceneStoreRateLimitedIndexOutput_initWithOrgApacheLuceneStoreRateLimiter_withOrgApacheLuceneStoreIndexOutput_(OrgApacheLuceneStoreRateLimiter *rateLimiter, OrgApacheLuceneStoreIndexOutput *delegate) {
  OrgApacheLuceneStoreRateLimitedIndexOutput *self = [OrgApacheLuceneStoreRateLimitedIndexOutput alloc];
  OrgApacheLuceneStoreRateLimitedIndexOutput_initWithOrgApacheLuceneStoreRateLimiter_withOrgApacheLuceneStoreIndexOutput_(self, rateLimiter, delegate);
  return self;
}

void OrgApacheLuceneStoreRateLimitedIndexOutput_checkRate(OrgApacheLuceneStoreRateLimitedIndexOutput *self) {
  if (self->bytesSinceLastPause_ > self->currentMinPauseCheckBytes_) {
    [((OrgApacheLuceneStoreRateLimiter *) nil_chk(self->rateLimiter_)) pauseWithLong:self->bytesSinceLastPause_];
    self->bytesSinceLastPause_ = 0;
    self->currentMinPauseCheckBytes_ = [self->rateLimiter_ getMinPauseCheckBytes];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreRateLimitedIndexOutput)
