//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/FileSwitchDirectory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/FileSwitchDirectory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/Lock.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/lukhnos/portmobile/file/AtomicMoveNotSupportedException.h"
#include "org/lukhnos/portmobile/file/NoSuchFileException.h"

@interface OrgApacheLuceneStoreFileSwitchDirectory () {
 @public
  OrgApacheLuceneStoreDirectory *secondaryDir_;
  OrgApacheLuceneStoreDirectory *primaryDir_;
  id<JavaUtilSet> primaryExtensions_;
  jboolean doClose_;
}

- (OrgApacheLuceneStoreDirectory *)getDirectoryWithNSString:(NSString *)name;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreFileSwitchDirectory, secondaryDir_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreFileSwitchDirectory, primaryDir_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreFileSwitchDirectory, primaryExtensions_, id<JavaUtilSet>)

__attribute__((unused)) static OrgApacheLuceneStoreDirectory *OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(OrgApacheLuceneStoreFileSwitchDirectory *self, NSString *name);

@implementation OrgApacheLuceneStoreFileSwitchDirectory

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)primaryExtensions
  withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)primaryDir
  withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)secondaryDir
                        withBoolean:(jboolean)doClose {
  OrgApacheLuceneStoreFileSwitchDirectory_initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(self, primaryExtensions, primaryDir, secondaryDir, doClose);
  return self;
}

- (OrgApacheLuceneStoreDirectory *)getPrimaryDir {
  return primaryDir_;
}

- (OrgApacheLuceneStoreDirectory *)getSecondaryDir {
  return secondaryDir_;
}

- (OrgApacheLuceneStoreLock *)obtainLockWithNSString:(NSString *)name {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) obtainLockWithNSString:name];
}

- (void)close {
  if (doClose_) {
    OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ primaryDir_, secondaryDir_ } count:2 type:JavaIoCloseable_class_()]);
    doClose_ = false;
  }
}

- (IOSObjectArray *)listAll {
  id<JavaUtilSet> files = create_JavaUtilHashSet_init();
  OrgLukhnosPortmobileFileNoSuchFileException *exc = nil;
  @try {
    {
      IOSObjectArray *a__ = [((OrgApacheLuceneStoreDirectory *) nil_chk(primaryDir_)) listAll];
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *f = *b__++;
        [files addWithId:f];
      }
    }
  }
  @catch (OrgLukhnosPortmobileFileNoSuchFileException *e) {
    exc = e;
  }
  @try {
    {
      IOSObjectArray *a__ = [((OrgApacheLuceneStoreDirectory *) nil_chk(secondaryDir_)) listAll];
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *f = *b__++;
        [files addWithId:f];
      }
    }
  }
  @catch (OrgLukhnosPortmobileFileNoSuchFileException *e) {
    if (exc != nil) {
      @throw exc;
    }
    if ([files isEmpty]) {
      @throw e;
    }
  }
  if (exc != nil && [files isEmpty]) {
    @throw exc;
  }
  return [files toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[files size] type:NSString_class_()]];
}

+ (NSString *)getExtensionWithNSString:(NSString *)name {
  return OrgApacheLuceneStoreFileSwitchDirectory_getExtensionWithNSString_(name);
}

- (OrgApacheLuceneStoreDirectory *)getDirectoryWithNSString:(NSString *)name {
  return OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name);
}

- (void)deleteFileWithNSString:(NSString *)name {
  [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) deleteFileWithNSString:name];
}

- (jlong)fileLengthWithNSString:(NSString *)name {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) fileLengthWithNSString:name];
}

- (OrgApacheLuceneStoreIndexOutput *)createOutputWithNSString:(NSString *)name
                            withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) createOutputWithNSString:name withOrgApacheLuceneStoreIOContext:context];
}

- (void)syncWithJavaUtilCollection:(id<JavaUtilCollection>)names {
  id<JavaUtilList> primaryNames = create_JavaUtilArrayList_init();
  id<JavaUtilList> secondaryNames = create_JavaUtilArrayList_init();
  for (NSString * __strong name in nil_chk(names)) if ([((id<JavaUtilSet>) nil_chk(primaryExtensions_)) containsWithId:OrgApacheLuceneStoreFileSwitchDirectory_getExtensionWithNSString_(name)]) [primaryNames addWithId:name];
  else [secondaryNames addWithId:name];
  [((OrgApacheLuceneStoreDirectory *) nil_chk(primaryDir_)) syncWithJavaUtilCollection:primaryNames];
  [((OrgApacheLuceneStoreDirectory *) nil_chk(secondaryDir_)) syncWithJavaUtilCollection:secondaryNames];
}

- (void)renameFileWithNSString:(NSString *)source
                  withNSString:(NSString *)dest {
  OrgApacheLuceneStoreDirectory *sourceDir = OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, source);
  if (sourceDir != OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, dest)) {
    @throw create_OrgLukhnosPortmobileFileAtomicMoveNotSupportedException_initWithNSString_withNSString_withNSString_(source, dest, @"source and dest are in different directories");
  }
  [((OrgApacheLuceneStoreDirectory *) nil_chk(sourceDir)) renameFileWithNSString:source withNSString:dest];
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name
                        withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) openInputWithNSString:name withOrgApacheLuceneStoreIOContext:context];
}

- (void)dealloc {
  RELEASE_(secondaryDir_);
  RELEASE_(primaryDir_);
  RELEASE_(primaryExtensions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilSet:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneStoreDirectory:withBoolean:", "FileSwitchDirectory", NULL, 0x1, NULL, "(Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/lucene/store/Directory;Lorg/apache/lucene/store/Directory;Z)V" },
    { "getPrimaryDir", NULL, "Lorg.apache.lucene.store.Directory;", 0x1, NULL, NULL },
    { "getSecondaryDir", NULL, "Lorg.apache.lucene.store.Directory;", 0x1, NULL, NULL },
    { "obtainLockWithNSString:", "obtainLock", "Lorg.apache.lucene.store.Lock;", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "listAll", NULL, "[Ljava.lang.String;", 0x1, "Ljava.io.IOException;", NULL },
    { "getExtensionWithNSString:", "getExtension", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getDirectoryWithNSString:", "getDirectory", "Lorg.apache.lucene.store.Directory;", 0x2, NULL, NULL },
    { "deleteFileWithNSString:", "deleteFile", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "fileLengthWithNSString:", "fileLength", "J", 0x1, "Ljava.io.IOException;", NULL },
    { "createOutputWithNSString:withOrgApacheLuceneStoreIOContext:", "createOutput", "Lorg.apache.lucene.store.IndexOutput;", 0x1, "Ljava.io.IOException;", NULL },
    { "syncWithJavaUtilCollection:", "sync", "V", 0x1, "Ljava.io.IOException;", "(Ljava/util/Collection<Ljava/lang/String;>;)V" },
    { "renameFileWithNSString:withNSString:", "renameFile", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "openInputWithNSString:withOrgApacheLuceneStoreIOContext:", "openInput", "Lorg.apache.lucene.store.IndexInput;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "secondaryDir_", NULL, 0x12, "Lorg.apache.lucene.store.Directory;", NULL, NULL, .constantValue.asLong = 0 },
    { "primaryDir_", NULL, 0x12, "Lorg.apache.lucene.store.Directory;", NULL, NULL, .constantValue.asLong = 0 },
    { "primaryExtensions_", NULL, 0x12, "Ljava.util.Set;", NULL, "Ljava/util/Set<Ljava/lang/String;>;", .constantValue.asLong = 0 },
    { "doClose_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreFileSwitchDirectory = { 2, "FileSwitchDirectory", "org.apache.lucene.store", NULL, 0x1, 14, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneStoreFileSwitchDirectory;
}

@end

void OrgApacheLuceneStoreFileSwitchDirectory_initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(OrgApacheLuceneStoreFileSwitchDirectory *self, id<JavaUtilSet> primaryExtensions, OrgApacheLuceneStoreDirectory *primaryDir, OrgApacheLuceneStoreDirectory *secondaryDir, jboolean doClose) {
  OrgApacheLuceneStoreDirectory_init(self);
  JreStrongAssign(&self->primaryExtensions_, primaryExtensions);
  JreStrongAssign(&self->primaryDir_, primaryDir);
  JreStrongAssign(&self->secondaryDir_, secondaryDir);
  self->doClose_ = doClose;
}

OrgApacheLuceneStoreFileSwitchDirectory *new_OrgApacheLuceneStoreFileSwitchDirectory_initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(id<JavaUtilSet> primaryExtensions, OrgApacheLuceneStoreDirectory *primaryDir, OrgApacheLuceneStoreDirectory *secondaryDir, jboolean doClose) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreFileSwitchDirectory, initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_, primaryExtensions, primaryDir, secondaryDir, doClose)
}

OrgApacheLuceneStoreFileSwitchDirectory *create_OrgApacheLuceneStoreFileSwitchDirectory_initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(id<JavaUtilSet> primaryExtensions, OrgApacheLuceneStoreDirectory *primaryDir, OrgApacheLuceneStoreDirectory *secondaryDir, jboolean doClose) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreFileSwitchDirectory, initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_, primaryExtensions, primaryDir, secondaryDir, doClose)
}

NSString *OrgApacheLuceneStoreFileSwitchDirectory_getExtensionWithNSString_(NSString *name) {
  OrgApacheLuceneStoreFileSwitchDirectory_initialize();
  jint i = [((NSString *) nil_chk(name)) lastIndexOf:'.'];
  if (i == -1) {
    return @"";
  }
  return [name substring:i + 1 endIndex:((jint) [name length])];
}

OrgApacheLuceneStoreDirectory *OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(OrgApacheLuceneStoreFileSwitchDirectory *self, NSString *name) {
  NSString *ext = OrgApacheLuceneStoreFileSwitchDirectory_getExtensionWithNSString_(name);
  if ([((id<JavaUtilSet>) nil_chk(self->primaryExtensions_)) containsWithId:ext]) {
    return self->primaryDir_;
  }
  else {
    return self->secondaryDir_;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreFileSwitchDirectory)
