//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/NIOFSDirectory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/EOFException.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/nio/Buffer.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/channels/FileChannel.h"
#include "org/apache/lucene/store/BaseDirectory.h"
#include "org/apache/lucene/store/BufferedIndexInput.h"
#include "org/apache/lucene/store/FSDirectory.h"
#include "org/apache/lucene/store/FSLockFactory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/LockFactory.h"
#include "org/apache/lucene/store/NIOFSDirectory.h"
#include "org/lukhnos/portmobile/channels/utils/FileChannelUtils.h"
#include "org/lukhnos/portmobile/file/Path.h"
#include "org/lukhnos/portmobile/file/StandardOpenOption.h"

@interface OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput () {
 @public
  JavaNioByteBuffer *byteBuf_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput, byteBuf_, JavaNioByteBuffer *)

/*!
 @brief The maximum chunk size for reads of 16384 bytes.
 */
inline jint OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_get_CHUNK_SIZE();
#define OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_CHUNK_SIZE 16384
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput, CHUNK_SIZE, jint)

__attribute__((unused)) static jlong OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_length(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *self);

@implementation OrgApacheLuceneStoreNIOFSDirectory

- (instancetype)initWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
                 withOrgApacheLuceneStoreLockFactory:(OrgApacheLuceneStoreLockFactory *)lockFactory {
  OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(self, path, lockFactory);
  return self;
}

- (instancetype)initWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_(self, path);
  return self;
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name
                        withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  [self ensureOpen];
  OrgLukhnosPortmobileFilePath *path = [((OrgLukhnosPortmobileFilePath *) nil_chk([self getDirectory])) resolveWithNSString:name];
  JavaNioChannelsFileChannel *fc = OrgLukhnosPortmobileChannelsUtilsFileChannelUtils_openWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardOpenOptionArray_(path, [IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(OrgLukhnosPortmobileFileStandardOpenOption, READ) } count:1 type:OrgLukhnosPortmobileFileStandardOpenOption_class_()]);
  return create_OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withOrgApacheLuceneStoreIOContext_(JreStrcat("$@$", @"NIOFSIndexInput(path=\"", path, @"\")"), fc, context);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgLukhnosPortmobileFilePath:withOrgApacheLuceneStoreLockFactory:", "NIOFSDirectory", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgLukhnosPortmobileFilePath:", "NIOFSDirectory", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "openInputWithNSString:withOrgApacheLuceneStoreIOContext:", "openInput", "Lorg.apache.lucene.store.IndexInput;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput;"};
  static const J2ObjcClassInfo _OrgApacheLuceneStoreNIOFSDirectory = { 2, "NIOFSDirectory", "org.apache.lucene.store", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneStoreNIOFSDirectory;
}

@end

void OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgApacheLuceneStoreNIOFSDirectory *self, OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory) {
  OrgApacheLuceneStoreFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(self, path, lockFactory);
}

OrgApacheLuceneStoreNIOFSDirectory *new_OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreNIOFSDirectory, initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_, path, lockFactory)
}

OrgApacheLuceneStoreNIOFSDirectory *create_OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreNIOFSDirectory, initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_, path, lockFactory)
}

void OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneStoreNIOFSDirectory *self, OrgLukhnosPortmobileFilePath *path) {
  OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(self, path, OrgApacheLuceneStoreFSLockFactory_getDefault());
}

OrgApacheLuceneStoreNIOFSDirectory *new_OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreNIOFSDirectory, initWithOrgLukhnosPortmobileFilePath_, path)
}

OrgApacheLuceneStoreNIOFSDirectory *create_OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreNIOFSDirectory, initWithOrgLukhnosPortmobileFilePath_, path)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreNIOFSDirectory)

@implementation OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput

- (instancetype)initWithNSString:(NSString *)resourceDesc
  withJavaNioChannelsFileChannel:(JavaNioChannelsFileChannel *)fc
withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withOrgApacheLuceneStoreIOContext_(self, resourceDesc, fc, context);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resourceDesc
  withJavaNioChannelsFileChannel:(JavaNioChannelsFileChannel *)fc
                        withLong:(jlong)off
                        withLong:(jlong)length
                         withInt:(jint)bufferSize {
  OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withLong_withLong_withInt_(self, resourceDesc, fc, off, length, bufferSize);
  return self;
}

- (void)close {
  if (!isClone_) {
    [((JavaNioChannelsFileChannel *) nil_chk(channel_)) close];
  }
}

- (OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *)clone {
  OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *clone = (OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *) cast_chk([super clone], [OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput class]);
  ((OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *) nil_chk(clone))->isClone_ = true;
  return clone;
}

- (OrgApacheLuceneStoreIndexInput *)sliceWithNSString:(NSString *)sliceDescription
                                             withLong:(jlong)offset
                                             withLong:(jlong)length {
  if (offset < 0 || length < 0 || offset + length > OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_length(self)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$@", @"slice() ", sliceDescription, @" out of bounds: ", self));
  }
  return create_OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withLong_withLong_withInt_([self getFullSliceDescriptionWithNSString:sliceDescription], channel_, off_ + offset, length, [self getBufferSize]);
}

- (jlong)length {
  return OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_length(self);
}

- (void)newBufferWithByteArray:(IOSByteArray *)newBuffer {
  [super newBufferWithByteArray:newBuffer];
  JreStrongAssign(&byteBuf_, JavaNioByteBuffer_wrapWithByteArray_(newBuffer));
}

- (void)readInternalWithByteArray:(IOSByteArray *)b
                          withInt:(jint)offset
                          withInt:(jint)len {
  JavaNioByteBuffer *bb;
  if (b == buffer_) {
    JreAssert((byteBuf_ != nil), (@"org/apache/lucene/store/NIOFSDirectory.java:164 condition failed: assert byteBuf != null;"));
    bb = byteBuf_;
    [((JavaNioBuffer *) nil_chk([((JavaNioByteBuffer *) nil_chk(byteBuf_)) clear])) positionWithInt:offset];
  }
  else {
    bb = JavaNioByteBuffer_wrapWithByteArray_withInt_withInt_(b, offset, len);
  }
  jlong pos = [self getFilePointer] + off_;
  if (pos + len > end_) {
    @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$@", @"read past EOF: ", self));
  }
  @try {
    jint readLength = len;
    while (readLength > 0) {
      jint toRead = JavaLangMath_minWithInt_withInt_(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_CHUNK_SIZE, readLength);
      [((JavaNioByteBuffer *) nil_chk(bb)) limitWithInt:[bb position] + toRead];
      JreAssert(([bb remaining] == toRead), (@"org/apache/lucene/store/NIOFSDirectory.java:182 condition failed: assert bb.remaining() == toRead;"));
      jint i = [((JavaNioChannelsFileChannel *) nil_chk(channel_)) readWithJavaNioByteBuffer:bb withLong:pos];
      if (i < 0) {
        @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$@$I$I$J$I$J", @"read past EOF: ", self, @" off: ", offset, @" len: ", len, @" pos: ", pos, @" chunkLen: ", toRead, @" end: ", end_));
      }
      JreAssert((i > 0), (@"FileChannel.read with non zero-length bb.remaining() must always read at least one byte (FileChannel is in blocking mode, see spec of ReadableByteChannel)"));
      pos += i;
      readLength -= i;
    }
    JreAssert((readLength == 0), (@"org/apache/lucene/store/NIOFSDirectory.java:191 condition failed: assert readLength == 0;"));
  }
  @catch (JavaIoIOException *ioe) {
    @throw create_JavaIoIOException_initWithNSString_withNSException_(JreStrcat("$$@", [((JavaIoIOException *) nil_chk(ioe)) getMessage], @": ", self), ioe);
  }
}

- (void)seekInternalWithLong:(jlong)pos {
}

- (void)dealloc {
  RELEASE_(channel_);
  RELEASE_(byteBuf_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withJavaNioChannelsFileChannel:withOrgApacheLuceneStoreIOContext:", "NIOFSIndexInput", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithNSString:withJavaNioChannelsFileChannel:withLong:withLong:withInt:", "NIOFSIndexInput", NULL, 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "clone", NULL, "Lorg.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput;", 0x1, NULL, NULL },
    { "sliceWithNSString:withLong:withLong:", "slice", "Lorg.apache.lucene.store.IndexInput;", 0x1, "Ljava.io.IOException;", NULL },
    { "length", NULL, "J", 0x11, NULL, NULL },
    { "newBufferWithByteArray:", "newBuffer", "V", 0x4, NULL, NULL },
    { "readInternalWithByteArray:withInt:withInt:", "readInternal", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "seekInternalWithLong:", "seekInternal", "V", 0x4, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CHUNK_SIZE", "CHUNK_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_CHUNK_SIZE },
    { "channel_", NULL, 0x14, "Ljava.nio.channels.FileChannel;", NULL, NULL, .constantValue.asLong = 0 },
    { "isClone_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "off_", NULL, 0x14, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "end_", NULL, 0x14, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "byteBuf_", NULL, 0x2, "Ljava.nio.ByteBuffer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput = { 2, "NIOFSIndexInput", "org.apache.lucene.store", "NIOFSDirectory", 0x18, 9, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput;
}

@end

void OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *self, NSString *resourceDesc, JavaNioChannelsFileChannel *fc, OrgApacheLuceneStoreIOContext *context) {
  OrgApacheLuceneStoreBufferedIndexInput_initWithNSString_withOrgApacheLuceneStoreIOContext_(self, resourceDesc, context);
  self->isClone_ = false;
  JreStrongAssign(&self->channel_, fc);
  self->off_ = 0LL;
  self->end_ = [((JavaNioChannelsFileChannel *) nil_chk(fc)) size];
}

OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *new_OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withOrgApacheLuceneStoreIOContext_(NSString *resourceDesc, JavaNioChannelsFileChannel *fc, OrgApacheLuceneStoreIOContext *context) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput, initWithNSString_withJavaNioChannelsFileChannel_withOrgApacheLuceneStoreIOContext_, resourceDesc, fc, context)
}

OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *create_OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withOrgApacheLuceneStoreIOContext_(NSString *resourceDesc, JavaNioChannelsFileChannel *fc, OrgApacheLuceneStoreIOContext *context) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput, initWithNSString_withJavaNioChannelsFileChannel_withOrgApacheLuceneStoreIOContext_, resourceDesc, fc, context)
}

void OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withLong_withLong_withInt_(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *self, NSString *resourceDesc, JavaNioChannelsFileChannel *fc, jlong off, jlong length, jint bufferSize) {
  OrgApacheLuceneStoreBufferedIndexInput_initWithNSString_withInt_(self, resourceDesc, bufferSize);
  self->isClone_ = false;
  JreStrongAssign(&self->channel_, fc);
  self->off_ = off;
  self->end_ = off + length;
  self->isClone_ = true;
}

OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *new_OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withLong_withLong_withInt_(NSString *resourceDesc, JavaNioChannelsFileChannel *fc, jlong off, jlong length, jint bufferSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput, initWithNSString_withJavaNioChannelsFileChannel_withLong_withLong_withInt_, resourceDesc, fc, off, length, bufferSize)
}

OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *create_OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_initWithNSString_withJavaNioChannelsFileChannel_withLong_withLong_withInt_(NSString *resourceDesc, JavaNioChannelsFileChannel *fc, jlong off, jlong length, jint bufferSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput, initWithNSString_withJavaNioChannelsFileChannel_withLong_withLong_withInt_, resourceDesc, fc, off, length, bufferSize)
}

jlong OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput_length(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput *self) {
  return self->end_ - self->off_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreNIOFSDirectory_NIOFSIndexInput)
