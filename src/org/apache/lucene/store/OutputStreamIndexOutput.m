//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/OutputStreamIndexOutput.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/BufferedOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/Throwable.h"
#include "java/util/zip/CRC32.h"
#include "java/util/zip/CheckedOutputStream.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/OutputStreamIndexOutput.h"

@interface OrgApacheLuceneStoreOutputStreamIndexOutput () {
 @public
  JavaUtilZipCRC32 *crc_;
  JavaIoBufferedOutputStream *os_;
  jlong bytesWritten_;
  jboolean flushedOnClose_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreOutputStreamIndexOutput, crc_, JavaUtilZipCRC32 *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreOutputStreamIndexOutput, os_, JavaIoBufferedOutputStream *)

@implementation OrgApacheLuceneStoreOutputStreamIndexOutput

- (instancetype)initWithNSString:(NSString *)resourceDescription
          withJavaIoOutputStream:(JavaIoOutputStream *)outArg
                         withInt:(jint)bufferSize {
  OrgApacheLuceneStoreOutputStreamIndexOutput_initWithNSString_withJavaIoOutputStream_withInt_(self, resourceDescription, outArg, bufferSize);
  return self;
}

- (void)writeByteWithByte:(jbyte)b {
  [((JavaIoBufferedOutputStream *) nil_chk(os_)) writeWithInt:b];
  bytesWritten_++;
}

- (void)writeBytesWithByteArray:(IOSByteArray *)b
                        withInt:(jint)offset
                        withInt:(jint)length {
  [((JavaIoBufferedOutputStream *) nil_chk(os_)) writeWithByteArray:b withInt:offset withInt:length];
  bytesWritten_ += length;
}

- (void)close {
  {
    JavaIoOutputStream *o = os_;
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      if (!flushedOnClose_) {
        flushedOnClose_ = true;
        [((JavaIoOutputStream *) nil_chk(o)) flush];
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (o != nil) {
        if (__primaryException1 != nil) {
          @try {
            [o close];
          } @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        } else {
          [o close];
        }
      }
    }
  }
}

- (jlong)getFilePointer {
  return bytesWritten_;
}

- (jlong)getChecksum {
  [((JavaIoBufferedOutputStream *) nil_chk(os_)) flush];
  return [((JavaUtilZipCRC32 *) nil_chk(crc_)) getValue];
}

- (void)dealloc {
  RELEASE_(crc_);
  RELEASE_(os_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withJavaIoOutputStream:withInt:", "OutputStreamIndexOutput", NULL, 0x1, NULL, NULL },
    { "writeByteWithByte:", "writeByte", "V", 0x11, "Ljava.io.IOException;", NULL },
    { "writeBytesWithByteArray:withInt:withInt:", "writeBytes", "V", 0x11, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getFilePointer", NULL, "J", 0x11, NULL, NULL },
    { "getChecksum", NULL, "J", 0x11, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "crc_", NULL, 0x12, "Ljava.util.zip.CRC32;", NULL, NULL, .constantValue.asLong = 0 },
    { "os_", NULL, 0x12, "Ljava.io.BufferedOutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "bytesWritten_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "flushedOnClose_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreOutputStreamIndexOutput = { 2, "OutputStreamIndexOutput", "org.apache.lucene.store", NULL, 0x1, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneStoreOutputStreamIndexOutput;
}

@end

void OrgApacheLuceneStoreOutputStreamIndexOutput_initWithNSString_withJavaIoOutputStream_withInt_(OrgApacheLuceneStoreOutputStreamIndexOutput *self, NSString *resourceDescription, JavaIoOutputStream *outArg, jint bufferSize) {
  OrgApacheLuceneStoreIndexOutput_initWithNSString_(self, resourceDescription);
  JreStrongAssignAndConsume(&self->crc_, new_JavaUtilZipCRC32_init());
  self->bytesWritten_ = 0LL;
  self->flushedOnClose_ = false;
  JreStrongAssignAndConsume(&self->os_, new_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_withInt_([new_JavaUtilZipCheckedOutputStream_initWithJavaIoOutputStream_withJavaUtilZipChecksum_(outArg, self->crc_) autorelease], bufferSize));
}

OrgApacheLuceneStoreOutputStreamIndexOutput *new_OrgApacheLuceneStoreOutputStreamIndexOutput_initWithNSString_withJavaIoOutputStream_withInt_(NSString *resourceDescription, JavaIoOutputStream *outArg, jint bufferSize) {
  OrgApacheLuceneStoreOutputStreamIndexOutput *self = [OrgApacheLuceneStoreOutputStreamIndexOutput alloc];
  OrgApacheLuceneStoreOutputStreamIndexOutput_initWithNSString_withJavaIoOutputStream_withInt_(self, resourceDescription, outArg, bufferSize);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreOutputStreamIndexOutput)
