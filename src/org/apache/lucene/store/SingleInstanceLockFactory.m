//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/SingleInstanceLockFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/util/HashSet.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/Lock.h"
#include "org/apache/lucene/store/LockFactory.h"
#include "org/apache/lucene/store/LockObtainFailedException.h"
#include "org/apache/lucene/store/SingleInstanceLockFactory.h"

@interface OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock : OrgApacheLuceneStoreLock {
 @public
  OrgApacheLuceneStoreSingleInstanceLockFactory *this$0_;
  NSString *lockName_;
  volatile_jboolean closed_;
}

- (instancetype)initWithOrgApacheLuceneStoreSingleInstanceLockFactory:(OrgApacheLuceneStoreSingleInstanceLockFactory *)outer$
                                                         withNSString:(NSString *)lockName;

- (void)ensureValid;

- (void)close;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock)

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock, this$0_, OrgApacheLuceneStoreSingleInstanceLockFactory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock, lockName_, NSString *)

__attribute__((unused)) static void OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock_initWithOrgApacheLuceneStoreSingleInstanceLockFactory_withNSString_(OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock *self, OrgApacheLuceneStoreSingleInstanceLockFactory *outer$, NSString *lockName);

__attribute__((unused)) static OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock *new_OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock_initWithOrgApacheLuceneStoreSingleInstanceLockFactory_withNSString_(OrgApacheLuceneStoreSingleInstanceLockFactory *outer$, NSString *lockName) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock)

@implementation OrgApacheLuceneStoreSingleInstanceLockFactory

- (OrgApacheLuceneStoreLock *)obtainLockWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                                             withNSString:(NSString *)lockName {
  @synchronized(locks_) {
    if ([((JavaUtilHashSet *) nil_chk(locks_)) addWithId:lockName]) {
      return [new_OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock_initWithOrgApacheLuceneStoreSingleInstanceLockFactory_withNSString_(self, lockName) autorelease];
    }
    else {
      @throw [new_OrgApacheLuceneStoreLockObtainFailedException_initWithNSString_(JreStrcat("$@$$C", @"lock instance already obtained: (dir=", dir, @", lockName=", lockName, ')')) autorelease];
    }
  }
}

- (instancetype)init {
  OrgApacheLuceneStoreSingleInstanceLockFactory_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(locks_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "obtainLockWithOrgApacheLuceneStoreDirectory:withNSString:", "obtainLock", "Lorg.apache.lucene.store.Lock;", 0x1, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "locks_", NULL, 0x10, "Ljava.util.HashSet;", NULL, "Ljava/util/HashSet<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.store.SingleInstanceLockFactory$SingleInstanceLock;"};
  static const J2ObjcClassInfo _OrgApacheLuceneStoreSingleInstanceLockFactory = { 2, "SingleInstanceLockFactory", "org.apache.lucene.store", NULL, 0x11, 2, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneStoreSingleInstanceLockFactory;
}

@end

void OrgApacheLuceneStoreSingleInstanceLockFactory_init(OrgApacheLuceneStoreSingleInstanceLockFactory *self) {
  OrgApacheLuceneStoreLockFactory_init(self);
  JreStrongAssignAndConsume(&self->locks_, new_JavaUtilHashSet_init());
}

OrgApacheLuceneStoreSingleInstanceLockFactory *new_OrgApacheLuceneStoreSingleInstanceLockFactory_init() {
  OrgApacheLuceneStoreSingleInstanceLockFactory *self = [OrgApacheLuceneStoreSingleInstanceLockFactory alloc];
  OrgApacheLuceneStoreSingleInstanceLockFactory_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreSingleInstanceLockFactory)

@implementation OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock

- (instancetype)initWithOrgApacheLuceneStoreSingleInstanceLockFactory:(OrgApacheLuceneStoreSingleInstanceLockFactory *)outer$
                                                         withNSString:(NSString *)lockName {
  OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock_initWithOrgApacheLuceneStoreSingleInstanceLockFactory_withNSString_(self, outer$, lockName);
  return self;
}

- (void)ensureValid {
  if (JreLoadVolatileBoolean(&closed_)) {
    @throw [new_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(JreStrcat("$@", @"Lock instance already released: ", self)) autorelease];
  }
  @synchronized(this$0_->locks_) {
    if (![((JavaUtilHashSet *) nil_chk(this$0_->locks_)) containsWithId:lockName_]) {
      @throw [new_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(JreStrcat("$@", @"Lock instance was invalidated from map: ", self)) autorelease];
    }
  }
}

- (void)close {
  @synchronized(self) {
    if (JreLoadVolatileBoolean(&closed_)) {
      return;
    }
    @try {
      @synchronized(this$0_->locks_) {
        if (![((JavaUtilHashSet *) nil_chk(this$0_->locks_)) removeWithId:lockName_]) {
          @throw [new_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(JreStrcat("$@", @"Lock was already released: ", self)) autorelease];
        }
      }
    }
    @finally {
      JreAssignVolatileBoolean(&closed_, YES);
    }
  }
}

- (NSString *)description {
  return JreStrcat("$$$", [super description], @": ", lockName_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(lockName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreSingleInstanceLockFactory:withNSString:", "SingleInstanceLock", NULL, 0x1, NULL, NULL },
    { "ensureValid", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x21, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.store.SingleInstanceLockFactory;", NULL, NULL, .constantValue.asLong = 0 },
    { "lockName_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "closed_", NULL, 0x42, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock = { 2, "SingleInstanceLock", "org.apache.lucene.store", "SingleInstanceLockFactory", 0x2, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock;
}

@end

void OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock_initWithOrgApacheLuceneStoreSingleInstanceLockFactory_withNSString_(OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock *self, OrgApacheLuceneStoreSingleInstanceLockFactory *outer$, NSString *lockName) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneStoreLock_init(self);
  JreStrongAssign(&self->lockName_, lockName);
}

OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock *new_OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock_initWithOrgApacheLuceneStoreSingleInstanceLockFactory_withNSString_(OrgApacheLuceneStoreSingleInstanceLockFactory *outer$, NSString *lockName) {
  OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock *self = [OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock alloc];
  OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock_initWithOrgApacheLuceneStoreSingleInstanceLockFactory_withNSString_(self, outer$, lockName);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreSingleInstanceLockFactory_SingleInstanceLock)
