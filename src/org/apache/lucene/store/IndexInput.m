//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/IndexInput.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/RandomAccessInput.h"

@interface OrgApacheLuceneStoreIndexInput () {
 @public
  NSString *resourceDescription_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreIndexInput, resourceDescription_, NSString *)

@interface OrgApacheLuceneStoreIndexInput_$1 : NSObject < OrgApacheLuceneStoreRandomAccessInput > {
 @public
  OrgApacheLuceneStoreIndexInput *val$slice_;
}

- (jbyte)readByteWithLong:(jlong)pos;

- (jshort)readShortWithLong:(jlong)pos;

- (jint)readIntWithLong:(jlong)pos;

- (jlong)readLongWithLong:(jlong)pos;

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneStoreIndexInput_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreIndexInput_$1, val$slice_, OrgApacheLuceneStoreIndexInput *)

__attribute__((unused)) static void OrgApacheLuceneStoreIndexInput_$1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput_$1 *self, OrgApacheLuceneStoreIndexInput *capture$0);

__attribute__((unused)) static OrgApacheLuceneStoreIndexInput_$1 *new_OrgApacheLuceneStoreIndexInput_$1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneStoreIndexInput_$1)

@implementation OrgApacheLuceneStoreIndexInput

- (instancetype)initWithNSString:(NSString *)resourceDescription {
  OrgApacheLuceneStoreIndexInput_initWithNSString_(self, resourceDescription);
  return self;
}

- (void)close {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jlong)getFilePointer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)seekWithLong:(jlong)pos {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jlong)length {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  return resourceDescription_;
}

- (OrgApacheLuceneStoreIndexInput *)clone {
  return (OrgApacheLuceneStoreIndexInput *) check_class_cast([super clone], [OrgApacheLuceneStoreIndexInput class]);
}

- (OrgApacheLuceneStoreIndexInput *)sliceWithNSString:(NSString *)sliceDescription
                                             withLong:(jlong)offset
                                             withLong:(jlong)length {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getFullSliceDescriptionWithNSString:(NSString *)sliceDescription {
  if (sliceDescription == nil) {
    return [self description];
  }
  else {
    return JreStrcat("$$$C", [self description], @" [slice=", sliceDescription, ']');
  }
}

- (id<OrgApacheLuceneStoreRandomAccessInput>)randomAccessSliceWithLong:(jlong)offset
                                                              withLong:(jlong)length {
  OrgApacheLuceneStoreIndexInput *slice = [self sliceWithNSString:@"randomaccess" withLong:offset withLong:length];
  if ([OrgApacheLuceneStoreRandomAccessInput_class_() isInstance:slice]) {
    return (id<OrgApacheLuceneStoreRandomAccessInput>) check_protocol_cast(slice, OrgApacheLuceneStoreRandomAccessInput_class_());
  }
  else {
    return [new_OrgApacheLuceneStoreIndexInput_$1_initWithOrgApacheLuceneStoreIndexInput_(slice) autorelease];
  }
}

- (void)dealloc {
  RELEASE_(resourceDescription_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "IndexInput", NULL, 0x4, NULL, NULL },
    { "close", NULL, "V", 0x401, "Ljava.io.IOException;", NULL },
    { "getFilePointer", NULL, "J", 0x401, NULL, NULL },
    { "seekWithLong:", "seek", "V", 0x401, "Ljava.io.IOException;", NULL },
    { "length", NULL, "J", 0x401, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.apache.lucene.store.IndexInput;", 0x1, NULL, NULL },
    { "sliceWithNSString:withLong:withLong:", "slice", "Lorg.apache.lucene.store.IndexInput;", 0x401, "Ljava.io.IOException;", NULL },
    { "getFullSliceDescriptionWithNSString:", "getFullSliceDescription", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "randomAccessSliceWithLong:withLong:", "randomAccessSlice", "Lorg.apache.lucene.store.RandomAccessInput;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "resourceDescription_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreIndexInput = { 2, "IndexInput", "org.apache.lucene.store", NULL, 0x401, 10, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneStoreIndexInput;
}

@end

void OrgApacheLuceneStoreIndexInput_initWithNSString_(OrgApacheLuceneStoreIndexInput *self, NSString *resourceDescription) {
  OrgApacheLuceneStoreDataInput_init(self);
  if (resourceDescription == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"resourceDescription must not be null") autorelease];
  }
  JreStrongAssign(&self->resourceDescription_, resourceDescription);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreIndexInput)

@implementation OrgApacheLuceneStoreIndexInput_$1

- (jbyte)readByteWithLong:(jlong)pos {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(val$slice_)) seekWithLong:pos];
  return [val$slice_ readByte];
}

- (jshort)readShortWithLong:(jlong)pos {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(val$slice_)) seekWithLong:pos];
  return [val$slice_ readShort];
}

- (jint)readIntWithLong:(jlong)pos {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(val$slice_)) seekWithLong:pos];
  return [val$slice_ readInt];
}

- (jlong)readLongWithLong:(jlong)pos {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(val$slice_)) seekWithLong:pos];
  return [val$slice_ readLong];
}

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)capture$0 {
  OrgApacheLuceneStoreIndexInput_$1_initWithOrgApacheLuceneStoreIndexInput_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$slice_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readByteWithLong:", "readByte", "B", 0x1, "Ljava.io.IOException;", NULL },
    { "readShortWithLong:", "readShort", "S", 0x1, "Ljava.io.IOException;", NULL },
    { "readIntWithLong:", "readInt", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "readLongWithLong:", "readLong", "J", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneStoreIndexInput:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$slice_", NULL, 0x1012, "Lorg.apache.lucene.store.IndexInput;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneStoreIndexInput", "randomAccessSliceWithLong:withLong:" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreIndexInput_$1 = { 2, "", "org.apache.lucene.store", "IndexInput", 0x8008, 5, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneStoreIndexInput_$1;
}

@end

void OrgApacheLuceneStoreIndexInput_$1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput_$1 *self, OrgApacheLuceneStoreIndexInput *capture$0) {
  JreStrongAssign(&self->val$slice_, capture$0);
  NSObject_init(self);
}

OrgApacheLuceneStoreIndexInput_$1 *new_OrgApacheLuceneStoreIndexInput_$1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput *capture$0) {
  OrgApacheLuceneStoreIndexInput_$1 *self = [OrgApacheLuceneStoreIndexInput_$1 alloc];
  OrgApacheLuceneStoreIndexInput_$1_initWithOrgApacheLuceneStoreIndexInput_(self, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreIndexInput_$1)
