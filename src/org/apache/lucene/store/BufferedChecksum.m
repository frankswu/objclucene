//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/BufferedChecksum.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "java/util/zip/Checksum.h"
#include "org/apache/lucene/store/BufferedChecksum.h"

@interface OrgApacheLuceneStoreBufferedChecksum () {
 @public
  id<JavaUtilZipChecksum> in_;
  IOSByteArray *buffer_;
  jint upto_;
}

- (void)flush;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreBufferedChecksum, in_, id<JavaUtilZipChecksum>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreBufferedChecksum, buffer_, IOSByteArray *)

__attribute__((unused)) static void OrgApacheLuceneStoreBufferedChecksum_flush(OrgApacheLuceneStoreBufferedChecksum *self);

@implementation OrgApacheLuceneStoreBufferedChecksum

+ (jint)DEFAULT_BUFFERSIZE {
  return OrgApacheLuceneStoreBufferedChecksum_DEFAULT_BUFFERSIZE;
}

- (instancetype)initWithJavaUtilZipChecksum:(id<JavaUtilZipChecksum>)inArg {
  OrgApacheLuceneStoreBufferedChecksum_initWithJavaUtilZipChecksum_(self, inArg);
  return self;
}

- (instancetype)initWithJavaUtilZipChecksum:(id<JavaUtilZipChecksum>)inArg
                                    withInt:(jint)bufferSize {
  OrgApacheLuceneStoreBufferedChecksum_initWithJavaUtilZipChecksum_withInt_(self, inArg, bufferSize);
  return self;
}

- (void)updateWithInt:(jint)b {
  if (upto_ == ((IOSByteArray *) nil_chk(buffer_))->size_) {
    OrgApacheLuceneStoreBufferedChecksum_flush(self);
  }
  *IOSByteArray_GetRef(buffer_, upto_++) = (jbyte) b;
}

- (void)updateWithByteArray:(IOSByteArray *)b
                    withInt:(jint)off
                    withInt:(jint)len {
  if (len >= ((IOSByteArray *) nil_chk(buffer_))->size_) {
    OrgApacheLuceneStoreBufferedChecksum_flush(self);
    [((id<JavaUtilZipChecksum>) nil_chk(in_)) updateWithByteArray:b withInt:off withInt:len];
  }
  else {
    if (upto_ + len > buffer_->size_) {
      OrgApacheLuceneStoreBufferedChecksum_flush(self);
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, off, buffer_, upto_, len);
    upto_ += len;
  }
}

- (jlong)getValue {
  OrgApacheLuceneStoreBufferedChecksum_flush(self);
  return [((id<JavaUtilZipChecksum>) nil_chk(in_)) getValue];
}

- (void)reset {
  upto_ = 0;
  [((id<JavaUtilZipChecksum>) nil_chk(in_)) reset];
}

- (void)flush {
  OrgApacheLuceneStoreBufferedChecksum_flush(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilZipChecksum:", "BufferedChecksum", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilZipChecksum:withInt:", "BufferedChecksum", NULL, 0x1, NULL, NULL },
    { "updateWithInt:", "update", "V", 0x1, NULL, NULL },
    { "updateWithByteArray:withInt:withInt:", "update", "V", 0x1, NULL, NULL },
    { "getValue", NULL, "J", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "flush", NULL, "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "in_", NULL, 0x12, "Ljava.util.zip.Checksum;", NULL, NULL, .constantValue.asLong = 0 },
    { "buffer_", NULL, 0x12, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "upto_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_BUFFERSIZE", "DEFAULT_BUFFERSIZE", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneStoreBufferedChecksum_DEFAULT_BUFFERSIZE },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreBufferedChecksum = { 2, "BufferedChecksum", "org.apache.lucene.store", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneStoreBufferedChecksum;
}

@end

void OrgApacheLuceneStoreBufferedChecksum_initWithJavaUtilZipChecksum_(OrgApacheLuceneStoreBufferedChecksum *self, id<JavaUtilZipChecksum> inArg) {
  OrgApacheLuceneStoreBufferedChecksum_initWithJavaUtilZipChecksum_withInt_(self, inArg, OrgApacheLuceneStoreBufferedChecksum_DEFAULT_BUFFERSIZE);
}

OrgApacheLuceneStoreBufferedChecksum *new_OrgApacheLuceneStoreBufferedChecksum_initWithJavaUtilZipChecksum_(id<JavaUtilZipChecksum> inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreBufferedChecksum, initWithJavaUtilZipChecksum_, inArg)
}

OrgApacheLuceneStoreBufferedChecksum *create_OrgApacheLuceneStoreBufferedChecksum_initWithJavaUtilZipChecksum_(id<JavaUtilZipChecksum> inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreBufferedChecksum, initWithJavaUtilZipChecksum_, inArg)
}

void OrgApacheLuceneStoreBufferedChecksum_initWithJavaUtilZipChecksum_withInt_(OrgApacheLuceneStoreBufferedChecksum *self, id<JavaUtilZipChecksum> inArg, jint bufferSize) {
  NSObject_init(self);
  self->in_ = inArg;
  self->buffer_ = [IOSByteArray newArrayWithLength:bufferSize];
}

OrgApacheLuceneStoreBufferedChecksum *new_OrgApacheLuceneStoreBufferedChecksum_initWithJavaUtilZipChecksum_withInt_(id<JavaUtilZipChecksum> inArg, jint bufferSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreBufferedChecksum, initWithJavaUtilZipChecksum_withInt_, inArg, bufferSize)
}

OrgApacheLuceneStoreBufferedChecksum *create_OrgApacheLuceneStoreBufferedChecksum_initWithJavaUtilZipChecksum_withInt_(id<JavaUtilZipChecksum> inArg, jint bufferSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreBufferedChecksum, initWithJavaUtilZipChecksum_withInt_, inArg, bufferSize)
}

void OrgApacheLuceneStoreBufferedChecksum_flush(OrgApacheLuceneStoreBufferedChecksum *self) {
  if (self->upto_ > 0) {
    [((id<JavaUtilZipChecksum>) nil_chk(self->in_)) updateWithByteArray:self->buffer_ withInt:0 withInt:self->upto_];
  }
  self->upto_ = 0;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreBufferedChecksum)
