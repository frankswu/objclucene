//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/LRUFilterCache.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Deprecated.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/IdentityHashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/BitsFilteredDocIdSet.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/search/FilterCachingPolicy.h"
#include "org/apache/lucene/search/LRUFilterCache.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/RoaringDocIdSet.h"

@interface OrgApacheLuceneSearchLRUFilterCache () {
 @public
  jint maxSize_;
  jlong maxRamBytesUsed_;
  id<JavaUtilMap> uniqueFilters_;
  id<JavaUtilSet> mostRecentlyUsedFilters_;
  id<JavaUtilMap> cache_;
  volatile_jlong ramBytesUsed_;
  volatile_jlong hitCount_;
  volatile_jlong missCount_;
  volatile_jlong cacheCount_;
  volatile_jlong cacheSize_;
}

- (void)onEvictionWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)singleton;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache, uniqueFilters_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache, mostRecentlyUsedFilters_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache, cache_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneSearchLRUFilterCache_onEvictionWithOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchLRUFilterCache *self, OrgApacheLuceneSearchFilter *singleton);

__attribute__((unused)) static jlong OrgApacheLuceneSearchLRUFilterCache_getHitCount(OrgApacheLuceneSearchLRUFilterCache *self);

__attribute__((unused)) static jlong OrgApacheLuceneSearchLRUFilterCache_getMissCount(OrgApacheLuceneSearchLRUFilterCache *self);

__attribute__((unused)) static jlong OrgApacheLuceneSearchLRUFilterCache_getCacheSize(OrgApacheLuceneSearchLRUFilterCache *self);

__attribute__((unused)) static jlong OrgApacheLuceneSearchLRUFilterCache_getCacheCount(OrgApacheLuceneSearchLRUFilterCache *self);

@interface OrgApacheLuceneSearchLRUFilterCache_LeafCache : NSObject < OrgApacheLuceneUtilAccountable > {
 @public
  OrgApacheLuceneSearchLRUFilterCache *this$0_;
  id key_;
  id<JavaUtilMap> cache_;
  volatile_jlong ramBytesUsed_;
}

- (instancetype)initWithOrgApacheLuceneSearchLRUFilterCache:(OrgApacheLuceneSearchLRUFilterCache *)outer$
                                                     withId:(id)key;

- (void)onDocIdSetCacheWithLong:(jlong)ramBytesUsed;

- (void)onDocIdSetEvictionWithLong:(jlong)ramBytesUsed;

- (OrgApacheLuceneSearchDocIdSet *)getWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter;

- (void)putIfAbsentWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                 withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set;

- (void)removeWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter;

- (jlong)ramBytesUsed;

- (id<JavaUtilCollection>)getChildResources;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchLRUFilterCache_LeafCache)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache_LeafCache, this$0_, OrgApacheLuceneSearchLRUFilterCache *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache_LeafCache, key_, id)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache_LeafCache, cache_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneSearchLRUFilterCache_LeafCache_initWithOrgApacheLuceneSearchLRUFilterCache_withId_(OrgApacheLuceneSearchLRUFilterCache_LeafCache *self, OrgApacheLuceneSearchLRUFilterCache *outer$, id key);

__attribute__((unused)) static OrgApacheLuceneSearchLRUFilterCache_LeafCache *new_OrgApacheLuceneSearchLRUFilterCache_LeafCache_initWithOrgApacheLuceneSearchLRUFilterCache_withId_(OrgApacheLuceneSearchLRUFilterCache *outer$, id key) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgApacheLuceneSearchLRUFilterCache_LeafCache_onDocIdSetCacheWithLong_(OrgApacheLuceneSearchLRUFilterCache_LeafCache *self, jlong ramBytesUsed);

__attribute__((unused)) static void OrgApacheLuceneSearchLRUFilterCache_LeafCache_onDocIdSetEvictionWithLong_(OrgApacheLuceneSearchLRUFilterCache_LeafCache *self, jlong ramBytesUsed);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchLRUFilterCache_LeafCache)

@interface OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter : OrgApacheLuceneSearchFilter {
 @public
  OrgApacheLuceneSearchLRUFilterCache *this$0_;
  OrgApacheLuceneSearchFilter *in_;
  id<OrgApacheLuceneSearchFilterCachingPolicy> policy_;
}

- (instancetype)initWithOrgApacheLuceneSearchLRUFilterCache:(OrgApacheLuceneSearchLRUFilterCache *)outer$
                            withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)inArg
               withOrgApacheLuceneSearchFilterCachingPolicy:(id<OrgApacheLuceneSearchFilterCachingPolicy>)policy;

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                            withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)acceptDocs;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

- (NSString *)toStringWithNSString:(NSString *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter, this$0_, OrgApacheLuceneSearchLRUFilterCache *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter, in_, OrgApacheLuceneSearchFilter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter, policy_, id<OrgApacheLuceneSearchFilterCachingPolicy>)

__attribute__((unused)) static void OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter_initWithOrgApacheLuceneSearchLRUFilterCache_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter *self, OrgApacheLuceneSearchLRUFilterCache *outer$, OrgApacheLuceneSearchFilter *inArg, id<OrgApacheLuceneSearchFilterCachingPolicy> policy);

__attribute__((unused)) static OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter *new_OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter_initWithOrgApacheLuceneSearchLRUFilterCache_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(OrgApacheLuceneSearchLRUFilterCache *outer$, OrgApacheLuceneSearchFilter *inArg, id<OrgApacheLuceneSearchFilterCachingPolicy> policy) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter)

@interface OrgApacheLuceneSearchLRUFilterCache_$1 : NSObject < OrgApacheLuceneIndexLeafReader_CoreClosedListener > {
 @public
  OrgApacheLuceneSearchLRUFilterCache *this$0_;
}

- (void)onCloseWithId:(id)ownerCoreCacheKey;

- (instancetype)initWithOrgApacheLuceneSearchLRUFilterCache:(OrgApacheLuceneSearchLRUFilterCache *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchLRUFilterCache_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLRUFilterCache_$1, this$0_, OrgApacheLuceneSearchLRUFilterCache *)

__attribute__((unused)) static void OrgApacheLuceneSearchLRUFilterCache_$1_initWithOrgApacheLuceneSearchLRUFilterCache_(OrgApacheLuceneSearchLRUFilterCache_$1 *self, OrgApacheLuceneSearchLRUFilterCache *outer$);

__attribute__((unused)) static OrgApacheLuceneSearchLRUFilterCache_$1 *new_OrgApacheLuceneSearchLRUFilterCache_$1_initWithOrgApacheLuceneSearchLRUFilterCache_(OrgApacheLuceneSearchLRUFilterCache *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchLRUFilterCache_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchLRUFilterCache)

jlong OrgApacheLuceneSearchLRUFilterCache_HASHTABLE_RAM_BYTES_PER_ENTRY_;
jlong OrgApacheLuceneSearchLRUFilterCache_LINKED_HASHTABLE_RAM_BYTES_PER_ENTRY_;

@implementation OrgApacheLuceneSearchLRUFilterCache

- (instancetype)initWithInt:(jint)maxSize
                   withLong:(jlong)maxRamBytesUsed {
  OrgApacheLuceneSearchLRUFilterCache_initWithInt_withLong_(self, maxSize, maxRamBytesUsed);
  return self;
}

- (void)onHitWithId:(id)readerCoreKey
withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  JrePlusAssignVolatileLongJ(&hitCount_, 1);
}

- (void)onMissWithId:(id)readerCoreKey
withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  JreAssert((filter != nil), (@"org/apache/lucene/search/LRUFilterCache.java:150 condition failed: assert filter != null;"));
  JrePlusAssignVolatileLongJ(&missCount_, 1);
}

- (void)onFilterCacheWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                            withLong:(jlong)ramBytesUsed {
  JrePlusAssignVolatileLongJ(&self->ramBytesUsed_, ramBytesUsed);
}

- (void)onFilterEvictionWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                               withLong:(jlong)ramBytesUsed {
  JreMinusAssignVolatileLongJ(&self->ramBytesUsed_, ramBytesUsed);
}

- (void)onDocIdSetCacheWithId:(id)readerCoreKey
                     withLong:(jlong)ramBytesUsed {
  JrePlusAssignVolatileLongJ(&cacheSize_, 1);
  JrePlusAssignVolatileLongJ(&cacheCount_, 1);
  JrePlusAssignVolatileLongJ(&self->ramBytesUsed_, ramBytesUsed);
}

- (void)onDocIdSetEvictionWithId:(id)readerCoreKey
                         withInt:(jint)numEntries
                        withLong:(jlong)sumRamBytesUsed {
  JreMinusAssignVolatileLongJ(&self->ramBytesUsed_, sumRamBytesUsed);
  JreMinusAssignVolatileLongJ(&cacheSize_, numEntries);
}

- (void)onClear {
  JreAssignVolatileLong(&ramBytesUsed_, 0);
  JreAssignVolatileLong(&cacheSize_, 0);
}

- (jboolean)requiresEviction {
  jint size = [((id<JavaUtilSet>) nil_chk(mostRecentlyUsedFilters_)) size];
  if (size == 0) {
    return false;
  }
  else {
    return size > maxSize_ || [self ramBytesUsed] > maxRamBytesUsed_;
  }
}

- (OrgApacheLuceneSearchDocIdSet *)getWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                            withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  @synchronized(self) {
    id readerKey = [((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) getCoreCacheKey];
    OrgApacheLuceneSearchLRUFilterCache_LeafCache *leafCache = [((id<JavaUtilMap>) nil_chk(cache_)) getWithId:readerKey];
    if (leafCache == nil) {
      [self onMissWithId:readerKey withOrgApacheLuceneSearchFilter:filter];
      return nil;
    }
    OrgApacheLuceneSearchFilter *singleton = [((id<JavaUtilMap>) nil_chk(uniqueFilters_)) getWithId:filter];
    if (singleton == nil) {
      [self onMissWithId:readerKey withOrgApacheLuceneSearchFilter:filter];
      return nil;
    }
    OrgApacheLuceneSearchDocIdSet *cached = [((OrgApacheLuceneSearchLRUFilterCache_LeafCache *) nil_chk(leafCache)) getWithOrgApacheLuceneSearchFilter:singleton];
    if (cached == nil) {
      [self onMissWithId:readerKey withOrgApacheLuceneSearchFilter:singleton];
    }
    else {
      [self onHitWithId:readerKey withOrgApacheLuceneSearchFilter:singleton];
    }
    return cached;
  }
}

- (void)putIfAbsentWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
         withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                 withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set {
  @synchronized(self) {
    JreAssert(([((OrgApacheLuceneSearchDocIdSet *) nil_chk(set)) isCacheable]), (@"org/apache/lucene/search/LRUFilterCache.java:241 condition failed: assert set.isCacheable();"));
    OrgApacheLuceneSearchFilter *singleton = [((id<JavaUtilMap>) nil_chk(uniqueFilters_)) getWithId:filter];
    if (singleton == nil) {
      [uniqueFilters_ putWithId:filter withId:filter];
      [self onFilterCacheWithOrgApacheLuceneSearchFilter:singleton withLong:OrgApacheLuceneSearchLRUFilterCache_LINKED_HASHTABLE_RAM_BYTES_PER_ENTRY_ + [self ramBytesUsedWithOrgApacheLuceneSearchFilter:filter]];
    }
    else {
      filter = singleton;
    }
    id key = [((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) getCoreCacheKey];
    OrgApacheLuceneSearchLRUFilterCache_LeafCache *leafCache = [((id<JavaUtilMap>) nil_chk(cache_)) getWithId:key];
    if (leafCache == nil) {
      leafCache = [new_OrgApacheLuceneSearchLRUFilterCache_LeafCache_initWithOrgApacheLuceneSearchLRUFilterCache_withId_(self, key) autorelease];
      OrgApacheLuceneSearchLRUFilterCache_LeafCache *previous = [cache_ putWithId:[((OrgApacheLuceneIndexLeafReader *) nil_chk([context reader])) getCoreCacheKey] withId:leafCache];
      JrePlusAssignVolatileLongJ(&ramBytesUsed_, OrgApacheLuceneSearchLRUFilterCache_HASHTABLE_RAM_BYTES_PER_ENTRY_);
      JreAssert((previous == nil), (@"org/apache/lucene/search/LRUFilterCache.java:255 condition failed: assert previous == null;"));
      [((OrgApacheLuceneIndexLeafReader *) nil_chk([context reader])) addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:[new_OrgApacheLuceneSearchLRUFilterCache_$1_initWithOrgApacheLuceneSearchLRUFilterCache_(self) autorelease]];
    }
    [((OrgApacheLuceneSearchLRUFilterCache_LeafCache *) nil_chk(leafCache)) putIfAbsentWithOrgApacheLuceneSearchFilter:filter withOrgApacheLuceneSearchDocIdSet:set];
    [self evictIfNecessary];
  }
}

- (void)evictIfNecessary {
  @synchronized(self) {
    if ([self requiresEviction]) {
      id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk(mostRecentlyUsedFilters_)) iterator];
      do {
        OrgApacheLuceneSearchFilter *filter = [((id<JavaUtilIterator>) nil_chk(iterator)) next];
        [iterator remove];
        OrgApacheLuceneSearchLRUFilterCache_onEvictionWithOrgApacheLuceneSearchFilter_(self, filter);
      }
      while ([iterator hasNext] && [self requiresEviction]);
    }
  }
}

- (void)clearCoreCacheKeyWithId:(id)coreKey {
  @synchronized(self) {
    OrgApacheLuceneSearchLRUFilterCache_LeafCache *leafCache = [((id<JavaUtilMap>) nil_chk(cache_)) removeWithId:coreKey];
    if (leafCache != nil) {
      JreMinusAssignVolatileLongJ(&ramBytesUsed_, OrgApacheLuceneSearchLRUFilterCache_HASHTABLE_RAM_BYTES_PER_ENTRY_);
      [self onDocIdSetEvictionWithId:coreKey withInt:[((id<JavaUtilMap>) nil_chk(leafCache->cache_)) size] withLong:JreLoadVolatileLong(&leafCache->ramBytesUsed_)];
    }
  }
}

- (void)clearFilterWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  @synchronized(self) {
    OrgApacheLuceneSearchFilter *singleton = [((id<JavaUtilMap>) nil_chk(uniqueFilters_)) removeWithId:filter];
    if (singleton != nil) {
      OrgApacheLuceneSearchLRUFilterCache_onEvictionWithOrgApacheLuceneSearchFilter_(self, singleton);
    }
  }
}

- (void)onEvictionWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)singleton {
  OrgApacheLuceneSearchLRUFilterCache_onEvictionWithOrgApacheLuceneSearchFilter_(self, singleton);
}

- (void)clear {
  @synchronized(self) {
    [((id<JavaUtilMap>) nil_chk(cache_)) clear];
    [((id<JavaUtilSet>) nil_chk(mostRecentlyUsedFilters_)) clear];
    [self onClear];
  }
}

- (void)assertConsistent {
  @synchronized(self) {
    if ([self requiresEviction]) {
      @throw [new_JavaLangAssertionError_initWithId_(JreStrcat("$I$I$J$J", @"requires evictions: size=", [((id<JavaUtilSet>) nil_chk(mostRecentlyUsedFilters_)) size], @", maxSize=", maxSize_, @", ramBytesUsed=", [self ramBytesUsed], @", maxRamBytesUsed=", maxRamBytesUsed_)) autorelease];
    }
    for (OrgApacheLuceneSearchLRUFilterCache_LeafCache * __strong leafCache in nil_chk([((id<JavaUtilMap>) nil_chk(cache_)) values])) {
      id<JavaUtilSet> keys = JavaUtilCollections_newSetFromMapWithJavaUtilMap_([new_JavaUtilIdentityHashMap_init() autorelease]);
      [((id<JavaUtilSet>) nil_chk(keys)) addAllWithJavaUtilCollection:[((id<JavaUtilMap>) nil_chk(((OrgApacheLuceneSearchLRUFilterCache_LeafCache *) nil_chk(leafCache))->cache_)) keySet]];
      [keys removeAllWithJavaUtilCollection:mostRecentlyUsedFilters_];
      if (![keys isEmpty]) {
        @throw [new_JavaLangAssertionError_initWithId_(JreStrcat("$@", @"One leaf cache contains more keys than the top-level cache: ", keys)) autorelease];
      }
    }
    jlong recomputedRamBytesUsed = OrgApacheLuceneSearchLRUFilterCache_HASHTABLE_RAM_BYTES_PER_ENTRY_ * [cache_ size] + OrgApacheLuceneSearchLRUFilterCache_LINKED_HASHTABLE_RAM_BYTES_PER_ENTRY_ * [((id<JavaUtilMap>) nil_chk(uniqueFilters_)) size];
    for (OrgApacheLuceneSearchFilter * __strong filter in nil_chk(mostRecentlyUsedFilters_)) {
      recomputedRamBytesUsed += [self ramBytesUsedWithOrgApacheLuceneSearchFilter:filter];
    }
    for (OrgApacheLuceneSearchLRUFilterCache_LeafCache * __strong leafCache in nil_chk([cache_ values])) {
      recomputedRamBytesUsed += OrgApacheLuceneSearchLRUFilterCache_HASHTABLE_RAM_BYTES_PER_ENTRY_ * [((id<JavaUtilMap>) nil_chk(((OrgApacheLuceneSearchLRUFilterCache_LeafCache *) nil_chk(leafCache))->cache_)) size];
      for (OrgApacheLuceneSearchDocIdSet * __strong set in nil_chk([leafCache->cache_ values])) {
        recomputedRamBytesUsed += [((OrgApacheLuceneSearchDocIdSet *) nil_chk(set)) ramBytesUsed];
      }
    }
    if (recomputedRamBytesUsed != JreLoadVolatileLong(&ramBytesUsed_)) {
      @throw [new_JavaLangAssertionError_initWithId_(JreStrcat("$J$J", @"ramBytesUsed mismatch : ", JreLoadVolatileLong(&ramBytesUsed_), @" != ", recomputedRamBytesUsed)) autorelease];
    }
    jlong recomputedCacheSize = 0;
    for (OrgApacheLuceneSearchLRUFilterCache_LeafCache * __strong leafCache in nil_chk([cache_ values])) {
      recomputedCacheSize += [((id<JavaUtilMap>) nil_chk(((OrgApacheLuceneSearchLRUFilterCache_LeafCache *) nil_chk(leafCache))->cache_)) size];
    }
    if (recomputedCacheSize != OrgApacheLuceneSearchLRUFilterCache_getCacheSize(self)) {
      @throw [new_JavaLangAssertionError_initWithId_(JreStrcat("$J$J", @"cacheSize mismatch : ", OrgApacheLuceneSearchLRUFilterCache_getCacheSize(self), @" != ", recomputedCacheSize)) autorelease];
    }
  }
}

- (id<JavaUtilList>)cachedFilters {
  @synchronized(self) {
    return [new_JavaUtilArrayList_initWithJavaUtilCollection_(mostRecentlyUsedFilters_) autorelease];
  }
}

- (OrgApacheLuceneSearchFilter *)doCacheWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                           withOrgApacheLuceneSearchFilterCachingPolicy:(id<OrgApacheLuceneSearchFilterCachingPolicy>)policy {
  while ([filter isKindOfClass:[OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter class]]) {
    filter = ((OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter *) nil_chk(((OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter *) check_class_cast(filter, [OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter class]))))->in_;
  }
  return [new_OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter_initWithOrgApacheLuceneSearchLRUFilterCache_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(self, filter, policy) autorelease];
}

- (OrgApacheLuceneSearchDocIdSet *)docIdSetToCacheWithOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)docIdSet
                                                 withOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader {
  if (docIdSet == nil || [docIdSet isCacheable]) {
    return docIdSet;
  }
  else {
    OrgApacheLuceneSearchDocIdSetIterator *it = [docIdSet iterator];
    if (it == nil) {
      return nil;
    }
    else {
      return [self cacheImplWithOrgApacheLuceneSearchDocIdSetIterator:it withOrgApacheLuceneIndexLeafReader:reader];
    }
  }
}

- (jlong)ramBytesUsed {
  return JreLoadVolatileLong(&ramBytesUsed_);
}

- (id<JavaUtilCollection>)getChildResources {
  @synchronized(self) {
    return OrgApacheLuceneUtilAccountables_namedAccountablesWithNSString_withJavaUtilMap_(@"segment", cache_);
  }
}

- (jlong)ramBytesUsedWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  if ([OrgApacheLuceneUtilAccountable_class_() isInstance:filter]) {
    return [((id<OrgApacheLuceneUtilAccountable>) nil_chk(((id<OrgApacheLuceneUtilAccountable>) check_protocol_cast(filter, OrgApacheLuceneUtilAccountable_class_())))) ramBytesUsed];
  }
  return OrgApacheLuceneSearchLRUFilterCache_FILTER_DEFAULT_RAM_BYTES_USED;
}

- (OrgApacheLuceneSearchDocIdSet *)cacheImplWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)iterator
                                                   withOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader {
  return [((OrgApacheLuceneUtilRoaringDocIdSet_Builder *) nil_chk([((OrgApacheLuceneUtilRoaringDocIdSet_Builder *) [new_OrgApacheLuceneUtilRoaringDocIdSet_Builder_initWithInt_([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) maxDoc]) autorelease]) addWithOrgApacheLuceneSearchDocIdSetIterator:iterator])) build];
}

- (jlong)getTotalCount {
  return OrgApacheLuceneSearchLRUFilterCache_getHitCount(self) + OrgApacheLuceneSearchLRUFilterCache_getMissCount(self);
}

- (jlong)getHitCount {
  return OrgApacheLuceneSearchLRUFilterCache_getHitCount(self);
}

- (jlong)getMissCount {
  return OrgApacheLuceneSearchLRUFilterCache_getMissCount(self);
}

- (jlong)getCacheSize {
  return OrgApacheLuceneSearchLRUFilterCache_getCacheSize(self);
}

- (jlong)getCacheCount {
  return OrgApacheLuceneSearchLRUFilterCache_getCacheCount(self);
}

- (jlong)getEvictionCount {
  return OrgApacheLuceneSearchLRUFilterCache_getCacheCount(self) - OrgApacheLuceneSearchLRUFilterCache_getCacheSize(self);
}

- (void)dealloc {
  RELEASE_(uniqueFilters_);
  RELEASE_(mostRecentlyUsedFilters_);
  RELEASE_(cache_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchLRUFilterCache class]) {
    OrgApacheLuceneSearchLRUFilterCache_HASHTABLE_RAM_BYTES_PER_ENTRY_ = 2 * JreLoadStatic(OrgApacheLuceneUtilRamUsageEstimator, NUM_BYTES_OBJECT_REF_) * 2;
    OrgApacheLuceneSearchLRUFilterCache_LINKED_HASHTABLE_RAM_BYTES_PER_ENTRY_ = OrgApacheLuceneSearchLRUFilterCache_HASHTABLE_RAM_BYTES_PER_ENTRY_ + 2 * JreLoadStatic(OrgApacheLuceneUtilRamUsageEstimator, NUM_BYTES_OBJECT_REF_);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchLRUFilterCache)
  }
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withLong:", "LRUFilterCache", NULL, 0x1, NULL, NULL },
    { "onHitWithId:withOrgApacheLuceneSearchFilter:", "onHit", "V", 0x4, NULL, NULL },
    { "onMissWithId:withOrgApacheLuceneSearchFilter:", "onMiss", "V", 0x4, NULL, NULL },
    { "onFilterCacheWithOrgApacheLuceneSearchFilter:withLong:", "onFilterCache", "V", 0x4, NULL, NULL },
    { "onFilterEvictionWithOrgApacheLuceneSearchFilter:withLong:", "onFilterEviction", "V", 0x4, NULL, NULL },
    { "onDocIdSetCacheWithId:withLong:", "onDocIdSetCache", "V", 0x4, NULL, NULL },
    { "onDocIdSetEvictionWithId:withInt:withLong:", "onDocIdSetEviction", "V", 0x4, NULL, NULL },
    { "onClear", NULL, "V", 0x4, NULL, NULL },
    { "requiresEviction", NULL, "Z", 0x0, NULL, NULL },
    { "getWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:", "get", "Lorg.apache.lucene.search.DocIdSet;", 0x20, NULL, NULL },
    { "putIfAbsentWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchDocIdSet:", "putIfAbsent", "V", 0x20, NULL, NULL },
    { "evictIfNecessary", NULL, "V", 0x20, NULL, NULL },
    { "clearCoreCacheKeyWithId:", "clearCoreCacheKey", "V", 0x21, NULL, NULL },
    { "clearFilterWithOrgApacheLuceneSearchFilter:", "clearFilter", "V", 0x21, NULL, NULL },
    { "onEvictionWithOrgApacheLuceneSearchFilter:", "onEviction", "V", 0x2, NULL, NULL },
    { "clear", NULL, "V", 0x21, NULL, NULL },
    { "assertConsistent", NULL, "V", 0x20, NULL, NULL },
    { "cachedFilters", NULL, "Ljava.util.List;", 0x20, NULL, NULL },
    { "doCacheWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchFilterCachingPolicy:", "doCache", "Lorg.apache.lucene.search.Filter;", 0x1, NULL, NULL },
    { "docIdSetToCacheWithOrgApacheLuceneSearchDocIdSet:withOrgApacheLuceneIndexLeafReader:", "docIdSetToCache", "Lorg.apache.lucene.search.DocIdSet;", 0x4, "Ljava.io.IOException;", NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "ramBytesUsedWithOrgApacheLuceneSearchFilter:", "ramBytesUsed", "J", 0x4, NULL, NULL },
    { "cacheImplWithOrgApacheLuceneSearchDocIdSetIterator:withOrgApacheLuceneIndexLeafReader:", "cacheImpl", "Lorg.apache.lucene.search.DocIdSet;", 0x4, "Ljava.io.IOException;", NULL },
    { "getTotalCount", NULL, "J", 0x11, NULL, NULL },
    { "getHitCount", NULL, "J", 0x11, NULL, NULL },
    { "getMissCount", NULL, "J", 0x11, NULL, NULL },
    { "getCacheSize", NULL, "J", 0x11, NULL, NULL },
    { "getCacheCount", NULL, "J", 0x11, NULL, NULL },
    { "getEvictionCount", NULL, "J", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FILTER_DEFAULT_RAM_BYTES_USED", "FILTER_DEFAULT_RAM_BYTES_USED", 0x18, "J", NULL, NULL, .constantValue.asLong = OrgApacheLuceneSearchLRUFilterCache_FILTER_DEFAULT_RAM_BYTES_USED },
    { "HASHTABLE_RAM_BYTES_PER_ENTRY_", NULL, 0x18, "J", &OrgApacheLuceneSearchLRUFilterCache_HASHTABLE_RAM_BYTES_PER_ENTRY_, NULL, .constantValue.asLong = 0 },
    { "LINKED_HASHTABLE_RAM_BYTES_PER_ENTRY_", NULL, 0x18, "J", &OrgApacheLuceneSearchLRUFilterCache_LINKED_HASHTABLE_RAM_BYTES_PER_ENTRY_, NULL, .constantValue.asLong = 0 },
    { "maxSize_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxRamBytesUsed_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "uniqueFilters_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/apache/lucene/search/Filter;Lorg/apache/lucene/search/Filter;>;", .constantValue.asLong = 0 },
    { "mostRecentlyUsedFilters_", NULL, 0x12, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lorg/apache/lucene/search/Filter;>;", .constantValue.asLong = 0 },
    { "cache_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/Object;Lorg/apache/lucene/search/LRUFilterCache$LeafCache;>;", .constantValue.asLong = 0 },
    { "ramBytesUsed_", NULL, 0x42, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "hitCount_", NULL, 0x42, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "missCount_", NULL, 0x42, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "cacheCount_", NULL, 0x42, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "cacheSize_", NULL, 0x42, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.LRUFilterCache$LeafCache;", "Lorg.apache.lucene.search.LRUFilterCache$CachingWrapperFilter;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchLRUFilterCache = { 2, "LRUFilterCache", "org.apache.lucene.search", NULL, 0x1, 30, methods, 13, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneSearchLRUFilterCache;
}

@end

void OrgApacheLuceneSearchLRUFilterCache_initWithInt_withLong_(OrgApacheLuceneSearchLRUFilterCache *self, jint maxSize, jlong maxRamBytesUsed) {
  NSObject_init(self);
  self->maxSize_ = maxSize;
  self->maxRamBytesUsed_ = maxRamBytesUsed;
  JreStrongAssignAndConsume(&self->uniqueFilters_, new_JavaUtilLinkedHashMap_initWithInt_withFloat_withBoolean_(16, 0.75f, true));
  JreStrongAssign(&self->mostRecentlyUsedFilters_, [self->uniqueFilters_ keySet]);
  JreStrongAssignAndConsume(&self->cache_, new_JavaUtilIdentityHashMap_init());
  JreAssignVolatileLong(&self->ramBytesUsed_, 0);
}

OrgApacheLuceneSearchLRUFilterCache *new_OrgApacheLuceneSearchLRUFilterCache_initWithInt_withLong_(jint maxSize, jlong maxRamBytesUsed) {
  OrgApacheLuceneSearchLRUFilterCache *self = [OrgApacheLuceneSearchLRUFilterCache alloc];
  OrgApacheLuceneSearchLRUFilterCache_initWithInt_withLong_(self, maxSize, maxRamBytesUsed);
  return self;
}

void OrgApacheLuceneSearchLRUFilterCache_onEvictionWithOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchLRUFilterCache *self, OrgApacheLuceneSearchFilter *singleton) {
  [self onFilterEvictionWithOrgApacheLuceneSearchFilter:singleton withLong:OrgApacheLuceneSearchLRUFilterCache_LINKED_HASHTABLE_RAM_BYTES_PER_ENTRY_ + [self ramBytesUsedWithOrgApacheLuceneSearchFilter:singleton]];
  for (OrgApacheLuceneSearchLRUFilterCache_LeafCache * __strong leafCache in nil_chk([((id<JavaUtilMap>) nil_chk(self->cache_)) values])) {
    [((OrgApacheLuceneSearchLRUFilterCache_LeafCache *) nil_chk(leafCache)) removeWithOrgApacheLuceneSearchFilter:singleton];
  }
}

jlong OrgApacheLuceneSearchLRUFilterCache_getHitCount(OrgApacheLuceneSearchLRUFilterCache *self) {
  return JreLoadVolatileLong(&self->hitCount_);
}

jlong OrgApacheLuceneSearchLRUFilterCache_getMissCount(OrgApacheLuceneSearchLRUFilterCache *self) {
  return JreLoadVolatileLong(&self->missCount_);
}

jlong OrgApacheLuceneSearchLRUFilterCache_getCacheSize(OrgApacheLuceneSearchLRUFilterCache *self) {
  return JreLoadVolatileLong(&self->cacheSize_);
}

jlong OrgApacheLuceneSearchLRUFilterCache_getCacheCount(OrgApacheLuceneSearchLRUFilterCache *self) {
  return JreLoadVolatileLong(&self->cacheCount_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchLRUFilterCache)

@implementation OrgApacheLuceneSearchLRUFilterCache_LeafCache

- (instancetype)initWithOrgApacheLuceneSearchLRUFilterCache:(OrgApacheLuceneSearchLRUFilterCache *)outer$
                                                     withId:(id)key {
  OrgApacheLuceneSearchLRUFilterCache_LeafCache_initWithOrgApacheLuceneSearchLRUFilterCache_withId_(self, outer$, key);
  return self;
}

- (void)onDocIdSetCacheWithLong:(jlong)ramBytesUsed {
  OrgApacheLuceneSearchLRUFilterCache_LeafCache_onDocIdSetCacheWithLong_(self, ramBytesUsed);
}

- (void)onDocIdSetEvictionWithLong:(jlong)ramBytesUsed {
  OrgApacheLuceneSearchLRUFilterCache_LeafCache_onDocIdSetEvictionWithLong_(self, ramBytesUsed);
}

- (OrgApacheLuceneSearchDocIdSet *)getWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  return [((id<JavaUtilMap>) nil_chk(cache_)) getWithId:filter];
}

- (void)putIfAbsentWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                 withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set {
  if ([((id<JavaUtilMap>) nil_chk(cache_)) containsKeyWithId:filter] == false) {
    [cache_ putWithId:filter withId:set];
    OrgApacheLuceneSearchLRUFilterCache_LeafCache_onDocIdSetCacheWithLong_(self, JreLoadStatic(OrgApacheLuceneSearchLRUFilterCache, HASHTABLE_RAM_BYTES_PER_ENTRY_) + [((OrgApacheLuceneSearchDocIdSet *) nil_chk(set)) ramBytesUsed]);
  }
}

- (void)removeWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  OrgApacheLuceneSearchDocIdSet *removed = [((id<JavaUtilMap>) nil_chk(cache_)) removeWithId:filter];
  if (removed != nil) {
    OrgApacheLuceneSearchLRUFilterCache_LeafCache_onDocIdSetEvictionWithLong_(self, JreLoadStatic(OrgApacheLuceneSearchLRUFilterCache, HASHTABLE_RAM_BYTES_PER_ENTRY_) + [removed ramBytesUsed]);
  }
}

- (jlong)ramBytesUsed {
  return JreLoadVolatileLong(&ramBytesUsed_);
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(key_);
  RELEASE_(cache_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchLRUFilterCache:withId:", "LeafCache", NULL, 0x0, NULL, NULL },
    { "onDocIdSetCacheWithLong:", "onDocIdSetCache", "V", 0x2, NULL, NULL },
    { "onDocIdSetEvictionWithLong:", "onDocIdSetEviction", "V", 0x2, NULL, NULL },
    { "getWithOrgApacheLuceneSearchFilter:", "get", "Lorg.apache.lucene.search.DocIdSet;", 0x0, NULL, NULL },
    { "putIfAbsentWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchDocIdSet:", "putIfAbsent", "V", 0x0, NULL, NULL },
    { "removeWithOrgApacheLuceneSearchFilter:", "remove", "V", 0x0, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.search.LRUFilterCache;", NULL, NULL, .constantValue.asLong = 0 },
    { "key_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "cache_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/apache/lucene/search/Filter;Lorg/apache/lucene/search/DocIdSet;>;", .constantValue.asLong = 0 },
    { "ramBytesUsed_", NULL, 0x42, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchLRUFilterCache_LeafCache = { 2, "LeafCache", "org.apache.lucene.search", "LRUFilterCache", 0x2, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchLRUFilterCache_LeafCache;
}

@end

void OrgApacheLuceneSearchLRUFilterCache_LeafCache_initWithOrgApacheLuceneSearchLRUFilterCache_withId_(OrgApacheLuceneSearchLRUFilterCache_LeafCache *self, OrgApacheLuceneSearchLRUFilterCache *outer$, id key) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->key_, key);
  JreStrongAssignAndConsume(&self->cache_, new_JavaUtilIdentityHashMap_init());
  JreAssignVolatileLong(&self->ramBytesUsed_, 0);
}

OrgApacheLuceneSearchLRUFilterCache_LeafCache *new_OrgApacheLuceneSearchLRUFilterCache_LeafCache_initWithOrgApacheLuceneSearchLRUFilterCache_withId_(OrgApacheLuceneSearchLRUFilterCache *outer$, id key) {
  OrgApacheLuceneSearchLRUFilterCache_LeafCache *self = [OrgApacheLuceneSearchLRUFilterCache_LeafCache alloc];
  OrgApacheLuceneSearchLRUFilterCache_LeafCache_initWithOrgApacheLuceneSearchLRUFilterCache_withId_(self, outer$, key);
  return self;
}

void OrgApacheLuceneSearchLRUFilterCache_LeafCache_onDocIdSetCacheWithLong_(OrgApacheLuceneSearchLRUFilterCache_LeafCache *self, jlong ramBytesUsed) {
  JrePlusAssignVolatileLongJ(&self->ramBytesUsed_, ramBytesUsed);
  [self->this$0_ onDocIdSetCacheWithId:self->key_ withLong:ramBytesUsed];
}

void OrgApacheLuceneSearchLRUFilterCache_LeafCache_onDocIdSetEvictionWithLong_(OrgApacheLuceneSearchLRUFilterCache_LeafCache *self, jlong ramBytesUsed) {
  JreMinusAssignVolatileLongJ(&self->ramBytesUsed_, ramBytesUsed);
  [self->this$0_ onDocIdSetEvictionWithId:self->key_ withInt:1 withLong:ramBytesUsed];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchLRUFilterCache_LeafCache)

@implementation OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter

- (instancetype)initWithOrgApacheLuceneSearchLRUFilterCache:(OrgApacheLuceneSearchLRUFilterCache *)outer$
                            withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)inArg
               withOrgApacheLuceneSearchFilterCachingPolicy:(id<OrgApacheLuceneSearchFilterCachingPolicy>)policy {
  OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter_initWithOrgApacheLuceneSearchLRUFilterCache_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(self, outer$, inArg, policy);
  return self;
}

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                            withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)acceptDocs {
  if (((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context))->ord_ == 0) {
    [((id<OrgApacheLuceneSearchFilterCachingPolicy>) nil_chk(policy_)) onUseWithOrgApacheLuceneSearchFilter:in_];
  }
  OrgApacheLuceneSearchDocIdSet *set = [this$0_ getWithOrgApacheLuceneSearchFilter:in_ withOrgApacheLuceneIndexLeafReaderContext:context];
  if (set == nil) {
    set = [((OrgApacheLuceneSearchFilter *) nil_chk(in_)) getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:context withOrgApacheLuceneUtilBits:nil];
    if ([((id<OrgApacheLuceneSearchFilterCachingPolicy>) nil_chk(policy_)) shouldCacheWithOrgApacheLuceneSearchFilter:in_ withOrgApacheLuceneIndexLeafReaderContext:context withOrgApacheLuceneSearchDocIdSet:set]) {
      set = [this$0_ docIdSetToCacheWithOrgApacheLuceneSearchDocIdSet:set withOrgApacheLuceneIndexLeafReader:[context reader]];
      if (set == nil) {
        set = JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY_);
      }
      [this$0_ putIfAbsentWithOrgApacheLuceneSearchFilter:in_ withOrgApacheLuceneIndexLeafReaderContext:context withOrgApacheLuceneSearchDocIdSet:set];
    }
  }
  return set == JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY_) ? nil : OrgApacheLuceneSearchBitsFilteredDocIdSet_wrapWithOrgApacheLuceneSearchDocIdSet_withOrgApacheLuceneUtilBits_(set, acceptDocs);
}

- (jboolean)isEqual:(id)obj {
  return [super isEqual:obj] && [((OrgApacheLuceneSearchFilter *) nil_chk(in_)) isEqual:((OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter *) nil_chk(((OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter *) check_class_cast(obj, [OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter class]))))->in_];
}

- (NSUInteger)hash {
  return 31 * ((jint) [super hash]) + ((jint) [((OrgApacheLuceneSearchFilter *) nil_chk(in_)) hash]);
}

- (NSString *)toStringWithNSString:(NSString *)field {
  return JreStrcat("$$C", @"CachingWrapperFilter(", [((OrgApacheLuceneSearchFilter *) nil_chk(in_)) toStringWithNSString:field], ')');
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(in_);
  RELEASE_(policy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchLRUFilterCache:withOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchFilterCachingPolicy:", "CachingWrapperFilter", NULL, 0x0, NULL, NULL },
    { "getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneUtilBits:", "getDocIdSet", "Lorg.apache.lucene.search.DocIdSet;", 0x1, "Ljava.io.IOException;", NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "toStringWithNSString:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.search.LRUFilterCache;", NULL, NULL, .constantValue.asLong = 0 },
    { "in_", NULL, 0x12, "Lorg.apache.lucene.search.Filter;", NULL, NULL, .constantValue.asLong = 0 },
    { "policy_", NULL, 0x12, "Lorg.apache.lucene.search.FilterCachingPolicy;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter = { 2, "CachingWrapperFilter", "org.apache.lucene.search", "LRUFilterCache", 0x2, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter;
}

@end

void OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter_initWithOrgApacheLuceneSearchLRUFilterCache_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter *self, OrgApacheLuceneSearchLRUFilterCache *outer$, OrgApacheLuceneSearchFilter *inArg, id<OrgApacheLuceneSearchFilterCachingPolicy> policy) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchFilter_init(self);
  JreStrongAssign(&self->in_, inArg);
  JreStrongAssign(&self->policy_, policy);
}

OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter *new_OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter_initWithOrgApacheLuceneSearchLRUFilterCache_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(OrgApacheLuceneSearchLRUFilterCache *outer$, OrgApacheLuceneSearchFilter *inArg, id<OrgApacheLuceneSearchFilterCachingPolicy> policy) {
  OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter *self = [OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter alloc];
  OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter_initWithOrgApacheLuceneSearchLRUFilterCache_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(self, outer$, inArg, policy);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchLRUFilterCache_CachingWrapperFilter)

@implementation OrgApacheLuceneSearchLRUFilterCache_$1

- (void)onCloseWithId:(id)ownerCoreCacheKey {
  [this$0_ clearCoreCacheKeyWithId:ownerCoreCacheKey];
}

- (instancetype)initWithOrgApacheLuceneSearchLRUFilterCache:(OrgApacheLuceneSearchLRUFilterCache *)outer$ {
  OrgApacheLuceneSearchLRUFilterCache_$1_initWithOrgApacheLuceneSearchLRUFilterCache_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCloseWithId:", "onClose", "V", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneSearchLRUFilterCache:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.search.LRUFilterCache;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchLRUFilterCache", "putIfAbsentWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchDocIdSet:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchLRUFilterCache_$1 = { 2, "", "org.apache.lucene.search", "LRUFilterCache", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneSearchLRUFilterCache_$1;
}

@end

void OrgApacheLuceneSearchLRUFilterCache_$1_initWithOrgApacheLuceneSearchLRUFilterCache_(OrgApacheLuceneSearchLRUFilterCache_$1 *self, OrgApacheLuceneSearchLRUFilterCache *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgApacheLuceneSearchLRUFilterCache_$1 *new_OrgApacheLuceneSearchLRUFilterCache_$1_initWithOrgApacheLuceneSearchLRUFilterCache_(OrgApacheLuceneSearchLRUFilterCache *outer$) {
  OrgApacheLuceneSearchLRUFilterCache_$1 *self = [OrgApacheLuceneSearchLRUFilterCache_$1 alloc];
  OrgApacheLuceneSearchLRUFilterCache_$1_initWithOrgApacheLuceneSearchLRUFilterCache_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchLRUFilterCache_$1)
