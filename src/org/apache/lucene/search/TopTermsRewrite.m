//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/TopTermsRewrite.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Float.h"
#include "java/lang/Math.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/PriorityQueue.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexReaderContext.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermContext.h"
#include "org/apache/lucene/index/TermState.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/BoostAttribute.h"
#include "org/apache/lucene/search/MaxNonCompetitiveBoostAttribute.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/TermCollectingRewrite.h"
#include "org/apache/lucene/search/TopTermsRewrite.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/AttributeSource.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"

@interface OrgApacheLuceneSearchTopTermsRewrite () {
 @public
  jint size_;
}

@end

static id<JavaUtilComparator> OrgApacheLuceneSearchTopTermsRewrite_scoreTermSortByTermComp_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneSearchTopTermsRewrite, scoreTermSortByTermComp_, id<JavaUtilComparator>)

@interface OrgApacheLuceneSearchTopTermsRewrite_$2 : OrgApacheLuceneSearchTermCollectingRewrite_TermCollector {
 @public
  id<OrgApacheLuceneSearchMaxNonCompetitiveBoostAttribute> maxBoostAtt_;
  id<JavaUtilMap> visitedTerms_;
  OrgApacheLuceneIndexTermsEnum *termsEnum_;
  id<OrgApacheLuceneSearchBoostAttribute> boostAtt_;
  OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *st_;
  OrgApacheLuceneUtilBytesRefBuilder *lastTerm_;
  JavaUtilPriorityQueue *val$stQueue_;
  jint val$maxSize_;
}

- (void)setNextEnumWithOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum;

- (jboolean)compareToLastTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)t;

- (jboolean)collectWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes;

- (instancetype)initWithJavaUtilPriorityQueue:(JavaUtilPriorityQueue *)capture$0
                                      withInt:(jint)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTopTermsRewrite_$2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopTermsRewrite_$2, maxBoostAtt_, id<OrgApacheLuceneSearchMaxNonCompetitiveBoostAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopTermsRewrite_$2, visitedTerms_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopTermsRewrite_$2, termsEnum_, OrgApacheLuceneIndexTermsEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopTermsRewrite_$2, boostAtt_, id<OrgApacheLuceneSearchBoostAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopTermsRewrite_$2, st_, OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopTermsRewrite_$2, lastTerm_, OrgApacheLuceneUtilBytesRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopTermsRewrite_$2, val$stQueue_, JavaUtilPriorityQueue *)

__attribute__((unused)) static jboolean OrgApacheLuceneSearchTopTermsRewrite_$2_compareToLastTermWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchTopTermsRewrite_$2 *self, OrgApacheLuceneUtilBytesRef *t);

__attribute__((unused)) static void OrgApacheLuceneSearchTopTermsRewrite_$2_initWithJavaUtilPriorityQueue_withInt_(OrgApacheLuceneSearchTopTermsRewrite_$2 *self, JavaUtilPriorityQueue *capture$0, jint capture$1);

__attribute__((unused)) static OrgApacheLuceneSearchTopTermsRewrite_$2 *new_OrgApacheLuceneSearchTopTermsRewrite_$2_initWithJavaUtilPriorityQueue_withInt_(JavaUtilPriorityQueue *capture$0, jint capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTopTermsRewrite_$2)

@interface OrgApacheLuceneSearchTopTermsRewrite_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *)st1
               withId:(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *)st2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTopTermsRewrite_$1)

__attribute__((unused)) static void OrgApacheLuceneSearchTopTermsRewrite_$1_init(OrgApacheLuceneSearchTopTermsRewrite_$1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchTopTermsRewrite_$1 *new_OrgApacheLuceneSearchTopTermsRewrite_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTopTermsRewrite_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchTopTermsRewrite)

@implementation OrgApacheLuceneSearchTopTermsRewrite

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneSearchTopTermsRewrite_initWithInt_(self, size);
  return self;
}

- (jint)getSize {
  return size_;
}

- (jint)getMaxSize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query {
  jint maxSize = JavaLangMath_minWithInt_withInt_(size_, [self getMaxSize]);
  JavaUtilPriorityQueue *stQueue = [new_JavaUtilPriorityQueue_init() autorelease];
  [self collectTermsWithOrgApacheLuceneIndexIndexReader:reader withOrgApacheLuceneSearchMultiTermQuery:query withOrgApacheLuceneSearchTermCollectingRewrite_TermCollector:[new_OrgApacheLuceneSearchTopTermsRewrite_$2_initWithJavaUtilPriorityQueue_withInt_(stQueue, maxSize) autorelease]];
  id b = [self getTopLevelBuilder];
  IOSObjectArray *scoreTerms = [stQueue toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[stQueue size] type:OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_class_()]];
  OrgApacheLuceneUtilArrayUtil_timSortWithNSObjectArray_withJavaUtilComparator_(scoreTerms, OrgApacheLuceneSearchTopTermsRewrite_scoreTermSortByTermComp_);
  {
    IOSObjectArray *a__ = scoreTerms;
    OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *st = *b__++;
      OrgApacheLuceneIndexTerm *term = [new_OrgApacheLuceneIndexTerm_initWithNSString_withOrgApacheLuceneUtilBytesRef_(((OrgApacheLuceneSearchMultiTermQuery *) nil_chk(query))->field_, [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(((OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *) nil_chk(st))->bytes_)) toBytesRef]) autorelease];
      [self addClauseWithId:b withOrgApacheLuceneIndexTerm:term withInt:[((OrgApacheLuceneIndexTermContext *) nil_chk(st->termState_)) docFreq] withFloat:[query getBoost] * st->boost_ withOrgApacheLuceneIndexTermContext:st->termState_];
    }
  }
  return [self buildWithId:b];
}

- (NSUInteger)hash {
  return 31 * size_;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return YES;
  if (obj == nil) return NO;
  if ([self getClass] != [nil_chk(obj) getClass]) return NO;
  OrgApacheLuceneSearchTopTermsRewrite *other = (OrgApacheLuceneSearchTopTermsRewrite *) check_class_cast(obj, [OrgApacheLuceneSearchTopTermsRewrite class]);
  if (size_ != other->size_) return NO;
  return YES;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchTopTermsRewrite class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchTopTermsRewrite_scoreTermSortByTermComp_, new_OrgApacheLuceneSearchTopTermsRewrite_$1_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchTopTermsRewrite)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "TopTermsRewrite", NULL, 0x1, NULL, NULL },
    { "getSize", NULL, "I", 0x1, NULL, NULL },
    { "getMaxSize", NULL, "I", 0x404, NULL, NULL },
    { "rewriteWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchMultiTermQuery:", "rewrite", "Lorg.apache.lucene.search.Query;", 0x11, "Ljava.io.IOException;", NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "size_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "scoreTermSortByTermComp_", NULL, 0x1a, "Ljava.util.Comparator;", &OrgApacheLuceneSearchTopTermsRewrite_scoreTermSortByTermComp_, "Ljava/util/Comparator<Lorg/apache/lucene/search/TopTermsRewrite$ScoreTerm;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TB;"};
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.TopTermsRewrite$ScoreTerm;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTopTermsRewrite = { 2, "TopTermsRewrite", "org.apache.lucene.search", NULL, 0x401, 6, methods, 2, fields, 1, superclass_type_args, 1, inner_classes, NULL, "<B:Ljava/lang/Object;>Lorg/apache/lucene/search/TermCollectingRewrite<TB;>;" };
  return &_OrgApacheLuceneSearchTopTermsRewrite;
}

@end

void OrgApacheLuceneSearchTopTermsRewrite_initWithInt_(OrgApacheLuceneSearchTopTermsRewrite *self, jint size) {
  OrgApacheLuceneSearchTermCollectingRewrite_init(self);
  self->size_ = size;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTopTermsRewrite)

@implementation OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm

- (instancetype)initWithOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)termState {
  OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_initWithOrgApacheLuceneIndexTermContext_(self, termState);
  return self;
}

- (jint)compareToWithId:(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *)other {
  check_class_cast(other, [OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm class]);
  if (self->boost_ == ((OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *) nil_chk(other))->boost_) return [((OrgApacheLuceneUtilBytesRef *) nil_chk([((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(other->bytes_)) get])) compareToWithId:[self->bytes_ get]];
  else return JavaLangFloat_compareWithFloat_withFloat_(self->boost_, other->boost_);
}

- (void)dealloc {
  RELEASE_(bytes_);
  RELEASE_(termState_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexTermContext:", "ScoreTerm", NULL, 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bytes_", NULL, 0x11, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "boost_", NULL, 0x1, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "termState_", NULL, 0x11, "Lorg.apache.lucene.index.TermContext;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm = { 2, "ScoreTerm", "org.apache.lucene.search", "TopTermsRewrite", 0x18, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/lang/Comparable<Lorg/apache/lucene/search/TopTermsRewrite$ScoreTerm;>;" };
  return &_OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm;
}

@end

void OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_initWithOrgApacheLuceneIndexTermContext_(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *self, OrgApacheLuceneIndexTermContext *termState) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->bytes_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssign(&self->termState_, termState);
}

OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *new_OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_initWithOrgApacheLuceneIndexTermContext_(OrgApacheLuceneIndexTermContext *termState) {
  OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *self = [OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm alloc];
  OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_initWithOrgApacheLuceneIndexTermContext_(self, termState);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm)

@implementation OrgApacheLuceneSearchTopTermsRewrite_$2

- (void)setNextEnumWithOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum {
  JreStrongAssign(&self->termsEnum_, termsEnum);
  JreAssert((OrgApacheLuceneSearchTopTermsRewrite_$2_compareToLastTermWithOrgApacheLuceneUtilBytesRef_(self, nil)), (@"org/apache/lucene/search/TopTermsRewrite.java:81 condition failed: assert compareToLastTerm(null);"));
  if (st_ == nil) JreStrongAssignAndConsume(&st_, new_OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_initWithOrgApacheLuceneIndexTermContext_([new_OrgApacheLuceneIndexTermContext_initWithOrgApacheLuceneIndexIndexReaderContext_(topReaderContext_) autorelease]));
  JreStrongAssign(&boostAtt_, [((OrgApacheLuceneUtilAttributeSource *) nil_chk([((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) attributes])) addAttributeWithIOSClass:OrgApacheLuceneSearchBoostAttribute_class_()]);
}

- (jboolean)compareToLastTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)t {
  return OrgApacheLuceneSearchTopTermsRewrite_$2_compareToLastTermWithOrgApacheLuceneUtilBytesRef_(self, t);
}

- (jboolean)collectWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes {
  jfloat boost = [((id<OrgApacheLuceneSearchBoostAttribute>) nil_chk(boostAtt_)) getBoost];
  JreAssert((OrgApacheLuceneSearchTopTermsRewrite_$2_compareToLastTermWithOrgApacheLuceneUtilBytesRef_(self, bytes)), (@"org/apache/lucene/search/TopTermsRewrite.java:110 condition failed: assert compareToLastTerm(bytes);"));
  if ([((JavaUtilPriorityQueue *) nil_chk(val$stQueue_)) size] == val$maxSize_) {
    OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *t = [val$stQueue_ peek];
    if (boost < ((OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *) nil_chk(t))->boost_) return YES;
    if (boost == t->boost_ && [((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes)) compareToWithId:[((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(t->bytes_)) get]] > 0) return YES;
  }
  OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *t = [((id<JavaUtilMap>) nil_chk(visitedTerms_)) getWithId:bytes];
  OrgApacheLuceneIndexTermState *state = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) termState];
  JreAssert((state != nil), (@"org/apache/lucene/search/TopTermsRewrite.java:123 condition failed: assert state != null;"));
  if (t != nil) {
    JreAssert((t->boost_ == boost), (@"boost should be equal in all segment TermsEnums"));
    [((OrgApacheLuceneIndexTermContext *) nil_chk(t->termState_)) register__WithOrgApacheLuceneIndexTermState:state withInt:((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(readerContext_))->ord_ withInt:[termsEnum_ docFreq] withLong:[termsEnum_ totalTermFreq]];
  }
  else {
    [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(((OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *) nil_chk(st_))->bytes_)) copyBytesWithOrgApacheLuceneUtilBytesRef:bytes];
    st_->boost_ = boost;
    [visitedTerms_ putWithId:[st_->bytes_ get] withId:st_];
    JreAssert(([((OrgApacheLuceneIndexTermContext *) nil_chk(st_->termState_)) docFreq] == 0), (@"org/apache/lucene/search/TopTermsRewrite.java:133 condition failed: assert st.termState.docFreq() == 0;"));
    [st_->termState_ register__WithOrgApacheLuceneIndexTermState:state withInt:((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(readerContext_))->ord_ withInt:[termsEnum_ docFreq] withLong:[termsEnum_ totalTermFreq]];
    [val$stQueue_ offerWithId:st_];
    if ([val$stQueue_ size] > val$maxSize_) {
      JreStrongAssign(&st_, [val$stQueue_ poll]);
      [visitedTerms_ removeWithId:[((OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *) nil_chk(st_))->bytes_ get]];
      [st_->termState_ clear];
    }
    else {
      JreStrongAssignAndConsume(&st_, new_OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_initWithOrgApacheLuceneIndexTermContext_([new_OrgApacheLuceneIndexTermContext_initWithOrgApacheLuceneIndexIndexReaderContext_(topReaderContext_) autorelease]));
    }
    JreAssert(([val$stQueue_ size] <= val$maxSize_), (@"the PQ size must be limited to maxSize"));
    if ([val$stQueue_ size] == val$maxSize_) {
      t = [val$stQueue_ peek];
      [((id<OrgApacheLuceneSearchMaxNonCompetitiveBoostAttribute>) nil_chk(maxBoostAtt_)) setMaxNonCompetitiveBoostWithFloat:((OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *) nil_chk(t))->boost_];
      [maxBoostAtt_ setCompetitiveTermWithOrgApacheLuceneUtilBytesRef:[t->bytes_ get]];
    }
  }
  return YES;
}

- (instancetype)initWithJavaUtilPriorityQueue:(JavaUtilPriorityQueue *)capture$0
                                      withInt:(jint)capture$1 {
  OrgApacheLuceneSearchTopTermsRewrite_$2_initWithJavaUtilPriorityQueue_withInt_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(maxBoostAtt_);
  RELEASE_(visitedTerms_);
  RELEASE_(termsEnum_);
  RELEASE_(boostAtt_);
  RELEASE_(st_);
  RELEASE_(lastTerm_);
  RELEASE_(val$stQueue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setNextEnumWithOrgApacheLuceneIndexTermsEnum:", "setNextEnum", "V", 0x1, NULL, NULL },
    { "compareToLastTermWithOrgApacheLuceneUtilBytesRef:", "compareToLastTerm", "Z", 0x2, NULL, NULL },
    { "collectWithOrgApacheLuceneUtilBytesRef:", "collect", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithJavaUtilPriorityQueue:withInt:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maxBoostAtt_", NULL, 0x12, "Lorg.apache.lucene.search.MaxNonCompetitiveBoostAttribute;", NULL, NULL, .constantValue.asLong = 0 },
    { "visitedTerms_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/search/TopTermsRewrite$ScoreTerm;>;", .constantValue.asLong = 0 },
    { "termsEnum_", NULL, 0x2, "Lorg.apache.lucene.index.TermsEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "boostAtt_", NULL, 0x2, "Lorg.apache.lucene.search.BoostAttribute;", NULL, NULL, .constantValue.asLong = 0 },
    { "st_", NULL, 0x2, "Lorg.apache.lucene.search.TopTermsRewrite$ScoreTerm;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastTerm_", NULL, 0x2, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$stQueue_", NULL, 0x1012, "Ljava.util.PriorityQueue;", NULL, "Ljava/util/PriorityQueue<Lorg/apache/lucene/search/TopTermsRewrite$ScoreTerm;>;", .constantValue.asLong = 0 },
    { "val$maxSize_", NULL, 0x1012, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchTopTermsRewrite", "rewriteWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchMultiTermQuery:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTopTermsRewrite_$2 = { 2, "", "org.apache.lucene.search", "TopTermsRewrite", 0x8008, 4, methods, 8, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneSearchTopTermsRewrite_$2;
}

@end

jboolean OrgApacheLuceneSearchTopTermsRewrite_$2_compareToLastTermWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchTopTermsRewrite_$2 *self, OrgApacheLuceneUtilBytesRef *t) {
  if (self->lastTerm_ == nil && t != nil) {
    JreStrongAssignAndConsume(&self->lastTerm_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
    [self->lastTerm_ appendWithOrgApacheLuceneUtilBytesRef:t];
  }
  else if (t == nil) {
    JreStrongAssign(&self->lastTerm_, nil);
  }
  else {
    JreAssert(([((OrgApacheLuceneUtilBytesRef *) nil_chk([((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(self->lastTerm_)) get])) compareToWithId:t] < 0), (JreStrcat("$@$@", @"lastTerm=", self->lastTerm_, @" t=", t)));
    [self->lastTerm_ copyBytesWithOrgApacheLuceneUtilBytesRef:t];
  }
  return YES;
}

void OrgApacheLuceneSearchTopTermsRewrite_$2_initWithJavaUtilPriorityQueue_withInt_(OrgApacheLuceneSearchTopTermsRewrite_$2 *self, JavaUtilPriorityQueue *capture$0, jint capture$1) {
  JreStrongAssign(&self->val$stQueue_, capture$0);
  self->val$maxSize_ = capture$1;
  OrgApacheLuceneSearchTermCollectingRewrite_TermCollector_init(self);
  JreStrongAssign(&self->maxBoostAtt_, [((OrgApacheLuceneUtilAttributeSource *) nil_chk(self->attributes_)) addAttributeWithIOSClass:OrgApacheLuceneSearchMaxNonCompetitiveBoostAttribute_class_()]);
  JreStrongAssignAndConsume(&self->visitedTerms_, new_JavaUtilHashMap_init());
}

OrgApacheLuceneSearchTopTermsRewrite_$2 *new_OrgApacheLuceneSearchTopTermsRewrite_$2_initWithJavaUtilPriorityQueue_withInt_(JavaUtilPriorityQueue *capture$0, jint capture$1) {
  OrgApacheLuceneSearchTopTermsRewrite_$2 *self = [OrgApacheLuceneSearchTopTermsRewrite_$2 alloc];
  OrgApacheLuceneSearchTopTermsRewrite_$2_initWithJavaUtilPriorityQueue_withInt_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTopTermsRewrite_$2)

@implementation OrgApacheLuceneSearchTopTermsRewrite_$1

- (jint)compareWithId:(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *)st1
               withId:(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *)st2 {
  return [((OrgApacheLuceneUtilBytesRef *) nil_chk([((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(((OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *) nil_chk(st1))->bytes_)) get])) compareToWithId:[((OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *) nil_chk(st2))->bytes_ get]];
}

- (instancetype)init {
  OrgApacheLuceneSearchTopTermsRewrite_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTopTermsRewrite_$1 = { 2, "", "org.apache.lucene.search", "TopTermsRewrite", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/search/TopTermsRewrite$ScoreTerm;>;" };
  return &_OrgApacheLuceneSearchTopTermsRewrite_$1;
}

@end

void OrgApacheLuceneSearchTopTermsRewrite_$1_init(OrgApacheLuceneSearchTopTermsRewrite_$1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchTopTermsRewrite_$1 *new_OrgApacheLuceneSearchTopTermsRewrite_$1_init() {
  OrgApacheLuceneSearchTopTermsRewrite_$1 *self = [OrgApacheLuceneSearchTopTermsRewrite_$1 alloc];
  OrgApacheLuceneSearchTopTermsRewrite_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTopTermsRewrite_$1)
