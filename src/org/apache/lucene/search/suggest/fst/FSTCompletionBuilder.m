//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionBuilder.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/Comparator.h"
#include "org/apache/lucene/search/suggest/InMemorySorter.h"
#include "org/apache/lucene/search/suggest/fst/BytesRefSorter.h"
#include "org/apache/lucene/search/suggest/fst/FSTCompletion.h"
#include "org/apache/lucene/search/suggest/fst/FSTCompletionBuilder.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/BytesRefIterator.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/fst/Builder.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/NoOutputs.h"
#include "org/apache/lucene/util/fst/Outputs.h"
#include "org/apache/lucene/util/fst/Util.h"
#include "org/apache/lucene/util/packed/PackedInts.h"

@interface OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder () {
 @public
  jint buckets_;
  id<OrgApacheLuceneSearchSuggestFstBytesRefSorter> sorter_;
  OrgApacheLuceneUtilBytesRefBuilder *scratch_;
  jint shareMaxTailLength_;
}

- (OrgApacheLuceneUtilFstFST *)buildAutomatonWithOrgApacheLuceneSearchSuggestFstBytesRefSorter:(id<OrgApacheLuceneSearchSuggestFstBytesRefSorter>)sorter;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder, sorter_, id<OrgApacheLuceneSearchSuggestFstBytesRefSorter>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder, scratch_, OrgApacheLuceneUtilBytesRefBuilder *)

__attribute__((unused)) static OrgApacheLuceneUtilFstFST *OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_buildAutomatonWithOrgApacheLuceneSearchSuggestFstBytesRefSorter_(OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder *self, id<OrgApacheLuceneSearchSuggestFstBytesRefSorter> sorter);

@implementation OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder

- (instancetype)init {
  OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)buckets
withOrgApacheLuceneSearchSuggestFstBytesRefSorter:(id<OrgApacheLuceneSearchSuggestFstBytesRefSorter>)sorter
                    withInt:(jint)shareMaxTailLength {
  OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_initWithInt_withOrgApacheLuceneSearchSuggestFstBytesRefSorter_withInt_(self, buckets, sorter, shareMaxTailLength);
  return self;
}

- (void)addWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)utf8
                                   withInt:(jint)bucket {
  if (bucket < 0 || bucket >= buckets_) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"Bucket outside of the allowed range [0, ", buckets_, @"): ", bucket)) autorelease];
  }
  [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(scratch_)) growWithInt:((OrgApacheLuceneUtilBytesRef *) nil_chk(utf8))->length_ + 10];
  [scratch_ clear];
  [scratch_ appendWithByte:(jbyte) bucket];
  [scratch_ appendWithOrgApacheLuceneUtilBytesRef:utf8];
  [((id<OrgApacheLuceneSearchSuggestFstBytesRefSorter>) nil_chk(sorter_)) addWithOrgApacheLuceneUtilBytesRef:[scratch_ get]];
}

- (OrgApacheLuceneSearchSuggestFstFSTCompletion *)build {
  JreStrongAssign(&self->automaton_, OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_buildAutomatonWithOrgApacheLuceneSearchSuggestFstBytesRefSorter_(self, sorter_));
  if ([JavaIoCloseable_class_() isInstance:sorter_]) {
    [((id<JavaIoCloseable>) nil_chk(((id<JavaIoCloseable>) check_protocol_cast(sorter_, JavaIoCloseable_class_())))) close];
  }
  return [new_OrgApacheLuceneSearchSuggestFstFSTCompletion_initWithOrgApacheLuceneUtilFstFST_(automaton_) autorelease];
}

- (OrgApacheLuceneUtilFstFST *)buildAutomatonWithOrgApacheLuceneSearchSuggestFstBytesRefSorter:(id<OrgApacheLuceneSearchSuggestFstBytesRefSorter>)sorter {
  return OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_buildAutomatonWithOrgApacheLuceneSearchSuggestFstBytesRefSorter_(self, sorter);
}

- (void)dealloc {
  RELEASE_(automaton_);
  RELEASE_(sorter_);
  RELEASE_(scratch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FSTCompletionBuilder", NULL, 0x1, NULL, NULL },
    { "initWithInt:withOrgApacheLuceneSearchSuggestFstBytesRefSorter:withInt:", "FSTCompletionBuilder", NULL, 0x1, NULL, NULL },
    { "addWithOrgApacheLuceneUtilBytesRef:withInt:", "add", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "build", NULL, "Lorg.apache.lucene.search.suggest.fst.FSTCompletion;", 0x1, "Ljava.io.IOException;", NULL },
    { "buildAutomatonWithOrgApacheLuceneSearchSuggestFstBytesRefSorter:", "buildAutomaton", "Lorg.apache.lucene.util.fst.FST;", 0x2, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_BUCKETS", "DEFAULT_BUCKETS", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_DEFAULT_BUCKETS },
    { "buckets_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "automaton_", NULL, 0x0, "Lorg.apache.lucene.util.fst.FST;", NULL, "Lorg/apache/lucene/util/fst/FST<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "sorter_", NULL, 0x12, "Lorg.apache.lucene.search.suggest.fst.BytesRefSorter;", NULL, NULL, .constantValue.asLong = 0 },
    { "scratch_", NULL, 0x12, "Lorg.apache.lucene.util.BytesRefBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "shareMaxTailLength_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder = { 2, "FSTCompletionBuilder", "org.apache.lucene.search.suggest.fst", NULL, 0x1, 5, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder;
}

@end

void OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_init(OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder *self) {
  OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_initWithInt_withOrgApacheLuceneSearchSuggestFstBytesRefSorter_withInt_(self, OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_DEFAULT_BUCKETS, [new_OrgApacheLuceneSearchSuggestInMemorySorter_initWithJavaUtilComparator_(OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUnicodeComparator()) autorelease], JavaLangInteger_MAX_VALUE);
}

OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder *new_OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_init() {
  OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder *self = [OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder alloc];
  OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_init(self);
  return self;
}

void OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_initWithInt_withOrgApacheLuceneSearchSuggestFstBytesRefSorter_withInt_(OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder *self, jint buckets, id<OrgApacheLuceneSearchSuggestFstBytesRefSorter> sorter, jint shareMaxTailLength) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->scratch_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  if (buckets < 1 || buckets > 255) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Buckets must be >= 1 and <= 255: ", buckets)) autorelease];
  }
  if (sorter == nil) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"BytesRefSorter must not be null.") autorelease];
  JreStrongAssign(&self->sorter_, sorter);
  self->buckets_ = buckets;
  self->shareMaxTailLength_ = shareMaxTailLength;
}

OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder *new_OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_initWithInt_withOrgApacheLuceneSearchSuggestFstBytesRefSorter_withInt_(jint buckets, id<OrgApacheLuceneSearchSuggestFstBytesRefSorter> sorter, jint shareMaxTailLength) {
  OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder *self = [OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder alloc];
  OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_initWithInt_withOrgApacheLuceneSearchSuggestFstBytesRefSorter_withInt_(self, buckets, sorter, shareMaxTailLength);
  return self;
}

OrgApacheLuceneUtilFstFST *OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder_buildAutomatonWithOrgApacheLuceneSearchSuggestFstBytesRefSorter_(OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder *self, id<OrgApacheLuceneSearchSuggestFstBytesRefSorter> sorter) {
  OrgApacheLuceneUtilFstOutputs *outputs = OrgApacheLuceneUtilFstNoOutputs_getSingleton();
  id empty = [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs)) getNoOutput];
  OrgApacheLuceneUtilFstBuilder *builder = [new_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPEEnum_withInt_withInt_withBoolean_withBoolean_withInt_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withBoolean_withInt_(JreLoadStatic(OrgApacheLuceneUtilFstFST_INPUT_TYPEEnum, BYTE1), 0, 0, YES, YES, self->shareMaxTailLength_, outputs, NO, OrgApacheLuceneUtilPackedPackedInts_DEFAULT, YES, 15) autorelease];
  OrgApacheLuceneUtilBytesRefBuilder *scratch = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
  OrgApacheLuceneUtilBytesRef *entry_;
  OrgApacheLuceneUtilIntsRefBuilder *scratchIntsRef = [new_OrgApacheLuceneUtilIntsRefBuilder_init() autorelease];
  jint count = 0;
  id<OrgApacheLuceneUtilBytesRefIterator> iter = [((id<OrgApacheLuceneSearchSuggestFstBytesRefSorter>) nil_chk(sorter)) iterator];
  while ((entry_ = [((id<OrgApacheLuceneUtilBytesRefIterator>) nil_chk(iter)) next]) != nil) {
    count++;
    if ([((OrgApacheLuceneUtilBytesRef *) nil_chk([scratch get])) compareToWithId:entry_] != 0) {
      [builder addWithOrgApacheLuceneUtilIntsRef:OrgApacheLuceneUtilFstUtil_toIntsRefWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilIntsRefBuilder_(entry_, scratchIntsRef) withId:empty];
      [scratch copyBytesWithOrgApacheLuceneUtilBytesRef:entry_];
    }
  }
  return count == 0 ? nil : [builder finish];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestFstFSTCompletionBuilder)
