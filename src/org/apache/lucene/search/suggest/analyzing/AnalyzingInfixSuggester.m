//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/StringReader.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/AnalyzerWrapper.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/Tokenizer.h"
#include "org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.h"
#include "org/apache/lucene/analysis/ngram/Lucene43EdgeNGramTokenFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/document/BinaryDocValuesField.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/document/Field.h"
#include "org/apache/lucene/document/FieldType.h"
#include "org/apache/lucene/document/NumericDocValuesField.h"
#include "org/apache/lucene/document/SortedSetDocValuesField.h"
#include "org/apache/lucene/document/StringField.h"
#include "org/apache/lucene/document/TextField.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/DirectoryReader.h"
#include "org/apache/lucene/index/FilterLeafReader.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/IndexWriterConfig.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/LiveIndexWriterConfig.h"
#include "org/apache/lucene/index/MergePolicy.h"
#include "org/apache/lucene/index/MultiDocValues.h"
#include "org/apache/lucene/index/ReaderUtil.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/index/SortedSetDocValues.h"
#include "org/apache/lucene/index/SortingMergePolicy.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/Collector.h"
#include "org/apache/lucene/search/EarlyTerminatingSortingCollector.h"
#include "org/apache/lucene/search/FieldDoc.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/PrefixQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/ScoreDoc.h"
#include "org/apache/lucene/search/SearcherManager.h"
#include "org/apache/lucene/search/Sort.h"
#include "org/apache/lucene/search/SortField.h"
#include "org/apache/lucene/search/TermQuery.h"
#include "org/apache/lucene/search/TopFieldCollector.h"
#include "org/apache/lucene/search/TopFieldDocs.h"
#include "org/apache/lucene/search/suggest/Lookup.h"
#include "org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/Version.h"

@interface OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester () {
 @public
  OrgApacheLuceneStoreDirectory *dir_;
  jboolean allTermsRequired_;
  jboolean highlight_;
  jboolean commitOnBuild_;
  OrgApacheLuceneIndexIndexWriter *writer_;
}

- (OrgApacheLuceneAnalysisAnalyzer *)getGramAnalyzer;

- (void)ensureOpen;

- (OrgApacheLuceneDocumentDocument *)buildDocumentWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
                                                                  withJavaUtilSet:(id<JavaUtilSet>)contexts
                                                                         withLong:(jlong)weight
                                                  withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, dir_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, writer_, OrgApacheLuceneIndexIndexWriter *)

static OrgApacheLuceneSearchSort *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, SORT_, OrgApacheLuceneSearchSort *)

__attribute__((unused)) static OrgApacheLuceneAnalysisAnalyzer *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self);

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_ensureOpen(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self);

__attribute__((unused)) static OrgApacheLuceneDocumentDocument *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_buildDocumentWithOrgApacheLuceneUtilBytesRef_withJavaUtilSet_withLong_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneUtilBytesRef *text, id<JavaUtilSet> contexts, jlong weight, OrgApacheLuceneUtilBytesRef *payload);

@interface OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1 : OrgApacheLuceneAnalysisAnalyzerWrapper {
 @public
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *this$0_;
}

- (OrgApacheLuceneAnalysisAnalyzer *)getWrappedAnalyzerWithNSString:(NSString *)fieldName;

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)wrapComponentsWithNSString:(NSString *)fieldName
                            withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components;

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester:(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *)outer$
                                   withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1, this$0_, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1 *self, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *arg$0);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1 *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester)

NSString *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME_ = @"text";
NSString *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_EXACT_TEXT_FIELD_NAME_ = @"exacttext";
NSString *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME_ = @"contexts";

@implementation OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(self, dir, analyzer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                 withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                           withInt:(jint)minPrefixChars
                                       withBoolean:(jboolean)commitOnBuild
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)highlight {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight);
  return self;
}

- (OrgApacheLuceneIndexIndexWriterConfig *)getIndexWriterConfigWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                                            withOrgApacheLuceneIndexIndexWriterConfig_OpenModeEnum:(OrgApacheLuceneIndexIndexWriterConfig_OpenModeEnum *)openMode {
  OrgApacheLuceneIndexIndexWriterConfig *iwc = [new_OrgApacheLuceneIndexIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(indexAnalyzer) autorelease];
  [iwc setOpenModeWithOrgApacheLuceneIndexIndexWriterConfig_OpenModeEnum:openMode];
  [iwc setMergePolicyWithOrgApacheLuceneIndexMergePolicy:[new_OrgApacheLuceneIndexSortingMergePolicy_initWithOrgApacheLuceneIndexMergePolicy_withOrgApacheLuceneSearchSort_([iwc getMergePolicy], OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT_) autorelease]];
  return iwc;
}

- (void)commit {
  if (writer_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Cannot commit on an closed writer. Add documents first") autorelease];
  }
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) commit];
}

- (OrgApacheLuceneAnalysisAnalyzer *)getGramAnalyzer {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(self);
}

- (void)ensureOpen {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_ensureOpen(self);
}

- (void)addWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
                           withJavaUtilSet:(id<JavaUtilSet>)contexts
                                  withLong:(jlong)weight
           withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_ensureOpen(self);
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addDocumentWithJavaLangIterable:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_buildDocumentWithOrgApacheLuceneUtilBytesRef_withJavaUtilSet_withLong_withOrgApacheLuceneUtilBytesRef_(self, text, contexts, weight, payload)];
}

- (OrgApacheLuceneDocumentDocument *)buildDocumentWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
                                                                  withJavaUtilSet:(id<JavaUtilSet>)contexts
                                                                         withLong:(jlong)weight
                                                  withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_buildDocumentWithOrgApacheLuceneUtilBytesRef_withJavaUtilSet_withLong_withOrgApacheLuceneUtilBytesRef_(self, text, contexts, weight, payload);
}

- (OrgApacheLuceneDocumentFieldType *)getTextFieldType {
  OrgApacheLuceneDocumentFieldType *ft = [new_OrgApacheLuceneDocumentFieldType_initWithOrgApacheLuceneDocumentFieldType_(JreLoadStatic(OrgApacheLuceneDocumentTextField, TYPE_NOT_STORED_)) autorelease];
  [ft setIndexOptionsWithOrgApacheLuceneIndexIndexOptionsEnum:JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS)];
  [ft setOmitNormsWithBoolean:YES];
  return ft;
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                           withInt:(jint)num
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)doHighlight {
  return [self lookupWithJavaLangCharSequence:key withOrgApacheLuceneSearchBooleanQuery:nil withInt:num withBoolean:allTermsRequired withBoolean:doHighlight];
}

- (OrgApacheLuceneSearchQuery *)getLastTokenQueryWithNSString:(NSString *)token {
  if (((jint) [((NSString *) nil_chk(token)) length]) < minPrefixChars_) {
    return [new_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_([new_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(@"textgrams", token) autorelease]) autorelease];
  }
  return [new_OrgApacheLuceneSearchPrefixQuery_initWithOrgApacheLuceneIndexTerm_([new_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME_, token) autorelease]) autorelease];
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
             withOrgApacheLuceneSearchBooleanQuery:(OrgApacheLuceneSearchBooleanQuery *)contextQuery
                                           withInt:(jint)num
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)doHighlight {
  if (searcherMgr_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"suggester was not built") autorelease];
  }
  OrgApacheLuceneSearchBooleanClause_OccurEnum *occur;
  if (allTermsRequired) {
    occur = JreLoadStatic(OrgApacheLuceneSearchBooleanClause_OccurEnum, MUST);
  }
  else {
    occur = JreLoadStatic(OrgApacheLuceneSearchBooleanClause_OccurEnum, SHOULD);
  }
  OrgApacheLuceneSearchBooleanQuery_Builder *query;
  id<JavaUtilSet> matchedTokens;
  NSString *prefixToken = nil;
  {
    JavaLangThrowable *__mainException = nil;
    OrgApacheLuceneAnalysisTokenStream *ts = [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(queryAnalyzer_)) tokenStreamWithNSString:@"" withJavaIoReader:[new_JavaIoStringReader_initWithNSString_([((id<JavaLangCharSequence>) nil_chk(key)) description]) autorelease]];
    @try {
      [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(ts)) reset];
      id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt = [ts addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()];
      id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt = [ts addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()];
      NSString *lastToken = nil;
      query = [new_OrgApacheLuceneSearchBooleanQuery_Builder_init() autorelease];
      jint maxEndOffset = -1;
      matchedTokens = [new_JavaUtilHashSet_init() autorelease];
      while ([ts incrementToken]) {
        if (lastToken != nil) {
          [matchedTokens addWithId:lastToken];
          [query addWithOrgApacheLuceneSearchQuery:[new_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_([new_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME_, lastToken) autorelease]) autorelease] withOrgApacheLuceneSearchBooleanClause_OccurEnum:occur];
        }
        lastToken = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt)) description];
        if (lastToken != nil) {
          maxEndOffset = JavaLangMath_maxWithInt_withInt_(maxEndOffset, [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) endOffset]);
        }
      }
      [ts end];
      if (lastToken != nil) {
        OrgApacheLuceneSearchQuery *lastQuery;
        if (maxEndOffset == [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) endOffset]) {
          lastQuery = [self getLastTokenQueryWithNSString:lastToken];
          prefixToken = lastToken;
        }
        else {
          [matchedTokens addWithId:lastToken];
          lastQuery = [new_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_([new_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME_, lastToken) autorelease]) autorelease];
        }
        if (lastQuery != nil) {
          [query addWithOrgApacheLuceneSearchQuery:lastQuery withOrgApacheLuceneSearchBooleanClause_OccurEnum:occur];
        }
      }
      if (contextQuery != nil) {
        jboolean allMustNot = YES;
        for (OrgApacheLuceneSearchBooleanClause * __strong clause in nil_chk([contextQuery clauses])) {
          if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(clause)) getOccur] != JreLoadStatic(OrgApacheLuceneSearchBooleanClause_OccurEnum, MUST_NOT)) {
            allMustNot = NO;
            break;
          }
        }
        if (allMustNot) {
          for (OrgApacheLuceneSearchBooleanClause * __strong clause in nil_chk([contextQuery clauses])) {
            [query addWithOrgApacheLuceneSearchBooleanClause:clause];
          }
        }
        else {
          [query addWithOrgApacheLuceneSearchQuery:contextQuery withOrgApacheLuceneSearchBooleanClause_OccurEnum:JreLoadStatic(OrgApacheLuceneSearchBooleanClause_OccurEnum, MUST)];
        }
      }
    }
    @finally {
      @try {
        [ts close];
      }
      @catch (JavaLangThrowable *e) {
        if (__mainException) {
          [__mainException addSuppressedWithJavaLangThrowable:e];
        } else {
          __mainException = e;
        }
      }
      if (__mainException) {
        @throw __mainException;
      }
    }
  }
  OrgApacheLuceneSearchQuery *finalQuery = [self finishQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:query withBoolean:allTermsRequired];
  OrgApacheLuceneSearchTopFieldCollector *c = OrgApacheLuceneSearchTopFieldCollector_createWithOrgApacheLuceneSearchSort_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT_, num, YES, NO, NO);
  OrgApacheLuceneIndexSortingMergePolicy *sortingMergePolicy = (OrgApacheLuceneIndexSortingMergePolicy *) check_class_cast([((OrgApacheLuceneIndexLiveIndexWriterConfig *) nil_chk([((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) getConfig])) getMergePolicy], [OrgApacheLuceneIndexSortingMergePolicy class]);
  id<OrgApacheLuceneSearchCollector> c2 = [new_OrgApacheLuceneSearchEarlyTerminatingSortingCollector_initWithOrgApacheLuceneSearchCollector_withOrgApacheLuceneSearchSort_withInt_withOrgApacheLuceneSearchSort_(c, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT_, num, [((OrgApacheLuceneIndexSortingMergePolicy *) nil_chk(sortingMergePolicy)) getSort]) autorelease];
  OrgApacheLuceneSearchIndexSearcher *searcher = [((OrgApacheLuceneSearchSearcherManager *) nil_chk(searcherMgr_)) acquire];
  id<JavaUtilList> results = nil;
  @try {
    [((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) searchWithOrgApacheLuceneSearchQuery:finalQuery withOrgApacheLuceneSearchCollector:c2];
    OrgApacheLuceneSearchTopFieldDocs *hits = [((OrgApacheLuceneSearchTopFieldCollector *) nil_chk(c)) topDocs];
    results = [self createResultsWithOrgApacheLuceneSearchIndexSearcher:searcher withOrgApacheLuceneSearchTopFieldDocs:hits withInt:num withJavaLangCharSequence:key withBoolean:doHighlight withJavaUtilSet:matchedTokens withNSString:prefixToken];
  }
  @finally {
    [searcherMgr_ release__WithId:searcher];
  }
  return results;
}

- (id<JavaUtilList>)createResultsWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                  withOrgApacheLuceneSearchTopFieldDocs:(OrgApacheLuceneSearchTopFieldDocs *)hits
                                                                withInt:(jint)num
                                               withJavaLangCharSequence:(id<JavaLangCharSequence>)charSequence
                                                            withBoolean:(jboolean)doHighlight
                                                        withJavaUtilSet:(id<JavaUtilSet>)matchedTokens
                                                           withNSString:(NSString *)prefixToken {
  OrgApacheLuceneIndexBinaryDocValues *textDV = OrgApacheLuceneIndexMultiDocValues_getBinaryValuesWithOrgApacheLuceneIndexIndexReader_withNSString_([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader], OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME_);
  OrgApacheLuceneIndexBinaryDocValues *payloadsDV = OrgApacheLuceneIndexMultiDocValues_getBinaryValuesWithOrgApacheLuceneIndexIndexReader_withNSString_([searcher getIndexReader], @"payloads");
  id<JavaUtilList> leaves = [((OrgApacheLuceneIndexIndexReader *) nil_chk([searcher getIndexReader])) leaves];
  id<JavaUtilList> results = [new_JavaUtilArrayList_init() autorelease];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(((OrgApacheLuceneSearchTopFieldDocs *) nil_chk(hits))->scoreDocs_))->size_; i++) {
    OrgApacheLuceneSearchFieldDoc *fd = (OrgApacheLuceneSearchFieldDoc *) check_class_cast(IOSObjectArray_Get(hits->scoreDocs_, i), [OrgApacheLuceneSearchFieldDoc class]);
    OrgApacheLuceneUtilBytesRef *term = [((OrgApacheLuceneIndexBinaryDocValues *) nil_chk(textDV)) getWithInt:((OrgApacheLuceneSearchFieldDoc *) nil_chk(fd))->doc_];
    NSString *text = [((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) utf8ToString];
    jlong score = [((JavaLangLong *) nil_chk((JavaLangLong *) check_class_cast(IOSObjectArray_Get(nil_chk(fd->fields_), 0), [JavaLangLong class]))) longLongValue];
    OrgApacheLuceneUtilBytesRef *payload;
    if (payloadsDV != nil) {
      payload = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([payloadsDV getWithInt:fd->doc_]);
    }
    else {
      payload = nil;
    }
    jint segment = OrgApacheLuceneIndexReaderUtil_subIndexWithInt_withJavaUtilList_(fd->doc_, leaves);
    OrgApacheLuceneIndexSortedSetDocValues *contextsDV = [((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk([((id<JavaUtilList>) nil_chk(leaves)) getWithInt:segment])) reader])) getSortedSetDocValuesWithNSString:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME_];
    id<JavaUtilSet> contexts;
    if (contextsDV != nil) {
      contexts = [new_JavaUtilHashSet_init() autorelease];
      [contextsDV setDocumentWithInt:fd->doc_ - ((OrgApacheLuceneIndexLeafReaderContext *) nil_chk([leaves getWithInt:segment]))->docBase_];
      jlong ord;
      while ((ord = [contextsDV nextOrd]) != OrgApacheLuceneIndexSortedSetDocValues_NO_MORE_ORDS) {
        OrgApacheLuceneUtilBytesRef *context = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([contextsDV lookupOrdWithLong:ord]);
        [contexts addWithId:context];
      }
    }
    else {
      contexts = nil;
    }
    OrgApacheLuceneSearchSuggestLookup_LookupResult *result;
    if (doHighlight) {
      result = [new_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withId_withLong_withOrgApacheLuceneUtilBytesRef_withJavaUtilSet_(text, [self highlightWithNSString:text withJavaUtilSet:matchedTokens withNSString:prefixToken], score, payload, contexts) autorelease];
    }
    else {
      result = [new_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_withOrgApacheLuceneUtilBytesRef_withJavaUtilSet_(text, score, payload, contexts) autorelease];
    }
    [results addWithId:result];
  }
  return results;
}

- (OrgApacheLuceneSearchQuery *)finishQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:(OrgApacheLuceneSearchBooleanQuery_Builder *)inArg
                                                                             withBoolean:(jboolean)allTermsRequired {
  return [((OrgApacheLuceneSearchBooleanQuery_Builder *) nil_chk(inArg)) build];
}

- (id)highlightWithNSString:(NSString *)text
            withJavaUtilSet:(id<JavaUtilSet>)matchedTokens
               withNSString:(NSString *)prefixToken {
  {
    JavaLangThrowable *__mainException = nil;
    OrgApacheLuceneAnalysisTokenStream *ts = [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(queryAnalyzer_)) tokenStreamWithNSString:@"text" withJavaIoReader:[new_JavaIoStringReader_initWithNSString_(text) autorelease]];
    @try {
      id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt = [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(ts)) addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()];
      id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt = [ts addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()];
      [ts reset];
      JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
      jint upto = 0;
      while ([ts incrementToken]) {
        NSString *token = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt)) description];
        jint startOffset = [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) startOffset];
        jint endOffset = [offsetAtt endOffset];
        if (upto < startOffset) {
          [self addNonMatchWithJavaLangStringBuilder:sb withNSString:[((NSString *) nil_chk(text)) substring:upto endIndex:startOffset]];
          upto = startOffset;
        }
        else if (upto > startOffset) {
          continue;
        }
        if ([((id<JavaUtilSet>) nil_chk(matchedTokens)) containsWithId:token]) {
          [self addWholeMatchWithJavaLangStringBuilder:sb withNSString:[((NSString *) nil_chk(text)) substring:startOffset endIndex:endOffset] withNSString:token];
          upto = endOffset;
        }
        else if (prefixToken != nil && [((NSString *) nil_chk(token)) hasPrefix:prefixToken]) {
          [self addPrefixMatchWithJavaLangStringBuilder:sb withNSString:[((NSString *) nil_chk(text)) substring:startOffset endIndex:endOffset] withNSString:token withNSString:prefixToken];
          upto = endOffset;
        }
      }
      [ts end];
      jint endOffset = [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) endOffset];
      if (upto < endOffset) {
        [self addNonMatchWithJavaLangStringBuilder:sb withNSString:[((NSString *) nil_chk(text)) substring:upto]];
      }
      return [sb description];
    }
    @finally {
      @try {
        [ts close];
      }
      @catch (JavaLangThrowable *e) {
        if (__mainException) {
          [__mainException addSuppressedWithJavaLangThrowable:e];
        } else {
          __mainException = e;
        }
      }
      if (__mainException) {
        @throw __mainException;
      }
    }
  }
}

- (void)addNonMatchWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                withNSString:(NSString *)text {
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:text];
}

- (void)addWholeMatchWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                  withNSString:(NSString *)surface
                                  withNSString:(NSString *)analyzed {
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"<b>"];
  [sb appendWithNSString:surface];
  [sb appendWithNSString:@"</b>"];
}

- (void)addPrefixMatchWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                   withNSString:(NSString *)surface
                                   withNSString:(NSString *)analyzed
                                   withNSString:(NSString *)prefixToken {
  if (((jint) [((NSString *) nil_chk(prefixToken)) length]) >= ((jint) [((NSString *) nil_chk(surface)) length])) {
    [self addWholeMatchWithJavaLangStringBuilder:sb withNSString:surface withNSString:analyzed];
    return;
  }
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"<b>"];
  [sb appendWithNSString:[surface substring:0 endIndex:((jint) [prefixToken length])]];
  [sb appendWithNSString:@"</b>"];
  [sb appendWithNSString:[surface substring:((jint) [prefixToken length])]];
}

- (void)close {
  if (searcherMgr_ != nil) {
    [searcherMgr_ close];
    JreStrongAssign(&searcherMgr_, nil);
  }
  if (writer_ != nil) {
    [writer_ close];
    [((OrgApacheLuceneStoreDirectory *) nil_chk(dir_)) close];
    JreStrongAssign(&writer_, nil);
  }
}

- (jlong)ramBytesUsed {
  jlong mem = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithId_(self);
  @try {
    if (searcherMgr_ != nil) {
      OrgApacheLuceneSearchIndexSearcher *searcher = [searcherMgr_ acquire];
      @try {
        for (OrgApacheLuceneIndexLeafReaderContext * __strong context in nil_chk([((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader])) leaves])) {
          OrgApacheLuceneIndexLeafReader *reader = OrgApacheLuceneIndexFilterLeafReader_unwrapWithOrgApacheLuceneIndexLeafReader_([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader]);
          if ([reader isKindOfClass:[OrgApacheLuceneIndexSegmentReader class]]) {
            mem += [((OrgApacheLuceneIndexSegmentReader *) nil_chk(((OrgApacheLuceneIndexSegmentReader *) check_class_cast([context reader], [OrgApacheLuceneIndexSegmentReader class])))) ramBytesUsed];
          }
        }
      }
      @finally {
        [searcherMgr_ release__WithId:searcher];
      }
    }
    return mem;
  }
  @catch (JavaIoIOException *ioe) {
    @throw [new_JavaLangRuntimeException_initWithJavaLangThrowable_(ioe) autorelease];
  }
}

- (void)dealloc {
  RELEASE_(queryAnalyzer_);
  RELEASE_(indexAnalyzer_);
  RELEASE_(matchVersion_);
  RELEASE_(dir_);
  RELEASE_(writer_);
  RELEASE_(searcherMgr_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT_, new_OrgApacheLuceneSearchSort_initWithOrgApacheLuceneSearchSortField_([new_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchSortField_TypeEnum_withBoolean_(@"weight", JreLoadStatic(OrgApacheLuceneSearchSortField_TypeEnum, LONG), YES) autorelease]));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester)
  }
}

+ (IOSObjectArray *)__annotations_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:", "AnalyzingInfixSuggester", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withBoolean:withBoolean:withBoolean:", "AnalyzingInfixSuggester", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "getIndexWriterConfigWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneIndexIndexWriterConfig_OpenModeEnum:", "getIndexWriterConfig", "Lorg.apache.lucene.index.IndexWriterConfig;", 0x4, NULL, NULL },
    { "commit", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getGramAnalyzer", NULL, "Lorg.apache.lucene.analysis.Analyzer;", 0x2, NULL, NULL },
    { "ensureOpen", NULL, "V", 0x22, "Ljava.io.IOException;", NULL },
    { "addWithOrgApacheLuceneUtilBytesRef:withJavaUtilSet:withLong:withOrgApacheLuceneUtilBytesRef:", "add", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "buildDocumentWithOrgApacheLuceneUtilBytesRef:withJavaUtilSet:withLong:withOrgApacheLuceneUtilBytesRef:", "buildDocument", "Lorg.apache.lucene.document.Document;", 0x2, "Ljava.io.IOException;", NULL },
    { "getTextFieldType", NULL, "Lorg.apache.lucene.document.FieldType;", 0x4, NULL, NULL },
    { "lookupWithJavaLangCharSequence:withInt:withBoolean:withBoolean:", "lookup", "Ljava.util.List;", 0x1, "Ljava.io.IOException;", NULL },
    { "getLastTokenQueryWithNSString:", "getLastTokenQuery", "Lorg.apache.lucene.search.Query;", 0x4, "Ljava.io.IOException;", NULL },
    { "lookupWithJavaLangCharSequence:withOrgApacheLuceneSearchBooleanQuery:withInt:withBoolean:withBoolean:", "lookup", "Ljava.util.List;", 0x1, "Ljava.io.IOException;", NULL },
    { "createResultsWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopFieldDocs:withInt:withJavaLangCharSequence:withBoolean:withJavaUtilSet:withNSString:", "createResults", "Ljava.util.List;", 0x4, "Ljava.io.IOException;", NULL },
    { "finishQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:withBoolean:", "finishQuery", "Lorg.apache.lucene.search.Query;", 0x4, NULL, NULL },
    { "highlightWithNSString:withJavaUtilSet:withNSString:", "highlight", "Ljava.lang.Object;", 0x4, "Ljava.io.IOException;", NULL },
    { "addNonMatchWithJavaLangStringBuilder:withNSString:", "addNonMatch", "V", 0x4, NULL, NULL },
    { "addWholeMatchWithJavaLangStringBuilder:withNSString:withNSString:", "addWholeMatch", "V", 0x4, NULL, NULL },
    { "addPrefixMatchWithJavaLangStringBuilder:withNSString:withNSString:withNSString:", "addPrefixMatch", "V", 0x4, NULL, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TEXT_FIELD_NAME_", NULL, 0x1c, "Ljava.lang.String;", &OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME_, NULL, .constantValue.asLong = 0 },
    { "EXACT_TEXT_FIELD_NAME_", NULL, 0x1c, "Ljava.lang.String;", &OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_EXACT_TEXT_FIELD_NAME_, NULL, .constantValue.asLong = 0 },
    { "CONTEXTS_FIELD_NAME_", NULL, 0x1c, "Ljava.lang.String;", &OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME_, NULL, .constantValue.asLong = 0 },
    { "queryAnalyzer_", NULL, 0x14, "Lorg.apache.lucene.analysis.Analyzer;", NULL, NULL, .constantValue.asLong = 0 },
    { "indexAnalyzer_", NULL, 0x14, "Lorg.apache.lucene.analysis.Analyzer;", NULL, NULL, .constantValue.asLong = 0 },
    { "matchVersion_", NULL, 0x10, "Lorg.apache.lucene.util.Version;", NULL, NULL, .constantValue.asLong = 0 },
    { "dir_", NULL, 0x12, "Lorg.apache.lucene.store.Directory;", NULL, NULL, .constantValue.asLong = 0 },
    { "minPrefixChars_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "allTermsRequired_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "highlight_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "commitOnBuild_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "writer_", NULL, 0x2, "Lorg.apache.lucene.index.IndexWriter;", NULL, NULL, .constantValue.asLong = 0 },
    { "searcherMgr_", NULL, 0x4, "Lorg.apache.lucene.search.SearcherManager;", NULL, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_MIN_PREFIX_CHARS", "DEFAULT_MIN_PREFIX_CHARS", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_MIN_PREFIX_CHARS },
    { "DEFAULT_ALL_TERMS_REQUIRED", "DEFAULT_ALL_TERMS_REQUIRED", 0x19, "Z", NULL, NULL, .constantValue.asBOOL = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_ALL_TERMS_REQUIRED },
    { "DEFAULT_HIGHLIGHT", "DEFAULT_HIGHLIGHT", 0x19, "Z", NULL, NULL, .constantValue.asBOOL = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_HIGHLIGHT },
    { "SORT_", NULL, 0x1a, "Lorg.apache.lucene.search.Sort;", &OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester = { 2, "AnalyzingInfixSuggester", "org.apache.lucene.search.suggest.analyzing", NULL, 0x1, 20, methods, 17, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(analyzer)) getVersion], dir, analyzer, analyzer, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_MIN_PREFIX_CHARS, NO, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_ALL_TERMS_REQUIRED, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_HIGHLIGHT);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self = [OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester alloc];
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(self, dir, analyzer);
  return self;
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  OrgApacheLuceneSearchSuggestLookup_init(self);
  if (minPrefixChars < 0) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"minPrefixChars must be >= 0; got: ", minPrefixChars)) autorelease];
  }
  JreStrongAssign(&self->queryAnalyzer_, queryAnalyzer);
  JreStrongAssign(&self->indexAnalyzer_, indexAnalyzer);
  JreStrongAssign(&self->matchVersion_, matchVersion);
  JreStrongAssign(&self->dir_, dir);
  self->minPrefixChars_ = minPrefixChars;
  self->commitOnBuild_ = commitOnBuild;
  self->allTermsRequired_ = allTermsRequired;
  self->highlight_ = highlight;
  if (OrgApacheLuceneIndexDirectoryReader_indexExistsWithOrgApacheLuceneStoreDirectory_(dir)) {
    JreStrongAssignAndConsume(&self->writer_, new_OrgApacheLuceneIndexIndexWriter_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_(dir, [self getIndexWriterConfigWithOrgApacheLuceneAnalysisAnalyzer:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(self) withOrgApacheLuceneIndexIndexWriterConfig_OpenModeEnum:JreLoadStatic(OrgApacheLuceneIndexIndexWriterConfig_OpenModeEnum, APPEND)]));
    JreStrongAssignAndConsume(&self->searcherMgr_, new_OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherFactory_(self->writer_, YES, nil));
  }
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self = [OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester alloc];
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight);
  return self;
}

OrgApacheLuceneAnalysisAnalyzer *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self) {
  return [new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, JreLoadStatic(OrgApacheLuceneAnalysisAnalyzer, PER_FIELD_REUSE_STRATEGY_)) autorelease];
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_ensureOpen(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self) {
  @synchronized(self) {
    if (self->writer_ == nil) {
      if (self->searcherMgr_ != nil) {
        [self->searcherMgr_ close];
        JreStrongAssign(&self->searcherMgr_, nil);
      }
      JreStrongAssignAndConsume(&self->writer_, new_OrgApacheLuceneIndexIndexWriter_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_(self->dir_, [self getIndexWriterConfigWithOrgApacheLuceneAnalysisAnalyzer:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(self) withOrgApacheLuceneIndexIndexWriterConfig_OpenModeEnum:JreLoadStatic(OrgApacheLuceneIndexIndexWriterConfig_OpenModeEnum, CREATE)]));
      JreStrongAssignAndConsume(&self->searcherMgr_, new_OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherFactory_(self->writer_, YES, nil));
    }
  }
}

OrgApacheLuceneDocumentDocument *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_buildDocumentWithOrgApacheLuceneUtilBytesRef_withJavaUtilSet_withLong_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneUtilBytesRef *text, id<JavaUtilSet> contexts, jlong weight, OrgApacheLuceneUtilBytesRef *payload) {
  NSString *textString = [((OrgApacheLuceneUtilBytesRef *) nil_chk(text)) utf8ToString];
  OrgApacheLuceneDocumentDocument *doc = [new_OrgApacheLuceneDocumentDocument_init() autorelease];
  OrgApacheLuceneDocumentFieldType *ft = [self getTextFieldType];
  [doc addWithOrgApacheLuceneIndexIndexableField:[new_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME_, textString, ft) autorelease]];
  [doc addWithOrgApacheLuceneIndexIndexableField:[new_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(@"textgrams", textString, ft) autorelease]];
  [doc addWithOrgApacheLuceneIndexIndexableField:[new_OrgApacheLuceneDocumentStringField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_StoreEnum_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_EXACT_TEXT_FIELD_NAME_, textString, JreLoadStatic(OrgApacheLuceneDocumentField_StoreEnum, NO)) autorelease]];
  [doc addWithOrgApacheLuceneIndexIndexableField:[new_OrgApacheLuceneDocumentBinaryDocValuesField_initWithNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME_, text) autorelease]];
  [doc addWithOrgApacheLuceneIndexIndexableField:[new_OrgApacheLuceneDocumentNumericDocValuesField_initWithNSString_withLong_(@"weight", weight) autorelease]];
  if (payload != nil) {
    [doc addWithOrgApacheLuceneIndexIndexableField:[new_OrgApacheLuceneDocumentBinaryDocValuesField_initWithNSString_withOrgApacheLuceneUtilBytesRef_(@"payloads", payload) autorelease]];
  }
  if (contexts != nil) {
    for (OrgApacheLuceneUtilBytesRef * __strong context in contexts) {
      [doc addWithOrgApacheLuceneIndexIndexableField:[new_OrgApacheLuceneDocumentStringField_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneDocumentField_StoreEnum_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME_, context, JreLoadStatic(OrgApacheLuceneDocumentField_StoreEnum, NO)) autorelease]];
      [doc addWithOrgApacheLuceneIndexIndexableField:[new_OrgApacheLuceneDocumentSortedSetDocValuesField_initWithNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME_, context) autorelease]];
    }
  }
  return doc;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester)

@implementation OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1

- (OrgApacheLuceneAnalysisAnalyzer *)getWrappedAnalyzerWithNSString:(NSString *)fieldName {
  return this$0_->indexAnalyzer_;
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)wrapComponentsWithNSString:(NSString *)fieldName
                            withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  if ([((NSString *) nil_chk(fieldName)) isEqual:@"textgrams"] && this$0_->minPrefixChars_ > 0) {
    OrgApacheLuceneAnalysisTokenFilter *filter;
    if ([((OrgApacheLuceneUtilVersion *) nil_chk(this$0_->matchVersion_)) onOrAfterWithOrgApacheLuceneUtilVersion:JreLoadStatic(OrgApacheLuceneUtilVersion, LUCENE_4_4_0_)]) {
      filter = [new_OrgApacheLuceneAnalysisNgramEdgeNGramTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_([((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) nil_chk(components)) getTokenStream], 1, this$0_->minPrefixChars_) autorelease];
    }
    else {
      filter = [new_OrgApacheLuceneAnalysisNgramLucene43EdgeNGramTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_([((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) nil_chk(components)) getTokenStream], 1, this$0_->minPrefixChars_) autorelease];
    }
    return [new_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_([((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) nil_chk(components)) getTokenizer], filter) autorelease];
  }
  else {
    return components;
  }
}

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester:(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *)outer$
                                   withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)arg$0 {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, outer$, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWrappedAnalyzerWithNSString:", "getWrappedAnalyzer", "Lorg.apache.lucene.analysis.Analyzer;", 0x4, NULL, NULL },
    { "wrapComponentsWithNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:", "wrapComponents", "Lorg.apache.lucene.analysis.Analyzer$TokenStreamComponents;", 0x4, NULL, NULL },
    { "initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester:withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.search.suggest.analyzing.AnalyzingInfixSuggester;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester", "getGramAnalyzer" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1 = { 2, "", "org.apache.lucene.search.suggest.analyzing", "AnalyzingInfixSuggester", 0x8008, 3, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1 *self, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *arg$0) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneAnalysisAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, arg$0);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1 *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *arg$0) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1 *self = [OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1 alloc];
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, outer$, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_$1)
