//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/QueryRescorer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Float.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/QueryRescorer.h"
#include "org/apache/lucene/search/Rescorer.h"
#include "org/apache/lucene/search/ScoreDoc.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/TopDocs.h"
#include "org/apache/lucene/search/Weight.h"

@interface OrgApacheLuceneSearchQueryRescorer () {
 @public
  OrgApacheLuceneSearchQuery *query_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchQueryRescorer, query_, OrgApacheLuceneSearchQuery *)

@interface OrgApacheLuceneSearchQueryRescorer_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(OrgApacheLuceneSearchScoreDoc *)a
               withId:(OrgApacheLuceneSearchScoreDoc *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchQueryRescorer_$1)

__attribute__((unused)) static void OrgApacheLuceneSearchQueryRescorer_$1_init(OrgApacheLuceneSearchQueryRescorer_$1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchQueryRescorer_$1 *new_OrgApacheLuceneSearchQueryRescorer_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchQueryRescorer_$1)

@interface OrgApacheLuceneSearchQueryRescorer_$2 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(OrgApacheLuceneSearchScoreDoc *)a
               withId:(OrgApacheLuceneSearchScoreDoc *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchQueryRescorer_$2)

__attribute__((unused)) static void OrgApacheLuceneSearchQueryRescorer_$2_init(OrgApacheLuceneSearchQueryRescorer_$2 *self);

__attribute__((unused)) static OrgApacheLuceneSearchQueryRescorer_$2 *new_OrgApacheLuceneSearchQueryRescorer_$2_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchQueryRescorer_$2)

@interface OrgApacheLuceneSearchQueryRescorer_$3 : OrgApacheLuceneSearchQueryRescorer {
 @public
  jdouble val$weight_;
}

- (jfloat)combineWithFloat:(jfloat)firstPassScore
               withBoolean:(jboolean)secondPassMatches
                 withFloat:(jfloat)secondPassScore;

- (instancetype)initWithDouble:(jdouble)capture$0
withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchQueryRescorer_$3)

__attribute__((unused)) static void OrgApacheLuceneSearchQueryRescorer_$3_initWithDouble_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQueryRescorer_$3 *self, jdouble capture$0, OrgApacheLuceneSearchQuery *arg$0);

__attribute__((unused)) static OrgApacheLuceneSearchQueryRescorer_$3 *new_OrgApacheLuceneSearchQueryRescorer_$3_initWithDouble_withOrgApacheLuceneSearchQuery_(jdouble capture$0, OrgApacheLuceneSearchQuery *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchQueryRescorer_$3)

@implementation OrgApacheLuceneSearchQueryRescorer

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneSearchQueryRescorer_initWithOrgApacheLuceneSearchQuery_(self, query);
  return self;
}

- (jfloat)combineWithFloat:(jfloat)firstPassScore
               withBoolean:(jboolean)secondPassMatches
                 withFloat:(jfloat)secondPassScore {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneSearchTopDocs *)rescoreWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchTopDocs:(OrgApacheLuceneSearchTopDocs *)firstPassTopDocs
                                                                        withInt:(jint)topN {
  IOSObjectArray *hits = [((IOSObjectArray *) nil_chk(((OrgApacheLuceneSearchTopDocs *) nil_chk(firstPassTopDocs))->scoreDocs_)) clone];
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(hits, [new_OrgApacheLuceneSearchQueryRescorer_$1_init() autorelease]);
  id<JavaUtilList> leaves = [((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader])) leaves];
  OrgApacheLuceneSearchWeight *weight = [searcher createNormalizedWeightWithOrgApacheLuceneSearchQuery:query_ withBoolean:true];
  jint hitUpto = 0;
  jint readerUpto = -1;
  jint endDoc = 0;
  jint docBase = 0;
  OrgApacheLuceneSearchScorer *scorer = nil;
  while (hitUpto < ((IOSObjectArray *) nil_chk(hits))->size_) {
    OrgApacheLuceneSearchScoreDoc *hit = IOSObjectArray_Get(hits, hitUpto);
    jint docID = ((OrgApacheLuceneSearchScoreDoc *) nil_chk(hit))->doc_;
    OrgApacheLuceneIndexLeafReaderContext *readerContext = nil;
    while (docID >= endDoc) {
      readerUpto++;
      readerContext = [((id<JavaUtilList>) nil_chk(leaves)) getWithInt:readerUpto];
      endDoc = ((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(readerContext))->docBase_ + [((OrgApacheLuceneIndexLeafReader *) nil_chk([readerContext reader])) maxDoc];
    }
    if (readerContext != nil) {
      docBase = readerContext->docBase_;
      scorer = [((OrgApacheLuceneSearchWeight *) nil_chk(weight)) scorerWithOrgApacheLuceneIndexLeafReaderContext:readerContext];
    }
    if (scorer != nil) {
      jint targetDoc = docID - docBase;
      jint actualDoc = [scorer docID];
      if (actualDoc < targetDoc) {
        actualDoc = [scorer advanceWithInt:targetDoc];
      }
      if (actualDoc == targetDoc) {
        hit->score_ = [self combineWithFloat:hit->score_ withBoolean:true withFloat:[scorer score]];
      }
      else {
        JreAssert((actualDoc > targetDoc), (@"org/apache/lucene/search/QueryRescorer.java:100 condition failed: assert actualDoc > targetDoc;"));
        hit->score_ = [self combineWithFloat:hit->score_ withBoolean:false withFloat:0.0f];
      }
    }
    else {
      hit->score_ = [self combineWithFloat:hit->score_ withBoolean:false withFloat:0.0f];
    }
    hitUpto++;
  }
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(hits, [new_OrgApacheLuceneSearchQueryRescorer_$2_init() autorelease]);
  if (topN < hits->size_) {
    IOSObjectArray *subset = [IOSObjectArray arrayWithLength:topN type:OrgApacheLuceneSearchScoreDoc_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(hits, 0, subset, 0, topN);
    hits = subset;
  }
  return [new_OrgApacheLuceneSearchTopDocs_initWithInt_withOrgApacheLuceneSearchScoreDocArray_withFloat_(firstPassTopDocs->totalHits_, hits, ((OrgApacheLuceneSearchScoreDoc *) nil_chk(IOSObjectArray_Get(hits, 0)))->score_) autorelease];
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchExplanation:(OrgApacheLuceneSearchExplanation *)firstPassExplanation
                                                                            withInt:(jint)docID {
  OrgApacheLuceneSearchExplanation *secondPassExplanation = [((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) explainWithOrgApacheLuceneSearchQuery:query_ withInt:docID];
  JavaLangFloat *secondPassScore = [((OrgApacheLuceneSearchExplanation *) nil_chk(secondPassExplanation)) isMatch] ? JavaLangFloat_valueOfWithFloat_([secondPassExplanation getValue]) : nil;
  jfloat score;
  if (secondPassScore == nil) {
    score = [self combineWithFloat:[((OrgApacheLuceneSearchExplanation *) nil_chk(firstPassExplanation)) getValue] withBoolean:false withFloat:0.0f];
  }
  else {
    score = [self combineWithFloat:[((OrgApacheLuceneSearchExplanation *) nil_chk(firstPassExplanation)) getValue] withBoolean:true withFloat:[secondPassScore floatValue]];
  }
  OrgApacheLuceneSearchExplanation *first = OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_([((OrgApacheLuceneSearchExplanation *) nil_chk(firstPassExplanation)) getValue], @"first pass score", [IOSObjectArray arrayWithObjects:(id[]){ firstPassExplanation } count:1 type:OrgApacheLuceneSearchExplanation_class_()]);
  OrgApacheLuceneSearchExplanation *second;
  if (secondPassScore == nil) {
    second = OrgApacheLuceneSearchExplanation_noMatchWithNSString_withOrgApacheLuceneSearchExplanationArray_(@"no second pass score", [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
  else {
    second = OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_([secondPassScore floatValue], @"second pass score", [IOSObjectArray arrayWithObjects:(id[]){ secondPassExplanation } count:1 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
  return OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(score, JreStrcat("$@", @"combined first and second pass score using ", [self getClass]), [IOSObjectArray arrayWithObjects:(id[]){ first, second } count:2 type:OrgApacheLuceneSearchExplanation_class_()]);
}

+ (OrgApacheLuceneSearchTopDocs *)rescoreWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchTopDocs:(OrgApacheLuceneSearchTopDocs *)topDocs
                                                 withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                                                     withDouble:(jdouble)weight
                                                                        withInt:(jint)topN {
  return OrgApacheLuceneSearchQueryRescorer_rescoreWithOrgApacheLuceneSearchIndexSearcher_withOrgApacheLuceneSearchTopDocs_withOrgApacheLuceneSearchQuery_withDouble_withInt_(searcher, topDocs, query, weight, topN);
}

- (void)dealloc {
  RELEASE_(query_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchQuery:", "QueryRescorer", NULL, 0x1, NULL, NULL },
    { "combineWithFloat:withBoolean:withFloat:", "combine", "F", 0x404, NULL, NULL },
    { "rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withInt:", "rescore", "Lorg.apache.lucene.search.TopDocs;", 0x1, "Ljava.io.IOException;", NULL },
    { "explainWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchExplanation:withInt:", "explain", "Lorg.apache.lucene.search.Explanation;", 0x1, "Ljava.io.IOException;", NULL },
    { "rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withOrgApacheLuceneSearchQuery:withDouble:withInt:", "rescore", "Lorg.apache.lucene.search.TopDocs;", 0x9, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "query_", NULL, 0x12, "Lorg.apache.lucene.search.Query;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchQueryRescorer = { 2, "QueryRescorer", "org.apache.lucene.search", NULL, 0x401, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchQueryRescorer;
}

@end

void OrgApacheLuceneSearchQueryRescorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQueryRescorer *self, OrgApacheLuceneSearchQuery *query) {
  OrgApacheLuceneSearchRescorer_init(self);
  JreStrongAssign(&self->query_, query);
}

OrgApacheLuceneSearchTopDocs *OrgApacheLuceneSearchQueryRescorer_rescoreWithOrgApacheLuceneSearchIndexSearcher_withOrgApacheLuceneSearchTopDocs_withOrgApacheLuceneSearchQuery_withDouble_withInt_(OrgApacheLuceneSearchIndexSearcher *searcher, OrgApacheLuceneSearchTopDocs *topDocs, OrgApacheLuceneSearchQuery *query, jdouble weight, jint topN) {
  OrgApacheLuceneSearchQueryRescorer_initialize();
  return [((OrgApacheLuceneSearchQueryRescorer_$3 *) [new_OrgApacheLuceneSearchQueryRescorer_$3_initWithDouble_withOrgApacheLuceneSearchQuery_(weight, query) autorelease]) rescoreWithOrgApacheLuceneSearchIndexSearcher:searcher withOrgApacheLuceneSearchTopDocs:topDocs withInt:topN];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchQueryRescorer)

@implementation OrgApacheLuceneSearchQueryRescorer_$1

- (jint)compareWithId:(OrgApacheLuceneSearchScoreDoc *)a
               withId:(OrgApacheLuceneSearchScoreDoc *)b {
  return ((OrgApacheLuceneSearchScoreDoc *) nil_chk(a))->doc_ - ((OrgApacheLuceneSearchScoreDoc *) nil_chk(b))->doc_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchQueryRescorer_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchQueryRescorer", "rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withInt:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchQueryRescorer_$1 = { 2, "", "org.apache.lucene.search", "QueryRescorer", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/search/ScoreDoc;>;" };
  return &_OrgApacheLuceneSearchQueryRescorer_$1;
}

@end

void OrgApacheLuceneSearchQueryRescorer_$1_init(OrgApacheLuceneSearchQueryRescorer_$1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchQueryRescorer_$1 *new_OrgApacheLuceneSearchQueryRescorer_$1_init() {
  OrgApacheLuceneSearchQueryRescorer_$1 *self = [OrgApacheLuceneSearchQueryRescorer_$1 alloc];
  OrgApacheLuceneSearchQueryRescorer_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchQueryRescorer_$1)

@implementation OrgApacheLuceneSearchQueryRescorer_$2

- (jint)compareWithId:(OrgApacheLuceneSearchScoreDoc *)a
               withId:(OrgApacheLuceneSearchScoreDoc *)b {
  if (((OrgApacheLuceneSearchScoreDoc *) nil_chk(a))->score_ > ((OrgApacheLuceneSearchScoreDoc *) nil_chk(b))->score_) {
    return -1;
  }
  else if (a->score_ < b->score_) {
    return 1;
  }
  else {
    return a->doc_ - b->doc_;
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchQueryRescorer_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchQueryRescorer", "rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withInt:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchQueryRescorer_$2 = { 2, "", "org.apache.lucene.search", "QueryRescorer", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/search/ScoreDoc;>;" };
  return &_OrgApacheLuceneSearchQueryRescorer_$2;
}

@end

void OrgApacheLuceneSearchQueryRescorer_$2_init(OrgApacheLuceneSearchQueryRescorer_$2 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchQueryRescorer_$2 *new_OrgApacheLuceneSearchQueryRescorer_$2_init() {
  OrgApacheLuceneSearchQueryRescorer_$2 *self = [OrgApacheLuceneSearchQueryRescorer_$2 alloc];
  OrgApacheLuceneSearchQueryRescorer_$2_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchQueryRescorer_$2)

@implementation OrgApacheLuceneSearchQueryRescorer_$3

- (jfloat)combineWithFloat:(jfloat)firstPassScore
               withBoolean:(jboolean)secondPassMatches
                 withFloat:(jfloat)secondPassScore {
  jfloat score = firstPassScore;
  if (secondPassMatches) {
    JrePlusAssignFloatD(&score, val$weight_ * secondPassScore);
  }
  return score;
}

- (instancetype)initWithDouble:(jdouble)capture$0
withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)arg$0 {
  OrgApacheLuceneSearchQueryRescorer_$3_initWithDouble_withOrgApacheLuceneSearchQuery_(self, capture$0, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "combineWithFloat:withBoolean:withFloat:", "combine", "F", 0x4, NULL, NULL },
    { "initWithDouble:withOrgApacheLuceneSearchQuery:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$weight_", NULL, 0x1012, "D", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchQueryRescorer", "rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withOrgApacheLuceneSearchQuery:withDouble:withInt:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchQueryRescorer_$3 = { 2, "", "org.apache.lucene.search", "QueryRescorer", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneSearchQueryRescorer_$3;
}

@end

void OrgApacheLuceneSearchQueryRescorer_$3_initWithDouble_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQueryRescorer_$3 *self, jdouble capture$0, OrgApacheLuceneSearchQuery *arg$0) {
  self->val$weight_ = capture$0;
  OrgApacheLuceneSearchQueryRescorer_initWithOrgApacheLuceneSearchQuery_(self, arg$0);
}

OrgApacheLuceneSearchQueryRescorer_$3 *new_OrgApacheLuceneSearchQueryRescorer_$3_initWithDouble_withOrgApacheLuceneSearchQuery_(jdouble capture$0, OrgApacheLuceneSearchQuery *arg$0) {
  OrgApacheLuceneSearchQueryRescorer_$3 *self = [OrgApacheLuceneSearchQueryRescorer_$3 alloc];
  OrgApacheLuceneSearchQueryRescorer_$3_initWithDouble_withOrgApacheLuceneSearchQuery_(self, capture$0, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchQueryRescorer_$3)
