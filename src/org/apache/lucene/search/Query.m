//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/Query.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Float.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Weight.h"

@interface OrgApacheLuceneSearchQuery () {
 @public
  jfloat boost_;
}

@end

@implementation OrgApacheLuceneSearchQuery

- (void)setBoostWithFloat:(jfloat)b {
  boost_ = b;
}

- (jfloat)getBoost {
  return boost_;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  return [self toStringWithNSString:@""];
}

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$@$", @"Query ", self, @" does not implement createWeight"));
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  return self;
}

- (OrgApacheLuceneSearchQuery *)clone {
  @try {
    return (OrgApacheLuceneSearchQuery *) cast_chk([super clone], [OrgApacheLuceneSearchQuery class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$", @"Clone not supported: ", [((JavaLangCloneNotSupportedException *) nil_chk(e)) getMessage]));
  }
}

- (NSUInteger)hash {
  return JavaLangFloat_floatToIntBitsWithFloat_([self getBoost]) ^ ((jint) [[self getClass] hash]);
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return true;
  if (obj == nil) return false;
  if ([self getClass] != (id) [obj getClass]) return false;
  OrgApacheLuceneSearchQuery *other = (OrgApacheLuceneSearchQuery *) cast_chk(obj, [OrgApacheLuceneSearchQuery class]);
  if (JavaLangFloat_floatToIntBitsWithFloat_(boost_) != JavaLangFloat_floatToIntBitsWithFloat_(other->boost_)) return false;
  return true;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchQuery_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setBoostWithFloat:", "setBoost", "V", 0x1, NULL, NULL },
    { "getBoost", NULL, "F", 0x1, NULL, NULL },
    { "toStringWithNSString:", "toString", "Ljava.lang.String;", 0x401, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:", "createWeight", "Lorg.apache.lucene.search.Weight;", 0x1, "Ljava.io.IOException;", NULL },
    { "rewriteWithOrgApacheLuceneIndexIndexReader:", "rewrite", "Lorg.apache.lucene.search.Query;", 0x1, "Ljava.io.IOException;", NULL },
    { "clone", NULL, "Lorg.apache.lucene.search.Query;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "init", "Query", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "boost_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchQuery = { 2, "Query", "org.apache.lucene.search", NULL, 0x401, 10, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchQuery;
}

@end

void OrgApacheLuceneSearchQuery_init(OrgApacheLuceneSearchQuery *self) {
  NSObject_init(self);
  self->boost_ = 1.0f;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchQuery)
