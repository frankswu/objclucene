//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/TermCollectingRewrite.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexReaderContext.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermContext.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/TermCollectingRewrite.h"
#include "org/apache/lucene/util/AttributeSource.h"
#include "org/apache/lucene/util/BytesRef.h"

@implementation OrgApacheLuceneSearchTermCollectingRewrite

- (id)getTopLevelBuilder {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneSearchQuery *)buildWithId:(id)builder {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)addClauseWithId:(id)topLevel
withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                withInt:(jint)docCount
              withFloat:(jfloat)boost {
  [self addClauseWithId:topLevel withOrgApacheLuceneIndexTerm:term withInt:docCount withFloat:boost withOrgApacheLuceneIndexTermContext:nil];
}

- (void)addClauseWithId:(id)topLevel
withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                withInt:(jint)docCount
              withFloat:(jfloat)boost
withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)states {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)collectTermsWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query
withOrgApacheLuceneSearchTermCollectingRewrite_TermCollector:(OrgApacheLuceneSearchTermCollectingRewrite_TermCollector *)collector {
  OrgApacheLuceneIndexIndexReaderContext *topReaderContext = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getContext];
  for (OrgApacheLuceneIndexLeafReaderContext * __strong context in nil_chk([((OrgApacheLuceneIndexIndexReaderContext *) nil_chk(topReaderContext)) leaves])) {
    OrgApacheLuceneIndexTerms *terms = [((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) termsWithNSString:((OrgApacheLuceneSearchMultiTermQuery *) nil_chk(query))->field_];
    if (terms == nil) {
      continue;
    }
    OrgApacheLuceneIndexTermsEnum *termsEnum = [self getTermsEnumWithOrgApacheLuceneSearchMultiTermQuery:query withOrgApacheLuceneIndexTerms:terms withOrgApacheLuceneUtilAttributeSource:((OrgApacheLuceneSearchTermCollectingRewrite_TermCollector *) nil_chk(collector))->attributes_];
    JreAssert((termsEnum != nil), (@"org/apache/lucene/search/TermCollectingRewrite.java:59 condition failed: assert termsEnum != null;"));
    if (termsEnum == JreLoadStatic(OrgApacheLuceneIndexTermsEnum, EMPTY_)) continue;
    [collector setReaderContextWithOrgApacheLuceneIndexIndexReaderContext:topReaderContext withOrgApacheLuceneIndexLeafReaderContext:context];
    [collector setNextEnumWithOrgApacheLuceneIndexTermsEnum:termsEnum];
    OrgApacheLuceneUtilBytesRef *bytes;
    while ((bytes = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) next]) != nil) {
      if (![collector collectWithOrgApacheLuceneUtilBytesRef:bytes]) return;
    }
  }
}

- (instancetype)init {
  OrgApacheLuceneSearchTermCollectingRewrite_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getTopLevelBuilder", NULL, "TB;", 0x404, "Ljava.io.IOException;", "()TB;" },
    { "buildWithId:", "build", "Lorg.apache.lucene.search.Query;", 0x404, NULL, "(TB;)Lorg/apache/lucene/search/Query;" },
    { "addClauseWithId:withOrgApacheLuceneIndexTerm:withInt:withFloat:", "addClause", "V", 0x14, "Ljava.io.IOException;", "(TB;Lorg/apache/lucene/index/Term;IF)V" },
    { "addClauseWithId:withOrgApacheLuceneIndexTerm:withInt:withFloat:withOrgApacheLuceneIndexTermContext:", "addClause", "V", 0x404, "Ljava.io.IOException;", "(TB;Lorg/apache/lucene/index/Term;IFLorg/apache/lucene/index/TermContext;)V" },
    { "collectTermsWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchMultiTermQuery:withOrgApacheLuceneSearchTermCollectingRewrite_TermCollector:", "collectTerms", "V", 0x10, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.TermCollectingRewrite$TermCollector;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTermCollectingRewrite = { 2, "TermCollectingRewrite", "org.apache.lucene.search", NULL, 0x400, 6, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, "<B:Ljava/lang/Object;>Lorg/apache/lucene/search/MultiTermQuery$RewriteMethod;" };
  return &_OrgApacheLuceneSearchTermCollectingRewrite;
}

@end

void OrgApacheLuceneSearchTermCollectingRewrite_init(OrgApacheLuceneSearchTermCollectingRewrite *self) {
  OrgApacheLuceneSearchMultiTermQuery_RewriteMethod_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTermCollectingRewrite)

@implementation OrgApacheLuceneSearchTermCollectingRewrite_TermCollector

- (void)setReaderContextWithOrgApacheLuceneIndexIndexReaderContext:(OrgApacheLuceneIndexIndexReaderContext *)topReaderContext
                         withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext {
  JreStrongAssign(&self->readerContext_, readerContext);
  JreStrongAssign(&self->topReaderContext_, topReaderContext);
}

- (jboolean)collectWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setNextEnumWithOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (instancetype)init {
  OrgApacheLuceneSearchTermCollectingRewrite_TermCollector_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(readerContext_);
  RELEASE_(topReaderContext_);
  RELEASE_(attributes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setReaderContextWithOrgApacheLuceneIndexIndexReaderContext:withOrgApacheLuceneIndexLeafReaderContext:", "setReaderContext", "V", 0x1, NULL, NULL },
    { "collectWithOrgApacheLuceneUtilBytesRef:", "collect", "Z", 0x401, "Ljava.io.IOException;", NULL },
    { "setNextEnumWithOrgApacheLuceneIndexTermsEnum:", "setNextEnum", "V", 0x401, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "readerContext_", NULL, 0x4, "Lorg.apache.lucene.index.LeafReaderContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "topReaderContext_", NULL, 0x4, "Lorg.apache.lucene.index.IndexReaderContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "attributes_", NULL, 0x11, "Lorg.apache.lucene.util.AttributeSource;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTermCollectingRewrite_TermCollector = { 2, "TermCollector", "org.apache.lucene.search", "TermCollectingRewrite", 0x408, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchTermCollectingRewrite_TermCollector;
}

@end

void OrgApacheLuceneSearchTermCollectingRewrite_TermCollector_init(OrgApacheLuceneSearchTermCollectingRewrite_TermCollector *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->attributes_, new_OrgApacheLuceneUtilAttributeSource_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTermCollectingRewrite_TermCollector)
