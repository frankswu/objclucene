//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/ScoringRewrite.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/System.h"
#include "java/util/Comparator.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexReaderContext.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermContext.h"
#include "org/apache/lucene/index/TermState.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/BoostAttribute.h"
#include "org/apache/lucene/search/ConstantScoreQuery.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/ScoringRewrite.h"
#include "org/apache/lucene/search/TermCollectingRewrite.h"
#include "org/apache/lucene/search/TermQuery.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/AttributeSource.h"
#include "org/apache/lucene/util/ByteBlockPool.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefHash.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

__attribute__((unused)) static OrgApacheLuceneSearchQuery *OrgApacheLuceneSearchScoringRewrite_rewriteWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchMultiTermQuery_(OrgApacheLuceneSearchScoringRewrite *self, OrgApacheLuceneIndexIndexReader *reader, OrgApacheLuceneSearchMultiTermQuery *query);

@interface OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector () {
 @public
  OrgApacheLuceneSearchScoringRewrite *this$0_;
  id<OrgApacheLuceneSearchBoostAttribute> boostAtt_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector, this$0_, OrgApacheLuceneSearchScoringRewrite *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector, boostAtt_, id<OrgApacheLuceneSearchBoostAttribute>)

@interface OrgApacheLuceneSearchScoringRewrite_$1 : OrgApacheLuceneSearchScoringRewrite

- (OrgApacheLuceneSearchBooleanQuery_Builder *)getTopLevelBuilder;

- (OrgApacheLuceneSearchQuery *)buildWithId:(OrgApacheLuceneSearchBooleanQuery_Builder *)builder;

- (void)addClauseWithId:(OrgApacheLuceneSearchBooleanQuery_Builder *)topLevel
withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                withInt:(jint)docCount
              withFloat:(jfloat)boost
withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)states;

- (void)checkMaxClauseCountWithInt:(jint)count;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchScoringRewrite_$1)

__attribute__((unused)) static void OrgApacheLuceneSearchScoringRewrite_$1_init(OrgApacheLuceneSearchScoringRewrite_$1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchScoringRewrite_$1 *new_OrgApacheLuceneSearchScoringRewrite_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchScoringRewrite_$1 *create_OrgApacheLuceneSearchScoringRewrite_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchScoringRewrite_$1)

@interface OrgApacheLuceneSearchScoringRewrite_$2 : OrgApacheLuceneSearchMultiTermQuery_RewriteMethod

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchScoringRewrite_$2)

__attribute__((unused)) static void OrgApacheLuceneSearchScoringRewrite_$2_init(OrgApacheLuceneSearchScoringRewrite_$2 *self);

__attribute__((unused)) static OrgApacheLuceneSearchScoringRewrite_$2 *new_OrgApacheLuceneSearchScoringRewrite_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchScoringRewrite_$2 *create_OrgApacheLuceneSearchScoringRewrite_$2_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchScoringRewrite_$2)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchScoringRewrite)

OrgApacheLuceneSearchScoringRewrite *OrgApacheLuceneSearchScoringRewrite_SCORING_BOOLEAN_REWRITE;
OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *OrgApacheLuceneSearchScoringRewrite_CONSTANT_SCORE_BOOLEAN_REWRITE;

@implementation OrgApacheLuceneSearchScoringRewrite

+ (OrgApacheLuceneSearchScoringRewrite *)SCORING_BOOLEAN_REWRITE {
  return OrgApacheLuceneSearchScoringRewrite_SCORING_BOOLEAN_REWRITE;
}

+ (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)CONSTANT_SCORE_BOOLEAN_REWRITE {
  return OrgApacheLuceneSearchScoringRewrite_CONSTANT_SCORE_BOOLEAN_REWRITE;
}

- (void)checkMaxClauseCountWithInt:(jint)count {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query {
  return OrgApacheLuceneSearchScoringRewrite_rewriteWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchMultiTermQuery_(self, reader, query);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchScoringRewrite_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchScoringRewrite class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchScoringRewrite_SCORING_BOOLEAN_REWRITE, new_OrgApacheLuceneSearchScoringRewrite_$1_init());
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchScoringRewrite_CONSTANT_SCORE_BOOLEAN_REWRITE, new_OrgApacheLuceneSearchScoringRewrite_$2_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchScoringRewrite)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkMaxClauseCountWithInt:", "checkMaxClauseCount", "V", 0x404, "Ljava.io.IOException;", NULL },
    { "rewriteWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchMultiTermQuery:", "rewrite", "Lorg.apache.lucene.search.Query;", 0x11, "Ljava.io.IOException;", NULL },
    { "init", "ScoringRewrite", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "SCORING_BOOLEAN_REWRITE", "SCORING_BOOLEAN_REWRITE", 0x19, "Lorg.apache.lucene.search.ScoringRewrite;", &OrgApacheLuceneSearchScoringRewrite_SCORING_BOOLEAN_REWRITE, "Lorg/apache/lucene/search/ScoringRewrite<Lorg/apache/lucene/search/BooleanQuery$Builder;>;", .constantValue.asLong = 0 },
    { "CONSTANT_SCORE_BOOLEAN_REWRITE", "CONSTANT_SCORE_BOOLEAN_REWRITE", 0x19, "Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", &OrgApacheLuceneSearchScoringRewrite_CONSTANT_SCORE_BOOLEAN_REWRITE, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TB;"};
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.ScoringRewrite$ParallelArraysTermCollector;", "Lorg.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchScoringRewrite = { 2, "ScoringRewrite", "org.apache.lucene.search", NULL, 0x401, 3, methods, 2, fields, 1, superclass_type_args, 2, inner_classes, NULL, "<B:Ljava/lang/Object;>Lorg/apache/lucene/search/TermCollectingRewrite<TB;>;" };
  return &_OrgApacheLuceneSearchScoringRewrite;
}

@end

OrgApacheLuceneSearchQuery *OrgApacheLuceneSearchScoringRewrite_rewriteWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchMultiTermQuery_(OrgApacheLuceneSearchScoringRewrite *self, OrgApacheLuceneIndexIndexReader *reader, OrgApacheLuceneSearchMultiTermQuery *query) {
  id builder = [self getTopLevelBuilder];
  OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector *col = create_OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_initWithOrgApacheLuceneSearchScoringRewrite_(self);
  [self collectTermsWithOrgApacheLuceneIndexIndexReader:reader withOrgApacheLuceneSearchMultiTermQuery:query withOrgApacheLuceneSearchTermCollectingRewrite_TermCollector:col];
  jint size = [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(col->terms_)) size];
  if (size > 0) {
    IOSIntArray *sort = [col->terms_ sortWithJavaUtilComparator:OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUnicodeComparator()];
    IOSFloatArray *boost = ((OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *) nil_chk(col->array_))->boost_;
    IOSObjectArray *termStates = col->array_->termState_;
    for (jint i = 0; i < size; i++) {
      jint pos = IOSIntArray_Get(nil_chk(sort), i);
      OrgApacheLuceneIndexTerm *term = create_OrgApacheLuceneIndexTerm_initWithNSString_withOrgApacheLuceneUtilBytesRef_([((OrgApacheLuceneSearchMultiTermQuery *) nil_chk(query)) getField], [col->terms_ getWithInt:pos withOrgApacheLuceneUtilBytesRef:create_OrgApacheLuceneUtilBytesRef_init()]);
      JreAssert(([((OrgApacheLuceneIndexTermContext *) nil_chk(IOSObjectArray_Get(nil_chk(termStates), pos))) hasOnlyRealTerms] == false || [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) docFreqWithOrgApacheLuceneIndexTerm:term] == [((OrgApacheLuceneIndexTermContext *) nil_chk(IOSObjectArray_Get(termStates, pos))) docFreq]), (@"org/apache/lucene/search/ScoringRewrite.java:121 condition failed: assert termStates[pos].hasOnlyRealTerms() == false || reader.docFreq(term) == termStates[pos].docFreq();"));
      [self addClauseWithId:builder withOrgApacheLuceneIndexTerm:term withInt:[((OrgApacheLuceneIndexTermContext *) nil_chk(IOSObjectArray_Get(termStates, pos))) docFreq] withFloat:[query getBoost] * IOSFloatArray_Get(nil_chk(boost), pos) withOrgApacheLuceneIndexTermContext:IOSObjectArray_Get(termStates, pos)];
    }
  }
  return [self buildWithId:builder];
}

void OrgApacheLuceneSearchScoringRewrite_init(OrgApacheLuceneSearchScoringRewrite *self) {
  OrgApacheLuceneSearchTermCollectingRewrite_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchScoringRewrite)

@implementation OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector

- (void)setNextEnumWithOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum {
  JreStrongAssign(&self->termsEnum_, termsEnum);
  JreStrongAssign(&self->boostAtt_, [((OrgApacheLuceneUtilAttributeSource *) nil_chk([((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) attributes])) addAttributeWithIOSClass:OrgApacheLuceneSearchBoostAttribute_class_()]);
}

- (jboolean)collectWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes {
  jint e = [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(terms_)) addWithOrgApacheLuceneUtilBytesRef:bytes];
  OrgApacheLuceneIndexTermState *state = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) termState];
  JreAssert((state != nil), (@"org/apache/lucene/search/ScoringRewrite.java:145 condition failed: assert state != null;"));
  if (e < 0) {
    jint pos = (-e) - 1;
    [((OrgApacheLuceneIndexTermContext *) nil_chk(IOSObjectArray_Get(nil_chk(((OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *) nil_chk(array_))->termState_), pos))) register__WithOrgApacheLuceneIndexTermState:state withInt:((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(readerContext_))->ord_ withInt:[((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) docFreq] withLong:[((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) totalTermFreq]];
    JreAssert((IOSFloatArray_Get(nil_chk(array_->boost_), pos) == [((id<OrgApacheLuceneSearchBoostAttribute>) nil_chk(boostAtt_)) getBoost]), (@"boost should be equal in all segment TermsEnums"));
  }
  else {
    *IOSFloatArray_GetRef(nil_chk(((OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *) nil_chk(array_))->boost_), e) = [((id<OrgApacheLuceneSearchBoostAttribute>) nil_chk(boostAtt_)) getBoost];
    IOSObjectArray_SetAndConsume(nil_chk(array_->termState_), e, new_OrgApacheLuceneIndexTermContext_initWithOrgApacheLuceneIndexIndexReaderContext_withOrgApacheLuceneIndexTermState_withInt_withInt_withLong_(topReaderContext_, state, ((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(readerContext_))->ord_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) docFreq], [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum_)) totalTermFreq]));
    [this$0_ checkMaxClauseCountWithInt:[terms_ size]];
  }
  return true;
}

- (instancetype)initWithOrgApacheLuceneSearchScoringRewrite:(OrgApacheLuceneSearchScoringRewrite *)outer$ {
  OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_initWithOrgApacheLuceneSearchScoringRewrite_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(array_);
  RELEASE_(terms_);
  RELEASE_(termsEnum_);
  RELEASE_(boostAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setNextEnumWithOrgApacheLuceneIndexTermsEnum:", "setNextEnum", "V", 0x1, NULL, NULL },
    { "collectWithOrgApacheLuceneUtilBytesRef:", "collect", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneSearchScoringRewrite:", "ParallelArraysTermCollector", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.search.ScoringRewrite;", NULL, NULL, .constantValue.asLong = 0 },
    { "array_", NULL, 0x10, "Lorg.apache.lucene.search.ScoringRewrite$TermFreqBoostByteStart;", NULL, NULL, .constantValue.asLong = 0 },
    { "terms_", NULL, 0x10, "Lorg.apache.lucene.util.BytesRefHash;", NULL, NULL, .constantValue.asLong = 0 },
    { "termsEnum_", NULL, 0x0, "Lorg.apache.lucene.index.TermsEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "boostAtt_", NULL, 0x2, "Lorg.apache.lucene.search.BoostAttribute;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector = { 2, "ParallelArraysTermCollector", "org.apache.lucene.search", "ScoringRewrite", 0x10, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector;
}

@end

void OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_initWithOrgApacheLuceneSearchScoringRewrite_(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector *self, OrgApacheLuceneSearchScoringRewrite *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchTermCollectingRewrite_TermCollector_init(self);
  JreStrongAssignAndConsume(&self->array_, new_OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_initWithInt_(16));
  JreStrongAssignAndConsume(&self->terms_, new_OrgApacheLuceneUtilBytesRefHash_initWithOrgApacheLuceneUtilByteBlockPool_withInt_withOrgApacheLuceneUtilBytesRefHash_BytesStartArray_(create_OrgApacheLuceneUtilByteBlockPool_initWithOrgApacheLuceneUtilByteBlockPool_Allocator_(create_OrgApacheLuceneUtilByteBlockPool_DirectAllocator_init()), 16, self->array_));
}

OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector *new_OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_initWithOrgApacheLuceneSearchScoringRewrite_(OrgApacheLuceneSearchScoringRewrite *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector, initWithOrgApacheLuceneSearchScoringRewrite_, outer$)
}

OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector *create_OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector_initWithOrgApacheLuceneSearchScoringRewrite_(OrgApacheLuceneSearchScoringRewrite *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector, initWithOrgApacheLuceneSearchScoringRewrite_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchScoringRewrite_ParallelArraysTermCollector)

@implementation OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart

- (instancetype)initWithInt:(jint)initSize {
  OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_initWithInt_(self, initSize);
  return self;
}

- (IOSIntArray *)init__ {
  IOSIntArray *ord = [super init__];
  JreStrongAssignAndConsume(&boost_, [IOSFloatArray newArrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(((IOSIntArray *) nil_chk(ord))->size_, OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_FLOAT)]);
  JreStrongAssignAndConsume(&termState_, [IOSObjectArray newArrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(ord->size_, JreLoadStatic(OrgApacheLuceneUtilRamUsageEstimator, NUM_BYTES_OBJECT_REF)) type:OrgApacheLuceneIndexTermContext_class_()]);
  JreAssert((termState_->size_ >= ord->size_ && ((IOSFloatArray *) nil_chk(boost_))->size_ >= ord->size_), (@"org/apache/lucene/search/ScoringRewrite.java:175 condition failed: assert termState.length >= ord.length && boost.length >= ord.length;"));
  return ord;
}

- (IOSIntArray *)grow {
  IOSIntArray *ord = [super grow];
  JreStrongAssign(&boost_, OrgApacheLuceneUtilArrayUtil_growWithFloatArray_withInt_(boost_, ((IOSIntArray *) nil_chk(ord))->size_));
  if (((IOSObjectArray *) nil_chk(termState_))->size_ < ord->size_) {
    IOSObjectArray *tmpTermState = [IOSObjectArray arrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(ord->size_, JreLoadStatic(OrgApacheLuceneUtilRamUsageEstimator, NUM_BYTES_OBJECT_REF)) type:OrgApacheLuceneIndexTermContext_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(termState_, 0, tmpTermState, 0, ((IOSObjectArray *) nil_chk(termState_))->size_);
    JreStrongAssign(&termState_, tmpTermState);
  }
  JreAssert((termState_->size_ >= ord->size_ && ((IOSFloatArray *) nil_chk(boost_))->size_ >= ord->size_), (@"org/apache/lucene/search/ScoringRewrite.java:188 condition failed: assert termState.length >= ord.length && boost.length >= ord.length;"));
  return ord;
}

- (IOSIntArray *)clear {
  JreStrongAssign(&boost_, nil);
  JreStrongAssign(&termState_, nil);
  return [super clear];
}

- (void)dealloc {
  RELEASE_(boost_);
  RELEASE_(termState_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "TermFreqBoostByteStart", NULL, 0x1, NULL, NULL },
    { "init__", "init", "[I", 0x1, NULL, NULL },
    { "grow", NULL, "[I", 0x1, NULL, NULL },
    { "clear", NULL, "[I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "boost_", NULL, 0x0, "[F", NULL, NULL, .constantValue.asLong = 0 },
    { "termState_", NULL, 0x0, "[Lorg.apache.lucene.index.TermContext;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart = { 2, "TermFreqBoostByteStart", "org.apache.lucene.search", "ScoringRewrite", 0x18, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart;
}

@end

void OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_initWithInt_(OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *self, jint initSize) {
  OrgApacheLuceneUtilBytesRefHash_DirectBytesStartArray_initWithInt_(self, initSize);
}

OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *new_OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_initWithInt_(jint initSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart, initWithInt_, initSize)
}

OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart *create_OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart_initWithInt_(jint initSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart, initWithInt_, initSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchScoringRewrite_TermFreqBoostByteStart)

@implementation OrgApacheLuceneSearchScoringRewrite_$1

- (OrgApacheLuceneSearchBooleanQuery_Builder *)getTopLevelBuilder {
  OrgApacheLuceneSearchBooleanQuery_Builder *builder = create_OrgApacheLuceneSearchBooleanQuery_Builder_init();
  [builder setDisableCoordWithBoolean:true];
  return builder;
}

- (OrgApacheLuceneSearchQuery *)buildWithId:(OrgApacheLuceneSearchBooleanQuery_Builder *)builder {
  return [((OrgApacheLuceneSearchBooleanQuery_Builder *) nil_chk(builder)) build];
}

- (void)addClauseWithId:(OrgApacheLuceneSearchBooleanQuery_Builder *)topLevel
withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                withInt:(jint)docCount
              withFloat:(jfloat)boost
withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)states {
  OrgApacheLuceneSearchTermQuery *tq = create_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_(term, states);
  [tq setBoostWithFloat:boost];
  [((OrgApacheLuceneSearchBooleanQuery_Builder *) nil_chk(topLevel)) addWithOrgApacheLuceneSearchQuery:tq withOrgApacheLuceneSearchBooleanClause_Occur:JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD)];
}

- (void)checkMaxClauseCountWithInt:(jint)count {
  if (count > OrgApacheLuceneSearchBooleanQuery_getMaxClauseCount()) @throw create_OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchScoringRewrite_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getTopLevelBuilder", NULL, "Lorg.apache.lucene.search.BooleanQuery$Builder;", 0x4, NULL, NULL },
    { "buildWithId:", "build", "Lorg.apache.lucene.search.Query;", 0x4, NULL, NULL },
    { "addClauseWithId:withOrgApacheLuceneIndexTerm:withInt:withFloat:withOrgApacheLuceneIndexTermContext:", "addClause", "V", 0x4, NULL, NULL },
    { "checkMaxClauseCountWithInt:", "checkMaxClauseCount", "V", 0x4, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.search.BooleanQuery$Builder;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchScoringRewrite_$1 = { 2, "", "org.apache.lucene.search", "ScoringRewrite", 0x8008, 5, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/search/ScoringRewrite<Lorg/apache/lucene/search/BooleanQuery$Builder;>;" };
  return &_OrgApacheLuceneSearchScoringRewrite_$1;
}

@end

void OrgApacheLuceneSearchScoringRewrite_$1_init(OrgApacheLuceneSearchScoringRewrite_$1 *self) {
  OrgApacheLuceneSearchScoringRewrite_init(self);
}

OrgApacheLuceneSearchScoringRewrite_$1 *new_OrgApacheLuceneSearchScoringRewrite_$1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchScoringRewrite_$1, init)
}

OrgApacheLuceneSearchScoringRewrite_$1 *create_OrgApacheLuceneSearchScoringRewrite_$1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchScoringRewrite_$1, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchScoringRewrite_$1)

@implementation OrgApacheLuceneSearchScoringRewrite_$2

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query {
  OrgApacheLuceneSearchQuery *bq = OrgApacheLuceneSearchScoringRewrite_rewriteWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchMultiTermQuery_(nil_chk(JreLoadStatic(OrgApacheLuceneSearchScoringRewrite, SCORING_BOOLEAN_REWRITE)), reader, query);
  OrgApacheLuceneSearchQuery *result = create_OrgApacheLuceneSearchConstantScoreQuery_initWithOrgApacheLuceneSearchQuery_(bq);
  [result setBoostWithFloat:[((OrgApacheLuceneSearchMultiTermQuery *) nil_chk(query)) getBoost]];
  return result;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchScoringRewrite_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "rewriteWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchMultiTermQuery:", "rewrite", "Lorg.apache.lucene.search.Query;", 0x1, "Ljava.io.IOException;", NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchScoringRewrite_$2 = { 2, "", "org.apache.lucene.search", "ScoringRewrite", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchScoringRewrite_$2;
}

@end

void OrgApacheLuceneSearchScoringRewrite_$2_init(OrgApacheLuceneSearchScoringRewrite_$2 *self) {
  OrgApacheLuceneSearchMultiTermQuery_RewriteMethod_init(self);
}

OrgApacheLuceneSearchScoringRewrite_$2 *new_OrgApacheLuceneSearchScoringRewrite_$2_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchScoringRewrite_$2, init)
}

OrgApacheLuceneSearchScoringRewrite_$2 *create_OrgApacheLuceneSearchScoringRewrite_$2_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchScoringRewrite_$2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchScoringRewrite_$2)
