//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/search/highlight/GradientFormatter.h"
#include "org/apache/lucene/search/highlight/TokenGroup.h"

@interface OrgApacheLuceneSearchHighlightGradientFormatter () {
 @public
  jfloat maxScore_;
}

- (jint)getColorValWithInt:(jint)colorMin
                   withInt:(jint)colorMax
                 withFloat:(jfloat)score;

+ (NSString *)intToHexWithInt:(jint)i;

@end

static IOSCharArray *OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneSearchHighlightGradientFormatter, hexDigits_, IOSCharArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheLuceneSearchHighlightGradientFormatter, hexDigits_, IOSCharArray *)

__attribute__((unused)) static jint OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(OrgApacheLuceneSearchHighlightGradientFormatter *self, jint colorMin, jint colorMax, jfloat score);

__attribute__((unused)) static NSString *OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(jint i);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchHighlightGradientFormatter)

@implementation OrgApacheLuceneSearchHighlightGradientFormatter

- (instancetype)initWithFloat:(jfloat)maxScore
                 withNSString:(NSString *)minForegroundColor
                 withNSString:(NSString *)maxForegroundColor
                 withNSString:(NSString *)minBackgroundColor
                 withNSString:(NSString *)maxBackgroundColor {
  OrgApacheLuceneSearchHighlightGradientFormatter_initWithFloat_withNSString_withNSString_withNSString_withNSString_(self, maxScore, minForegroundColor, maxForegroundColor, minBackgroundColor, maxBackgroundColor);
  return self;
}

- (NSString *)highlightTermWithNSString:(NSString *)originalText
withOrgApacheLuceneSearchHighlightTokenGroup:(OrgApacheLuceneSearchHighlightTokenGroup *)tokenGroup {
  if ([((OrgApacheLuceneSearchHighlightTokenGroup *) nil_chk(tokenGroup)) getTotalScore] == 0) return originalText;
  jfloat score = [tokenGroup getTotalScore];
  if (score == 0) {
    return originalText;
  }
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [sb appendWithNSString:@"<font "];
  if (highlightForeground_) {
    [sb appendWithNSString:@"color=\""];
    [sb appendWithNSString:[self getForegroundColorStringWithFloat:score]];
    [sb appendWithNSString:@"\" "];
  }
  if (highlightBackground_) {
    [sb appendWithNSString:@"bgcolor=\""];
    [sb appendWithNSString:[self getBackgroundColorStringWithFloat:score]];
    [sb appendWithNSString:@"\" "];
  }
  [sb appendWithNSString:@">"];
  [sb appendWithNSString:originalText];
  [sb appendWithNSString:@"</font>"];
  return [sb description];
}

- (NSString *)getForegroundColorStringWithFloat:(jfloat)score {
  jint rVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, fgRMin_, fgRMax_, score);
  jint gVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, fgGMin_, fgGMax_, score);
  jint bVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, fgBMin_, fgBMax_, score);
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [sb appendWithNSString:@"#"];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(rVal)];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(gVal)];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(bVal)];
  return [sb description];
}

- (NSString *)getBackgroundColorStringWithFloat:(jfloat)score {
  jint rVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, bgRMin_, bgRMax_, score);
  jint gVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, bgGMin_, bgGMax_, score);
  jint bVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, bgBMin_, bgBMax_, score);
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [sb appendWithNSString:@"#"];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(rVal)];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(gVal)];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(bVal)];
  return [sb description];
}

- (jint)getColorValWithInt:(jint)colorMin
                   withInt:(jint)colorMax
                 withFloat:(jfloat)score {
  return OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, colorMin, colorMax, score);
}

+ (NSString *)intToHexWithInt:(jint)i {
  return OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(i);
}

+ (jint)hexToIntWithNSString:(NSString *)hex {
  return OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_(hex);
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchHighlightGradientFormatter class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits_, [IOSCharArray newArrayWithChars:(jchar[]){ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' } count:16]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchHighlightGradientFormatter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFloat:withNSString:withNSString:withNSString:withNSString:", "GradientFormatter", NULL, 0x1, NULL, NULL },
    { "highlightTermWithNSString:withOrgApacheLuceneSearchHighlightTokenGroup:", "highlightTerm", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getForegroundColorStringWithFloat:", "getForegroundColorString", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getBackgroundColorStringWithFloat:", "getBackgroundColorString", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getColorValWithInt:withInt:withFloat:", "getColorVal", "I", 0x2, NULL, NULL },
    { "intToHexWithInt:", "intToHex", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "hexToIntWithNSString:", "hexToInt", "I", 0x19, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maxScore_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "fgRMin_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fgGMin_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fgBMin_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fgRMax_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fgGMax_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fgBMax_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "highlightForeground_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "bgRMin_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bgGMin_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bgBMin_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bgRMax_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bgGMax_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bgBMax_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "highlightBackground_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hexDigits_", NULL, 0xa, "[C", &OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits_, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightGradientFormatter = { 2, "GradientFormatter", "org.apache.lucene.search.highlight", NULL, 0x1, 7, methods, 16, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchHighlightGradientFormatter;
}

@end

void OrgApacheLuceneSearchHighlightGradientFormatter_initWithFloat_withNSString_withNSString_withNSString_withNSString_(OrgApacheLuceneSearchHighlightGradientFormatter *self, jfloat maxScore, NSString *minForegroundColor, NSString *maxForegroundColor, NSString *minBackgroundColor, NSString *maxBackgroundColor) {
  NSObject_init(self);
  self->highlightForeground_ = ((minForegroundColor != nil) && (maxForegroundColor != nil));
  if (self->highlightForeground_) {
    if (((jint) [((NSString *) nil_chk(minForegroundColor)) length]) != 7) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"minForegroundColor is not 7 bytes long eg a hex RGB value such as #FFFFFF") autorelease];
    }
    if (((jint) [((NSString *) nil_chk(maxForegroundColor)) length]) != 7) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"minForegroundColor is not 7 bytes long eg a hex RGB value such as #FFFFFF") autorelease];
    }
    self->fgRMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minForegroundColor substring:1 endIndex:3]);
    self->fgGMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minForegroundColor substring:3 endIndex:5]);
    self->fgBMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minForegroundColor substring:5 endIndex:7]);
    self->fgRMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxForegroundColor substring:1 endIndex:3]);
    self->fgGMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxForegroundColor substring:3 endIndex:5]);
    self->fgBMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxForegroundColor substring:5 endIndex:7]);
  }
  self->highlightBackground_ = ((minBackgroundColor != nil) && (maxBackgroundColor != nil));
  if (self->highlightBackground_) {
    if (((jint) [((NSString *) nil_chk(minBackgroundColor)) length]) != 7) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"minBackgroundColor is not 7 bytes long eg a hex RGB value such as #FFFFFF") autorelease];
    }
    if (((jint) [((NSString *) nil_chk(maxBackgroundColor)) length]) != 7) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"minBackgroundColor is not 7 bytes long eg a hex RGB value such as #FFFFFF") autorelease];
    }
    self->bgRMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minBackgroundColor substring:1 endIndex:3]);
    self->bgGMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minBackgroundColor substring:3 endIndex:5]);
    self->bgBMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minBackgroundColor substring:5 endIndex:7]);
    self->bgRMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxBackgroundColor substring:1 endIndex:3]);
    self->bgGMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxBackgroundColor substring:3 endIndex:5]);
    self->bgBMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxBackgroundColor substring:5 endIndex:7]);
  }
  self->maxScore_ = maxScore;
}

OrgApacheLuceneSearchHighlightGradientFormatter *new_OrgApacheLuceneSearchHighlightGradientFormatter_initWithFloat_withNSString_withNSString_withNSString_withNSString_(jfloat maxScore, NSString *minForegroundColor, NSString *maxForegroundColor, NSString *minBackgroundColor, NSString *maxBackgroundColor) {
  OrgApacheLuceneSearchHighlightGradientFormatter *self = [OrgApacheLuceneSearchHighlightGradientFormatter alloc];
  OrgApacheLuceneSearchHighlightGradientFormatter_initWithFloat_withNSString_withNSString_withNSString_withNSString_(self, maxScore, minForegroundColor, maxForegroundColor, minBackgroundColor, maxBackgroundColor);
  return self;
}

jint OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(OrgApacheLuceneSearchHighlightGradientFormatter *self, jint colorMin, jint colorMax, jfloat score) {
  if (colorMin == colorMax) {
    return colorMin;
  }
  jfloat scale_ = JavaLangMath_absWithInt_(colorMin - colorMax);
  jfloat relScorePercent = JavaLangMath_minWithFloat_withFloat_(self->maxScore_, score) / self->maxScore_;
  jfloat colScore = scale_ * relScorePercent;
  return JavaLangMath_minWithInt_withInt_(colorMin, colorMax) + JreFpToInt(colScore);
}

NSString *OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(jint i) {
  OrgApacheLuceneSearchHighlightGradientFormatter_initialize();
  return JreStrcat("CC", IOSCharArray_Get(nil_chk(OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits_), JreRShift32((i & (jint) 0xF0), 4)), IOSCharArray_Get(OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits_, i & (jint) 0x0F));
}

jint OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_(NSString *hex) {
  OrgApacheLuceneSearchHighlightGradientFormatter_initialize();
  jint len = ((jint) [((NSString *) nil_chk(hex)) length]);
  if (len > 16) @throw [new_JavaLangNumberFormatException_init() autorelease];
  jint l = 0;
  for (jint i = 0; i < len; i++) {
    JreLShiftAssignInt(&l, 4);
    jint c = JavaLangCharacter_digitWithChar_withInt_([hex charAtWithInt:i], 16);
    if (c < 0) @throw [new_JavaLangNumberFormatException_init() autorelease];
    l |= c;
  }
  return l;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightGradientFormatter)
