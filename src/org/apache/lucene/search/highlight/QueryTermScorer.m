//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/QueryTermScorer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/highlight/QueryTermExtractor.h"
#include "org/apache/lucene/search/highlight/QueryTermScorer.h"
#include "org/apache/lucene/search/highlight/TextFragment.h"
#include "org/apache/lucene/search/highlight/WeightedTerm.h"

@interface OrgApacheLuceneSearchHighlightQueryTermScorer () {
 @public
  JavaUtilHashMap *termsToFind_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightQueryTermScorer, termsToFind_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightQueryTermScorer, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)

@implementation OrgApacheLuceneSearchHighlightQueryTermScorer

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_(self, query);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                      withNSString:(NSString *)fieldName {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(self, query, fieldName);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
               withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                      withNSString:(NSString *)fieldName {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(self, query, reader, fieldName);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchHighlightWeightedTermArray:(IOSObjectArray *)weightedTerms {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(self, weightedTerms);
  return self;
}

- (OrgApacheLuceneAnalysisTokenStream *)init__WithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream {
  JreStrongAssign(&termAtt_, [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(tokenStream)) addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  return nil;
}

- (void)startFragmentWithOrgApacheLuceneSearchHighlightTextFragment:(OrgApacheLuceneSearchHighlightTextFragment *)newFragment {
  JreStrongAssignAndConsume(&uniqueTermsInFragment_, new_JavaUtilHashSet_init());
  JreStrongAssign(&currentTextFragment_, newFragment);
  totalScore_ = 0;
}

- (jfloat)getTokenScore {
  NSString *termText = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) description];
  OrgApacheLuceneSearchHighlightWeightedTerm *queryTerm = [((JavaUtilHashMap *) nil_chk(termsToFind_)) getWithId:termText];
  if (queryTerm == nil) {
    return 0;
  }
  if (![((JavaUtilHashSet *) nil_chk(uniqueTermsInFragment_)) containsWithId:termText]) {
    JrePlusAssignFloatF(&totalScore_, [((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(queryTerm)) getWeight]);
    [uniqueTermsInFragment_ addWithId:termText];
  }
  return [((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(queryTerm)) getWeight];
}

- (jfloat)getFragmentScore {
  return totalScore_;
}

- (void)allFragmentsProcessed {
}

- (jfloat)getMaxTermWeight {
  return maxTermWeight_;
}

- (void)dealloc {
  RELEASE_(currentTextFragment_);
  RELEASE_(uniqueTermsInFragment_);
  RELEASE_(termsToFind_);
  RELEASE_(termAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchQuery:", "QueryTermScorer", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneSearchQuery:withNSString:", "QueryTermScorer", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneIndexIndexReader:withNSString:", "QueryTermScorer", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneSearchHighlightWeightedTermArray:", "QueryTermScorer", NULL, 0x1, NULL, NULL },
    { "init__WithOrgApacheLuceneAnalysisTokenStream:", "init", "Lorg.apache.lucene.analysis.TokenStream;", 0x1, NULL, NULL },
    { "startFragmentWithOrgApacheLuceneSearchHighlightTextFragment:", "startFragment", "V", 0x1, NULL, NULL },
    { "getTokenScore", NULL, "F", 0x1, NULL, NULL },
    { "getFragmentScore", NULL, "F", 0x1, NULL, NULL },
    { "allFragmentsProcessed", NULL, "V", 0x1, NULL, NULL },
    { "getMaxTermWeight", NULL, "F", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "currentTextFragment_", NULL, 0x0, "Lorg.apache.lucene.search.highlight.TextFragment;", NULL, NULL, .constantValue.asLong = 0 },
    { "uniqueTermsInFragment_", NULL, 0x0, "Ljava.util.HashSet;", NULL, "Ljava/util/HashSet<Ljava/lang/String;>;", .constantValue.asLong = 0 },
    { "totalScore_", NULL, 0x0, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "maxTermWeight_", NULL, 0x0, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "termsToFind_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/lucene/search/highlight/WeightedTerm;>;", .constantValue.asLong = 0 },
    { "termAtt_", NULL, 0x2, "Lorg.apache.lucene.analysis.tokenattributes.CharTermAttribute;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightQueryTermScorer = { 2, "QueryTermScorer", "org.apache.lucene.search.highlight", NULL, 0x1, 10, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchHighlightQueryTermScorer;
}

@end

void OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchHighlightQueryTermScorer *self, OrgApacheLuceneSearchQuery *query) {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(self, OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_(query));
}

OrgApacheLuceneSearchHighlightQueryTermScorer *new_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQuery *query) {
  OrgApacheLuceneSearchHighlightQueryTermScorer *self = [OrgApacheLuceneSearchHighlightQueryTermScorer alloc];
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_(self, query);
  return self;
}

void OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(OrgApacheLuceneSearchHighlightQueryTermScorer *self, OrgApacheLuceneSearchQuery *query, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(self, OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withBoolean_withNSString_(query, NO, fieldName));
}

OrgApacheLuceneSearchHighlightQueryTermScorer *new_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(OrgApacheLuceneSearchQuery *query, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermScorer *self = [OrgApacheLuceneSearchHighlightQueryTermScorer alloc];
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(self, query, fieldName);
  return self;
}

void OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneSearchHighlightQueryTermScorer *self, OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(self, OrgApacheLuceneSearchHighlightQueryTermExtractor_getIdfWeightedTermsWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(query, reader, fieldName));
}

OrgApacheLuceneSearchHighlightQueryTermScorer *new_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermScorer *self = [OrgApacheLuceneSearchHighlightQueryTermScorer alloc];
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(self, query, reader, fieldName);
  return self;
}

void OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(OrgApacheLuceneSearchHighlightQueryTermScorer *self, IOSObjectArray *weightedTerms) {
  NSObject_init(self);
  JreStrongAssign(&self->currentTextFragment_, nil);
  self->totalScore_ = 0;
  self->maxTermWeight_ = 0;
  JreStrongAssignAndConsume(&self->termsToFind_, new_JavaUtilHashMap_init());
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(weightedTerms))->size_; i++) {
    OrgApacheLuceneSearchHighlightWeightedTerm *existingTerm = [self->termsToFind_ getWithId:((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(weightedTerms, i)))->term_];
    if ((existingTerm == nil) || (existingTerm->weight_ < ((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(weightedTerms, i)))->weight_)) {
      [self->termsToFind_ putWithId:((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(weightedTerms, i)))->term_ withId:IOSObjectArray_Get(weightedTerms, i)];
      self->maxTermWeight_ = JavaLangMath_maxWithFloat_withFloat_(self->maxTermWeight_, [((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(weightedTerms, i))) getWeight]);
    }
  }
}

OrgApacheLuceneSearchHighlightQueryTermScorer *new_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(IOSObjectArray *weightedTerms) {
  OrgApacheLuceneSearchHighlightQueryTermScorer *self = [OrgApacheLuceneSearchHighlightQueryTermScorer alloc];
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(self, weightedTerms);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightQueryTermScorer)
