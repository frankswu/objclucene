//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./grouping/src/java/org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/TreeSet.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/FieldComparator.h"
#include "org/apache/lucene/search/LeafFieldComparator.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/SimpleCollector.h"
#include "org/apache/lucene/search/Sort.h"
#include "org/apache/lucene/search/SortField.h"
#include "org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.h"
#include "org/apache/lucene/search/grouping/CollectedSearchGroup.h"
#include "org/apache/lucene/search/grouping/SearchGroup.h"

@interface OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector () {
 @public
  OrgApacheLuceneSearchSort *groupSort_;
  IOSObjectArray *comparators_;
  IOSObjectArray *leafComparators_;
  IOSIntArray *reversed_;
  jint topNGroups_;
  JavaUtilHashMap *groupMap_;
  jint compIDXEnd_;
  jint docBase_;
  jint spareSlot_;
}

- (void)buildSortedSet;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector, groupSort_, OrgApacheLuceneSearchSort *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector, comparators_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector, leafComparators_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector, reversed_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector, groupMap_, JavaUtilHashMap *)

__attribute__((unused)) static void OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_buildSortedSet(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *self);

@interface OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1 : NSObject < JavaUtilComparator > {
 @public
  OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *this$0_;
}

- (jint)compareWithId:(OrgApacheLuceneSearchGroupingCollectedSearchGroup *)o1
               withId:(OrgApacheLuceneSearchGroupingCollectedSearchGroup *)o2;

- (instancetype)initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector:(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1, this$0_, OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *)

__attribute__((unused)) static void OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1_initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1 *self, OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *outer$);

__attribute__((unused)) static OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1 *new_OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1_initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1)

@implementation OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector

- (instancetype)initWithOrgApacheLuceneSearchSort:(OrgApacheLuceneSearchSort *)groupSort
                                          withInt:(jint)topNGroups {
  OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_initWithOrgApacheLuceneSearchSort_withInt_(self, groupSort, topNGroups);
  return self;
}

- (id<JavaUtilCollection>)getTopGroupsWithInt:(jint)groupOffset
                                  withBoolean:(jboolean)fillFields {
  if (groupOffset < 0) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$IC", @"groupOffset must be >= 0 (got ", groupOffset, ')')) autorelease];
  }
  if ([((JavaUtilHashMap *) nil_chk(groupMap_)) size] <= groupOffset) {
    return nil;
  }
  if (orderedGroups_ == nil) {
    OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_buildSortedSet(self);
  }
  id<JavaUtilCollection> result = [new_JavaUtilArrayList_init() autorelease];
  jint upto = 0;
  jint sortFieldCount = ((IOSObjectArray *) nil_chk([((OrgApacheLuceneSearchSort *) nil_chk(groupSort_)) getSort]))->size_;
  for (OrgApacheLuceneSearchGroupingCollectedSearchGroup * __strong group in nil_chk(orderedGroups_)) {
    if (upto++ < groupOffset) {
      continue;
    }
    OrgApacheLuceneSearchGroupingSearchGroup *searchGroup = [new_OrgApacheLuceneSearchGroupingSearchGroup_init() autorelease];
    JreStrongAssign(&searchGroup->groupValue_, ((OrgApacheLuceneSearchGroupingCollectedSearchGroup *) nil_chk(group))->groupValue_);
    if (fillFields) {
      JreStrongAssignAndConsume(&searchGroup->sortValues_, [IOSObjectArray newArrayWithLength:sortFieldCount type:NSObject_class_()]);
      for (jint sortFieldIDX = 0; sortFieldIDX < sortFieldCount; sortFieldIDX++) {
        IOSObjectArray_Set(searchGroup->sortValues_, sortFieldIDX, [((OrgApacheLuceneSearchFieldComparator *) nil_chk(IOSObjectArray_Get(nil_chk(comparators_), sortFieldIDX))) valueWithInt:group->comparatorSlot_]);
      }
    }
    [result addWithId:searchGroup];
  }
  return result;
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
  {
    IOSObjectArray *a__ = leafComparators_;
    id<OrgApacheLuceneSearchLeafFieldComparator> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<OrgApacheLuceneSearchLeafFieldComparator> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<OrgApacheLuceneSearchLeafFieldComparator> comparator = *b__++;
      [((id<OrgApacheLuceneSearchLeafFieldComparator>) nil_chk(comparator)) setScorerWithOrgApacheLuceneSearchScorer:scorer];
    }
  }
}

- (void)collectWithInt:(jint)doc {
  if (orderedGroups_ != nil) {
    for (jint compIDX = 0; ; compIDX++) {
      jint c = IOSIntArray_Get(nil_chk(reversed_), compIDX) * [((id<OrgApacheLuceneSearchLeafFieldComparator>) nil_chk(IOSObjectArray_Get(nil_chk(leafComparators_), compIDX))) compareBottomWithInt:doc];
      if (c < 0) {
        return;
      }
      else if (c > 0) {
        break;
      }
      else if (compIDX == compIDXEnd_) {
        return;
      }
    }
  }
  id groupValue = [self getDocGroupValueWithInt:doc];
  OrgApacheLuceneSearchGroupingCollectedSearchGroup *group = [((JavaUtilHashMap *) nil_chk(groupMap_)) getWithId:groupValue];
  if (group == nil) {
    if ([groupMap_ size] < topNGroups_) {
      OrgApacheLuceneSearchGroupingCollectedSearchGroup *sg = [new_OrgApacheLuceneSearchGroupingCollectedSearchGroup_init() autorelease];
      JreStrongAssign(&sg->groupValue_, [self copyDocGroupValueWithId:groupValue withId:nil]);
      sg->comparatorSlot_ = [groupMap_ size];
      sg->topDoc_ = docBase_ + doc;
      {
        IOSObjectArray *a__ = leafComparators_;
        id<OrgApacheLuceneSearchLeafFieldComparator> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        id<OrgApacheLuceneSearchLeafFieldComparator> const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          id<OrgApacheLuceneSearchLeafFieldComparator> fc = *b__++;
          [((id<OrgApacheLuceneSearchLeafFieldComparator>) nil_chk(fc)) copy__WithInt:sg->comparatorSlot_ withInt:doc];
        }
      }
      [groupMap_ putWithId:sg->groupValue_ withId:sg];
      if ([groupMap_ size] == topNGroups_) {
        OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_buildSortedSet(self);
      }
      return;
    }
    OrgApacheLuceneSearchGroupingCollectedSearchGroup *bottomGroup = [((JavaUtilTreeSet *) nil_chk(orderedGroups_)) pollLast];
    JreAssert(([orderedGroups_ size] == topNGroups_ - 1), (@"org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java:219 condition failed: assert orderedGroups.size() == topNGroups -1;"));
    [groupMap_ removeWithId:((OrgApacheLuceneSearchGroupingCollectedSearchGroup *) nil_chk(bottomGroup))->groupValue_];
    JreStrongAssign(&bottomGroup->groupValue_, [self copyDocGroupValueWithId:groupValue withId:bottomGroup->groupValue_]);
    bottomGroup->topDoc_ = docBase_ + doc;
    {
      IOSObjectArray *a__ = leafComparators_;
      id<OrgApacheLuceneSearchLeafFieldComparator> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id<OrgApacheLuceneSearchLeafFieldComparator> const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<OrgApacheLuceneSearchLeafFieldComparator> fc = *b__++;
        [((id<OrgApacheLuceneSearchLeafFieldComparator>) nil_chk(fc)) copy__WithInt:bottomGroup->comparatorSlot_ withInt:doc];
      }
    }
    [groupMap_ putWithId:bottomGroup->groupValue_ withId:bottomGroup];
    [orderedGroups_ addWithId:bottomGroup];
    JreAssert(([orderedGroups_ size] == topNGroups_), (@"org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java:233 condition failed: assert orderedGroups.size() == topNGroups;"));
    jint lastComparatorSlot = ((OrgApacheLuceneSearchGroupingCollectedSearchGroup *) nil_chk([orderedGroups_ last]))->comparatorSlot_;
    {
      IOSObjectArray *a__ = leafComparators_;
      id<OrgApacheLuceneSearchLeafFieldComparator> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id<OrgApacheLuceneSearchLeafFieldComparator> const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<OrgApacheLuceneSearchLeafFieldComparator> fc = *b__++;
        [((id<OrgApacheLuceneSearchLeafFieldComparator>) nil_chk(fc)) setBottomWithInt:lastComparatorSlot];
      }
    }
    return;
  }
  for (jint compIDX = 0; ; compIDX++) {
    [((id<OrgApacheLuceneSearchLeafFieldComparator>) nil_chk(IOSObjectArray_Get(nil_chk(leafComparators_), compIDX))) copy__WithInt:spareSlot_ withInt:doc];
    jint c = IOSIntArray_Get(nil_chk(reversed_), compIDX) * [((OrgApacheLuceneSearchFieldComparator *) nil_chk(IOSObjectArray_Get(nil_chk(comparators_), compIDX))) compareWithInt:((OrgApacheLuceneSearchGroupingCollectedSearchGroup *) nil_chk(group))->comparatorSlot_ withInt:spareSlot_];
    if (c < 0) {
      return;
    }
    else if (c > 0) {
      for (jint compIDX2 = compIDX + 1; compIDX2 < comparators_->size_; compIDX2++) {
        [((id<OrgApacheLuceneSearchLeafFieldComparator>) nil_chk(IOSObjectArray_Get(leafComparators_, compIDX2))) copy__WithInt:spareSlot_ withInt:doc];
      }
      break;
    }
    else if (compIDX == compIDXEnd_) {
      return;
    }
  }
  OrgApacheLuceneSearchGroupingCollectedSearchGroup *prevLast;
  if (orderedGroups_ != nil) {
    prevLast = [orderedGroups_ last];
    [orderedGroups_ removeWithId:group];
    JreAssert(([orderedGroups_ size] == topNGroups_ - 1), (@"org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java:272 condition failed: assert orderedGroups.size() == topNGroups-1;"));
  }
  else {
    prevLast = nil;
  }
  ((OrgApacheLuceneSearchGroupingCollectedSearchGroup *) nil_chk(group))->topDoc_ = docBase_ + doc;
  jint tmp = spareSlot_;
  spareSlot_ = group->comparatorSlot_;
  group->comparatorSlot_ = tmp;
  if (orderedGroups_ != nil) {
    [orderedGroups_ addWithId:group];
    JreAssert(([orderedGroups_ size] == topNGroups_), (@"org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java:287 condition failed: assert orderedGroups.size() == topNGroups;"));
    OrgApacheLuceneSearchGroupingCollectedSearchGroup *newLast = [orderedGroups_ last];
    if (group == newLast || prevLast != newLast) {
      {
        IOSObjectArray *a__ = leafComparators_;
        id<OrgApacheLuceneSearchLeafFieldComparator> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        id<OrgApacheLuceneSearchLeafFieldComparator> const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          id<OrgApacheLuceneSearchLeafFieldComparator> fc = *b__++;
          [((id<OrgApacheLuceneSearchLeafFieldComparator>) nil_chk(fc)) setBottomWithInt:((OrgApacheLuceneSearchGroupingCollectedSearchGroup *) nil_chk(newLast))->comparatorSlot_];
        }
      }
    }
  }
}

- (void)buildSortedSet {
  OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_buildSortedSet(self);
}

- (void)doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext {
  docBase_ = ((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(readerContext))->docBase_;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(comparators_))->size_; i++) {
    IOSObjectArray_Set(nil_chk(leafComparators_), i, [((OrgApacheLuceneSearchFieldComparator *) nil_chk(IOSObjectArray_Get(comparators_, i))) getLeafComparatorWithOrgApacheLuceneIndexLeafReaderContext:readerContext]);
  }
}

- (id)getDocGroupValueWithInt:(jint)doc {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)copyDocGroupValueWithId:(id)groupValue
                       withId:(id)reuse {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(groupSort_);
  RELEASE_(comparators_);
  RELEASE_(leafComparators_);
  RELEASE_(reversed_);
  RELEASE_(groupMap_);
  RELEASE_(orderedGroups_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchSort:withInt:", "AbstractFirstPassGroupingCollector", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "getTopGroupsWithInt:withBoolean:", "getTopGroups", "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "setScorerWithOrgApacheLuceneSearchScorer:", "setScorer", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "collectWithInt:", "collect", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "buildSortedSet", NULL, "V", 0x2, NULL, NULL },
    { "doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:", "doSetNextReader", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "getDocGroupValueWithInt:", "getDocGroupValue", "TGROUP_VALUE_TYPE;", 0x404, NULL, "(I)TGROUP_VALUE_TYPE;" },
    { "copyDocGroupValueWithId:withId:", "copyDocGroupValue", "TGROUP_VALUE_TYPE;", 0x404, NULL, "(TGROUP_VALUE_TYPE;TGROUP_VALUE_TYPE;)TGROUP_VALUE_TYPE;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "groupSort_", NULL, 0x12, "Lorg.apache.lucene.search.Sort;", NULL, NULL, .constantValue.asLong = 0 },
    { "comparators_", NULL, 0x12, "[Lorg.apache.lucene.search.FieldComparator;", NULL, "[Lorg/apache/lucene/search/FieldComparator<*>;", .constantValue.asLong = 0 },
    { "leafComparators_", NULL, 0x12, "[Lorg.apache.lucene.search.LeafFieldComparator;", NULL, NULL, .constantValue.asLong = 0 },
    { "reversed_", NULL, 0x12, "[I", NULL, NULL, .constantValue.asLong = 0 },
    { "topNGroups_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "groupMap_", NULL, 0x12, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<TGROUP_VALUE_TYPE;Lorg/apache/lucene/search/grouping/CollectedSearchGroup<TGROUP_VALUE_TYPE;>;>;", .constantValue.asLong = 0 },
    { "compIDXEnd_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "orderedGroups_", NULL, 0x4, "Ljava.util.TreeSet;", NULL, "Ljava/util/TreeSet<Lorg/apache/lucene/search/grouping/CollectedSearchGroup<TGROUP_VALUE_TYPE;>;>;", .constantValue.asLong = 0 },
    { "docBase_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "spareSlot_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector = { 2, "AbstractFirstPassGroupingCollector", "org.apache.lucene.search.grouping", NULL, 0x401, 8, methods, 10, fields, 0, NULL, 0, NULL, NULL, "<GROUP_VALUE_TYPE:Ljava/lang/Object;>Lorg/apache/lucene/search/SimpleCollector;" };
  return &_OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector;
}

@end

void OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_initWithOrgApacheLuceneSearchSort_withInt_(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *self, OrgApacheLuceneSearchSort *groupSort, jint topNGroups) {
  OrgApacheLuceneSearchSimpleCollector_init(self);
  if (topNGroups < 1) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$IC", @"topNGroups must be >= 1 (got ", topNGroups, ')')) autorelease];
  }
  JreStrongAssign(&self->groupSort_, groupSort);
  self->topNGroups_ = topNGroups;
  IOSObjectArray *sortFields = [((OrgApacheLuceneSearchSort *) nil_chk(groupSort)) getSort];
  JreStrongAssignAndConsume(&self->comparators_, [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(sortFields))->size_ type:OrgApacheLuceneSearchFieldComparator_class_()]);
  JreStrongAssignAndConsume(&self->leafComparators_, [IOSObjectArray newArrayWithLength:sortFields->size_ type:OrgApacheLuceneSearchLeafFieldComparator_class_()]);
  self->compIDXEnd_ = self->comparators_->size_ - 1;
  JreStrongAssignAndConsume(&self->reversed_, [IOSIntArray newArrayWithLength:sortFields->size_]);
  for (jint i = 0; i < sortFields->size_; i++) {
    OrgApacheLuceneSearchSortField *sortField = IOSObjectArray_Get(sortFields, i);
    IOSObjectArray_Set(self->comparators_, i, [((OrgApacheLuceneSearchSortField *) nil_chk(sortField)) getComparatorWithInt:topNGroups + 1 withInt:i]);
    *IOSIntArray_GetRef(self->reversed_, i) = [sortField getReverse] ? -1 : 1;
  }
  self->spareSlot_ = topNGroups;
  JreStrongAssignAndConsume(&self->groupMap_, new_JavaUtilHashMap_initWithInt_(topNGroups));
}

void OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_buildSortedSet(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *self) {
  id<JavaUtilComparator> comparator = [new_OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1_initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_(self) autorelease];
  JreStrongAssignAndConsume(&self->orderedGroups_, new_JavaUtilTreeSet_initWithJavaUtilComparator_(comparator));
  [self->orderedGroups_ addAllWithJavaUtilCollection:[((JavaUtilHashMap *) nil_chk(self->groupMap_)) values]];
  JreAssert(([self->orderedGroups_ size] > 0), (@"org/apache/lucene/search/grouping/AbstractFirstPassGroupingCollector.java:316 condition failed: assert orderedGroups.size() > 0;"));
  {
    IOSObjectArray *a__ = self->leafComparators_;
    id<OrgApacheLuceneSearchLeafFieldComparator> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<OrgApacheLuceneSearchLeafFieldComparator> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<OrgApacheLuceneSearchLeafFieldComparator> fc = *b__++;
      [((id<OrgApacheLuceneSearchLeafFieldComparator>) nil_chk(fc)) setBottomWithInt:((OrgApacheLuceneSearchGroupingCollectedSearchGroup *) nil_chk([self->orderedGroups_ last]))->comparatorSlot_];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector)

@implementation OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1

- (jint)compareWithId:(OrgApacheLuceneSearchGroupingCollectedSearchGroup *)o1
               withId:(OrgApacheLuceneSearchGroupingCollectedSearchGroup *)o2 {
  for (jint compIDX = 0; ; compIDX++) {
    OrgApacheLuceneSearchFieldComparator *fc = IOSObjectArray_Get(nil_chk(this$0_->comparators_), compIDX);
    jint c = IOSIntArray_Get(nil_chk(this$0_->reversed_), compIDX) * [((OrgApacheLuceneSearchFieldComparator *) nil_chk(fc)) compareWithInt:((OrgApacheLuceneSearchGroupingCollectedSearchGroup *) nil_chk(o1))->comparatorSlot_ withInt:((OrgApacheLuceneSearchGroupingCollectedSearchGroup *) nil_chk(o2))->comparatorSlot_];
    if (c != 0) {
      return c;
    }
    else if (compIDX == this$0_->compIDXEnd_) {
      return o1->topDoc_ - o2->topDoc_;
    }
  }
}

- (instancetype)initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector:(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *)outer$ {
  OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1_initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.search.grouping.AbstractFirstPassGroupingCollector;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector", "buildSortedSet" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1 = { 2, "", "org.apache.lucene.search.grouping", "AbstractFirstPassGroupingCollector", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/search/grouping/CollectedSearchGroup<*>;>;" };
  return &_OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1;
}

@end

void OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1_initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1 *self, OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1 *new_OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1_initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector *outer$) {
  OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1 *self = [OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1 alloc];
  OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1_initWithOrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGroupingAbstractFirstPassGroupingCollector_$1)
