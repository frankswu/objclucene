//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/DocValues.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/SortedDocValues.h"
#include "org/apache/lucene/index/SortedSetDocValues.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/grouping/AbstractGroupFacetCollector.h"
#include "org/apache/lucene/search/grouping/term/TermGroupFacetCollector.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/SentinelIntSet.h"
#include "org/apache/lucene/util/UnicodeUtil.h"

@interface OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV () {
 @public
  OrgApacheLuceneIndexSortedDocValues *facetFieldTermsIndex_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV, facetFieldTermsIndex_, OrgApacheLuceneIndexSortedDocValues *)

@interface OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV () {
 @public
  OrgApacheLuceneIndexSortedSetDocValues *facetFieldDocTermOrds_;
  OrgApacheLuceneIndexTermsEnum *facetOrdTermsEnum_;
  jint facetFieldNumTerms_;
}

- (void)processWithInt:(jint)groupOrd
               withInt:(jint)facetOrd;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV, facetFieldDocTermOrds_, OrgApacheLuceneIndexSortedSetDocValues *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV, facetOrdTermsEnum_, OrgApacheLuceneIndexTermsEnum *)

__attribute__((unused)) static void OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_processWithInt_withInt_(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV *self, jint groupOrd, jint facetOrd);

@implementation OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector

+ (OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector *)createTermGroupFacetCollectorWithNSString:(NSString *)groupField
                                                                                           withNSString:(NSString *)facetField
                                                                                            withBoolean:(jboolean)facetFieldMultivalued
                                                                        withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)facetPrefix
                                                                                                withInt:(jint)initialSize {
  return OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_createTermGroupFacetCollectorWithNSString_withNSString_withBoolean_withOrgApacheLuceneUtilBytesRef_withInt_(groupField, facetField, facetFieldMultivalued, facetPrefix, initialSize);
}

- (instancetype)initWithNSString:(NSString *)groupField
                    withNSString:(NSString *)facetField
 withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)facetPrefix
                         withInt:(jint)initialSize {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, groupField, facetField, facetPrefix, initialSize);
  return self;
}

- (jboolean)needsScores {
  return YES;
}

- (void)dealloc {
  RELEASE_(groupedFacetHits_);
  RELEASE_(segmentGroupedFacetHits_);
  RELEASE_(groupFieldTermsIndex_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createTermGroupFacetCollectorWithNSString:withNSString:withBoolean:withOrgApacheLuceneUtilBytesRef:withInt:", "createTermGroupFacetCollector", "Lorg.apache.lucene.search.grouping.term.TermGroupFacetCollector;", 0x9, NULL, NULL },
    { "initWithNSString:withNSString:withOrgApacheLuceneUtilBytesRef:withInt:", "TermGroupFacetCollector", NULL, 0x0, NULL, NULL },
    { "needsScores", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "groupedFacetHits_", NULL, 0x10, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/search/grouping/term/GroupedFacetHit;>;", .constantValue.asLong = 0 },
    { "segmentGroupedFacetHits_", NULL, 0x10, "Lorg.apache.lucene.util.SentinelIntSet;", NULL, NULL, .constantValue.asLong = 0 },
    { "groupFieldTermsIndex_", NULL, 0x0, "Lorg.apache.lucene.index.SortedDocValues;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.grouping.term.TermGroupFacetCollector$SV;", "Lorg.apache.lucene.search.grouping.term.TermGroupFacetCollector$MV;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector = { 2, "TermGroupFacetCollector", "org.apache.lucene.search.grouping.term", NULL, 0x401, 3, methods, 3, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector;
}

@end

OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector *OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_createTermGroupFacetCollectorWithNSString_withNSString_withBoolean_withOrgApacheLuceneUtilBytesRef_withInt_(NSString *groupField, NSString *facetField, jboolean facetFieldMultivalued, OrgApacheLuceneUtilBytesRef *facetPrefix, jint initialSize) {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_initialize();
  if (facetFieldMultivalued) {
    return [new_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(groupField, facetField, facetPrefix, initialSize) autorelease];
  }
  else {
    return [new_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(groupField, facetField, facetPrefix, initialSize) autorelease];
  }
}

void OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector *self, NSString *groupField, NSString *facetField, OrgApacheLuceneUtilBytesRef *facetPrefix, jint initialSize) {
  OrgApacheLuceneSearchGroupingAbstractGroupFacetCollector_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_(self, groupField, facetField, facetPrefix);
  JreStrongAssignAndConsume(&self->groupedFacetHits_, new_JavaUtilArrayList_initWithInt_(initialSize));
  JreStrongAssignAndConsume(&self->segmentGroupedFacetHits_, new_OrgApacheLuceneUtilSentinelIntSet_initWithInt_withInt_(initialSize, JavaLangInteger_MIN_VALUE));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector)

@implementation OrgApacheLuceneSearchGroupingTermGroupedFacetHit

- (instancetype)initWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)groupValue
                    withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)facetValue {
  OrgApacheLuceneSearchGroupingTermGroupedFacetHit_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(self, groupValue, facetValue);
  return self;
}

- (void)dealloc {
  RELEASE_(groupValue_);
  RELEASE_(facetValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:", "GroupedFacetHit", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "groupValue_", NULL, 0x10, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "facetValue_", NULL, 0x10, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGroupingTermGroupedFacetHit = { 2, "GroupedFacetHit", "org.apache.lucene.search.grouping.term", NULL, 0x0, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchGroupingTermGroupedFacetHit;
}

@end

void OrgApacheLuceneSearchGroupingTermGroupedFacetHit_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchGroupingTermGroupedFacetHit *self, OrgApacheLuceneUtilBytesRef *groupValue, OrgApacheLuceneUtilBytesRef *facetValue) {
  NSObject_init(self);
  JreStrongAssign(&self->groupValue_, groupValue);
  JreStrongAssign(&self->facetValue_, facetValue);
}

OrgApacheLuceneSearchGroupingTermGroupedFacetHit *new_OrgApacheLuceneSearchGroupingTermGroupedFacetHit_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneUtilBytesRef *groupValue, OrgApacheLuceneUtilBytesRef *facetValue) {
  OrgApacheLuceneSearchGroupingTermGroupedFacetHit *self = [OrgApacheLuceneSearchGroupingTermGroupedFacetHit alloc];
  OrgApacheLuceneSearchGroupingTermGroupedFacetHit_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(self, groupValue, facetValue);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGroupingTermGroupedFacetHit)

@implementation OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV

- (instancetype)initWithNSString:(NSString *)groupField
                    withNSString:(NSString *)facetField
 withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)facetPrefix
                         withInt:(jint)initialSize {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, groupField, facetField, facetPrefix, initialSize);
  return self;
}

- (void)collectWithInt:(jint)doc {
  jint facetOrd = [((OrgApacheLuceneIndexSortedDocValues *) nil_chk(facetFieldTermsIndex_)) getOrdWithInt:doc];
  if (facetOrd < startFacetOrd_ || facetOrd >= endFacetOrd_) {
    return;
  }
  jint groupOrd = [((OrgApacheLuceneIndexSortedDocValues *) nil_chk(groupFieldTermsIndex_)) getOrdWithInt:doc];
  jint segmentGroupedFacetsIndex = groupOrd * ([facetFieldTermsIndex_ getValueCount] + 1) + facetOrd;
  if ([((OrgApacheLuceneUtilSentinelIntSet *) nil_chk(segmentGroupedFacetHits_)) existsWithInt:segmentGroupedFacetsIndex]) {
    return;
  }
  segmentTotalCount_++;
  (*IOSIntArray_GetRef(nil_chk(segmentFacetCounts_), facetOrd + 1))++;
  [segmentGroupedFacetHits_ putWithInt:segmentGroupedFacetsIndex];
  OrgApacheLuceneUtilBytesRef *groupKey;
  if (groupOrd == -1) {
    groupKey = nil;
  }
  else {
    groupKey = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([groupFieldTermsIndex_ lookupOrdWithInt:groupOrd]);
  }
  OrgApacheLuceneUtilBytesRef *facetKey;
  if (facetOrd == -1) {
    facetKey = nil;
  }
  else {
    facetKey = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([facetFieldTermsIndex_ lookupOrdWithInt:facetOrd]);
  }
  [((id<JavaUtilList>) nil_chk(groupedFacetHits_)) addWithId:[new_OrgApacheLuceneSearchGroupingTermGroupedFacetHit_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(groupKey, facetKey) autorelease]];
}

- (void)doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  if (segmentFacetCounts_ != nil) {
    [((id<JavaUtilList>) nil_chk(segmentResults_)) addWithId:[self createSegmentResult]];
  }
  JreStrongAssign(&groupFieldTermsIndex_, OrgApacheLuceneIndexDocValues_getSortedWithOrgApacheLuceneIndexLeafReader_withNSString_([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader], groupField_));
  JreStrongAssign(&facetFieldTermsIndex_, OrgApacheLuceneIndexDocValues_getSortedWithOrgApacheLuceneIndexLeafReader_withNSString_([context reader], facetField_));
  JreStrongAssignAndConsume(&segmentFacetCounts_, [IOSIntArray newArrayWithLength:[((OrgApacheLuceneIndexSortedDocValues *) nil_chk(facetFieldTermsIndex_)) getValueCount] + 1]);
  segmentTotalCount_ = 0;
  [((OrgApacheLuceneUtilSentinelIntSet *) nil_chk(segmentGroupedFacetHits_)) clear];
  for (OrgApacheLuceneSearchGroupingTermGroupedFacetHit * __strong groupedFacetHit in nil_chk(groupedFacetHits_)) {
    jint facetOrd = ((OrgApacheLuceneSearchGroupingTermGroupedFacetHit *) nil_chk(groupedFacetHit))->facetValue_ == nil ? -1 : [facetFieldTermsIndex_ lookupTermWithOrgApacheLuceneUtilBytesRef:groupedFacetHit->facetValue_];
    if (groupedFacetHit->facetValue_ != nil && facetOrd < 0) {
      continue;
    }
    jint groupOrd = groupedFacetHit->groupValue_ == nil ? -1 : [((OrgApacheLuceneIndexSortedDocValues *) nil_chk(groupFieldTermsIndex_)) lookupTermWithOrgApacheLuceneUtilBytesRef:groupedFacetHit->groupValue_];
    if (groupedFacetHit->groupValue_ != nil && groupOrd < 0) {
      continue;
    }
    jint segmentGroupedFacetsIndex = groupOrd * ([facetFieldTermsIndex_ getValueCount] + 1) + facetOrd;
    [segmentGroupedFacetHits_ putWithInt:segmentGroupedFacetsIndex];
  }
  if (facetPrefix_ != nil) {
    startFacetOrd_ = [facetFieldTermsIndex_ lookupTermWithOrgApacheLuceneUtilBytesRef:facetPrefix_];
    if (startFacetOrd_ < 0) {
      startFacetOrd_ = -startFacetOrd_ - 1;
    }
    OrgApacheLuceneUtilBytesRefBuilder *facetEndPrefix = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
    [facetEndPrefix appendWithOrgApacheLuceneUtilBytesRef:facetPrefix_];
    [facetEndPrefix appendWithOrgApacheLuceneUtilBytesRef:JreLoadStatic(OrgApacheLuceneUtilUnicodeUtil, BIG_TERM_)];
    endFacetOrd_ = [facetFieldTermsIndex_ lookupTermWithOrgApacheLuceneUtilBytesRef:[facetEndPrefix get]];
    JreAssert((endFacetOrd_ < 0), (@"org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java:167 condition failed: assert endFacetOrd < 0;"));
    endFacetOrd_ = -endFacetOrd_ - 1;
  }
  else {
    startFacetOrd_ = -1;
    endFacetOrd_ = [facetFieldTermsIndex_ getValueCount];
  }
}

- (OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult *)createSegmentResult {
  return [new_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult_initWithIntArray_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(segmentFacetCounts_, segmentTotalCount_, [((OrgApacheLuceneIndexSortedDocValues *) nil_chk(facetFieldTermsIndex_)) termsEnum], startFacetOrd_, endFacetOrd_) autorelease];
}

- (void)dealloc {
  RELEASE_(facetFieldTermsIndex_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withOrgApacheLuceneUtilBytesRef:withInt:", "SV", NULL, 0x0, NULL, NULL },
    { "collectWithInt:", "collect", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:", "doSetNextReader", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "createSegmentResult", NULL, "Lorg.apache.lucene.search.grouping.term.TermGroupFacetCollector$SV$SegmentResult;", 0x4, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "facetFieldTermsIndex_", NULL, 0x2, "Lorg.apache.lucene.index.SortedDocValues;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.grouping.term.TermGroupFacetCollector$SV$SegmentResult;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV = { 2, "SV", "org.apache.lucene.search.grouping.term", "TermGroupFacetCollector", 0x8, 4, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV;
}

@end

void OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV *self, NSString *groupField, NSString *facetField, OrgApacheLuceneUtilBytesRef *facetPrefix, jint initialSize) {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, groupField, facetField, facetPrefix, initialSize);
}

OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV *new_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(NSString *groupField, NSString *facetField, OrgApacheLuceneUtilBytesRef *facetPrefix, jint initialSize) {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV *self = [OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV alloc];
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, groupField, facetField, facetPrefix, initialSize);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV)

@implementation OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult

- (instancetype)initWithIntArray:(IOSIntArray *)counts
                         withInt:(jint)total
withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)tenum
                         withInt:(jint)startFacetOrd
                         withInt:(jint)endFacetOrd {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult_initWithIntArray_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(self, counts, total, tenum, startFacetOrd, endFacetOrd);
  return self;
}

- (void)nextTerm {
  JreStrongAssign(&mergeTerm_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(tenum_)) next]);
}

- (void)dealloc {
  RELEASE_(tenum_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIntArray:withInt:withOrgApacheLuceneIndexTermsEnum:withInt:withInt:", "SegmentResult", NULL, 0x0, "Ljava.io.IOException;", NULL },
    { "nextTerm", NULL, "V", 0x4, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "tenum_", NULL, 0x10, "Lorg.apache.lucene.index.TermsEnum;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult = { 2, "SegmentResult", "org.apache.lucene.search.grouping.term", "TermGroupFacetCollector$SV", 0xa, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult;
}

@end

void OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult_initWithIntArray_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult *self, IOSIntArray *counts, jint total, OrgApacheLuceneIndexTermsEnum *tenum, jint startFacetOrd, jint endFacetOrd) {
  OrgApacheLuceneSearchGroupingAbstractGroupFacetCollector_SegmentResult_initWithIntArray_withInt_withInt_withInt_(self, counts, total - IOSIntArray_Get(nil_chk(counts), 0), IOSIntArray_Get(counts, 0), endFacetOrd + 1);
  JreStrongAssign(&self->tenum_, tenum);
  self->mergePos_ = startFacetOrd == -1 ? 1 : startFacetOrd + 1;
  if (self->mergePos_ < self->maxTermPos_) {
    JreAssert((tenum != nil), (@"org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java:189 condition failed: assert tenum != null;"));
    [((OrgApacheLuceneIndexTermsEnum *) nil_chk(tenum)) seekExactWithLong:startFacetOrd == -1 ? 0 : startFacetOrd];
    JreStrongAssign(&self->mergeTerm_, [tenum term]);
  }
}

OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult *new_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult_initWithIntArray_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(IOSIntArray *counts, jint total, OrgApacheLuceneIndexTermsEnum *tenum, jint startFacetOrd, jint endFacetOrd) {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult *self = [OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult alloc];
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult_initWithIntArray_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(self, counts, total, tenum, startFacetOrd, endFacetOrd);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_SV_SegmentResult)

@implementation OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV

- (instancetype)initWithNSString:(NSString *)groupField
                    withNSString:(NSString *)facetField
 withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)facetPrefix
                         withInt:(jint)initialSize {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, groupField, facetField, facetPrefix, initialSize);
  return self;
}

- (void)collectWithInt:(jint)doc {
  jint groupOrd = [((OrgApacheLuceneIndexSortedDocValues *) nil_chk(groupFieldTermsIndex_)) getOrdWithInt:doc];
  if (facetFieldNumTerms_ == 0) {
    jint segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms_ + 1);
    if (facetPrefix_ != nil || [((OrgApacheLuceneUtilSentinelIntSet *) nil_chk(segmentGroupedFacetHits_)) existsWithInt:segmentGroupedFacetsIndex]) {
      return;
    }
    segmentTotalCount_++;
    (*IOSIntArray_GetRef(nil_chk(segmentFacetCounts_), facetFieldNumTerms_))++;
    [((OrgApacheLuceneUtilSentinelIntSet *) nil_chk(segmentGroupedFacetHits_)) putWithInt:segmentGroupedFacetsIndex];
    OrgApacheLuceneUtilBytesRef *groupKey;
    if (groupOrd == -1) {
      groupKey = nil;
    }
    else {
      groupKey = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([groupFieldTermsIndex_ lookupOrdWithInt:groupOrd]);
    }
    [((id<JavaUtilList>) nil_chk(groupedFacetHits_)) addWithId:[new_OrgApacheLuceneSearchGroupingTermGroupedFacetHit_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(groupKey, nil) autorelease]];
    return;
  }
  [((OrgApacheLuceneIndexSortedSetDocValues *) nil_chk(facetFieldDocTermOrds_)) setDocumentWithInt:doc];
  jlong ord;
  jboolean empty = YES;
  while ((ord = [facetFieldDocTermOrds_ nextOrd]) != OrgApacheLuceneIndexSortedSetDocValues_NO_MORE_ORDS) {
    OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_processWithInt_withInt_(self, groupOrd, (jint) ord);
    empty = NO;
  }
  if (empty) {
    OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_processWithInt_withInt_(self, groupOrd, facetFieldNumTerms_);
  }
}

- (void)processWithInt:(jint)groupOrd
               withInt:(jint)facetOrd {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_processWithInt_withInt_(self, groupOrd, facetOrd);
}

- (void)doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  if (segmentFacetCounts_ != nil) {
    [((id<JavaUtilList>) nil_chk(segmentResults_)) addWithId:[self createSegmentResult]];
  }
  JreStrongAssign(&groupFieldTermsIndex_, OrgApacheLuceneIndexDocValues_getSortedWithOrgApacheLuceneIndexLeafReader_withNSString_([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader], groupField_));
  JreStrongAssign(&facetFieldDocTermOrds_, OrgApacheLuceneIndexDocValues_getSortedSetWithOrgApacheLuceneIndexLeafReader_withNSString_([context reader], facetField_));
  facetFieldNumTerms_ = (jint) [((OrgApacheLuceneIndexSortedSetDocValues *) nil_chk(facetFieldDocTermOrds_)) getValueCount];
  if (facetFieldNumTerms_ == 0) {
    JreStrongAssign(&facetOrdTermsEnum_, nil);
  }
  else {
    JreStrongAssign(&facetOrdTermsEnum_, [facetFieldDocTermOrds_ termsEnum]);
  }
  JreStrongAssignAndConsume(&segmentFacetCounts_, [IOSIntArray newArrayWithLength:facetFieldNumTerms_ + 1]);
  segmentTotalCount_ = 0;
  [((OrgApacheLuceneUtilSentinelIntSet *) nil_chk(segmentGroupedFacetHits_)) clear];
  for (OrgApacheLuceneSearchGroupingTermGroupedFacetHit * __strong groupedFacetHit in nil_chk(groupedFacetHits_)) {
    jint groupOrd = ((OrgApacheLuceneSearchGroupingTermGroupedFacetHit *) nil_chk(groupedFacetHit))->groupValue_ == nil ? -1 : [((OrgApacheLuceneIndexSortedDocValues *) nil_chk(groupFieldTermsIndex_)) lookupTermWithOrgApacheLuceneUtilBytesRef:groupedFacetHit->groupValue_];
    if (groupedFacetHit->groupValue_ != nil && groupOrd < 0) {
      continue;
    }
    jint facetOrd;
    if (groupedFacetHit->facetValue_ != nil) {
      if (facetOrdTermsEnum_ == nil || ![facetOrdTermsEnum_ seekExactWithOrgApacheLuceneUtilBytesRef:groupedFacetHit->facetValue_]) {
        continue;
      }
      facetOrd = (jint) [((OrgApacheLuceneIndexTermsEnum *) nil_chk(facetOrdTermsEnum_)) ord];
    }
    else {
      facetOrd = facetFieldNumTerms_;
    }
    jint segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms_ + 1) + facetOrd;
    [segmentGroupedFacetHits_ putWithInt:segmentGroupedFacetsIndex];
  }
  if (facetPrefix_ != nil) {
    OrgApacheLuceneIndexTermsEnum_SeekStatusEnum *seekStatus;
    if (facetOrdTermsEnum_ != nil) {
      seekStatus = [facetOrdTermsEnum_ seekCeilWithOrgApacheLuceneUtilBytesRef:facetPrefix_];
    }
    else {
      seekStatus = JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END);
    }
    if (seekStatus != JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END)) {
      startFacetOrd_ = (jint) [((OrgApacheLuceneIndexTermsEnum *) nil_chk(facetOrdTermsEnum_)) ord];
    }
    else {
      startFacetOrd_ = 0;
      endFacetOrd_ = 0;
      return;
    }
    OrgApacheLuceneUtilBytesRefBuilder *facetEndPrefix = [new_OrgApacheLuceneUtilBytesRefBuilder_init() autorelease];
    [facetEndPrefix appendWithOrgApacheLuceneUtilBytesRef:facetPrefix_];
    [facetEndPrefix appendWithOrgApacheLuceneUtilBytesRef:JreLoadStatic(OrgApacheLuceneUtilUnicodeUtil, BIG_TERM_)];
    seekStatus = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(facetOrdTermsEnum_)) seekCeilWithOrgApacheLuceneUtilBytesRef:[facetEndPrefix get]];
    if (seekStatus != JreLoadStatic(OrgApacheLuceneIndexTermsEnum_SeekStatusEnum, END)) {
      endFacetOrd_ = (jint) [facetOrdTermsEnum_ ord];
    }
    else {
      endFacetOrd_ = facetFieldNumTerms_;
    }
  }
  else {
    startFacetOrd_ = 0;
    endFacetOrd_ = facetFieldNumTerms_ + 1;
  }
}

- (OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult *)createSegmentResult {
  return [new_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult_initWithIntArray_withInt_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(segmentFacetCounts_, segmentTotalCount_, facetFieldNumTerms_, facetOrdTermsEnum_, startFacetOrd_, endFacetOrd_) autorelease];
}

- (void)dealloc {
  RELEASE_(facetFieldDocTermOrds_);
  RELEASE_(facetOrdTermsEnum_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withOrgApacheLuceneUtilBytesRef:withInt:", "MV", NULL, 0x0, NULL, NULL },
    { "collectWithInt:", "collect", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "processWithInt:withInt:", "process", "V", 0x2, NULL, NULL },
    { "doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:", "doSetNextReader", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "createSegmentResult", NULL, "Lorg.apache.lucene.search.grouping.term.TermGroupFacetCollector$MV$SegmentResult;", 0x4, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "facetFieldDocTermOrds_", NULL, 0x2, "Lorg.apache.lucene.index.SortedSetDocValues;", NULL, NULL, .constantValue.asLong = 0 },
    { "facetOrdTermsEnum_", NULL, 0x2, "Lorg.apache.lucene.index.TermsEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "facetFieldNumTerms_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.grouping.term.TermGroupFacetCollector$MV$SegmentResult;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV = { 2, "MV", "org.apache.lucene.search.grouping.term", "TermGroupFacetCollector", 0x8, 5, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV;
}

@end

void OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV *self, NSString *groupField, NSString *facetField, OrgApacheLuceneUtilBytesRef *facetPrefix, jint initialSize) {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, groupField, facetField, facetPrefix, initialSize);
}

OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV *new_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(NSString *groupField, NSString *facetField, OrgApacheLuceneUtilBytesRef *facetPrefix, jint initialSize) {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV *self = [OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV alloc];
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_initWithNSString_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(self, groupField, facetField, facetPrefix, initialSize);
  return self;
}

void OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_processWithInt_withInt_(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV *self, jint groupOrd, jint facetOrd) {
  if (facetOrd < self->startFacetOrd_ || facetOrd >= self->endFacetOrd_) {
    return;
  }
  jint segmentGroupedFacetsIndex = groupOrd * (self->facetFieldNumTerms_ + 1) + facetOrd;
  if ([((OrgApacheLuceneUtilSentinelIntSet *) nil_chk(self->segmentGroupedFacetHits_)) existsWithInt:segmentGroupedFacetsIndex]) {
    return;
  }
  self->segmentTotalCount_++;
  (*IOSIntArray_GetRef(nil_chk(self->segmentFacetCounts_), facetOrd))++;
  [self->segmentGroupedFacetHits_ putWithInt:segmentGroupedFacetsIndex];
  OrgApacheLuceneUtilBytesRef *groupKey;
  if (groupOrd == -1) {
    groupKey = nil;
  }
  else {
    groupKey = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([((OrgApacheLuceneIndexSortedDocValues *) nil_chk(self->groupFieldTermsIndex_)) lookupOrdWithInt:groupOrd]);
  }
  OrgApacheLuceneUtilBytesRef *facetValue;
  if (facetOrd == self->facetFieldNumTerms_) {
    facetValue = nil;
  }
  else {
    facetValue = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([((OrgApacheLuceneIndexSortedSetDocValues *) nil_chk(self->facetFieldDocTermOrds_)) lookupOrdWithLong:facetOrd]);
  }
  [((id<JavaUtilList>) nil_chk(self->groupedFacetHits_)) addWithId:[new_OrgApacheLuceneSearchGroupingTermGroupedFacetHit_initWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(groupKey, facetValue) autorelease]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV)

@implementation OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult

- (instancetype)initWithIntArray:(IOSIntArray *)counts
                         withInt:(jint)total
                         withInt:(jint)missingCountIndex
withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)tenum
                         withInt:(jint)startFacetOrd
                         withInt:(jint)endFacetOrd {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult_initWithIntArray_withInt_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(self, counts, total, missingCountIndex, tenum, startFacetOrd, endFacetOrd);
  return self;
}

- (void)nextTerm {
  JreStrongAssign(&mergeTerm_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(tenum_)) next]);
}

- (void)dealloc {
  RELEASE_(tenum_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIntArray:withInt:withInt:withOrgApacheLuceneIndexTermsEnum:withInt:withInt:", "SegmentResult", NULL, 0x0, "Ljava.io.IOException;", NULL },
    { "nextTerm", NULL, "V", 0x4, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "tenum_", NULL, 0x10, "Lorg.apache.lucene.index.TermsEnum;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult = { 2, "SegmentResult", "org.apache.lucene.search.grouping.term", "TermGroupFacetCollector$MV", 0xa, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult;
}

@end

void OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult_initWithIntArray_withInt_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult *self, IOSIntArray *counts, jint total, jint missingCountIndex, OrgApacheLuceneIndexTermsEnum *tenum, jint startFacetOrd, jint endFacetOrd) {
  OrgApacheLuceneSearchGroupingAbstractGroupFacetCollector_SegmentResult_initWithIntArray_withInt_withInt_withInt_(self, counts, total - IOSIntArray_Get(nil_chk(counts), missingCountIndex), IOSIntArray_Get(counts, missingCountIndex), endFacetOrd == missingCountIndex + 1 ? missingCountIndex : endFacetOrd);
  JreStrongAssign(&self->tenum_, tenum);
  self->mergePos_ = startFacetOrd;
  if (tenum != nil) {
    [tenum seekExactWithLong:self->mergePos_];
    JreStrongAssign(&self->mergeTerm_, [tenum term]);
  }
}

OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult *new_OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult_initWithIntArray_withInt_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(IOSIntArray *counts, jint total, jint missingCountIndex, OrgApacheLuceneIndexTermsEnum *tenum, jint startFacetOrd, jint endFacetOrd) {
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult *self = [OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult alloc];
  OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult_initWithIntArray_withInt_withInt_withOrgApacheLuceneIndexTermsEnum_withInt_withInt_(self, counts, total, missingCountIndex, tenum, startFacetOrd, endFacetOrd);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGroupingTermTermGroupFacetCollector_MV_SegmentResult)
