//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/SearcherManager.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "org/apache/lucene/index/DirectoryReader.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/ReferenceManager.h"
#include "org/apache/lucene/search/SearcherFactory.h"
#include "org/apache/lucene/search/SearcherManager.h"

@interface OrgApacheLuceneSearchSearcherManager () {
 @public
  OrgApacheLuceneSearchSearcherFactory *searcherFactory_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSearcherManager, searcherFactory_, OrgApacheLuceneSearchSearcherFactory *)

@implementation OrgApacheLuceneSearchSearcherManager

- (instancetype)initWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                                            withBoolean:(jboolean)applyAllDeletes
               withOrgApacheLuceneSearchSearcherFactory:(OrgApacheLuceneSearchSearcherFactory *)searcherFactory {
  OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherFactory_(self, writer, applyAllDeletes, searcherFactory);
  return self;
}

- (void)decRefWithId:(OrgApacheLuceneSearchIndexSearcher *)reference {
  [((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(reference)) getIndexReader])) decRef];
}

- (jboolean)tryIncRefWithId:(OrgApacheLuceneSearchIndexSearcher *)reference {
  return [((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(reference)) getIndexReader])) tryIncRef];
}

- (jint)getRefCountWithId:(OrgApacheLuceneSearchIndexSearcher *)reference {
  return [((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(reference)) getIndexReader])) getRefCount];
}

+ (OrgApacheLuceneSearchIndexSearcher *)getSearcherWithOrgApacheLuceneSearchSearcherFactory:(OrgApacheLuceneSearchSearcherFactory *)searcherFactory
                                                        withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                        withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)previousReader {
  return OrgApacheLuceneSearchSearcherManager_getSearcherWithOrgApacheLuceneSearchSearcherFactory_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexIndexReader_(searcherFactory, reader, previousReader);
}

- (void)dealloc {
  RELEASE_(searcherFactory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneIndexIndexWriter:withBoolean:withOrgApacheLuceneSearchSearcherFactory:", "SearcherManager", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "decRefWithId:", "decRef", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "tryIncRefWithId:", "tryIncRef", "Z", 0x4, NULL, NULL },
    { "getRefCountWithId:", "getRefCount", "I", 0x4, NULL, NULL },
    { "getSearcherWithOrgApacheLuceneSearchSearcherFactory:withOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneIndexIndexReader:", "getSearcher", "Lorg.apache.lucene.search.IndexSearcher;", 0x9, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "searcherFactory_", NULL, 0x12, "Lorg.apache.lucene.search.SearcherFactory;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.search.IndexSearcher;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSearcherManager = { 2, "SearcherManager", "org.apache.lucene.search", NULL, 0x11, 5, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/search/ReferenceManager<Lorg/apache/lucene/search/IndexSearcher;>;" };
  return &_OrgApacheLuceneSearchSearcherManager;
}

@end

void OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherFactory_(OrgApacheLuceneSearchSearcherManager *self, OrgApacheLuceneIndexIndexWriter *writer, jboolean applyAllDeletes, OrgApacheLuceneSearchSearcherFactory *searcherFactory) {
  OrgApacheLuceneSearchReferenceManager_init(self);
  if (searcherFactory == nil) {
    searcherFactory = [new_OrgApacheLuceneSearchSearcherFactory_init() autorelease];
  }
  JreStrongAssign(&self->searcherFactory_, searcherFactory);
  JreVolatileStrongAssign(&self->current_, OrgApacheLuceneSearchSearcherManager_getSearcherWithOrgApacheLuceneSearchSearcherFactory_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexIndexReader_(searcherFactory, OrgApacheLuceneIndexDirectoryReader_openWithOrgApacheLuceneIndexIndexWriter_withBoolean_(writer, applyAllDeletes), nil));
}

OrgApacheLuceneSearchSearcherManager *new_OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherFactory_(OrgApacheLuceneIndexIndexWriter *writer, jboolean applyAllDeletes, OrgApacheLuceneSearchSearcherFactory *searcherFactory) {
  OrgApacheLuceneSearchSearcherManager *self = [OrgApacheLuceneSearchSearcherManager alloc];
  OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherFactory_(self, writer, applyAllDeletes, searcherFactory);
  return self;
}

OrgApacheLuceneSearchIndexSearcher *OrgApacheLuceneSearchSearcherManager_getSearcherWithOrgApacheLuceneSearchSearcherFactory_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchSearcherFactory *searcherFactory, OrgApacheLuceneIndexIndexReader *reader, OrgApacheLuceneIndexIndexReader *previousReader) {
  OrgApacheLuceneSearchSearcherManager_initialize();
  jboolean success = NO;
  OrgApacheLuceneSearchIndexSearcher *searcher;
  @try {
    searcher = [((OrgApacheLuceneSearchSearcherFactory *) nil_chk(searcherFactory)) newSearcherWithOrgApacheLuceneIndexIndexReader:reader withOrgApacheLuceneIndexIndexReader:previousReader];
    if ([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader] != reader) {
      @throw [new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$@C", @"SearcherFactory must wrap exactly the provided reader (got ", [searcher getIndexReader], @" but expected ", reader, ')')) autorelease];
    }
    success = YES;
  }
  @finally {
    if (!success) {
      [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) decRef];
    }
  }
  return searcher;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSearcherManager)
