//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/FilterCachingPolicy.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexReaderContext.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/ReaderUtil.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/search/FilterCachingPolicy.h"

@interface OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments () {
 @public
  jfloat minSizeRatio_;
}

@end

@interface OrgApacheLuceneSearchFilterCachingPolicy_$1 : NSObject < OrgApacheLuceneSearchFilterCachingPolicy >

- (void)onUseWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter;

- (jboolean)shouldCacheWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
             withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                     withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilterCachingPolicy_$1)

__attribute__((unused)) static void OrgApacheLuceneSearchFilterCachingPolicy_$1_init(OrgApacheLuceneSearchFilterCachingPolicy_$1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchFilterCachingPolicy_$1 *new_OrgApacheLuceneSearchFilterCachingPolicy_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchFilterCachingPolicy_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchFilterCachingPolicy)

id<OrgApacheLuceneSearchFilterCachingPolicy> OrgApacheLuceneSearchFilterCachingPolicy_ALWAYS_CACHE_;

@implementation OrgApacheLuceneSearchFilterCachingPolicy

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchFilterCachingPolicy class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchFilterCachingPolicy_ALWAYS_CACHE_, new_OrgApacheLuceneSearchFilterCachingPolicy_$1_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchFilterCachingPolicy)
  }
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onUseWithOrgApacheLuceneSearchFilter:", "onUse", "V", 0x401, NULL, NULL },
    { "shouldCacheWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchDocIdSet:", "shouldCache", "Z", 0x401, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ALWAYS_CACHE_", NULL, 0x19, "Lorg.apache.lucene.search.FilterCachingPolicy;", &OrgApacheLuceneSearchFilterCachingPolicy_ALWAYS_CACHE_, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.FilterCachingPolicy$CacheOnLargeSegments;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilterCachingPolicy = { 2, "FilterCachingPolicy", "org.apache.lucene.search", NULL, 0x609, 2, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneSearchFilterCachingPolicy;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilterCachingPolicy)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments)

OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments *OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_DEFAULT_;

@implementation OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments

- (instancetype)initWithFloat:(jfloat)minSizeRatio {
  OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(self, minSizeRatio);
  return self;
}

- (void)onUseWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
}

- (jboolean)shouldCacheWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
             withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                     withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set {
  OrgApacheLuceneIndexIndexReaderContext *topLevelContext = OrgApacheLuceneIndexReaderUtil_getTopLevelContextWithOrgApacheLuceneIndexIndexReaderContext_(context);
  jfloat sizeRatio = (jfloat) [((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) maxDoc] / [((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneIndexIndexReaderContext *) nil_chk(topLevelContext)) reader])) maxDoc];
  return sizeRatio >= minSizeRatio_;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_DEFAULT_, new_OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(0.03f));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFloat:", "CacheOnLargeSegments", NULL, 0x1, NULL, NULL },
    { "onUseWithOrgApacheLuceneSearchFilter:", "onUse", "V", 0x1, NULL, NULL },
    { "shouldCacheWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchDocIdSet:", "shouldCache", "Z", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_", NULL, 0x19, "Lorg.apache.lucene.search.FilterCachingPolicy$CacheOnLargeSegments;", &OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_DEFAULT_, NULL, .constantValue.asLong = 0 },
    { "minSizeRatio_", NULL, 0x12, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments = { 2, "CacheOnLargeSegments", "org.apache.lucene.search", "FilterCachingPolicy", 0x9, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments;
}

@end

void OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments *self, jfloat minSizeRatio) {
  NSObject_init(self);
  if (minSizeRatio <= 0 || minSizeRatio >= 1) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$F", @"minSizeRatio must be in ]0, 1[, got ", minSizeRatio)) autorelease];
  }
  self->minSizeRatio_ = minSizeRatio;
}

OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments *new_OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(jfloat minSizeRatio) {
  OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments *self = [OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments alloc];
  OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(self, minSizeRatio);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments)

@implementation OrgApacheLuceneSearchFilterCachingPolicy_$1

- (void)onUseWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
}

- (jboolean)shouldCacheWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
             withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                     withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set {
  return YES;
}

- (instancetype)init {
  OrgApacheLuceneSearchFilterCachingPolicy_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onUseWithOrgApacheLuceneSearchFilter:", "onUse", "V", 0x1, NULL, NULL },
    { "shouldCacheWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchDocIdSet:", "shouldCache", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilterCachingPolicy_$1 = { 2, "", "org.apache.lucene.search", "FilterCachingPolicy", 0x8008, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchFilterCachingPolicy_$1;
}

@end

void OrgApacheLuceneSearchFilterCachingPolicy_$1_init(OrgApacheLuceneSearchFilterCachingPolicy_$1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchFilterCachingPolicy_$1 *new_OrgApacheLuceneSearchFilterCachingPolicy_$1_init() {
  OrgApacheLuceneSearchFilterCachingPolicy_$1 *self = [OrgApacheLuceneSearchFilterCachingPolicy_$1 alloc];
  OrgApacheLuceneSearchFilterCachingPolicy_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilterCachingPolicy_$1)
