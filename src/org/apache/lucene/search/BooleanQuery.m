//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/BooleanQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/BooleanWeight.h"
#include "org/apache/lucene/search/ConstantScoreQuery.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/util/ToStringUtils.h"
#include "org/lukhnos/portmobile/util/Objects.h"

@interface OrgApacheLuceneSearchBooleanQuery () {
 @public
  jboolean mutable__;
  jboolean disableCoord_;
  jint minimumNumberShouldMatch_;
  id<JavaUtilList> clauses_;
}

- (instancetype)initWithBoolean:(jboolean)disableCoord
                        withInt:(jint)minimumNumberShouldMatch
withOrgApacheLuceneSearchBooleanClauseArray:(IOSObjectArray *)clauses;

- (OrgApacheLuceneSearchBooleanQuery *)rewriteNoScoring;

- (void)ensureMutableWithNSString:(NSString *)method;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchBooleanQuery, clauses_, id<JavaUtilList>)

static jint OrgApacheLuceneSearchBooleanQuery_maxClauseCount_ = 1024;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneSearchBooleanQuery, maxClauseCount_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgApacheLuceneSearchBooleanQuery, maxClauseCount_, jint)
__attribute__((unused)) static void OrgApacheLuceneSearchBooleanQuery_initWithBoolean_withInt_withOrgApacheLuceneSearchBooleanClauseArray_(OrgApacheLuceneSearchBooleanQuery *self, jboolean disableCoord, jint minimumNumberShouldMatch, IOSObjectArray *clauses);

__attribute__((unused)) static OrgApacheLuceneSearchBooleanQuery *new_OrgApacheLuceneSearchBooleanQuery_initWithBoolean_withInt_withOrgApacheLuceneSearchBooleanClauseArray_(jboolean disableCoord, jint minimumNumberShouldMatch, IOSObjectArray *clauses) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchBooleanQuery *OrgApacheLuceneSearchBooleanQuery_rewriteNoScoring(OrgApacheLuceneSearchBooleanQuery *self);

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanQuery_ensureMutableWithNSString_(OrgApacheLuceneSearchBooleanQuery *self, NSString *method);

@interface OrgApacheLuceneSearchBooleanQuery_Builder () {
 @public
  jboolean disableCoord_;
  jint minimumNumberShouldMatch_;
  id<JavaUtilList> clauses_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchBooleanQuery_Builder, clauses_, id<JavaUtilList>)

@implementation OrgApacheLuceneSearchBooleanQuery

+ (jint)getMaxClauseCount {
  return OrgApacheLuceneSearchBooleanQuery_getMaxClauseCount();
}

+ (void)setMaxClauseCountWithInt:(jint)maxClauseCount {
  OrgApacheLuceneSearchBooleanQuery_setMaxClauseCountWithInt_(maxClauseCount);
}

- (instancetype)initWithBoolean:(jboolean)disableCoord
                        withInt:(jint)minimumNumberShouldMatch
withOrgApacheLuceneSearchBooleanClauseArray:(IOSObjectArray *)clauses {
  OrgApacheLuceneSearchBooleanQuery_initWithBoolean_withInt_withOrgApacheLuceneSearchBooleanClauseArray_(self, disableCoord, minimumNumberShouldMatch, clauses);
  return self;
}

- (jboolean)isCoordDisabled {
  return disableCoord_;
}

- (jint)getMinimumNumberShouldMatch {
  return minimumNumberShouldMatch_;
}

- (id<JavaUtilList>)clauses {
  return clauses_;
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk(clauses_)) iterator];
}

- (OrgApacheLuceneSearchBooleanQuery *)rewriteNoScoring {
  return OrgApacheLuceneSearchBooleanQuery_rewriteNoScoring(self);
}

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores {
  OrgApacheLuceneSearchBooleanQuery *query = self;
  if (needsScores == false) {
    query = OrgApacheLuceneSearchBooleanQuery_rewriteNoScoring(self);
  }
  return [new_OrgApacheLuceneSearchBooleanWeight_initWithOrgApacheLuceneSearchBooleanQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withBoolean_(query, searcher, needsScores, disableCoord_) autorelease];
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  if (minimumNumberShouldMatch_ == 0 && [((id<JavaUtilList>) nil_chk(clauses_)) size] == 1) {
    OrgApacheLuceneSearchBooleanClause *c = [clauses_ getWithInt:0];
    if (![((OrgApacheLuceneSearchBooleanClause *) nil_chk(c)) isProhibited]) {
      OrgApacheLuceneSearchQuery *query = [((OrgApacheLuceneSearchQuery *) nil_chk([c getQuery])) rewriteWithOrgApacheLuceneIndexIndexReader:reader];
      if ([c isScoring]) {
        if ([self getBoost] != 1.0f) {
          if (query == [c getQuery]) {
            query = [((OrgApacheLuceneSearchQuery *) nil_chk(query)) clone];
          }
          [query setBoostWithFloat:[self getBoost] * [((OrgApacheLuceneSearchQuery *) nil_chk(query)) getBoost]];
        }
      }
      else {
        query = [new_OrgApacheLuceneSearchConstantScoreQuery_initWithOrgApacheLuceneSearchQuery_(query) autorelease];
        [query setBoostWithFloat:0];
      }
      return query;
    }
  }
  OrgApacheLuceneSearchBooleanQuery_Builder *builder = [new_OrgApacheLuceneSearchBooleanQuery_Builder_init() autorelease];
  [builder setDisableCoordWithBoolean:[self isCoordDisabled]];
  [builder setMinimumNumberShouldMatchWithInt:[self getMinimumNumberShouldMatch]];
  jboolean actuallyRewritten = false;
  for (OrgApacheLuceneSearchBooleanClause * __strong clause in self) {
    OrgApacheLuceneSearchQuery *query = [((OrgApacheLuceneSearchBooleanClause *) nil_chk(clause)) getQuery];
    OrgApacheLuceneSearchQuery *rewritten = [((OrgApacheLuceneSearchQuery *) nil_chk(query)) rewriteWithOrgApacheLuceneIndexIndexReader:reader];
    if (rewritten != query) {
      actuallyRewritten = true;
    }
    [builder addWithOrgApacheLuceneSearchQuery:rewritten withOrgApacheLuceneSearchBooleanClause_OccurEnum:[clause getOccur]];
  }
  if (actuallyRewritten) {
    OrgApacheLuceneSearchBooleanQuery *rewritten = [builder build];
    [((OrgApacheLuceneSearchBooleanQuery *) nil_chk(rewritten)) setBoostWithFloat:[self getBoost]];
    return rewritten;
  }
  return [super rewriteWithOrgApacheLuceneIndexIndexReader:reader];
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *buffer = [new_JavaLangStringBuilder_init() autorelease];
  jboolean needParens = [self getBoost] != 1.0 || [self getMinimumNumberShouldMatch] > 0;
  if (needParens) {
    [buffer appendWithNSString:@"("];
  }
  jint i = 0;
  for (OrgApacheLuceneSearchBooleanClause * __strong c in self) {
    [buffer appendWithNSString:[((OrgApacheLuceneSearchBooleanClause_OccurEnum *) nil_chk([((OrgApacheLuceneSearchBooleanClause *) nil_chk(c)) getOccur])) description]];
    OrgApacheLuceneSearchQuery *subQuery = [c getQuery];
    if ([subQuery isKindOfClass:[OrgApacheLuceneSearchBooleanQuery class]]) {
      [buffer appendWithNSString:@"("];
      [buffer appendWithNSString:[((OrgApacheLuceneSearchQuery *) nil_chk(subQuery)) toStringWithNSString:field]];
      [buffer appendWithNSString:@")"];
    }
    else {
      [buffer appendWithNSString:[((OrgApacheLuceneSearchQuery *) nil_chk(subQuery)) toStringWithNSString:field]];
    }
    if (i != [((id<JavaUtilList>) nil_chk(clauses_)) size] - 1) {
      [buffer appendWithNSString:@" "];
    }
    i += 1;
  }
  if (needParens) {
    [buffer appendWithNSString:@")"];
  }
  if ([self getMinimumNumberShouldMatch] > 0) {
    [buffer appendWithChar:'~'];
    [buffer appendWithInt:[self getMinimumNumberShouldMatch]];
  }
  if ([self getBoost] != 1.0f) {
    [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  }
  return [buffer description];
}

- (jboolean)isEqual:(id)o {
  if ([super isEqual:o] == false) {
    return false;
  }
  OrgApacheLuceneSearchBooleanQuery *that = (OrgApacheLuceneSearchBooleanQuery *) check_class_cast(o, [OrgApacheLuceneSearchBooleanQuery class]);
  return [self getMinimumNumberShouldMatch] == [((OrgApacheLuceneSearchBooleanQuery *) nil_chk(that)) getMinimumNumberShouldMatch] && self->disableCoord_ == that->disableCoord_ && [((id<JavaUtilList>) nil_chk(clauses_)) isEqual:that->clauses_];
}

- (NSUInteger)hash {
  return 31 * ((jint) [super hash]) + OrgLukhnosPortmobileUtilObjects_hash__WithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangBoolean_valueOfWithBoolean_(disableCoord_), JavaLangInteger_valueOfWithInt_(minimumNumberShouldMatch_), clauses_ } count:3 type:NSObject_class_()]);
}

- (IOSObjectArray *)getClauses {
  return [clauses_ toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(clauses_)) size] type:OrgApacheLuceneSearchBooleanClause_class_()]];
}

- (OrgApacheLuceneSearchBooleanQuery *)clone {
  OrgApacheLuceneSearchBooleanQuery *clone = (OrgApacheLuceneSearchBooleanQuery *) check_class_cast([super clone], [OrgApacheLuceneSearchBooleanQuery class]);
  JreStrongAssignAndConsume(&((OrgApacheLuceneSearchBooleanQuery *) nil_chk(clone))->clauses_, new_JavaUtilArrayList_initWithJavaUtilCollection_(clauses_));
  return clone;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchBooleanQuery_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)disableCoord {
  OrgApacheLuceneSearchBooleanQuery_initWithBoolean_(self, disableCoord);
  return self;
}

- (void)ensureMutableWithNSString:(NSString *)method {
  OrgApacheLuceneSearchBooleanQuery_ensureMutableWithNSString_(self, method);
}

- (void)setMinimumNumberShouldMatchWithInt:(jint)min {
  OrgApacheLuceneSearchBooleanQuery_ensureMutableWithNSString_(self, @"setMinimumNumberShouldMatch");
  self->minimumNumberShouldMatch_ = min;
}

- (void)addWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
withOrgApacheLuceneSearchBooleanClause_OccurEnum:(OrgApacheLuceneSearchBooleanClause_OccurEnum *)occur {
  [self addWithOrgApacheLuceneSearchBooleanClause:[new_OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_OccurEnum_(query, occur) autorelease]];
}

- (void)addWithOrgApacheLuceneSearchBooleanClause:(OrgApacheLuceneSearchBooleanClause *)clause {
  OrgApacheLuceneSearchBooleanQuery_ensureMutableWithNSString_(self, @"add");
  OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(clause, @"BooleanClause must not be null");
  if ([((id<JavaUtilList>) nil_chk(clauses_)) size] >= OrgApacheLuceneSearchBooleanQuery_maxClauseCount_) {
    @throw [new_OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init() autorelease];
  }
  [clauses_ addWithId:clause];
}

- (void)dealloc {
  RELEASE_(clauses_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (IOSObjectArray *)__annotations_getClauses {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_init {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_initWithBoolean_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_setMinimumNumberShouldMatchWithInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_addWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_OccurEnum_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_addWithOrgApacheLuceneSearchBooleanClause_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getMaxClauseCount", NULL, "I", 0x9, NULL, NULL },
    { "setMaxClauseCountWithInt:", "setMaxClauseCount", "V", 0x9, NULL, NULL },
    { "initWithBoolean:withInt:withOrgApacheLuceneSearchBooleanClauseArray:", "BooleanQuery", NULL, 0x2, NULL, NULL },
    { "isCoordDisabled", NULL, "Z", 0x1, NULL, NULL },
    { "getMinimumNumberShouldMatch", NULL, "I", 0x1, NULL, NULL },
    { "clauses", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x11, NULL, NULL },
    { "rewriteNoScoring", NULL, "Lorg.apache.lucene.search.BooleanQuery;", 0x2, NULL, NULL },
    { "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:", "createWeight", "Lorg.apache.lucene.search.Weight;", 0x1, "Ljava.io.IOException;", NULL },
    { "rewriteWithOrgApacheLuceneIndexIndexReader:", "rewrite", "Lorg.apache.lucene.search.Query;", 0x1, "Ljava.io.IOException;", NULL },
    { "toStringWithNSString:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "getClauses", NULL, "[Lorg.apache.lucene.search.BooleanClause;", 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.apache.lucene.search.BooleanQuery;", 0x1, NULL, NULL },
    { "init", "BooleanQuery", NULL, 0x1, NULL, NULL },
    { "initWithBoolean:", "BooleanQuery", NULL, 0x1, NULL, NULL },
    { "ensureMutableWithNSString:", "ensureMutable", "V", 0x2, NULL, NULL },
    { "setMinimumNumberShouldMatchWithInt:", "setMinimumNumberShouldMatch", "V", 0x1, NULL, NULL },
    { "addWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchBooleanClause_OccurEnum:", "add", "V", 0x1, NULL, NULL },
    { "addWithOrgApacheLuceneSearchBooleanClause:", "add", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maxClauseCount_", NULL, 0xa, "I", &OrgApacheLuceneSearchBooleanQuery_maxClauseCount_, NULL, .constantValue.asLong = 0 },
    { "mutable__", "mutable", 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "disableCoord_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "minimumNumberShouldMatch_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "clauses_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/search/BooleanClause;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.BooleanQuery$TooManyClauses;", "Lorg.apache.lucene.search.BooleanQuery$Builder;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanQuery = { 2, "BooleanQuery", "org.apache.lucene.search", NULL, 0x1, 21, methods, 5, fields, 0, NULL, 2, inner_classes, NULL, "Lorg/apache/lucene/search/Query;Ljava/lang/Iterable<Lorg/apache/lucene/search/BooleanClause;>;" };
  return &_OrgApacheLuceneSearchBooleanQuery;
}

@end

jint OrgApacheLuceneSearchBooleanQuery_getMaxClauseCount() {
  OrgApacheLuceneSearchBooleanQuery_initialize();
  return OrgApacheLuceneSearchBooleanQuery_maxClauseCount_;
}

void OrgApacheLuceneSearchBooleanQuery_setMaxClauseCountWithInt_(jint maxClauseCount) {
  OrgApacheLuceneSearchBooleanQuery_initialize();
  if (maxClauseCount < 1) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"maxClauseCount must be >= 1") autorelease];
  }
  OrgApacheLuceneSearchBooleanQuery_maxClauseCount_ = maxClauseCount;
}

void OrgApacheLuceneSearchBooleanQuery_initWithBoolean_withInt_withOrgApacheLuceneSearchBooleanClauseArray_(OrgApacheLuceneSearchBooleanQuery *self, jboolean disableCoord, jint minimumNumberShouldMatch, IOSObjectArray *clauses) {
  OrgApacheLuceneSearchQuery_init(self);
  self->disableCoord_ = disableCoord;
  self->minimumNumberShouldMatch_ = minimumNumberShouldMatch;
  JreStrongAssign(&self->clauses_, JavaUtilCollections_unmodifiableListWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_(clauses)));
  self->mutable__ = false;
}

OrgApacheLuceneSearchBooleanQuery *new_OrgApacheLuceneSearchBooleanQuery_initWithBoolean_withInt_withOrgApacheLuceneSearchBooleanClauseArray_(jboolean disableCoord, jint minimumNumberShouldMatch, IOSObjectArray *clauses) {
  OrgApacheLuceneSearchBooleanQuery *self = [OrgApacheLuceneSearchBooleanQuery alloc];
  OrgApacheLuceneSearchBooleanQuery_initWithBoolean_withInt_withOrgApacheLuceneSearchBooleanClauseArray_(self, disableCoord, minimumNumberShouldMatch, clauses);
  return self;
}

OrgApacheLuceneSearchBooleanQuery *OrgApacheLuceneSearchBooleanQuery_rewriteNoScoring(OrgApacheLuceneSearchBooleanQuery *self) {
  OrgApacheLuceneSearchBooleanQuery_Builder *newQuery = [new_OrgApacheLuceneSearchBooleanQuery_Builder_init() autorelease];
  [newQuery setMinimumNumberShouldMatchWithInt:[self getMinimumNumberShouldMatch]];
  for (OrgApacheLuceneSearchBooleanClause * __strong clause in nil_chk(self->clauses_)) {
    if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(clause)) getOccur] == JreLoadStatic(OrgApacheLuceneSearchBooleanClause_OccurEnum, MUST)) {
      [newQuery addWithOrgApacheLuceneSearchQuery:[clause getQuery] withOrgApacheLuceneSearchBooleanClause_OccurEnum:JreLoadStatic(OrgApacheLuceneSearchBooleanClause_OccurEnum, FILTER)];
    }
    else {
      [newQuery addWithOrgApacheLuceneSearchBooleanClause:clause];
    }
  }
  return [newQuery build];
}

void OrgApacheLuceneSearchBooleanQuery_init(OrgApacheLuceneSearchBooleanQuery *self) {
  OrgApacheLuceneSearchBooleanQuery_initWithBoolean_(self, false);
}

OrgApacheLuceneSearchBooleanQuery *new_OrgApacheLuceneSearchBooleanQuery_init() {
  OrgApacheLuceneSearchBooleanQuery *self = [OrgApacheLuceneSearchBooleanQuery alloc];
  OrgApacheLuceneSearchBooleanQuery_init(self);
  return self;
}

void OrgApacheLuceneSearchBooleanQuery_initWithBoolean_(OrgApacheLuceneSearchBooleanQuery *self, jboolean disableCoord) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssignAndConsume(&self->clauses_, new_JavaUtilArrayList_init());
  self->disableCoord_ = disableCoord;
  self->minimumNumberShouldMatch_ = 0;
  self->mutable__ = true;
}

OrgApacheLuceneSearchBooleanQuery *new_OrgApacheLuceneSearchBooleanQuery_initWithBoolean_(jboolean disableCoord) {
  OrgApacheLuceneSearchBooleanQuery *self = [OrgApacheLuceneSearchBooleanQuery alloc];
  OrgApacheLuceneSearchBooleanQuery_initWithBoolean_(self, disableCoord);
  return self;
}

void OrgApacheLuceneSearchBooleanQuery_ensureMutableWithNSString_(OrgApacheLuceneSearchBooleanQuery *self, NSString *method) {
  if (self->mutable__ == false) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"This BooleanQuery has been created with the new BooleanQuery.Builder API. It must not be modified afterwards. The ", method, @" method only exists for backward compatibility")) autorelease];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchBooleanQuery)

@implementation OrgApacheLuceneSearchBooleanQuery_TooManyClauses

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TooManyClauses", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanQuery_TooManyClauses = { 2, "TooManyClauses", "org.apache.lucene.search", "BooleanQuery", 0x9, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchBooleanQuery_TooManyClauses;
}

@end

void OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init(OrgApacheLuceneSearchBooleanQuery_TooManyClauses *self) {
  JavaLangRuntimeException_initWithNSString_(self, JreStrcat("$I", @"maxClauseCount is set to ", JreLoadStatic(OrgApacheLuceneSearchBooleanQuery, maxClauseCount_)));
}

OrgApacheLuceneSearchBooleanQuery_TooManyClauses *new_OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init() {
  OrgApacheLuceneSearchBooleanQuery_TooManyClauses *self = [OrgApacheLuceneSearchBooleanQuery_TooManyClauses alloc];
  OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchBooleanQuery_TooManyClauses)

@implementation OrgApacheLuceneSearchBooleanQuery_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchBooleanQuery_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneSearchBooleanQuery_Builder *)setDisableCoordWithBoolean:(jboolean)disableCoord {
  self->disableCoord_ = disableCoord;
  return self;
}

- (OrgApacheLuceneSearchBooleanQuery_Builder *)setMinimumNumberShouldMatchWithInt:(jint)min {
  self->minimumNumberShouldMatch_ = min;
  return self;
}

- (OrgApacheLuceneSearchBooleanQuery_Builder *)addWithOrgApacheLuceneSearchBooleanClause:(OrgApacheLuceneSearchBooleanClause *)clause {
  [self addWithOrgApacheLuceneSearchQuery:[((OrgApacheLuceneSearchBooleanClause *) nil_chk(clause)) getQuery] withOrgApacheLuceneSearchBooleanClause_OccurEnum:[clause getOccur]];
  return self;
}

- (OrgApacheLuceneSearchBooleanQuery_Builder *)addWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                withOrgApacheLuceneSearchBooleanClause_OccurEnum:(OrgApacheLuceneSearchBooleanClause_OccurEnum *)occur {
  if ([((id<JavaUtilList>) nil_chk(clauses_)) size] >= JreLoadStatic(OrgApacheLuceneSearchBooleanQuery, maxClauseCount_)) {
    @throw [new_OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init() autorelease];
  }
  [clauses_ addWithId:[new_OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_OccurEnum_(query, occur) autorelease]];
  return self;
}

- (OrgApacheLuceneSearchBooleanQuery *)build {
  return [new_OrgApacheLuceneSearchBooleanQuery_initWithBoolean_withInt_withOrgApacheLuceneSearchBooleanClauseArray_(disableCoord_, minimumNumberShouldMatch_, [((id<JavaUtilList>) nil_chk(clauses_)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchBooleanClause_class_()]]) autorelease];
}

- (void)dealloc {
  RELEASE_(clauses_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Builder", NULL, 0x1, NULL, NULL },
    { "setDisableCoordWithBoolean:", "setDisableCoord", "Lorg.apache.lucene.search.BooleanQuery$Builder;", 0x1, NULL, NULL },
    { "setMinimumNumberShouldMatchWithInt:", "setMinimumNumberShouldMatch", "Lorg.apache.lucene.search.BooleanQuery$Builder;", 0x1, NULL, NULL },
    { "addWithOrgApacheLuceneSearchBooleanClause:", "add", "Lorg.apache.lucene.search.BooleanQuery$Builder;", 0x1, NULL, NULL },
    { "addWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchBooleanClause_OccurEnum:", "add", "Lorg.apache.lucene.search.BooleanQuery$Builder;", 0x1, NULL, NULL },
    { "build", NULL, "Lorg.apache.lucene.search.BooleanQuery;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "disableCoord_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "minimumNumberShouldMatch_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "clauses_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/lucene/search/BooleanClause;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanQuery_Builder = { 2, "Builder", "org.apache.lucene.search", "BooleanQuery", 0x9, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchBooleanQuery_Builder;
}

@end

void OrgApacheLuceneSearchBooleanQuery_Builder_init(OrgApacheLuceneSearchBooleanQuery_Builder *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->clauses_, new_JavaUtilArrayList_init());
}

OrgApacheLuceneSearchBooleanQuery_Builder *new_OrgApacheLuceneSearchBooleanQuery_Builder_init() {
  OrgApacheLuceneSearchBooleanQuery_Builder *self = [OrgApacheLuceneSearchBooleanQuery_Builder alloc];
  OrgApacheLuceneSearchBooleanQuery_Builder_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchBooleanQuery_Builder)
