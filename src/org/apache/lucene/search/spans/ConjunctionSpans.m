//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/ConjunctionSpans.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/List.h"
#include "org/apache/lucene/search/ConjunctionDISI.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/TwoPhaseIterator.h"
#include "org/apache/lucene/search/spans/ConjunctionSpans.h"
#include "org/apache/lucene/search/spans/Spans.h"

@interface OrgApacheLuceneSearchSpansConjunctionSpans_$1 : OrgApacheLuceneSearchTwoPhaseIterator {
 @public
  OrgApacheLuceneSearchSpansConjunctionSpans *this$0_;
}

- (jboolean)matches;

- (instancetype)initWithOrgApacheLuceneSearchSpansConjunctionSpans:(OrgApacheLuceneSearchSpansConjunctionSpans *)outer$
                         withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansConjunctionSpans_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansConjunctionSpans_$1, this$0_, OrgApacheLuceneSearchSpansConjunctionSpans *)

__attribute__((unused)) static void OrgApacheLuceneSearchSpansConjunctionSpans_$1_initWithOrgApacheLuceneSearchSpansConjunctionSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansConjunctionSpans_$1 *self, OrgApacheLuceneSearchSpansConjunctionSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0);

__attribute__((unused)) static OrgApacheLuceneSearchSpansConjunctionSpans_$1 *new_OrgApacheLuceneSearchSpansConjunctionSpans_$1_initWithOrgApacheLuceneSearchSpansConjunctionSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansConjunctionSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansConjunctionSpans_$1)

@implementation OrgApacheLuceneSearchSpansConjunctionSpans

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)subSpans {
  OrgApacheLuceneSearchSpansConjunctionSpans_initWithJavaUtilList_(self, subSpans);
  return self;
}

- (jint)docID {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(conjunction_)) docID];
}

- (jlong)cost {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(conjunction_)) cost];
}

- (jint)nextDoc {
  return ([((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(conjunction_)) nextDoc] == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) ? OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS : [self toMatchDoc];
}

- (jint)advanceWithInt:(jint)target {
  return ([((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(conjunction_)) advanceWithInt:target] == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) ? OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS : [self toMatchDoc];
}

- (jint)toMatchDoc {
  oneExhaustedInCurrentDoc_ = NO;
  while (YES) {
    if ([self twoPhaseCurrentDocMatches]) {
      return [self docID];
    }
    if ([((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(conjunction_)) nextDoc] == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
    }
  }
}

- (jboolean)twoPhaseCurrentDocMatches {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneSearchTwoPhaseIterator *)asTwoPhaseIterator {
  OrgApacheLuceneSearchTwoPhaseIterator *res = [new_OrgApacheLuceneSearchSpansConjunctionSpans_$1_initWithOrgApacheLuceneSearchSpansConjunctionSpans_withOrgApacheLuceneSearchDocIdSetIterator_(self, conjunction_) autorelease];
  return res;
}

- (void)dealloc {
  RELEASE_(subSpans_);
  RELEASE_(conjunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "ConjunctionSpans", NULL, 0x0, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "toMatchDoc", NULL, "I", 0x0, "Ljava.io.IOException;", NULL },
    { "twoPhaseCurrentDocMatches", NULL, "Z", 0x400, "Ljava.io.IOException;", NULL },
    { "asTwoPhaseIterator", NULL, "Lorg.apache.lucene.search.TwoPhaseIterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "subSpans_", NULL, 0x10, "[Lorg.apache.lucene.search.spans.Spans;", NULL, NULL, .constantValue.asLong = 0 },
    { "conjunction_", NULL, 0x10, "Lorg.apache.lucene.search.DocIdSetIterator;", NULL, NULL, .constantValue.asLong = 0 },
    { "atFirstInCurrentDoc_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "oneExhaustedInCurrentDoc_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansConjunctionSpans = { 2, "ConjunctionSpans", "org.apache.lucene.search.spans", NULL, 0x400, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchSpansConjunctionSpans;
}

@end

void OrgApacheLuceneSearchSpansConjunctionSpans_initWithJavaUtilList_(OrgApacheLuceneSearchSpansConjunctionSpans *self, id<JavaUtilList> subSpans) {
  OrgApacheLuceneSearchSpansSpans_init(self);
  if ([((id<JavaUtilList>) nil_chk(subSpans)) size] < 2) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Less than 2 subSpans.size():", [subSpans size])) autorelease];
  }
  JreStrongAssign(&self->subSpans_, [subSpans toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[subSpans size] type:OrgApacheLuceneSearchSpansSpans_class_()]]);
  JreStrongAssign(&self->conjunction_, OrgApacheLuceneSearchConjunctionDISI_intersectWithJavaUtilList_(subSpans));
  self->atFirstInCurrentDoc_ = YES;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansConjunctionSpans)

@implementation OrgApacheLuceneSearchSpansConjunctionSpans_$1

- (jboolean)matches {
  return [this$0_ twoPhaseCurrentDocMatches];
}

- (instancetype)initWithOrgApacheLuceneSearchSpansConjunctionSpans:(OrgApacheLuceneSearchSpansConjunctionSpans *)outer$
                         withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)arg$0 {
  OrgApacheLuceneSearchSpansConjunctionSpans_$1_initWithOrgApacheLuceneSearchSpansConjunctionSpans_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "matches", NULL, "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneSearchSpansConjunctionSpans:withOrgApacheLuceneSearchDocIdSetIterator:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.search.spans.ConjunctionSpans;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchSpansConjunctionSpans", "asTwoPhaseIterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansConjunctionSpans_$1 = { 2, "", "org.apache.lucene.search.spans", "ConjunctionSpans", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneSearchSpansConjunctionSpans_$1;
}

@end

void OrgApacheLuceneSearchSpansConjunctionSpans_$1_initWithOrgApacheLuceneSearchSpansConjunctionSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansConjunctionSpans_$1 *self, OrgApacheLuceneSearchSpansConjunctionSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, arg$0);
}

OrgApacheLuceneSearchSpansConjunctionSpans_$1 *new_OrgApacheLuceneSearchSpansConjunctionSpans_$1_initWithOrgApacheLuceneSearchSpansConjunctionSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansConjunctionSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0) {
  OrgApacheLuceneSearchSpansConjunctionSpans_$1 *self = [OrgApacheLuceneSearchSpansConjunctionSpans_$1 alloc];
  OrgApacheLuceneSearchSpansConjunctionSpans_$1_initWithOrgApacheLuceneSearchSpansConjunctionSpans_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansConjunctionSpans_$1)
