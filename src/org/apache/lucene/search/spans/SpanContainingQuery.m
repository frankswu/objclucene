//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/SpanContainingQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/util/ArrayList.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/spans/ContainSpans.h"
#include "org/apache/lucene/search/spans/SpanContainQuery.h"
#include "org/apache/lucene/search/spans/SpanContainingQuery.h"
#include "org/apache/lucene/search/spans/SpanQuery.h"
#include "org/apache/lucene/search/spans/SpanWeight.h"
#include "org/apache/lucene/search/spans/Spans.h"

@interface OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1 : OrgApacheLuceneSearchSpansContainSpans

- (jboolean)twoPhaseCurrentDocMatches;

- (jint)nextStartPosition;

- (instancetype)initWithOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)arg$0
                    withOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)arg$1
                    withOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)arg$2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1)

__attribute__((unused)) static void OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1 *self, OrgApacheLuceneSearchSpansSpans *arg$0, OrgApacheLuceneSearchSpansSpans *arg$1, OrgApacheLuceneSearchSpansSpans *arg$2);

__attribute__((unused)) static OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1 *new_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpans *arg$0, OrgApacheLuceneSearchSpansSpans *arg$1, OrgApacheLuceneSearchSpansSpans *arg$2) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1)

@implementation OrgApacheLuceneSearchSpansSpanContainingQuery

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)big
                    withOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)little {
  OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(self, big, little);
  return self;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  return [self toStringWithNSString:field withNSString:@"SpanContaining"];
}

- (OrgApacheLuceneSearchSpansSpanContainingQuery *)clone {
  return [new_OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_((OrgApacheLuceneSearchSpansSpanQuery *) check_class_cast([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(big_)) clone], [OrgApacheLuceneSearchSpansSpanQuery class]), (OrgApacheLuceneSearchSpansSpanQuery *) check_class_cast([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(little_)) clone], [OrgApacheLuceneSearchSpansSpanQuery class])) autorelease];
}

- (OrgApacheLuceneSearchSpansSpanWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                                 withBoolean:(jboolean)needsScores {
  OrgApacheLuceneSearchSpansSpanWeight *bigWeight = [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(big_)) createWeightWithOrgApacheLuceneSearchIndexSearcher:searcher withBoolean:NO];
  OrgApacheLuceneSearchSpansSpanWeight *littleWeight = [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(little_)) createWeightWithOrgApacheLuceneSearchIndexSearcher:searcher withBoolean:NO];
  return [new_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(self, searcher, needsScores ? OrgApacheLuceneSearchSpansSpanQuery_getTermContextsWithOrgApacheLuceneSearchSpansSpanWeightArray_([IOSObjectArray arrayWithObjects:(id[]){ bigWeight, littleWeight } count:2 type:OrgApacheLuceneSearchSpansSpanWeight_class_()]) : nil, bigWeight, littleWeight) autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchSpansSpanQuery:withOrgApacheLuceneSearchSpansSpanQuery:", "SpanContainingQuery", NULL, 0x1, NULL, NULL },
    { "toStringWithNSString:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.apache.lucene.search.spans.SpanContainingQuery;", 0x1, NULL, NULL },
    { "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:", "createWeight", "Lorg.apache.lucene.search.spans.SpanWeight;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.spans.SpanContainingQuery$SpanContainingWeight;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansSpanContainingQuery = { 2, "SpanContainingQuery", "org.apache.lucene.search.spans", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneSearchSpansSpanContainingQuery;
}

@end

void OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanContainingQuery *self, OrgApacheLuceneSearchSpansSpanQuery *big, OrgApacheLuceneSearchSpansSpanQuery *little) {
  OrgApacheLuceneSearchSpansSpanContainQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_withFloat_(self, big, little, [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(big)) getBoost]);
}

OrgApacheLuceneSearchSpansSpanContainingQuery *new_OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanQuery *big, OrgApacheLuceneSearchSpansSpanQuery *little) {
  OrgApacheLuceneSearchSpansSpanContainingQuery *self = [OrgApacheLuceneSearchSpansSpanContainingQuery alloc];
  OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(self, big, little);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansSpanContainingQuery)

@implementation OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanContainingQuery:(OrgApacheLuceneSearchSpansSpanContainingQuery *)outer$
                               withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                      withJavaUtilMap:(id<JavaUtilMap>)terms
                             withOrgApacheLuceneSearchSpansSpanWeight:(OrgApacheLuceneSearchSpansSpanWeight *)bigWeight
                             withOrgApacheLuceneSearchSpansSpanWeight:(OrgApacheLuceneSearchSpansSpanWeight *)littleWeight {
  OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(self, outer$, searcher, terms, bigWeight, littleWeight);
  return self;
}

- (OrgApacheLuceneSearchSpansSpans *)getSpansWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                 withOrgApacheLuceneSearchSpansSpanWeight_PostingsEnum:(OrgApacheLuceneSearchSpansSpanWeight_PostingsEnum *)requiredPostings {
  JavaUtilArrayList *containerContained = [self prepareConjunctionWithOrgApacheLuceneIndexLeafReaderContext:context withOrgApacheLuceneSearchSpansSpanWeight_PostingsEnum:requiredPostings];
  if (containerContained == nil) {
    return nil;
  }
  OrgApacheLuceneSearchSpansSpans *big = [((JavaUtilArrayList *) nil_chk(containerContained)) getWithInt:0];
  OrgApacheLuceneSearchSpansSpans *little = [containerContained getWithInt:1];
  return [new_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(big, little, big) autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchSpansSpanContainingQuery:withOrgApacheLuceneSearchIndexSearcher:withJavaUtilMap:withOrgApacheLuceneSearchSpansSpanWeight:withOrgApacheLuceneSearchSpansSpanWeight:", "SpanContainingWeight", NULL, 0x1, NULL, NULL },
    { "getSpansWithOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchSpansSpanWeight_PostingsEnum:", "getSpans", "Lorg.apache.lucene.search.spans.Spans;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight = { 2, "SpanContainingWeight", "org.apache.lucene.search.spans", "SpanContainingQuery", 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight;
}

@end

void OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight *self, OrgApacheLuceneSearchSpansSpanContainingQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms, OrgApacheLuceneSearchSpansSpanWeight *bigWeight, OrgApacheLuceneSearchSpansSpanWeight *littleWeight) {
  OrgApacheLuceneSearchSpansSpanContainQuery_SpanContainWeight_initWithOrgApacheLuceneSearchSpansSpanContainQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(self, outer$, searcher, terms, bigWeight, littleWeight);
}

OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight *new_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(OrgApacheLuceneSearchSpansSpanContainingQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms, OrgApacheLuceneSearchSpansSpanWeight *bigWeight, OrgApacheLuceneSearchSpansSpanWeight *littleWeight) {
  OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight *self = [OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight alloc];
  OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(self, outer$, searcher, terms, bigWeight, littleWeight);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight)

@implementation OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1

- (jboolean)twoPhaseCurrentDocMatches {
  oneExhaustedInCurrentDoc_ = NO;
  JreAssert(([((OrgApacheLuceneSearchSpansSpans *) nil_chk(littleSpans_)) startPosition] == -1), (@"org/apache/lucene/search/spans/SpanContainingQuery.java:87 condition failed: assert littleSpans.startPosition() == -1;"));
  while ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) nextStartPosition] != OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
    while ([littleSpans_ startPosition] < [bigSpans_ startPosition]) {
      if ([littleSpans_ nextStartPosition] == OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
        oneExhaustedInCurrentDoc_ = YES;
        return NO;
      }
    }
    if ([bigSpans_ endPosition] >= [littleSpans_ endPosition]) {
      atFirstInCurrentDoc_ = YES;
      return YES;
    }
  }
  oneExhaustedInCurrentDoc_ = YES;
  return NO;
}

- (jint)nextStartPosition {
  if (atFirstInCurrentDoc_) {
    atFirstInCurrentDoc_ = NO;
    return [((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) startPosition];
  }
  while ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) nextStartPosition] != OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
    while ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(littleSpans_)) startPosition] < [bigSpans_ startPosition]) {
      if ([littleSpans_ nextStartPosition] == OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
        oneExhaustedInCurrentDoc_ = YES;
        return OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS;
      }
    }
    if ([bigSpans_ endPosition] >= [littleSpans_ endPosition]) {
      return [bigSpans_ startPosition];
    }
  }
  oneExhaustedInCurrentDoc_ = YES;
  return OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS;
}

- (instancetype)initWithOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)arg$0
                    withOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)arg$1
                    withOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)arg$2 {
  OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(self, arg$0, arg$1, arg$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "twoPhaseCurrentDocMatches", NULL, "Z", 0x0, "Ljava.io.IOException;", NULL },
    { "nextStartPosition", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneSearchSpansSpans:withOrgApacheLuceneSearchSpansSpans:withOrgApacheLuceneSearchSpansSpans:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight", "getSpansWithOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchSpansSpanWeight_PostingsEnum:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1 = { 2, "", "org.apache.lucene.search.spans", "SpanContainingQuery$SpanContainingWeight", 0x8008, 3, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1;
}

@end

void OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1 *self, OrgApacheLuceneSearchSpansSpans *arg$0, OrgApacheLuceneSearchSpansSpans *arg$1, OrgApacheLuceneSearchSpansSpans *arg$2) {
  OrgApacheLuceneSearchSpansContainSpans_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(self, arg$0, arg$1, arg$2);
}

OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1 *new_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpans *arg$0, OrgApacheLuceneSearchSpansSpans *arg$1, OrgApacheLuceneSearchSpansSpans *arg$2) {
  OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1 *self = [OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1 alloc];
  OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(self, arg$0, arg$1, arg$2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_$1)
