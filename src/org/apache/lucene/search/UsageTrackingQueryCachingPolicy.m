//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/UsageTrackingQueryCachingPolicy.java
//

#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/apache/lucene/search/QueryCachingPolicy.h"
#include "org/apache/lucene/search/UsageTrackingQueryCachingPolicy.h"
#include "org/apache/lucene/util/FrequencyTrackingRingBuffer.h"

#define OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_SENTINEL ((jint) 0x80000000)

@interface OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy () {
 @public
  OrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments *segmentPolicy_;
  OrgApacheLuceneUtilFrequencyTrackingRingBuffer *recentlyUsedFilters_;
}

- (instancetype)initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments:(OrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments *)segmentPolicy
                                                                             withInt:(jint)historySize;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy, segmentPolicy_, OrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy, recentlyUsedFilters_, OrgApacheLuceneUtilFrequencyTrackingRingBuffer *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy, SENTINEL, jint)

__attribute__((unused)) static void OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments_withInt_(OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy *self, OrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments *segmentPolicy, jint historySize);

__attribute__((unused)) static OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy *new_OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments_withInt_(OrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments *segmentPolicy, jint historySize) NS_RETURNS_RETAINED;

@implementation OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy

- (instancetype)init {
  OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_init(self);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments:(OrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments *)segmentPolicy
                                                                             withInt:(jint)historySize {
  OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments_withInt_(self, segmentPolicy, historySize);
  return self;
}

- (void)dealloc {
  RELEASE_(segmentPolicy_);
  RELEASE_(recentlyUsedFilters_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "UsageTrackingQueryCachingPolicy", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments:withInt:", "UsageTrackingQueryCachingPolicy", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "SENTINEL", "SENTINEL", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_SENTINEL },
    { "segmentPolicy_", NULL, 0x12, "Lorg.apache.lucene.search.QueryCachingPolicy$CacheOnLargeSegments;", NULL, NULL, .constantValue.asLong = 0 },
    { "recentlyUsedFilters_", NULL, 0x12, "Lorg.apache.lucene.util.FrequencyTrackingRingBuffer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy = { 2, "UsageTrackingQueryCachingPolicy", "org.apache.lucene.search", NULL, 0x11, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy;
}

@end

void OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_init(OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy *self) {
  OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments_withInt_(self, JreLoadStatic(OrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments, DEFAULT_), 256);
}

OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy *new_OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_init() {
  OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy *self = [OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy alloc];
  OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_init(self);
  return self;
}

void OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments_withInt_(OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy *self, OrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments *segmentPolicy, jint historySize) {
  NSObject_init(self);
  JreStrongAssign(&self->segmentPolicy_, segmentPolicy);
  JreStrongAssignAndConsume(&self->recentlyUsedFilters_, new_OrgApacheLuceneUtilFrequencyTrackingRingBuffer_initWithInt_withInt_(historySize, OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_SENTINEL));
}

OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy *new_OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments_withInt_(OrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments *segmentPolicy, jint historySize) {
  OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy *self = [OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy alloc];
  OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy_initWithOrgApacheLuceneSearchQueryCachingPolicy_CacheOnLargeSegments_withInt_(self, segmentPolicy, historySize);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchUsageTrackingQueryCachingPolicy)
