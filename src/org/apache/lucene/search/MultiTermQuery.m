//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/MultiTermQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Float.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermContext.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/BlendedTermQuery.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/ConstantScoreQuery.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/MultiTermQueryConstantScoreWrapper.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/ScoringRewrite.h"
#include "org/apache/lucene/search/TermQuery.h"
#include "org/apache/lucene/search/TopTermsRewrite.h"
#include "org/apache/lucene/util/AttributeSource.h"
#include "org/lukhnos/portmobile/util/Objects.h"

@interface OrgApacheLuceneSearchMultiTermQuery_$1 : OrgApacheLuceneSearchMultiTermQuery_RewriteMethod

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchMultiTermQuery_$1)

__attribute__((unused)) static void OrgApacheLuceneSearchMultiTermQuery_$1_init(OrgApacheLuceneSearchMultiTermQuery_$1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchMultiTermQuery_$1 *new_OrgApacheLuceneSearchMultiTermQuery_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchMultiTermQuery_$1 *create_OrgApacheLuceneSearchMultiTermQuery_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchMultiTermQuery_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchMultiTermQuery)

OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_REWRITE;
OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_FILTER_REWRITE;
OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *OrgApacheLuceneSearchMultiTermQuery_SCORING_BOOLEAN_REWRITE;
OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *OrgApacheLuceneSearchMultiTermQuery_SCORING_BOOLEAN_QUERY_REWRITE;
OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_BOOLEAN_REWRITE;
OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE;

@implementation OrgApacheLuceneSearchMultiTermQuery

+ (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)CONSTANT_SCORE_REWRITE {
  return OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_REWRITE;
}

+ (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)CONSTANT_SCORE_FILTER_REWRITE {
  return OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_FILTER_REWRITE;
}

+ (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)SCORING_BOOLEAN_REWRITE {
  return OrgApacheLuceneSearchMultiTermQuery_SCORING_BOOLEAN_REWRITE;
}

+ (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)SCORING_BOOLEAN_QUERY_REWRITE {
  return OrgApacheLuceneSearchMultiTermQuery_SCORING_BOOLEAN_QUERY_REWRITE;
}

+ (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)CONSTANT_SCORE_BOOLEAN_REWRITE {
  return OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_BOOLEAN_REWRITE;
}

+ (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE {
  return OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE;
}

- (instancetype)initWithNSString:(NSString *)field {
  OrgApacheLuceneSearchMultiTermQuery_initWithNSString_(self, field);
  return self;
}

- (NSString *)getField {
  return field_;
}

- (OrgApacheLuceneIndexTermsEnum *)getTermsEnumWithOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)terms
                                      withOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)atts {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneIndexTermsEnum *)getTermsEnumWithOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)terms {
  return [self getTermsEnumWithOrgApacheLuceneIndexTerms:terms withOrgApacheLuceneUtilAttributeSource:create_OrgApacheLuceneUtilAttributeSource_init()];
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  return [((OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *) nil_chk(rewriteMethod_)) rewriteWithOrgApacheLuceneIndexIndexReader:reader withOrgApacheLuceneSearchMultiTermQuery:self];
}

- (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)getRewriteMethod {
  return rewriteMethod_;
}

- (void)setRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:(OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)method {
  JreStrongAssign(&rewriteMethod_, method);
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + JavaLangFloat_floatToIntBitsWithFloat_([self getBoost]);
  result = prime * result + ((jint) [((OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *) nil_chk(rewriteMethod_)) hash]);
  if (field_ != nil) result = prime * result + ((jint) [field_ hash]);
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return true;
  if (obj == nil) return false;
  if ([self getClass] != (id) [obj getClass]) return false;
  OrgApacheLuceneSearchMultiTermQuery *other = (OrgApacheLuceneSearchMultiTermQuery *) cast_chk(obj, [OrgApacheLuceneSearchMultiTermQuery class]);
  if (![super isEqual:obj]) return false;
  if (![((OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *) nil_chk(rewriteMethod_)) isEqual:other->rewriteMethod_]) {
    return false;
  }
  return (other->field_ == nil ? field_ == nil : [other->field_ isEqual:field_]);
}

+ (IOSObjectArray *)__annotations_CONSTANT_SCORE_FILTER_REWRITE_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_SCORING_BOOLEAN_QUERY_REWRITE_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE_ {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(rewriteMethod_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchMultiTermQuery class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_REWRITE, new_OrgApacheLuceneSearchMultiTermQuery_$1_init());
    JreStrongAssign(&OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_FILTER_REWRITE, OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_REWRITE);
    JreStrongAssign(&OrgApacheLuceneSearchMultiTermQuery_SCORING_BOOLEAN_REWRITE, JreLoadStatic(OrgApacheLuceneSearchScoringRewrite, SCORING_BOOLEAN_REWRITE));
    JreStrongAssign(&OrgApacheLuceneSearchMultiTermQuery_SCORING_BOOLEAN_QUERY_REWRITE, OrgApacheLuceneSearchMultiTermQuery_SCORING_BOOLEAN_REWRITE);
    JreStrongAssign(&OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_BOOLEAN_REWRITE, JreLoadStatic(OrgApacheLuceneSearchScoringRewrite, CONSTANT_SCORE_BOOLEAN_REWRITE));
    JreStrongAssign(&OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE, OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_BOOLEAN_REWRITE);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchMultiTermQuery)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "MultiTermQuery", NULL, 0x1, NULL, NULL },
    { "getField", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getTermsEnumWithOrgApacheLuceneIndexTerms:withOrgApacheLuceneUtilAttributeSource:", "getTermsEnum", "Lorg.apache.lucene.index.TermsEnum;", 0x404, "Ljava.io.IOException;", NULL },
    { "getTermsEnumWithOrgApacheLuceneIndexTerms:", "getTermsEnum", "Lorg.apache.lucene.index.TermsEnum;", 0x14, "Ljava.io.IOException;", NULL },
    { "rewriteWithOrgApacheLuceneIndexIndexReader:", "rewrite", "Lorg.apache.lucene.search.Query;", 0x11, "Ljava.io.IOException;", NULL },
    { "getRewriteMethod", NULL, "Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", 0x1, NULL, NULL },
    { "setRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:", "setRewriteMethod", "V", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "field_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "rewriteMethod_", NULL, 0x4, "Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", NULL, NULL, .constantValue.asLong = 0 },
    { "CONSTANT_SCORE_REWRITE", "CONSTANT_SCORE_REWRITE", 0x19, "Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", &OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_REWRITE, NULL, .constantValue.asLong = 0 },
    { "CONSTANT_SCORE_FILTER_REWRITE", "CONSTANT_SCORE_FILTER_REWRITE", 0x19, "Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", &OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_FILTER_REWRITE, NULL, .constantValue.asLong = 0 },
    { "SCORING_BOOLEAN_REWRITE", "SCORING_BOOLEAN_REWRITE", 0x19, "Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", &OrgApacheLuceneSearchMultiTermQuery_SCORING_BOOLEAN_REWRITE, NULL, .constantValue.asLong = 0 },
    { "SCORING_BOOLEAN_QUERY_REWRITE", "SCORING_BOOLEAN_QUERY_REWRITE", 0x19, "Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", &OrgApacheLuceneSearchMultiTermQuery_SCORING_BOOLEAN_QUERY_REWRITE, NULL, .constantValue.asLong = 0 },
    { "CONSTANT_SCORE_BOOLEAN_REWRITE", "CONSTANT_SCORE_BOOLEAN_REWRITE", 0x19, "Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", &OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_BOOLEAN_REWRITE, NULL, .constantValue.asLong = 0 },
    { "CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE", "CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE", 0x19, "Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", &OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.search.MultiTermQuery$RewriteMethod;", "Lorg.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite;", "Lorg.apache.lucene.search.MultiTermQuery$TopTermsBlendedFreqScoringRewrite;", "Lorg.apache.lucene.search.MultiTermQuery$TopTermsBoostOnlyBooleanQueryRewrite;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiTermQuery = { 2, "MultiTermQuery", "org.apache.lucene.search", NULL, 0x401, 9, methods, 8, fields, 0, NULL, 4, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneSearchMultiTermQuery;
}

@end

void OrgApacheLuceneSearchMultiTermQuery_initWithNSString_(OrgApacheLuceneSearchMultiTermQuery *self, NSString *field) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->rewriteMethod_, OrgApacheLuceneSearchMultiTermQuery_CONSTANT_SCORE_REWRITE);
  JreStrongAssign(&self->field_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(field, @"field must not be null"));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiTermQuery)

@implementation OrgApacheLuceneSearchMultiTermQuery_RewriteMethod

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneIndexTermsEnum *)getTermsEnumWithOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query
                                                         withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)terms
                                                withOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)atts {
  return [((OrgApacheLuceneSearchMultiTermQuery *) nil_chk(query)) getTermsEnumWithOrgApacheLuceneIndexTerms:terms withOrgApacheLuceneUtilAttributeSource:atts];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchMultiTermQuery_RewriteMethod_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "rewriteWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchMultiTermQuery:", "rewrite", "Lorg.apache.lucene.search.Query;", 0x401, "Ljava.io.IOException;", NULL },
    { "getTermsEnumWithOrgApacheLuceneSearchMultiTermQuery:withOrgApacheLuceneIndexTerms:withOrgApacheLuceneUtilAttributeSource:", "getTermsEnum", "Lorg.apache.lucene.index.TermsEnum;", 0x4, "Ljava.io.IOException;", NULL },
    { "init", "RewriteMethod", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiTermQuery_RewriteMethod = { 2, "RewriteMethod", "org.apache.lucene.search", "MultiTermQuery", 0x409, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchMultiTermQuery_RewriteMethod;
}

@end

void OrgApacheLuceneSearchMultiTermQuery_RewriteMethod_init(OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiTermQuery_RewriteMethod)

@implementation OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite_initWithInt_(self, size);
  return self;
}

- (jint)getMaxSize {
  return OrgApacheLuceneSearchBooleanQuery_getMaxClauseCount();
}

- (OrgApacheLuceneSearchBooleanQuery_Builder *)getTopLevelBuilder {
  OrgApacheLuceneSearchBooleanQuery_Builder *builder = create_OrgApacheLuceneSearchBooleanQuery_Builder_init();
  [builder setDisableCoordWithBoolean:true];
  return builder;
}

- (OrgApacheLuceneSearchQuery *)buildWithId:(OrgApacheLuceneSearchBooleanQuery_Builder *)builder {
  return [((OrgApacheLuceneSearchBooleanQuery_Builder *) nil_chk(builder)) build];
}

- (void)addClauseWithId:(OrgApacheLuceneSearchBooleanQuery_Builder *)topLevel
withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                withInt:(jint)docCount
              withFloat:(jfloat)boost
withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)states {
  OrgApacheLuceneSearchTermQuery *tq = create_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_(term, states);
  [tq setBoostWithFloat:boost];
  [((OrgApacheLuceneSearchBooleanQuery_Builder *) nil_chk(topLevel)) addWithOrgApacheLuceneSearchQuery:tq withOrgApacheLuceneSearchBooleanClause_Occur:JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "TopTermsScoringBooleanQueryRewrite", NULL, 0x1, NULL, NULL },
    { "getMaxSize", NULL, "I", 0x4, NULL, NULL },
    { "getTopLevelBuilder", NULL, "Lorg.apache.lucene.search.BooleanQuery$Builder;", 0x4, NULL, NULL },
    { "buildWithId:", "build", "Lorg.apache.lucene.search.Query;", 0x4, NULL, NULL },
    { "addClauseWithId:withOrgApacheLuceneIndexTerm:withInt:withFloat:withOrgApacheLuceneIndexTermContext:", "addClause", "V", 0x4, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.search.BooleanQuery$Builder;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite = { 2, "TopTermsScoringBooleanQueryRewrite", "org.apache.lucene.search", "MultiTermQuery", 0x19, 5, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/search/TopTermsRewrite<Lorg/apache/lucene/search/BooleanQuery$Builder;>;" };
  return &_OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite;
}

@end

void OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite_initWithInt_(OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite *self, jint size) {
  OrgApacheLuceneSearchTopTermsRewrite_initWithInt_(self, size);
}

OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite *new_OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite, initWithInt_, size)
}

OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite *create_OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiTermQuery_TopTermsScoringBooleanQueryRewrite)

@implementation OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite_initWithInt_(self, size);
  return self;
}

- (jint)getMaxSize {
  return OrgApacheLuceneSearchBooleanQuery_getMaxClauseCount();
}

- (OrgApacheLuceneSearchBlendedTermQuery_Builder *)getTopLevelBuilder {
  OrgApacheLuceneSearchBlendedTermQuery_Builder *builder = create_OrgApacheLuceneSearchBlendedTermQuery_Builder_init();
  [builder setRewriteMethodWithOrgApacheLuceneSearchBlendedTermQuery_RewriteMethod:JreLoadStatic(OrgApacheLuceneSearchBlendedTermQuery, BOOLEAN_REWRITE)];
  return builder;
}

- (OrgApacheLuceneSearchQuery *)buildWithId:(OrgApacheLuceneSearchBlendedTermQuery_Builder *)builder {
  return [((OrgApacheLuceneSearchBlendedTermQuery_Builder *) nil_chk(builder)) build];
}

- (void)addClauseWithId:(OrgApacheLuceneSearchBlendedTermQuery_Builder *)topLevel
withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                withInt:(jint)docCount
              withFloat:(jfloat)boost
withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)states {
  [((OrgApacheLuceneSearchBlendedTermQuery_Builder *) nil_chk(topLevel)) addWithOrgApacheLuceneIndexTerm:term withFloat:boost withOrgApacheLuceneIndexTermContext:states];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "TopTermsBlendedFreqScoringRewrite", NULL, 0x1, NULL, NULL },
    { "getMaxSize", NULL, "I", 0x4, NULL, NULL },
    { "getTopLevelBuilder", NULL, "Lorg.apache.lucene.search.BlendedTermQuery$Builder;", 0x4, NULL, NULL },
    { "buildWithId:", "build", "Lorg.apache.lucene.search.Query;", 0x4, NULL, NULL },
    { "addClauseWithId:withOrgApacheLuceneIndexTerm:withInt:withFloat:withOrgApacheLuceneIndexTermContext:", "addClause", "V", 0x4, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.search.BlendedTermQuery$Builder;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite = { 2, "TopTermsBlendedFreqScoringRewrite", "org.apache.lucene.search", "MultiTermQuery", 0x19, 5, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/search/TopTermsRewrite<Lorg/apache/lucene/search/BlendedTermQuery$Builder;>;" };
  return &_OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite;
}

@end

void OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite_initWithInt_(OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite *self, jint size) {
  OrgApacheLuceneSearchTopTermsRewrite_initWithInt_(self, size);
}

OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite *new_OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite, initWithInt_, size)
}

OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite *create_OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiTermQuery_TopTermsBlendedFreqScoringRewrite)

@implementation OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite_initWithInt_(self, size);
  return self;
}

- (jint)getMaxSize {
  return OrgApacheLuceneSearchBooleanQuery_getMaxClauseCount();
}

- (OrgApacheLuceneSearchBooleanQuery_Builder *)getTopLevelBuilder {
  OrgApacheLuceneSearchBooleanQuery_Builder *builder = create_OrgApacheLuceneSearchBooleanQuery_Builder_init();
  [builder setDisableCoordWithBoolean:true];
  return builder;
}

- (OrgApacheLuceneSearchQuery *)buildWithId:(OrgApacheLuceneSearchBooleanQuery_Builder *)builder {
  return [((OrgApacheLuceneSearchBooleanQuery_Builder *) nil_chk(builder)) build];
}

- (void)addClauseWithId:(OrgApacheLuceneSearchBooleanQuery_Builder *)topLevel
withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                withInt:(jint)docFreq
              withFloat:(jfloat)boost
withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)states {
  OrgApacheLuceneSearchQuery *q = create_OrgApacheLuceneSearchConstantScoreQuery_initWithOrgApacheLuceneSearchQuery_(create_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_(term, states));
  [q setBoostWithFloat:boost];
  [((OrgApacheLuceneSearchBooleanQuery_Builder *) nil_chk(topLevel)) addWithOrgApacheLuceneSearchQuery:q withOrgApacheLuceneSearchBooleanClause_Occur:JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "TopTermsBoostOnlyBooleanQueryRewrite", NULL, 0x1, NULL, NULL },
    { "getMaxSize", NULL, "I", 0x4, NULL, NULL },
    { "getTopLevelBuilder", NULL, "Lorg.apache.lucene.search.BooleanQuery$Builder;", 0x4, NULL, NULL },
    { "buildWithId:", "build", "Lorg.apache.lucene.search.Query;", 0x4, NULL, NULL },
    { "addClauseWithId:withOrgApacheLuceneIndexTerm:withInt:withFloat:withOrgApacheLuceneIndexTermContext:", "addClause", "V", 0x4, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.search.BooleanQuery$Builder;"};
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite = { 2, "TopTermsBoostOnlyBooleanQueryRewrite", "org.apache.lucene.search", "MultiTermQuery", 0x19, 5, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/search/TopTermsRewrite<Lorg/apache/lucene/search/BooleanQuery$Builder;>;" };
  return &_OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite;
}

@end

void OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite_initWithInt_(OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite *self, jint size) {
  OrgApacheLuceneSearchTopTermsRewrite_initWithInt_(self, size);
}

OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite *new_OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite, initWithInt_, size)
}

OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite *create_OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiTermQuery_TopTermsBoostOnlyBooleanQueryRewrite)

@implementation OrgApacheLuceneSearchMultiTermQuery_$1

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query {
  OrgApacheLuceneSearchQuery *result = create_OrgApacheLuceneSearchMultiTermQueryConstantScoreWrapper_initWithOrgApacheLuceneSearchMultiTermQuery_(query);
  [result setBoostWithFloat:[((OrgApacheLuceneSearchMultiTermQuery *) nil_chk(query)) getBoost]];
  return result;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchMultiTermQuery_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "rewriteWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchMultiTermQuery:", "rewrite", "Lorg.apache.lucene.search.Query;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiTermQuery_$1 = { 2, "", "org.apache.lucene.search", "MultiTermQuery", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchMultiTermQuery_$1;
}

@end

void OrgApacheLuceneSearchMultiTermQuery_$1_init(OrgApacheLuceneSearchMultiTermQuery_$1 *self) {
  OrgApacheLuceneSearchMultiTermQuery_RewriteMethod_init(self);
}

OrgApacheLuceneSearchMultiTermQuery_$1 *new_OrgApacheLuceneSearchMultiTermQuery_$1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMultiTermQuery_$1, init)
}

OrgApacheLuceneSearchMultiTermQuery_$1 *create_OrgApacheLuceneSearchMultiTermQuery_$1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMultiTermQuery_$1, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiTermQuery_$1)
