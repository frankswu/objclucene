//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/DisjunctionScorer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/List.h"
#include "org/apache/lucene/search/DisiPriorityQueue.h"
#include "org/apache/lucene/search/DisiWrapper.h"
#include "org/apache/lucene/search/DisjunctionDISIApproximation.h"
#include "org/apache/lucene/search/DisjunctionScorer.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/TwoPhaseIterator.h"
#include "org/apache/lucene/search/Weight.h"

@interface OrgApacheLuceneSearchDisjunctionScorer () {
 @public
  jboolean needsScores_;
  OrgApacheLuceneSearchDisiPriorityQueue *subScorers_;
  jlong cost_;
  OrgApacheLuceneSearchDisiWrapper *topScorers_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchDisjunctionScorer, subScorers_, OrgApacheLuceneSearchDisiPriorityQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchDisjunctionScorer, topScorers_, OrgApacheLuceneSearchDisiWrapper *)

@interface OrgApacheLuceneSearchDisjunctionScorer_$1 : OrgApacheLuceneSearchTwoPhaseIterator {
 @public
  OrgApacheLuceneSearchDisjunctionScorer *this$0_;
}

- (jboolean)matches;

- (instancetype)initWithOrgApacheLuceneSearchDisjunctionScorer:(OrgApacheLuceneSearchDisjunctionScorer *)outer$
                     withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchDisjunctionScorer_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchDisjunctionScorer_$1, this$0_, OrgApacheLuceneSearchDisjunctionScorer *)

__attribute__((unused)) static void OrgApacheLuceneSearchDisjunctionScorer_$1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer_$1 *self, OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0);

__attribute__((unused)) static OrgApacheLuceneSearchDisjunctionScorer_$1 *new_OrgApacheLuceneSearchDisjunctionScorer_$1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchDisjunctionScorer_$1)

@implementation OrgApacheLuceneSearchDisjunctionScorer

- (instancetype)initWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                   withJavaUtilList:(id<JavaUtilList>)subScorers
                                        withBoolean:(jboolean)needsScores {
  OrgApacheLuceneSearchDisjunctionScorer_initWithOrgApacheLuceneSearchWeight_withJavaUtilList_withBoolean_(self, weight, subScorers, needsScores);
  return self;
}

- (OrgApacheLuceneSearchTwoPhaseIterator *)asTwoPhaseIterator {
  jboolean hasApproximation = NO;
  for (OrgApacheLuceneSearchDisiWrapper * __strong w in nil_chk(subScorers_)) {
    if (((OrgApacheLuceneSearchDisiWrapper *) nil_chk(w))->twoPhaseView_ != nil) {
      hasApproximation = YES;
      break;
    }
  }
  if (!hasApproximation) {
    return nil;
  }
  return [new_OrgApacheLuceneSearchDisjunctionScorer_$1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, [new_OrgApacheLuceneSearchDisjunctionDISIApproximation_initWithOrgApacheLuceneSearchDisiPriorityQueue_(subScorers_) autorelease]) autorelease];
}

- (jlong)cost {
  return cost_;
}

- (jint)docID {
  return ((OrgApacheLuceneSearchDisiWrapper *) nil_chk([((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) top]))->doc_;
}

- (jint)nextDoc {
  JreStrongAssign(&topScorers_, nil);
  OrgApacheLuceneSearchDisiWrapper *top = [((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) top];
  jint doc = ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_;
  do {
    top->doc_ = [((OrgApacheLuceneSearchScorer *) nil_chk(top->iterator_)) nextDoc];
    top = [subScorers_ updateTop];
  }
  while (((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_ == doc);
  return ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_;
}

- (jint)advanceWithInt:(jint)target {
  JreStrongAssign(&topScorers_, nil);
  OrgApacheLuceneSearchDisiWrapper *top = [((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) top];
  do {
    ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_ = [((OrgApacheLuceneSearchScorer *) nil_chk(top->iterator_)) advanceWithInt:target];
    top = [subScorers_ updateTop];
  }
  while (((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_ < target);
  return ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_;
}

- (jint)freq {
  if (topScorers_ == nil) {
    JreStrongAssign(&topScorers_, [((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) topList]);
  }
  jint freq = 1;
  for (OrgApacheLuceneSearchDisiWrapper *w = ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(topScorers_))->next_; w != nil; w = ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(w))->next_) {
    freq += 1;
  }
  return freq;
}

- (jfloat)score {
  if (topScorers_ == nil) {
    JreStrongAssign(&topScorers_, [((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) topList]);
  }
  return [self scoreWithOrgApacheLuceneSearchDisiWrapper:topScorers_];
}

- (jfloat)scoreWithOrgApacheLuceneSearchDisiWrapper:(OrgApacheLuceneSearchDisiWrapper *)topList {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(subScorers_);
  RELEASE_(topScorers_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchWeight:withJavaUtilList:withBoolean:", "DisjunctionScorer", NULL, 0x4, NULL, NULL },
    { "asTwoPhaseIterator", NULL, "Lorg.apache.lucene.search.TwoPhaseIterator;", 0x1, NULL, NULL },
    { "cost", NULL, "J", 0x11, NULL, NULL },
    { "docID", NULL, "I", 0x11, NULL, NULL },
    { "nextDoc", NULL, "I", 0x11, "Ljava.io.IOException;", NULL },
    { "advanceWithInt:", "advance", "I", 0x11, "Ljava.io.IOException;", NULL },
    { "freq", NULL, "I", 0x11, "Ljava.io.IOException;", NULL },
    { "score", NULL, "F", 0x11, "Ljava.io.IOException;", NULL },
    { "scoreWithOrgApacheLuceneSearchDisiWrapper:", "score", "F", 0x404, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "needsScores_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "subScorers_", NULL, 0x12, "Lorg.apache.lucene.search.DisiPriorityQueue;", NULL, "Lorg/apache/lucene/search/DisiPriorityQueue<Lorg/apache/lucene/search/Scorer;>;", .constantValue.asLong = 0 },
    { "cost_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "topScorers_", NULL, 0x2, "Lorg.apache.lucene.search.DisiWrapper;", NULL, "Lorg/apache/lucene/search/DisiWrapper<Lorg/apache/lucene/search/Scorer;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchDisjunctionScorer = { 2, "DisjunctionScorer", "org.apache.lucene.search", NULL, 0x400, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchDisjunctionScorer;
}

@end

void OrgApacheLuceneSearchDisjunctionScorer_initWithOrgApacheLuceneSearchWeight_withJavaUtilList_withBoolean_(OrgApacheLuceneSearchDisjunctionScorer *self, OrgApacheLuceneSearchWeight *weight, id<JavaUtilList> subScorers, jboolean needsScores) {
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, weight);
  if ([((id<JavaUtilList>) nil_chk(subScorers)) size] <= 1) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"There must be at least 2 subScorers") autorelease];
  }
  JreStrongAssignAndConsume(&self->subScorers_, new_OrgApacheLuceneSearchDisiPriorityQueue_initWithInt_([subScorers size]));
  jlong cost = 0;
  for (OrgApacheLuceneSearchScorer * __strong scorer in subScorers) {
    OrgApacheLuceneSearchDisiWrapper *w = [new_OrgApacheLuceneSearchDisiWrapper_initWithOrgApacheLuceneSearchDocIdSetIterator_(scorer) autorelease];
    cost += w->cost_;
    [self->subScorers_ addWithOrgApacheLuceneSearchDisiWrapper:w];
  }
  self->cost_ = cost;
  self->needsScores_ = needsScores;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchDisjunctionScorer)

@implementation OrgApacheLuceneSearchDisjunctionScorer_$1

- (jboolean)matches {
  OrgApacheLuceneSearchDisiWrapper *topScorers = [((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(this$0_->subScorers_)) topList];
  while (((OrgApacheLuceneSearchDisiWrapper *) nil_chk(topScorers))->twoPhaseView_ != nil && ![topScorers->twoPhaseView_ matches]) {
    topScorers = topScorers->next_;
    if (topScorers == nil) {
      return NO;
    }
  }
  if (this$0_->needsScores_) {
    OrgApacheLuceneSearchDisiWrapper *previous = topScorers;
    for (OrgApacheLuceneSearchDisiWrapper *w = ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(topScorers))->next_; w != nil; w = w->next_) {
      if (((OrgApacheLuceneSearchDisiWrapper *) nil_chk(w))->twoPhaseView_ != nil && ![w->twoPhaseView_ matches]) {
        JreStrongAssign(&((OrgApacheLuceneSearchDisiWrapper *) nil_chk(previous))->next_, w->next_);
      }
      else {
        previous = w;
      }
    }
  }
  else {
    JreStrongAssign(&((OrgApacheLuceneSearchDisiWrapper *) nil_chk(topScorers))->next_, nil);
  }
  JreStrongAssign(&this$0_->topScorers_, topScorers);
  return YES;
}

- (instancetype)initWithOrgApacheLuceneSearchDisjunctionScorer:(OrgApacheLuceneSearchDisjunctionScorer *)outer$
                     withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)arg$0 {
  OrgApacheLuceneSearchDisjunctionScorer_$1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "matches", NULL, "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneSearchDisjunctionScorer:withOrgApacheLuceneSearchDocIdSetIterator:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.search.DisjunctionScorer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchDisjunctionScorer", "asTwoPhaseIterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchDisjunctionScorer_$1 = { 2, "", "org.apache.lucene.search", "DisjunctionScorer", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneSearchDisjunctionScorer_$1;
}

@end

void OrgApacheLuceneSearchDisjunctionScorer_$1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer_$1 *self, OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, arg$0);
}

OrgApacheLuceneSearchDisjunctionScorer_$1 *new_OrgApacheLuceneSearchDisjunctionScorer_$1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0) {
  OrgApacheLuceneSearchDisjunctionScorer_$1 *self = [OrgApacheLuceneSearchDisjunctionScorer_$1 alloc];
  OrgApacheLuceneSearchDisjunctionScorer_$1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchDisjunctionScorer_$1)
