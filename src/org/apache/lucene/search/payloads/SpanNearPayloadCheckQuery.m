//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/payloads/SpanNearPayloadCheckQuery.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Collection.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/payloads/SpanNearPayloadCheckQuery.h"
#include "org/apache/lucene/search/payloads/SpanPayloadCheckQuery.h"
#include "org/apache/lucene/search/spans/SpanNearQuery.h"
#include "org/apache/lucene/search/spans/SpanQuery.h"
#include "org/apache/lucene/util/ToStringUtils.h"

@implementation OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanNearQuery:(OrgApacheLuceneSearchSpansSpanNearQuery *)match
                                         withJavaUtilCollection:(id<JavaUtilCollection>)payloadToMatch {
  OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(self, match, payloadToMatch);
  return self;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *buffer = [new_JavaLangStringBuilder_init() autorelease];
  [buffer appendWithNSString:@"spanPayCheck("];
  [buffer appendWithNSString:[((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(match_)) toStringWithNSString:field]];
  [buffer appendWithNSString:@", payloadRef: "];
  for (IOSByteArray * __strong bytes in nil_chk(payloadToMatch_)) {
    OrgApacheLuceneUtilToStringUtils_byteArrayWithJavaLangStringBuilder_withByteArray_(buffer, bytes);
    [buffer appendWithChar:';'];
  }
  [buffer appendWithNSString:@")"];
  [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [buffer description];
}

- (OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *)clone {
  OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *result = [new_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_((OrgApacheLuceneSearchSpansSpanNearQuery *) check_class_cast([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(match_)) clone], [OrgApacheLuceneSearchSpansSpanNearQuery class]), payloadToMatch_) autorelease];
  [result setBoostWithFloat:[self getBoost]];
  return result;
}

- (jboolean)isEqual:(id)o {
  if (![super isEqual:o]) {
    return false;
  }
  OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *other = (OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *) check_class_cast(o, [OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery class]);
  return [((id<JavaUtilCollection>) nil_chk(self->payloadToMatch_)) isEqual:((OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *) nil_chk(other))->payloadToMatch_];
}

- (NSUInteger)hash {
  jint h = ((jint) [super hash]);
  h = (h * 15) ^ ((jint) [((id<JavaUtilCollection>) nil_chk(payloadToMatch_)) hash]);
  return h;
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchSpansSpanNearQuery:withJavaUtilCollection:", "SpanNearPayloadCheckQuery", NULL, 0x1, NULL, NULL },
    { "toStringWithNSString:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.apache.lucene.search.payloads.SpanNearPayloadCheckQuery;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery = { 2, "SpanNearPayloadCheckQuery", "org.apache.lucene.search.payloads", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery;
}

@end

void OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *self, OrgApacheLuceneSearchSpansSpanNearQuery *match, id<JavaUtilCollection> payloadToMatch) {
  OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withJavaUtilCollection_(self, match, payloadToMatch);
}

OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *new_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(OrgApacheLuceneSearchSpansSpanNearQuery *match, id<JavaUtilCollection> payloadToMatch) {
  OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *self = [OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery alloc];
  OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(self, match, payloadToMatch);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery)
