//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/SloppyPhraseScorer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/search/ConjunctionDISI.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/PhrasePositions.h"
#include "org/apache/lucene/search/PhraseQuery.h"
#include "org/apache/lucene/search/PhraseQueue.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/SloppyPhraseScorer.h"
#include "org/apache/lucene/search/TwoPhaseIterator.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/search/similarities/Similarity.h"
#include "org/apache/lucene/util/FixedBitSet.h"

@interface OrgApacheLuceneSearchSloppyPhraseScorer () {
 @public
  OrgApacheLuceneSearchConjunctionDISI *conjunction_;
  IOSObjectArray *phrasePositions_;
  jfloat sloppyFreq_;
  OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer *docScorer_;
  jint slop_;
  jint numPostings_;
  OrgApacheLuceneSearchPhraseQueue *pq_;
  jint end_;
  jboolean hasRpts_;
  jboolean checkedRpts_;
  jboolean hasMultiTermRpts_;
  IOSObjectArray *rptGroups_;
  IOSObjectArray *rptStack_;
  jint numMatches_;
}

- (jfloat)phraseFreq;

- (jboolean)advancePPWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp;

- (jboolean)advanceRptsWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp;

- (OrgApacheLuceneSearchPhrasePositions *)lesserWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp
                                                withOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp2;

- (jint)collideWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp;

- (jboolean)initPhrasePositions OBJC_METHOD_FAMILY_NONE;

- (void)initSimple OBJC_METHOD_FAMILY_NONE;

- (jboolean)initComplex OBJC_METHOD_FAMILY_NONE;

- (void)placeFirstPositions;

- (void)fillQueue;

- (jboolean)advanceRepeatGroups;

- (jboolean)initFirstTime OBJC_METHOD_FAMILY_NONE;

- (void)sortRptGroupsWithJavaUtilArrayList:(JavaUtilArrayList *)rgs;

- (JavaUtilArrayList *)gatherRptGroupsWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)rptTerms;

- (jint)tpPosWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp;

- (JavaUtilLinkedHashMap *)repeatingTerms;

- (IOSObjectArray *)repeatingPPsWithJavaUtilHashMap:(JavaUtilHashMap *)rptTerms;

- (JavaUtilArrayList *)ppTermsBitSetsWithOrgApacheLuceneSearchPhrasePositionsArray:(IOSObjectArray *)rpp
                                                               withJavaUtilHashMap:(JavaUtilHashMap *)tord;

- (void)unionTermGroupsWithJavaUtilArrayList:(JavaUtilArrayList *)bb;

- (JavaUtilHashMap *)termGroupsWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)tord
                                   withJavaUtilArrayList:(JavaUtilArrayList *)bb;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSloppyPhraseScorer, conjunction_, OrgApacheLuceneSearchConjunctionDISI *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSloppyPhraseScorer, phrasePositions_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSloppyPhraseScorer, docScorer_, OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSloppyPhraseScorer, pq_, OrgApacheLuceneSearchPhraseQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSloppyPhraseScorer, rptGroups_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSloppyPhraseScorer, rptStack_, IOSObjectArray *)

__attribute__((unused)) static jfloat OrgApacheLuceneSearchSloppyPhraseScorer_phraseFreq(OrgApacheLuceneSearchSloppyPhraseScorer *self);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSloppyPhraseScorer_advancePPWithOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSloppyPhraseScorer_advanceRptsWithOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp);

__attribute__((unused)) static OrgApacheLuceneSearchPhrasePositions *OrgApacheLuceneSearchSloppyPhraseScorer_lesserWithOrgApacheLuceneSearchPhrasePositions_withOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp, OrgApacheLuceneSearchPhrasePositions *pp2);

__attribute__((unused)) static jint OrgApacheLuceneSearchSloppyPhraseScorer_collideWithOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSloppyPhraseScorer_initPhrasePositions(OrgApacheLuceneSearchSloppyPhraseScorer *self);

__attribute__((unused)) static void OrgApacheLuceneSearchSloppyPhraseScorer_initSimple(OrgApacheLuceneSearchSloppyPhraseScorer *self);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSloppyPhraseScorer_initComplex(OrgApacheLuceneSearchSloppyPhraseScorer *self);

__attribute__((unused)) static void OrgApacheLuceneSearchSloppyPhraseScorer_placeFirstPositions(OrgApacheLuceneSearchSloppyPhraseScorer *self);

__attribute__((unused)) static void OrgApacheLuceneSearchSloppyPhraseScorer_fillQueue(OrgApacheLuceneSearchSloppyPhraseScorer *self);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSloppyPhraseScorer_advanceRepeatGroups(OrgApacheLuceneSearchSloppyPhraseScorer *self);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSloppyPhraseScorer_initFirstTime(OrgApacheLuceneSearchSloppyPhraseScorer *self);

__attribute__((unused)) static void OrgApacheLuceneSearchSloppyPhraseScorer_sortRptGroupsWithJavaUtilArrayList_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilArrayList *rgs);

__attribute__((unused)) static JavaUtilArrayList *OrgApacheLuceneSearchSloppyPhraseScorer_gatherRptGroupsWithJavaUtilLinkedHashMap_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilLinkedHashMap *rptTerms);

__attribute__((unused)) static jint OrgApacheLuceneSearchSloppyPhraseScorer_tpPosWithOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp);

__attribute__((unused)) static JavaUtilLinkedHashMap *OrgApacheLuceneSearchSloppyPhraseScorer_repeatingTerms(OrgApacheLuceneSearchSloppyPhraseScorer *self);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSloppyPhraseScorer_repeatingPPsWithJavaUtilHashMap_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilHashMap *rptTerms);

__attribute__((unused)) static JavaUtilArrayList *OrgApacheLuceneSearchSloppyPhraseScorer_ppTermsBitSetsWithOrgApacheLuceneSearchPhrasePositionsArray_withJavaUtilHashMap_(OrgApacheLuceneSearchSloppyPhraseScorer *self, IOSObjectArray *rpp, JavaUtilHashMap *tord);

__attribute__((unused)) static void OrgApacheLuceneSearchSloppyPhraseScorer_unionTermGroupsWithJavaUtilArrayList_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilArrayList *bb);

__attribute__((unused)) static JavaUtilHashMap *OrgApacheLuceneSearchSloppyPhraseScorer_termGroupsWithJavaUtilLinkedHashMap_withJavaUtilArrayList_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilLinkedHashMap *tord, JavaUtilArrayList *bb);

@interface OrgApacheLuceneSearchSloppyPhraseScorer_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(OrgApacheLuceneSearchPhrasePositions *)pp1
               withId:(OrgApacheLuceneSearchPhrasePositions *)pp2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSloppyPhraseScorer_$1)

__attribute__((unused)) static void OrgApacheLuceneSearchSloppyPhraseScorer_$1_init(OrgApacheLuceneSearchSloppyPhraseScorer_$1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchSloppyPhraseScorer_$1 *new_OrgApacheLuceneSearchSloppyPhraseScorer_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSloppyPhraseScorer_$1)

@interface OrgApacheLuceneSearchSloppyPhraseScorer_$2 : OrgApacheLuceneSearchTwoPhaseIterator {
 @public
  OrgApacheLuceneSearchSloppyPhraseScorer *this$0_;
}

- (jboolean)matches;

- (instancetype)initWithOrgApacheLuceneSearchSloppyPhraseScorer:(OrgApacheLuceneSearchSloppyPhraseScorer *)outer$
                      withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSloppyPhraseScorer_$2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSloppyPhraseScorer_$2, this$0_, OrgApacheLuceneSearchSloppyPhraseScorer *)

__attribute__((unused)) static void OrgApacheLuceneSearchSloppyPhraseScorer_$2_initWithOrgApacheLuceneSearchSloppyPhraseScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSloppyPhraseScorer_$2 *self, OrgApacheLuceneSearchSloppyPhraseScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0);

__attribute__((unused)) static OrgApacheLuceneSearchSloppyPhraseScorer_$2 *new_OrgApacheLuceneSearchSloppyPhraseScorer_$2_initWithOrgApacheLuceneSearchSloppyPhraseScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSloppyPhraseScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSloppyPhraseScorer_$2)

@implementation OrgApacheLuceneSearchSloppyPhraseScorer

- (instancetype)initWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
withOrgApacheLuceneSearchPhraseQuery_PostingsAndFreqArray:(IOSObjectArray *)postings
                                            withInt:(jint)slop
withOrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer:(OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer *)docScorer
                                        withBoolean:(jboolean)needsScores {
  OrgApacheLuceneSearchSloppyPhraseScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchPhraseQuery_PostingsAndFreqArray_withInt_withOrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer_withBoolean_(self, weight, postings, slop, docScorer, needsScores);
  return self;
}

- (jfloat)phraseFreq {
  return OrgApacheLuceneSearchSloppyPhraseScorer_phraseFreq(self);
}

- (jboolean)advancePPWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp {
  return OrgApacheLuceneSearchSloppyPhraseScorer_advancePPWithOrgApacheLuceneSearchPhrasePositions_(self, pp);
}

- (jboolean)advanceRptsWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp {
  return OrgApacheLuceneSearchSloppyPhraseScorer_advanceRptsWithOrgApacheLuceneSearchPhrasePositions_(self, pp);
}

- (OrgApacheLuceneSearchPhrasePositions *)lesserWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp
                                                withOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp2 {
  return OrgApacheLuceneSearchSloppyPhraseScorer_lesserWithOrgApacheLuceneSearchPhrasePositions_withOrgApacheLuceneSearchPhrasePositions_(self, pp, pp2);
}

- (jint)collideWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp {
  return OrgApacheLuceneSearchSloppyPhraseScorer_collideWithOrgApacheLuceneSearchPhrasePositions_(self, pp);
}

- (jboolean)initPhrasePositions {
  return OrgApacheLuceneSearchSloppyPhraseScorer_initPhrasePositions(self);
}

- (void)initSimple {
  OrgApacheLuceneSearchSloppyPhraseScorer_initSimple(self);
}

- (jboolean)initComplex {
  return OrgApacheLuceneSearchSloppyPhraseScorer_initComplex(self);
}

- (void)placeFirstPositions {
  OrgApacheLuceneSearchSloppyPhraseScorer_placeFirstPositions(self);
}

- (void)fillQueue {
  OrgApacheLuceneSearchSloppyPhraseScorer_fillQueue(self);
}

- (jboolean)advanceRepeatGroups {
  return OrgApacheLuceneSearchSloppyPhraseScorer_advanceRepeatGroups(self);
}

- (jboolean)initFirstTime {
  return OrgApacheLuceneSearchSloppyPhraseScorer_initFirstTime(self);
}

- (void)sortRptGroupsWithJavaUtilArrayList:(JavaUtilArrayList *)rgs {
  OrgApacheLuceneSearchSloppyPhraseScorer_sortRptGroupsWithJavaUtilArrayList_(self, rgs);
}

- (JavaUtilArrayList *)gatherRptGroupsWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)rptTerms {
  return OrgApacheLuceneSearchSloppyPhraseScorer_gatherRptGroupsWithJavaUtilLinkedHashMap_(self, rptTerms);
}

- (jint)tpPosWithOrgApacheLuceneSearchPhrasePositions:(OrgApacheLuceneSearchPhrasePositions *)pp {
  return OrgApacheLuceneSearchSloppyPhraseScorer_tpPosWithOrgApacheLuceneSearchPhrasePositions_(self, pp);
}

- (JavaUtilLinkedHashMap *)repeatingTerms {
  return OrgApacheLuceneSearchSloppyPhraseScorer_repeatingTerms(self);
}

- (IOSObjectArray *)repeatingPPsWithJavaUtilHashMap:(JavaUtilHashMap *)rptTerms {
  return OrgApacheLuceneSearchSloppyPhraseScorer_repeatingPPsWithJavaUtilHashMap_(self, rptTerms);
}

- (JavaUtilArrayList *)ppTermsBitSetsWithOrgApacheLuceneSearchPhrasePositionsArray:(IOSObjectArray *)rpp
                                                               withJavaUtilHashMap:(JavaUtilHashMap *)tord {
  return OrgApacheLuceneSearchSloppyPhraseScorer_ppTermsBitSetsWithOrgApacheLuceneSearchPhrasePositionsArray_withJavaUtilHashMap_(self, rpp, tord);
}

- (void)unionTermGroupsWithJavaUtilArrayList:(JavaUtilArrayList *)bb {
  OrgApacheLuceneSearchSloppyPhraseScorer_unionTermGroupsWithJavaUtilArrayList_(self, bb);
}

- (JavaUtilHashMap *)termGroupsWithJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)tord
                                   withJavaUtilArrayList:(JavaUtilArrayList *)bb {
  return OrgApacheLuceneSearchSloppyPhraseScorer_termGroupsWithJavaUtilLinkedHashMap_withJavaUtilArrayList_(self, tord, bb);
}

- (jint)freq {
  return numMatches_;
}

- (jfloat)sloppyFreq {
  return sloppyFreq_;
}

- (jint)docID {
  return [((OrgApacheLuceneSearchConjunctionDISI *) nil_chk(conjunction_)) docID];
}

- (jint)nextDoc {
  jint doc;
  for (doc = [((OrgApacheLuceneSearchConjunctionDISI *) nil_chk(conjunction_)) nextDoc]; doc != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS; doc = [conjunction_ nextDoc]) {
    sloppyFreq_ = OrgApacheLuceneSearchSloppyPhraseScorer_phraseFreq(self);
    if (sloppyFreq_ != 0.0f) {
      break;
    }
  }
  return doc;
}

- (jfloat)score {
  return [((OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer *) nil_chk(docScorer_)) scoreWithInt:[self docID] withFloat:sloppyFreq_];
}

- (jint)advanceWithInt:(jint)target {
  JreAssert((target > [self docID]), (@"org/apache/lucene/search/SloppyPhraseScorer.java:571 condition failed: assert target > docID();"));
  jint doc;
  for (doc = [((OrgApacheLuceneSearchConjunctionDISI *) nil_chk(conjunction_)) advanceWithInt:target]; doc != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS; doc = [conjunction_ nextDoc]) {
    sloppyFreq_ = OrgApacheLuceneSearchSloppyPhraseScorer_phraseFreq(self);
    if (sloppyFreq_ != 0.0f) {
      break;
    }
  }
  return doc;
}

- (jlong)cost {
  return [((OrgApacheLuceneSearchConjunctionDISI *) nil_chk(conjunction_)) cost];
}

- (NSString *)description {
  return JreStrcat("$@C", @"scorer(", weight_, ')');
}

- (OrgApacheLuceneSearchTwoPhaseIterator *)asTwoPhaseIterator {
  return [new_OrgApacheLuceneSearchSloppyPhraseScorer_$2_initWithOrgApacheLuceneSearchSloppyPhraseScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, conjunction_) autorelease];
}

- (void)dealloc {
  RELEASE_(conjunction_);
  RELEASE_(phrasePositions_);
  RELEASE_(docScorer_);
  RELEASE_(pq_);
  RELEASE_(rptGroups_);
  RELEASE_(rptStack_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchPhraseQuery_PostingsAndFreqArray:withInt:withOrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer:withBoolean:", "SloppyPhraseScorer", NULL, 0x0, NULL, NULL },
    { "phraseFreq", NULL, "F", 0x2, "Ljava.io.IOException;", NULL },
    { "advancePPWithOrgApacheLuceneSearchPhrasePositions:", "advancePP", "Z", 0x2, "Ljava.io.IOException;", NULL },
    { "advanceRptsWithOrgApacheLuceneSearchPhrasePositions:", "advanceRpts", "Z", 0x2, "Ljava.io.IOException;", NULL },
    { "lesserWithOrgApacheLuceneSearchPhrasePositions:withOrgApacheLuceneSearchPhrasePositions:", "lesser", "Lorg.apache.lucene.search.PhrasePositions;", 0x2, NULL, NULL },
    { "collideWithOrgApacheLuceneSearchPhrasePositions:", "collide", "I", 0x2, NULL, NULL },
    { "initPhrasePositions", NULL, "Z", 0x2, "Ljava.io.IOException;", NULL },
    { "initSimple", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "initComplex", NULL, "Z", 0x2, "Ljava.io.IOException;", NULL },
    { "placeFirstPositions", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "fillQueue", NULL, "V", 0x2, NULL, NULL },
    { "advanceRepeatGroups", NULL, "Z", 0x2, "Ljava.io.IOException;", NULL },
    { "initFirstTime", NULL, "Z", 0x2, "Ljava.io.IOException;", NULL },
    { "sortRptGroupsWithJavaUtilArrayList:", "sortRptGroups", "V", 0x2, NULL, NULL },
    { "gatherRptGroupsWithJavaUtilLinkedHashMap:", "gatherRptGroups", "Ljava.util.ArrayList;", 0x2, "Ljava.io.IOException;", NULL },
    { "tpPosWithOrgApacheLuceneSearchPhrasePositions:", "tpPos", "I", 0x12, NULL, NULL },
    { "repeatingTerms", NULL, "Ljava.util.LinkedHashMap;", 0x2, NULL, NULL },
    { "repeatingPPsWithJavaUtilHashMap:", "repeatingPPs", "[Lorg.apache.lucene.search.PhrasePositions;", 0x2, NULL, NULL },
    { "ppTermsBitSetsWithOrgApacheLuceneSearchPhrasePositionsArray:withJavaUtilHashMap:", "ppTermsBitSets", "Ljava.util.ArrayList;", 0x2, NULL, NULL },
    { "unionTermGroupsWithJavaUtilArrayList:", "unionTermGroups", "V", 0x2, NULL, NULL },
    { "termGroupsWithJavaUtilLinkedHashMap:withJavaUtilArrayList:", "termGroups", "Ljava.util.HashMap;", 0x2, "Ljava.io.IOException;", NULL },
    { "freq", NULL, "I", 0x1, NULL, NULL },
    { "sloppyFreq", NULL, "F", 0x0, NULL, NULL },
    { "docID", NULL, "I", 0x1, NULL, NULL },
    { "nextDoc", NULL, "I", 0x1, "Ljava.io.IOException;", NULL },
    { "score", NULL, "F", 0x1, NULL, NULL },
    { "advanceWithInt:", "advance", "I", 0x1, "Ljava.io.IOException;", NULL },
    { "cost", NULL, "J", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "asTwoPhaseIterator", NULL, "Lorg.apache.lucene.search.TwoPhaseIterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "conjunction_", NULL, 0x12, "Lorg.apache.lucene.search.ConjunctionDISI;", NULL, NULL, .constantValue.asLong = 0 },
    { "phrasePositions_", NULL, 0x12, "[Lorg.apache.lucene.search.PhrasePositions;", NULL, NULL, .constantValue.asLong = 0 },
    { "sloppyFreq_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "docScorer_", NULL, 0x12, "Lorg.apache.lucene.search.similarities.Similarity$SimScorer;", NULL, NULL, .constantValue.asLong = 0 },
    { "slop_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "numPostings_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "pq_", NULL, 0x12, "Lorg.apache.lucene.search.PhraseQueue;", NULL, NULL, .constantValue.asLong = 0 },
    { "end_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "hasRpts_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "checkedRpts_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hasMultiTermRpts_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "rptGroups_", NULL, 0x2, "[[Lorg.apache.lucene.search.PhrasePositions;", NULL, NULL, .constantValue.asLong = 0 },
    { "rptStack_", NULL, 0x2, "[Lorg.apache.lucene.search.PhrasePositions;", NULL, NULL, .constantValue.asLong = 0 },
    { "numMatches_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "needsScores_", NULL, 0x10, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSloppyPhraseScorer = { 2, "SloppyPhraseScorer", "org.apache.lucene.search", NULL, 0x10, 30, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchSloppyPhraseScorer;
}

@end

void OrgApacheLuceneSearchSloppyPhraseScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchPhraseQuery_PostingsAndFreqArray_withInt_withOrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer_withBoolean_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchWeight *weight, IOSObjectArray *postings, jint slop, OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer *docScorer, jboolean needsScores) {
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, weight);
  JreStrongAssign(&self->docScorer_, docScorer);
  self->needsScores_ = needsScores;
  self->slop_ = slop;
  self->numPostings_ = postings == nil ? 0 : postings->size_;
  JreStrongAssignAndConsume(&self->pq_, new_OrgApacheLuceneSearchPhraseQueue_initWithInt_(((IOSObjectArray *) nil_chk(postings))->size_));
  IOSObjectArray *iterators = [IOSObjectArray arrayWithLength:postings->size_ type:OrgApacheLuceneSearchDocIdSetIterator_class_()];
  JreStrongAssignAndConsume(&self->phrasePositions_, [IOSObjectArray newArrayWithLength:postings->size_ type:OrgApacheLuceneSearchPhrasePositions_class_()]);
  for (jint i = 0; i < postings->size_; ++i) {
    IOSObjectArray_Set(iterators, i, ((OrgApacheLuceneSearchPhraseQuery_PostingsAndFreq *) nil_chk(IOSObjectArray_Get(postings, i)))->postings_);
    IOSObjectArray_SetAndConsume(self->phrasePositions_, i, new_OrgApacheLuceneSearchPhrasePositions_initWithOrgApacheLuceneIndexPostingsEnum_withInt_withInt_withOrgApacheLuceneIndexTermArray_(((OrgApacheLuceneSearchPhraseQuery_PostingsAndFreq *) nil_chk(IOSObjectArray_Get(postings, i)))->postings_, ((OrgApacheLuceneSearchPhraseQuery_PostingsAndFreq *) nil_chk(IOSObjectArray_Get(postings, i)))->position_, i, ((OrgApacheLuceneSearchPhraseQuery_PostingsAndFreq *) nil_chk(IOSObjectArray_Get(postings, i)))->terms_));
  }
  JreStrongAssign(&self->conjunction_, OrgApacheLuceneSearchConjunctionDISI_intersectWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_(iterators)));
}

OrgApacheLuceneSearchSloppyPhraseScorer *new_OrgApacheLuceneSearchSloppyPhraseScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchPhraseQuery_PostingsAndFreqArray_withInt_withOrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer_withBoolean_(OrgApacheLuceneSearchWeight *weight, IOSObjectArray *postings, jint slop, OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer *docScorer, jboolean needsScores) {
  OrgApacheLuceneSearchSloppyPhraseScorer *self = [OrgApacheLuceneSearchSloppyPhraseScorer alloc];
  OrgApacheLuceneSearchSloppyPhraseScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchPhraseQuery_PostingsAndFreqArray_withInt_withOrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer_withBoolean_(self, weight, postings, slop, docScorer, needsScores);
  return self;
}

jfloat OrgApacheLuceneSearchSloppyPhraseScorer_phraseFreq(OrgApacheLuceneSearchSloppyPhraseScorer *self) {
  if (!OrgApacheLuceneSearchSloppyPhraseScorer_initPhrasePositions(self)) {
    return 0.0f;
  }
  jfloat freq = 0.0f;
  self->numMatches_ = 0;
  OrgApacheLuceneSearchPhrasePositions *pp = [((OrgApacheLuceneSearchPhraseQueue *) nil_chk(self->pq_)) pop];
  jint matchLength = self->end_ - ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->position_;
  jint next = ((OrgApacheLuceneSearchPhrasePositions *) nil_chk([self->pq_ top]))->position_;
  while (OrgApacheLuceneSearchSloppyPhraseScorer_advancePPWithOrgApacheLuceneSearchPhrasePositions_(self, pp)) {
    if (self->hasRpts_ && !OrgApacheLuceneSearchSloppyPhraseScorer_advanceRptsWithOrgApacheLuceneSearchPhrasePositions_(self, pp)) {
      break;
    }
    if (pp->position_ > next) {
      if (matchLength <= self->slop_) {
        JrePlusAssignFloatF(&freq, [((OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer *) nil_chk(self->docScorer_)) computeSlopFactorWithInt:matchLength]);
        self->numMatches_++;
        if (!self->needsScores_) {
          return freq;
        }
      }
      [self->pq_ addWithId:pp];
      pp = [self->pq_ pop];
      next = ((OrgApacheLuceneSearchPhrasePositions *) nil_chk([self->pq_ top]))->position_;
      matchLength = self->end_ - ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->position_;
    }
    else {
      jint matchLength2 = self->end_ - pp->position_;
      if (matchLength2 < matchLength) {
        matchLength = matchLength2;
      }
    }
  }
  if (matchLength <= self->slop_) {
    JrePlusAssignFloatF(&freq, [((OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer *) nil_chk(self->docScorer_)) computeSlopFactorWithInt:matchLength]);
    self->numMatches_++;
  }
  return freq;
}

jboolean OrgApacheLuceneSearchSloppyPhraseScorer_advancePPWithOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp) {
  if (![((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp)) nextPosition]) {
    return NO;
  }
  if (pp->position_ > self->end_) {
    self->end_ = pp->position_;
  }
  return YES;
}

jboolean OrgApacheLuceneSearchSloppyPhraseScorer_advanceRptsWithOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp) {
  if (((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->rptGroup_ < 0) {
    return YES;
  }
  IOSObjectArray *rg = IOSObjectArray_Get(nil_chk(self->rptGroups_), pp->rptGroup_);
  OrgApacheLuceneUtilFixedBitSet *bits = [new_OrgApacheLuceneUtilFixedBitSet_initWithInt_(((IOSObjectArray *) nil_chk(rg))->size_) autorelease];
  jint k0 = pp->rptInd_;
  jint k;
  while ((k = OrgApacheLuceneSearchSloppyPhraseScorer_collideWithOrgApacheLuceneSearchPhrasePositions_(self, pp)) >= 0) {
    pp = OrgApacheLuceneSearchSloppyPhraseScorer_lesserWithOrgApacheLuceneSearchPhrasePositions_withOrgApacheLuceneSearchPhrasePositions_(self, pp, IOSObjectArray_Get(rg, k));
    if (!OrgApacheLuceneSearchSloppyPhraseScorer_advancePPWithOrgApacheLuceneSearchPhrasePositions_(self, pp)) {
      return NO;
    }
    if (k != k0) {
      bits = OrgApacheLuceneUtilFixedBitSet_ensureCapacityWithOrgApacheLuceneUtilFixedBitSet_withInt_(bits, k);
      [((OrgApacheLuceneUtilFixedBitSet *) nil_chk(bits)) setWithInt:k];
    }
  }
  jint n = 0;
  jint numBits = [((OrgApacheLuceneUtilFixedBitSet *) nil_chk(bits)) length];
  while ([bits cardinality] > 0) {
    OrgApacheLuceneSearchPhrasePositions *pp2 = [((OrgApacheLuceneSearchPhraseQueue *) nil_chk(self->pq_)) pop];
    IOSObjectArray_Set(nil_chk(self->rptStack_), n++, pp2);
    if (((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp2))->rptGroup_ >= 0 && pp2->rptInd_ < numBits && [bits getWithInt:pp2->rptInd_]) {
      [bits clearWithInt:pp2->rptInd_];
    }
  }
  for (jint i = n - 1; i >= 0; i--) {
    [((OrgApacheLuceneSearchPhraseQueue *) nil_chk(self->pq_)) addWithId:IOSObjectArray_Get(nil_chk(self->rptStack_), i)];
  }
  return YES;
}

OrgApacheLuceneSearchPhrasePositions *OrgApacheLuceneSearchSloppyPhraseScorer_lesserWithOrgApacheLuceneSearchPhrasePositions_withOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp, OrgApacheLuceneSearchPhrasePositions *pp2) {
  if (((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->position_ < ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp2))->position_ || (pp->position_ == pp2->position_ && pp->offset_ < pp2->offset_)) {
    return pp;
  }
  return pp2;
}

jint OrgApacheLuceneSearchSloppyPhraseScorer_collideWithOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp) {
  jint tpPos = OrgApacheLuceneSearchSloppyPhraseScorer_tpPosWithOrgApacheLuceneSearchPhrasePositions_(self, pp);
  IOSObjectArray *rg = IOSObjectArray_Get(nil_chk(self->rptGroups_), ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->rptGroup_);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(rg))->size_; i++) {
    OrgApacheLuceneSearchPhrasePositions *pp2 = IOSObjectArray_Get(rg, i);
    if (pp2 != pp && OrgApacheLuceneSearchSloppyPhraseScorer_tpPosWithOrgApacheLuceneSearchPhrasePositions_(self, pp2) == tpPos) {
      return ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp2))->rptInd_;
    }
  }
  return -1;
}

jboolean OrgApacheLuceneSearchSloppyPhraseScorer_initPhrasePositions(OrgApacheLuceneSearchSloppyPhraseScorer *self) {
  self->end_ = JavaLangInteger_MIN_VALUE;
  if (!self->checkedRpts_) {
    return OrgApacheLuceneSearchSloppyPhraseScorer_initFirstTime(self);
  }
  if (!self->hasRpts_) {
    OrgApacheLuceneSearchSloppyPhraseScorer_initSimple(self);
    return YES;
  }
  return OrgApacheLuceneSearchSloppyPhraseScorer_initComplex(self);
}

void OrgApacheLuceneSearchSloppyPhraseScorer_initSimple(OrgApacheLuceneSearchSloppyPhraseScorer *self) {
  [((OrgApacheLuceneSearchPhraseQueue *) nil_chk(self->pq_)) clear];
  {
    IOSObjectArray *a__ = self->phrasePositions_;
    OrgApacheLuceneSearchPhrasePositions * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneSearchPhrasePositions * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneSearchPhrasePositions *pp = *b__++;
      [((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp)) firstPosition];
      if (pp->position_ > self->end_) {
        self->end_ = pp->position_;
      }
      [self->pq_ addWithId:pp];
    }
  }
}

jboolean OrgApacheLuceneSearchSloppyPhraseScorer_initComplex(OrgApacheLuceneSearchSloppyPhraseScorer *self) {
  OrgApacheLuceneSearchSloppyPhraseScorer_placeFirstPositions(self);
  if (!OrgApacheLuceneSearchSloppyPhraseScorer_advanceRepeatGroups(self)) {
    return NO;
  }
  OrgApacheLuceneSearchSloppyPhraseScorer_fillQueue(self);
  return YES;
}

void OrgApacheLuceneSearchSloppyPhraseScorer_placeFirstPositions(OrgApacheLuceneSearchSloppyPhraseScorer *self) {
  {
    IOSObjectArray *a__ = self->phrasePositions_;
    OrgApacheLuceneSearchPhrasePositions * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneSearchPhrasePositions * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneSearchPhrasePositions *pp = *b__++;
      [((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp)) firstPosition];
    }
  }
}

void OrgApacheLuceneSearchSloppyPhraseScorer_fillQueue(OrgApacheLuceneSearchSloppyPhraseScorer *self) {
  [((OrgApacheLuceneSearchPhraseQueue *) nil_chk(self->pq_)) clear];
  {
    IOSObjectArray *a__ = self->phrasePositions_;
    OrgApacheLuceneSearchPhrasePositions * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneSearchPhrasePositions * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneSearchPhrasePositions *pp = *b__++;
      if (((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->position_ > self->end_) {
        self->end_ = pp->position_;
      }
      [self->pq_ addWithId:pp];
    }
  }
}

jboolean OrgApacheLuceneSearchSloppyPhraseScorer_advanceRepeatGroups(OrgApacheLuceneSearchSloppyPhraseScorer *self) {
  {
    IOSObjectArray *a__ = self->rptGroups_;
    IOSObjectArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSObjectArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSObjectArray *rg = *b__++;
      if (self->hasMultiTermRpts_) {
        jint incr;
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(rg))->size_; i += incr) {
          incr = 1;
          OrgApacheLuceneSearchPhrasePositions *pp = IOSObjectArray_Get(rg, i);
          jint k;
          while ((k = OrgApacheLuceneSearchSloppyPhraseScorer_collideWithOrgApacheLuceneSearchPhrasePositions_(self, pp)) >= 0) {
            OrgApacheLuceneSearchPhrasePositions *pp2 = OrgApacheLuceneSearchSloppyPhraseScorer_lesserWithOrgApacheLuceneSearchPhrasePositions_withOrgApacheLuceneSearchPhrasePositions_(self, pp, IOSObjectArray_Get(rg, k));
            if (!OrgApacheLuceneSearchSloppyPhraseScorer_advancePPWithOrgApacheLuceneSearchPhrasePositions_(self, pp2)) {
              return NO;
            }
            if (((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp2))->rptInd_ < i) {
              incr = 0;
              break;
            }
          }
        }
      }
      else {
        for (jint j = 1; j < ((IOSObjectArray *) nil_chk(rg))->size_; j++) {
          for (jint k = 0; k < j; k++) {
            if (![((OrgApacheLuceneSearchPhrasePositions *) nil_chk(IOSObjectArray_Get(rg, j))) nextPosition]) {
              return NO;
            }
          }
        }
      }
    }
  }
  return YES;
}

jboolean OrgApacheLuceneSearchSloppyPhraseScorer_initFirstTime(OrgApacheLuceneSearchSloppyPhraseScorer *self) {
  self->checkedRpts_ = YES;
  OrgApacheLuceneSearchSloppyPhraseScorer_placeFirstPositions(self);
  JavaUtilLinkedHashMap *rptTerms = OrgApacheLuceneSearchSloppyPhraseScorer_repeatingTerms(self);
  self->hasRpts_ = ![((JavaUtilLinkedHashMap *) nil_chk(rptTerms)) isEmpty];
  if (self->hasRpts_) {
    JreStrongAssignAndConsume(&self->rptStack_, [IOSObjectArray newArrayWithLength:self->numPostings_ type:OrgApacheLuceneSearchPhrasePositions_class_()]);
    JavaUtilArrayList *rgs = OrgApacheLuceneSearchSloppyPhraseScorer_gatherRptGroupsWithJavaUtilLinkedHashMap_(self, rptTerms);
    OrgApacheLuceneSearchSloppyPhraseScorer_sortRptGroupsWithJavaUtilArrayList_(self, rgs);
    if (!OrgApacheLuceneSearchSloppyPhraseScorer_advanceRepeatGroups(self)) {
      return NO;
    }
  }
  OrgApacheLuceneSearchSloppyPhraseScorer_fillQueue(self);
  return YES;
}

void OrgApacheLuceneSearchSloppyPhraseScorer_sortRptGroupsWithJavaUtilArrayList_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilArrayList *rgs) {
  JreStrongAssignAndConsume(&self->rptGroups_, [IOSObjectArray newArrayWithLength:[((JavaUtilArrayList *) nil_chk(rgs)) size] type:IOSClass_arrayType(OrgApacheLuceneSearchPhrasePositions_class_(), 1)]);
  id<JavaUtilComparator> cmprtr = [new_OrgApacheLuceneSearchSloppyPhraseScorer_$1_init() autorelease];
  for (jint i = 0; i < self->rptGroups_->size_; i++) {
    IOSObjectArray *rg = [((JavaUtilArrayList *) nil_chk([rgs getWithInt:i])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchPhrasePositions_class_()]];
    JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(rg, cmprtr);
    IOSObjectArray_Set(self->rptGroups_, i, rg);
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(rg))->size_; j++) {
      ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(IOSObjectArray_Get(rg, j)))->rptInd_ = j;
    }
  }
}

JavaUtilArrayList *OrgApacheLuceneSearchSloppyPhraseScorer_gatherRptGroupsWithJavaUtilLinkedHashMap_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilLinkedHashMap *rptTerms) {
  IOSObjectArray *rpp = OrgApacheLuceneSearchSloppyPhraseScorer_repeatingPPsWithJavaUtilHashMap_(self, rptTerms);
  JavaUtilArrayList *res = [new_JavaUtilArrayList_init() autorelease];
  if (!self->hasMultiTermRpts_) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(rpp))->size_; i++) {
      OrgApacheLuceneSearchPhrasePositions *pp = IOSObjectArray_Get(rpp, i);
      if (((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->rptGroup_ >= 0) continue;
      jint tpPos = OrgApacheLuceneSearchSloppyPhraseScorer_tpPosWithOrgApacheLuceneSearchPhrasePositions_(self, pp);
      for (jint j = i + 1; j < rpp->size_; j++) {
        OrgApacheLuceneSearchPhrasePositions *pp2 = IOSObjectArray_Get(rpp, j);
        if (((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp2))->rptGroup_ >= 0 || pp2->offset_ == pp->offset_ || OrgApacheLuceneSearchSloppyPhraseScorer_tpPosWithOrgApacheLuceneSearchPhrasePositions_(self, pp2) != tpPos) {
          continue;
        }
        jint g = pp->rptGroup_;
        if (g < 0) {
          g = [res size];
          pp->rptGroup_ = g;
          JavaUtilArrayList *rl = [new_JavaUtilArrayList_initWithInt_(2) autorelease];
          [rl addWithId:pp];
          [res addWithId:rl];
        }
        pp2->rptGroup_ = g;
        [((JavaUtilArrayList *) nil_chk([res getWithInt:g])) addWithId:pp2];
      }
    }
  }
  else {
    JavaUtilArrayList *tmp = [new_JavaUtilArrayList_init() autorelease];
    JavaUtilArrayList *bb = OrgApacheLuceneSearchSloppyPhraseScorer_ppTermsBitSetsWithOrgApacheLuceneSearchPhrasePositionsArray_withJavaUtilHashMap_(self, rpp, rptTerms);
    OrgApacheLuceneSearchSloppyPhraseScorer_unionTermGroupsWithJavaUtilArrayList_(self, bb);
    JavaUtilHashMap *tg = OrgApacheLuceneSearchSloppyPhraseScorer_termGroupsWithJavaUtilLinkedHashMap_withJavaUtilArrayList_(self, rptTerms, bb);
    JavaUtilHashSet *distinctGroupIDs = [new_JavaUtilHashSet_initWithJavaUtilCollection_([((JavaUtilHashMap *) nil_chk(tg)) values]) autorelease];
    for (jint i = 0; i < [distinctGroupIDs size]; i++) {
      [tmp addWithId:[new_JavaUtilHashSet_init() autorelease]];
    }
    {
      IOSObjectArray *a__ = rpp;
      OrgApacheLuceneSearchPhrasePositions * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      OrgApacheLuceneSearchPhrasePositions * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        OrgApacheLuceneSearchPhrasePositions *pp = *b__++;
        {
          IOSObjectArray *a__ = ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->terms_;
          OrgApacheLuceneIndexTerm * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
          OrgApacheLuceneIndexTerm * const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            OrgApacheLuceneIndexTerm *t = *b__++;
            if ([((JavaUtilLinkedHashMap *) nil_chk(rptTerms)) containsKeyWithId:t]) {
              jint g = [((JavaLangInteger *) nil_chk([tg getWithId:t])) intValue];
              [((JavaUtilHashSet *) nil_chk([tmp getWithInt:g])) addWithId:pp];
              JreAssert((pp->rptGroup_ == -1 || pp->rptGroup_ == g), (@"org/apache/lucene/search/SloppyPhraseScorer.java:419 condition failed: assert pp.rptGroup==-1 || pp.rptGroup==g;"));
              pp->rptGroup_ = g;
            }
          }
        }
      }
    }
    for (JavaUtilHashSet * __strong hs in tmp) {
      [res addWithId:[new_JavaUtilArrayList_initWithJavaUtilCollection_(hs) autorelease]];
    }
  }
  return res;
}

jint OrgApacheLuceneSearchSloppyPhraseScorer_tpPosWithOrgApacheLuceneSearchPhrasePositions_(OrgApacheLuceneSearchSloppyPhraseScorer *self, OrgApacheLuceneSearchPhrasePositions *pp) {
  return ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->position_ + pp->offset_;
}

JavaUtilLinkedHashMap *OrgApacheLuceneSearchSloppyPhraseScorer_repeatingTerms(OrgApacheLuceneSearchSloppyPhraseScorer *self) {
  JavaUtilLinkedHashMap *tord = [new_JavaUtilLinkedHashMap_init() autorelease];
  JavaUtilHashMap *tcnt = [new_JavaUtilHashMap_init() autorelease];
  {
    IOSObjectArray *a__ = self->phrasePositions_;
    OrgApacheLuceneSearchPhrasePositions * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneSearchPhrasePositions * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneSearchPhrasePositions *pp = *b__++;
      {
        IOSObjectArray *a__ = ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->terms_;
        OrgApacheLuceneIndexTerm * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        OrgApacheLuceneIndexTerm * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          OrgApacheLuceneIndexTerm *t = *b__++;
          JavaLangInteger *cnt0 = [tcnt getWithId:t];
          JavaLangInteger *cnt = cnt0 == nil ? [new_JavaLangInteger_initWithInt_(1) autorelease] : [new_JavaLangInteger_initWithInt_(1 + [cnt0 intValue]) autorelease];
          [tcnt putWithId:t withId:cnt];
          if ([cnt intValue] == 2) {
            [tord putWithId:t withId:JavaLangInteger_valueOfWithInt_([tord size])];
          }
        }
      }
    }
  }
  return tord;
}

IOSObjectArray *OrgApacheLuceneSearchSloppyPhraseScorer_repeatingPPsWithJavaUtilHashMap_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilHashMap *rptTerms) {
  JavaUtilArrayList *rp = [new_JavaUtilArrayList_init() autorelease];
  {
    IOSObjectArray *a__ = self->phrasePositions_;
    OrgApacheLuceneSearchPhrasePositions * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneSearchPhrasePositions * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneSearchPhrasePositions *pp = *b__++;
      {
        IOSObjectArray *a__ = ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->terms_;
        OrgApacheLuceneIndexTerm * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        OrgApacheLuceneIndexTerm * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          OrgApacheLuceneIndexTerm *t = *b__++;
          if ([((JavaUtilHashMap *) nil_chk(rptTerms)) containsKeyWithId:t]) {
            [rp addWithId:pp];
            self->hasMultiTermRpts_ |= (((IOSObjectArray *) nil_chk(pp->terms_))->size_ > 1);
            break;
          }
        }
      }
    }
  }
  return [rp toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchPhrasePositions_class_()]];
}

JavaUtilArrayList *OrgApacheLuceneSearchSloppyPhraseScorer_ppTermsBitSetsWithOrgApacheLuceneSearchPhrasePositionsArray_withJavaUtilHashMap_(OrgApacheLuceneSearchSloppyPhraseScorer *self, IOSObjectArray *rpp, JavaUtilHashMap *tord) {
  JavaUtilArrayList *bb = [new_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(rpp))->size_) autorelease];
  {
    IOSObjectArray *a__ = rpp;
    OrgApacheLuceneSearchPhrasePositions * const *b__ = a__->buffer_;
    OrgApacheLuceneSearchPhrasePositions * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneSearchPhrasePositions *pp = *b__++;
      OrgApacheLuceneUtilFixedBitSet *b = [new_OrgApacheLuceneUtilFixedBitSet_initWithInt_([((JavaUtilHashMap *) nil_chk(tord)) size]) autorelease];
      JavaLangInteger *ord;
      {
        IOSObjectArray *a__ = ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp))->terms_;
        OrgApacheLuceneIndexTerm * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        OrgApacheLuceneIndexTerm * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          OrgApacheLuceneIndexTerm *t = *b__++;
          if ((ord = [tord getWithId:t]) != nil) {
            [b setWithInt:[((JavaLangInteger *) nil_chk(ord)) intValue]];
          }
        }
      }
      [bb addWithId:b];
    }
  }
  return bb;
}

void OrgApacheLuceneSearchSloppyPhraseScorer_unionTermGroupsWithJavaUtilArrayList_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilArrayList *bb) {
  jint incr;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(bb)) size] - 1; i += incr) {
    incr = 1;
    jint j = i + 1;
    while (j < [bb size]) {
      if ([((OrgApacheLuceneUtilFixedBitSet *) nil_chk([bb getWithInt:i])) intersectsWithOrgApacheLuceneUtilFixedBitSet:[bb getWithInt:j]]) {
        [((OrgApacheLuceneUtilFixedBitSet *) nil_chk([bb getWithInt:i])) or__WithOrgApacheLuceneUtilFixedBitSet:[bb getWithInt:j]];
        [bb removeWithInt:j];
        incr = 0;
      }
      else {
        ++j;
      }
    }
  }
}

JavaUtilHashMap *OrgApacheLuceneSearchSloppyPhraseScorer_termGroupsWithJavaUtilLinkedHashMap_withJavaUtilArrayList_(OrgApacheLuceneSearchSloppyPhraseScorer *self, JavaUtilLinkedHashMap *tord, JavaUtilArrayList *bb) {
  JavaUtilHashMap *tg = [new_JavaUtilHashMap_init() autorelease];
  IOSObjectArray *t = [((id<JavaUtilSet>) nil_chk([((JavaUtilLinkedHashMap *) nil_chk(tord)) keySet])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneIndexTerm_class_()]];
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(bb)) size]; i++) {
    OrgApacheLuceneUtilFixedBitSet *bits = [bb getWithInt:i];
    for (jint ord = [((OrgApacheLuceneUtilFixedBitSet *) nil_chk(bits)) nextSetBitWithInt:0]; ord != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS; ord = ord + 1 >= [bits length] ? OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS : [bits nextSetBitWithInt:ord + 1]) {
      [tg putWithId:IOSObjectArray_Get(nil_chk(t), ord) withId:JavaLangInteger_valueOfWithInt_(i)];
    }
  }
  return tg;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSloppyPhraseScorer)

@implementation OrgApacheLuceneSearchSloppyPhraseScorer_$1

- (jint)compareWithId:(OrgApacheLuceneSearchPhrasePositions *)pp1
               withId:(OrgApacheLuceneSearchPhrasePositions *)pp2 {
  return ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp1))->offset_ - ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp2))->offset_;
}

- (instancetype)init {
  OrgApacheLuceneSearchSloppyPhraseScorer_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchSloppyPhraseScorer", "sortRptGroupsWithJavaUtilArrayList:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSloppyPhraseScorer_$1 = { 2, "", "org.apache.lucene.search", "SloppyPhraseScorer", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/search/PhrasePositions;>;" };
  return &_OrgApacheLuceneSearchSloppyPhraseScorer_$1;
}

@end

void OrgApacheLuceneSearchSloppyPhraseScorer_$1_init(OrgApacheLuceneSearchSloppyPhraseScorer_$1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchSloppyPhraseScorer_$1 *new_OrgApacheLuceneSearchSloppyPhraseScorer_$1_init() {
  OrgApacheLuceneSearchSloppyPhraseScorer_$1 *self = [OrgApacheLuceneSearchSloppyPhraseScorer_$1 alloc];
  OrgApacheLuceneSearchSloppyPhraseScorer_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSloppyPhraseScorer_$1)

@implementation OrgApacheLuceneSearchSloppyPhraseScorer_$2

- (jboolean)matches {
  this$0_->sloppyFreq_ = OrgApacheLuceneSearchSloppyPhraseScorer_phraseFreq(this$0_);
  return this$0_->sloppyFreq_ != 0.0f;
}

- (instancetype)initWithOrgApacheLuceneSearchSloppyPhraseScorer:(OrgApacheLuceneSearchSloppyPhraseScorer *)outer$
                      withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)arg$0 {
  OrgApacheLuceneSearchSloppyPhraseScorer_$2_initWithOrgApacheLuceneSearchSloppyPhraseScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "matches", NULL, "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneSearchSloppyPhraseScorer:withOrgApacheLuceneSearchDocIdSetIterator:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.search.SloppyPhraseScorer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneSearchSloppyPhraseScorer", "asTwoPhaseIterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSloppyPhraseScorer_$2 = { 2, "", "org.apache.lucene.search", "SloppyPhraseScorer", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneSearchSloppyPhraseScorer_$2;
}

@end

void OrgApacheLuceneSearchSloppyPhraseScorer_$2_initWithOrgApacheLuceneSearchSloppyPhraseScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSloppyPhraseScorer_$2 *self, OrgApacheLuceneSearchSloppyPhraseScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, arg$0);
}

OrgApacheLuceneSearchSloppyPhraseScorer_$2 *new_OrgApacheLuceneSearchSloppyPhraseScorer_$2_initWithOrgApacheLuceneSearchSloppyPhraseScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSloppyPhraseScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *arg$0) {
  OrgApacheLuceneSearchSloppyPhraseScorer_$2 *self = [OrgApacheLuceneSearchSloppyPhraseScorer_$2 alloc];
  OrgApacheLuceneSearchSloppyPhraseScorer_$2_initWithOrgApacheLuceneSearchSloppyPhraseScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSloppyPhraseScorer_$2)
