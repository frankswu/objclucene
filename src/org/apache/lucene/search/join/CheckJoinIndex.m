//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./join/src/java/org/apache/lucene/search/join/CheckJoinIndex.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/join/BitSetProducer.h"
#include "org/apache/lucene/search/join/CheckJoinIndex.h"
#include "org/apache/lucene/util/BitSet.h"
#include "org/apache/lucene/util/BitSetIterator.h"
#include "org/apache/lucene/util/Bits.h"

@interface OrgApacheLuceneSearchJoinCheckJoinIndex ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgApacheLuceneSearchJoinCheckJoinIndex_init(OrgApacheLuceneSearchJoinCheckJoinIndex *self);

__attribute__((unused)) static OrgApacheLuceneSearchJoinCheckJoinIndex *new_OrgApacheLuceneSearchJoinCheckJoinIndex_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchJoinCheckJoinIndex *create_OrgApacheLuceneSearchJoinCheckJoinIndex_init();

@implementation OrgApacheLuceneSearchJoinCheckJoinIndex

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchJoinCheckJoinIndex_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)checkWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
     withOrgApacheLuceneSearchJoinBitSetProducer:(id<OrgApacheLuceneSearchJoinBitSetProducer>)parentsFilter {
  OrgApacheLuceneSearchJoinCheckJoinIndex_checkWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchJoinBitSetProducer_(reader, parentsFilter);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CheckJoinIndex", NULL, 0x2, NULL, NULL },
    { "checkWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchJoinBitSetProducer:", "check", "V", 0x9, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinCheckJoinIndex = { 2, "CheckJoinIndex", "org.apache.lucene.search.join", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneSearchJoinCheckJoinIndex;
}

@end

void OrgApacheLuceneSearchJoinCheckJoinIndex_init(OrgApacheLuceneSearchJoinCheckJoinIndex *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchJoinCheckJoinIndex *new_OrgApacheLuceneSearchJoinCheckJoinIndex_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinCheckJoinIndex, init)
}

OrgApacheLuceneSearchJoinCheckJoinIndex *create_OrgApacheLuceneSearchJoinCheckJoinIndex_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinCheckJoinIndex, init)
}

void OrgApacheLuceneSearchJoinCheckJoinIndex_checkWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneIndexIndexReader *reader, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter) {
  OrgApacheLuceneSearchJoinCheckJoinIndex_initialize();
  for (OrgApacheLuceneIndexLeafReaderContext * __strong context in nil_chk([((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) leaves])) {
    if ([((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) maxDoc] == 0) {
      continue;
    }
    OrgApacheLuceneUtilBitSet *parents = [((id<OrgApacheLuceneSearchJoinBitSetProducer>) nil_chk(parentsFilter)) getBitSetWithOrgApacheLuceneIndexLeafReaderContext:context];
    if (parents == nil || [parents cardinality] == 0) {
      @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$", @"Every segment should have at least one parent, but ", [context reader], @" does not have any"));
    }
    if ([parents getWithInt:[((OrgApacheLuceneIndexLeafReader *) nil_chk([context reader])) maxDoc] - 1] == false) {
      @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$", @"The last document of a segment must always be a parent, but ", [context reader], @" has a child as a last doc"));
    }
    id<OrgApacheLuceneUtilBits> liveDocs = [((OrgApacheLuceneIndexLeafReader *) nil_chk([context reader])) getLiveDocs];
    if (liveDocs != nil) {
      jint prevParentDoc = -1;
      OrgApacheLuceneSearchDocIdSetIterator *it = create_OrgApacheLuceneUtilBitSetIterator_initWithOrgApacheLuceneUtilBitSet_withLong_(parents, 0LL);
      for (jint parentDoc = [it nextDoc]; parentDoc != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS; parentDoc = [it nextDoc]) {
        jboolean parentIsLive = [liveDocs getWithInt:parentDoc];
        for (jint child = prevParentDoc + 1; child != parentDoc; child++) {
          jboolean childIsLive = [liveDocs getWithInt:child];
          if (parentIsLive != childIsLive) {
            if (childIsLive) {
              @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$@$I", @"Parent doc ", parentDoc, @" of segment ", [context reader], @" is live but has a deleted child document ", child));
            }
            else {
              @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$@$I", @"Parent doc ", parentDoc, @" of segment ", [context reader], @" is deleted but has a live child document ", child));
            }
          }
        }
        prevParentDoc = parentDoc;
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinCheckJoinIndex)
