//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/document/FieldType.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/document/FieldType.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/util/NumericUtils.h"

@interface OrgApacheLuceneDocumentFieldType () {
 @public
  jboolean stored_;
  jboolean tokenized_;
  jboolean storeTermVectors_;
  jboolean storeTermVectorOffsets_;
  jboolean storeTermVectorPositions_;
  jboolean storeTermVectorPayloads_;
  jboolean omitNorms_;
  OrgApacheLuceneIndexIndexOptionsEnum *indexOptions_;
  OrgApacheLuceneDocumentFieldType_NumericTypeEnum *numericType_;
  jboolean frozen_;
  jint numericPrecisionStep_;
  OrgApacheLuceneIndexDocValuesTypeEnum *docValuesType_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneDocumentFieldType, indexOptions_, OrgApacheLuceneIndexIndexOptionsEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneDocumentFieldType, numericType_, OrgApacheLuceneDocumentFieldType_NumericTypeEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneDocumentFieldType, docValuesType_, OrgApacheLuceneIndexDocValuesTypeEnum *)

__attribute__((unused)) static void OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(OrgApacheLuceneDocumentFieldType_NumericTypeEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgApacheLuceneDocumentFieldType_NumericTypeEnum *new_OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgApacheLuceneDocumentFieldType

- (instancetype)initWithOrgApacheLuceneDocumentFieldType:(OrgApacheLuceneDocumentFieldType *)ref {
  OrgApacheLuceneDocumentFieldType_initWithOrgApacheLuceneDocumentFieldType_(self, ref);
  return self;
}

- (instancetype)init {
  OrgApacheLuceneDocumentFieldType_init(self);
  return self;
}

- (void)checkIfFrozen {
  if (frozen_) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"this FieldType is already frozen and cannot be changed") autorelease];
  }
}

- (void)freeze {
  self->frozen_ = YES;
}

- (jboolean)stored {
  return self->stored_;
}

- (void)setStoredWithBoolean:(jboolean)value {
  [self checkIfFrozen];
  self->stored_ = value;
}

- (jboolean)tokenized {
  return self->tokenized_;
}

- (void)setTokenizedWithBoolean:(jboolean)value {
  [self checkIfFrozen];
  self->tokenized_ = value;
}

- (jboolean)storeTermVectors {
  return self->storeTermVectors_;
}

- (void)setStoreTermVectorsWithBoolean:(jboolean)value {
  [self checkIfFrozen];
  self->storeTermVectors_ = value;
}

- (jboolean)storeTermVectorOffsets {
  return self->storeTermVectorOffsets_;
}

- (void)setStoreTermVectorOffsetsWithBoolean:(jboolean)value {
  [self checkIfFrozen];
  self->storeTermVectorOffsets_ = value;
}

- (jboolean)storeTermVectorPositions {
  return self->storeTermVectorPositions_;
}

- (void)setStoreTermVectorPositionsWithBoolean:(jboolean)value {
  [self checkIfFrozen];
  self->storeTermVectorPositions_ = value;
}

- (jboolean)storeTermVectorPayloads {
  return self->storeTermVectorPayloads_;
}

- (void)setStoreTermVectorPayloadsWithBoolean:(jboolean)value {
  [self checkIfFrozen];
  self->storeTermVectorPayloads_ = value;
}

- (jboolean)omitNorms {
  return self->omitNorms_;
}

- (void)setOmitNormsWithBoolean:(jboolean)value {
  [self checkIfFrozen];
  self->omitNorms_ = value;
}

- (OrgApacheLuceneIndexIndexOptionsEnum *)indexOptions {
  return self->indexOptions_;
}

- (void)setIndexOptionsWithOrgApacheLuceneIndexIndexOptionsEnum:(OrgApacheLuceneIndexIndexOptionsEnum *)value {
  [self checkIfFrozen];
  if (value == nil) {
    @throw [new_JavaLangNullPointerException_initWithNSString_(@"IndexOptions cannot be null") autorelease];
  }
  JreStrongAssign(&self->indexOptions_, value);
}

- (void)setNumericTypeWithOrgApacheLuceneDocumentFieldType_NumericTypeEnum:(OrgApacheLuceneDocumentFieldType_NumericTypeEnum *)type {
  [self checkIfFrozen];
  JreStrongAssign(&numericType_, type);
}

- (OrgApacheLuceneDocumentFieldType_NumericTypeEnum *)numericType {
  return numericType_;
}

- (void)setNumericPrecisionStepWithInt:(jint)precisionStep {
  [self checkIfFrozen];
  if (precisionStep < 1) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$IC", @"precisionStep must be >= 1 (got ", precisionStep, ')')) autorelease];
  }
  self->numericPrecisionStep_ = precisionStep;
}

- (jint)numericPrecisionStep {
  return numericPrecisionStep_;
}

- (NSString *)description {
  JavaLangStringBuilder *result = [new_JavaLangStringBuilder_init() autorelease];
  if ([self stored]) {
    [result appendWithNSString:@"stored"];
  }
  if (indexOptions_ != JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, NONE)) {
    if ([result length] > 0) [result appendWithNSString:@","];
    [result appendWithNSString:@"indexed"];
    if ([self tokenized]) {
      [result appendWithNSString:@",tokenized"];
    }
    if ([self storeTermVectors]) {
      [result appendWithNSString:@",termVector"];
    }
    if ([self storeTermVectorOffsets]) {
      [result appendWithNSString:@",termVectorOffsets"];
    }
    if ([self storeTermVectorPositions]) {
      [result appendWithNSString:@",termVectorPosition"];
    }
    if ([self storeTermVectorPayloads]) {
      [result appendWithNSString:@",termVectorPayloads"];
    }
    if ([self omitNorms]) {
      [result appendWithNSString:@",omitNorms"];
    }
    if (indexOptions_ != JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, DOCS_AND_FREQS_AND_POSITIONS)) {
      [result appendWithNSString:@",indexOptions="];
      [result appendWithId:indexOptions_];
    }
    if (numericType_ != nil) {
      [result appendWithNSString:@",numericType="];
      [result appendWithId:numericType_];
      [result appendWithNSString:@",numericPrecisionStep="];
      [result appendWithInt:numericPrecisionStep_];
    }
  }
  if (docValuesType_ != JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, NONE)) {
    if ([result length] > 0) {
      [result appendWithNSString:@","];
    }
    [result appendWithNSString:@"docValuesType="];
    [result appendWithId:docValuesType_];
  }
  return [result description];
}

- (OrgApacheLuceneIndexDocValuesTypeEnum *)docValuesType {
  return docValuesType_;
}

- (void)setDocValuesTypeWithOrgApacheLuceneIndexDocValuesTypeEnum:(OrgApacheLuceneIndexDocValuesTypeEnum *)type {
  [self checkIfFrozen];
  if (type == nil) {
    @throw [new_JavaLangNullPointerException_initWithNSString_(@"DocValuesType cannot be null") autorelease];
  }
  JreStrongAssign(&docValuesType_, type);
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + ((docValuesType_ == nil) ? 0 : ((jint) [docValuesType_ hash]));
  result = prime * result + ((jint) [((OrgApacheLuceneIndexIndexOptionsEnum *) nil_chk(indexOptions_)) hash]);
  result = prime * result + numericPrecisionStep_;
  result = prime * result + ((numericType_ == nil) ? 0 : ((jint) [numericType_ hash]));
  result = prime * result + (omitNorms_ ? 1231 : 1237);
  result = prime * result + (storeTermVectorOffsets_ ? 1231 : 1237);
  result = prime * result + (storeTermVectorPayloads_ ? 1231 : 1237);
  result = prime * result + (storeTermVectorPositions_ ? 1231 : 1237);
  result = prime * result + (storeTermVectors_ ? 1231 : 1237);
  result = prime * result + (stored_ ? 1231 : 1237);
  result = prime * result + (tokenized_ ? 1231 : 1237);
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return YES;
  if (obj == nil) return NO;
  if ([self getClass] != [nil_chk(obj) getClass]) return NO;
  OrgApacheLuceneDocumentFieldType *other = (OrgApacheLuceneDocumentFieldType *) check_class_cast(obj, [OrgApacheLuceneDocumentFieldType class]);
  if (docValuesType_ != other->docValuesType_) return NO;
  if (indexOptions_ != other->indexOptions_) return NO;
  if (numericPrecisionStep_ != other->numericPrecisionStep_) return NO;
  if (numericType_ != other->numericType_) return NO;
  if (omitNorms_ != other->omitNorms_) return NO;
  if (storeTermVectorOffsets_ != other->storeTermVectorOffsets_) return NO;
  if (storeTermVectorPayloads_ != other->storeTermVectorPayloads_) return NO;
  if (storeTermVectorPositions_ != other->storeTermVectorPositions_) return NO;
  if (storeTermVectors_ != other->storeTermVectors_) return NO;
  if (stored_ != other->stored_) return NO;
  if (tokenized_ != other->tokenized_) return NO;
  return YES;
}

- (void)dealloc {
  RELEASE_(indexOptions_);
  RELEASE_(numericType_);
  RELEASE_(docValuesType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneDocumentFieldType:", "FieldType", NULL, 0x1, NULL, NULL },
    { "init", "FieldType", NULL, 0x1, NULL, NULL },
    { "checkIfFrozen", NULL, "V", 0x4, NULL, NULL },
    { "freeze", NULL, "V", 0x1, NULL, NULL },
    { "stored", NULL, "Z", 0x1, NULL, NULL },
    { "setStoredWithBoolean:", "setStored", "V", 0x1, NULL, NULL },
    { "tokenized", NULL, "Z", 0x1, NULL, NULL },
    { "setTokenizedWithBoolean:", "setTokenized", "V", 0x1, NULL, NULL },
    { "storeTermVectors", NULL, "Z", 0x1, NULL, NULL },
    { "setStoreTermVectorsWithBoolean:", "setStoreTermVectors", "V", 0x1, NULL, NULL },
    { "storeTermVectorOffsets", NULL, "Z", 0x1, NULL, NULL },
    { "setStoreTermVectorOffsetsWithBoolean:", "setStoreTermVectorOffsets", "V", 0x1, NULL, NULL },
    { "storeTermVectorPositions", NULL, "Z", 0x1, NULL, NULL },
    { "setStoreTermVectorPositionsWithBoolean:", "setStoreTermVectorPositions", "V", 0x1, NULL, NULL },
    { "storeTermVectorPayloads", NULL, "Z", 0x1, NULL, NULL },
    { "setStoreTermVectorPayloadsWithBoolean:", "setStoreTermVectorPayloads", "V", 0x1, NULL, NULL },
    { "omitNorms", NULL, "Z", 0x1, NULL, NULL },
    { "setOmitNormsWithBoolean:", "setOmitNorms", "V", 0x1, NULL, NULL },
    { "indexOptions", NULL, "Lorg.apache.lucene.index.IndexOptions;", 0x1, NULL, NULL },
    { "setIndexOptionsWithOrgApacheLuceneIndexIndexOptionsEnum:", "setIndexOptions", "V", 0x1, NULL, NULL },
    { "setNumericTypeWithOrgApacheLuceneDocumentFieldType_NumericTypeEnum:", "setNumericType", "V", 0x1, NULL, NULL },
    { "numericType", NULL, "Lorg.apache.lucene.document.FieldType$NumericType;", 0x1, NULL, NULL },
    { "setNumericPrecisionStepWithInt:", "setNumericPrecisionStep", "V", 0x1, NULL, NULL },
    { "numericPrecisionStep", NULL, "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "docValuesType", NULL, "Lorg.apache.lucene.index.DocValuesType;", 0x1, NULL, NULL },
    { "setDocValuesTypeWithOrgApacheLuceneIndexDocValuesTypeEnum:", "setDocValuesType", "V", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "stored_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "tokenized_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "storeTermVectors_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "storeTermVectorOffsets_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "storeTermVectorPositions_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "storeTermVectorPayloads_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "omitNorms_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "indexOptions_", NULL, 0x2, "Lorg.apache.lucene.index.IndexOptions;", NULL, NULL, .constantValue.asLong = 0 },
    { "numericType_", NULL, 0x2, "Lorg.apache.lucene.document.FieldType$NumericType;", NULL, NULL, .constantValue.asLong = 0 },
    { "frozen_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "numericPrecisionStep_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "docValuesType_", NULL, 0x2, "Lorg.apache.lucene.index.DocValuesType;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.document.FieldType$NumericType;"};
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentFieldType = { 2, "FieldType", "org.apache.lucene.document", NULL, 0x1, 29, methods, 12, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneDocumentFieldType;
}

@end

void OrgApacheLuceneDocumentFieldType_initWithOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneDocumentFieldType *self, OrgApacheLuceneDocumentFieldType *ref) {
  NSObject_init(self);
  self->tokenized_ = YES;
  JreStrongAssign(&self->indexOptions_, JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, NONE));
  self->numericPrecisionStep_ = OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT;
  JreStrongAssign(&self->docValuesType_, JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, NONE));
  self->stored_ = [((OrgApacheLuceneDocumentFieldType *) nil_chk(ref)) stored];
  self->tokenized_ = [ref tokenized];
  self->storeTermVectors_ = [ref storeTermVectors];
  self->storeTermVectorOffsets_ = [ref storeTermVectorOffsets];
  self->storeTermVectorPositions_ = [ref storeTermVectorPositions];
  self->storeTermVectorPayloads_ = [ref storeTermVectorPayloads];
  self->omitNorms_ = [ref omitNorms];
  JreStrongAssign(&self->indexOptions_, [ref indexOptions]);
  JreStrongAssign(&self->numericType_, [ref numericType]);
  self->numericPrecisionStep_ = [ref numericPrecisionStep];
  JreStrongAssign(&self->docValuesType_, [ref docValuesType]);
}

OrgApacheLuceneDocumentFieldType *new_OrgApacheLuceneDocumentFieldType_initWithOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneDocumentFieldType *ref) {
  OrgApacheLuceneDocumentFieldType *self = [OrgApacheLuceneDocumentFieldType alloc];
  OrgApacheLuceneDocumentFieldType_initWithOrgApacheLuceneDocumentFieldType_(self, ref);
  return self;
}

void OrgApacheLuceneDocumentFieldType_init(OrgApacheLuceneDocumentFieldType *self) {
  NSObject_init(self);
  self->tokenized_ = YES;
  JreStrongAssign(&self->indexOptions_, JreLoadStatic(OrgApacheLuceneIndexIndexOptionsEnum, NONE));
  self->numericPrecisionStep_ = OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT;
  JreStrongAssign(&self->docValuesType_, JreLoadStatic(OrgApacheLuceneIndexDocValuesTypeEnum, NONE));
}

OrgApacheLuceneDocumentFieldType *new_OrgApacheLuceneDocumentFieldType_init() {
  OrgApacheLuceneDocumentFieldType *self = [OrgApacheLuceneDocumentFieldType alloc];
  OrgApacheLuceneDocumentFieldType_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentFieldType)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneDocumentFieldType_NumericTypeEnum)

OrgApacheLuceneDocumentFieldType_NumericTypeEnum *OrgApacheLuceneDocumentFieldType_NumericTypeEnum_values_[4];

@implementation OrgApacheLuceneDocumentFieldType_NumericTypeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgApacheLuceneDocumentFieldType_NumericTypeEnum_values() {
  OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneDocumentFieldType_NumericTypeEnum_values_ count:4 type:OrgApacheLuceneDocumentFieldType_NumericTypeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneDocumentFieldType_NumericTypeEnum_values();
}

+ (OrgApacheLuceneDocumentFieldType_NumericTypeEnum *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneDocumentFieldType_NumericTypeEnum_valueOfWithNSString_(name);
}

OrgApacheLuceneDocumentFieldType_NumericTypeEnum *OrgApacheLuceneDocumentFieldType_NumericTypeEnum_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initialize();
  for (int i = 0; i < 4; i++) {
    OrgApacheLuceneDocumentFieldType_NumericTypeEnum *e = OrgApacheLuceneDocumentFieldType_NumericTypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneDocumentFieldType_NumericTypeEnum class]) {
    OrgApacheLuceneDocumentFieldType_NumericTypeEnum_INT = new_OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(@"INT", 0);
    OrgApacheLuceneDocumentFieldType_NumericTypeEnum_LONG = new_OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(@"LONG", 1);
    OrgApacheLuceneDocumentFieldType_NumericTypeEnum_FLOAT = new_OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(@"FLOAT", 2);
    OrgApacheLuceneDocumentFieldType_NumericTypeEnum_DOUBLE = new_OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(@"DOUBLE", 3);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneDocumentFieldType_NumericTypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "INT", "INT", 0x4019, "Lorg.apache.lucene.document.FieldType$NumericType;", &OrgApacheLuceneDocumentFieldType_NumericTypeEnum_INT, NULL, .constantValue.asLong = 0 },
    { "LONG", "LONG", 0x4019, "Lorg.apache.lucene.document.FieldType$NumericType;", &OrgApacheLuceneDocumentFieldType_NumericTypeEnum_LONG, NULL, .constantValue.asLong = 0 },
    { "FLOAT", "FLOAT", 0x4019, "Lorg.apache.lucene.document.FieldType$NumericType;", &OrgApacheLuceneDocumentFieldType_NumericTypeEnum_FLOAT, NULL, .constantValue.asLong = 0 },
    { "DOUBLE", "DOUBLE", 0x4019, "Lorg.apache.lucene.document.FieldType$NumericType;", &OrgApacheLuceneDocumentFieldType_NumericTypeEnum_DOUBLE, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.document.FieldType$NumericType;"};
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentFieldType_NumericTypeEnum = { 2, "NumericType", "org.apache.lucene.document", "FieldType", 0x4019, 0, NULL, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/apache/lucene/document/FieldType$NumericType;>;" };
  return &_OrgApacheLuceneDocumentFieldType_NumericTypeEnum;
}

@end

void OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(OrgApacheLuceneDocumentFieldType_NumericTypeEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneDocumentFieldType_NumericTypeEnum *new_OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentFieldType_NumericTypeEnum *self = [OrgApacheLuceneDocumentFieldType_NumericTypeEnum alloc];
  OrgApacheLuceneDocumentFieldType_NumericTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentFieldType_NumericTypeEnum)
