//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/TermsQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexReaderContext.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/PrefixCodedTerms.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermContext.h"
#include "org/apache/lucene/index/TermState.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/queries/TermsQuery.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/BulkScorer.h"
#include "org/apache/lucene/search/ConstantScoreQuery.h"
#include "org/apache/lucene/search/ConstantScoreScorer.h"
#include "org/apache/lucene/search/ConstantScoreWeight.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/TermQuery.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/DocIdSetBuilder.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/ToStringUtils.h"
#include "org/lukhnos/portmobile/util/Objects.h"

@interface OrgApacheLuceneQueriesTermsQuery () {
 @public
  OrgApacheLuceneIndexPrefixCodedTerms *termData_;
  jint termDataHashCode_;
}

+ (IOSObjectArray *)toTermArrayWithNSString:(NSString *)field
                           withJavaUtilList:(id<JavaUtilList>)termBytes;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesTermsQuery, termData_, OrgApacheLuceneIndexPrefixCodedTerms *)

static jlong OrgApacheLuceneQueriesTermsQuery_BASE_RAM_BYTES_USED_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheLuceneQueriesTermsQuery, BASE_RAM_BYTES_USED_, jlong)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneQueriesTermsQuery_toTermArrayWithNSString_withJavaUtilList_(NSString *field, id<JavaUtilList> termBytes);

@interface OrgApacheLuceneQueriesTermsQuery_TermAndState : NSObject {
 @public
  NSString *field_;
  OrgApacheLuceneIndexTermsEnum *termsEnum_;
  OrgApacheLuceneUtilBytesRef *term_;
  OrgApacheLuceneIndexTermState *state_;
  jint docFreq_;
  jlong totalTermFreq_;
}

- (instancetype)initWithNSString:(NSString *)field
withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesTermsQuery_TermAndState)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesTermsQuery_TermAndState, field_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesTermsQuery_TermAndState, termsEnum_, OrgApacheLuceneIndexTermsEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesTermsQuery_TermAndState, term_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesTermsQuery_TermAndState, state_, OrgApacheLuceneIndexTermState *)

__attribute__((unused)) static void OrgApacheLuceneQueriesTermsQuery_TermAndState_initWithNSString_withOrgApacheLuceneIndexTermsEnum_(OrgApacheLuceneQueriesTermsQuery_TermAndState *self, NSString *field, OrgApacheLuceneIndexTermsEnum *termsEnum);

__attribute__((unused)) static OrgApacheLuceneQueriesTermsQuery_TermAndState *new_OrgApacheLuceneQueriesTermsQuery_TermAndState_initWithNSString_withOrgApacheLuceneIndexTermsEnum_(NSString *field, OrgApacheLuceneIndexTermsEnum *termsEnum) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesTermsQuery_TermAndState)

@interface OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet : NSObject {
 @public
  OrgApacheLuceneSearchWeight *weight_;
  OrgApacheLuceneSearchDocIdSet *set_;
}

- (instancetype)initWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight;

- (instancetype)initWithOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)bitset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet, weight_, OrgApacheLuceneSearchWeight *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet, set_, OrgApacheLuceneSearchDocIdSet *)

__attribute__((unused)) static void OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchWeight_(OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *self, OrgApacheLuceneSearchWeight *weight);

__attribute__((unused)) static OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *new_OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchWeight_(OrgApacheLuceneSearchWeight *weight) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *self, OrgApacheLuceneSearchDocIdSet *bitset);

__attribute__((unused)) static OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *new_OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneSearchDocIdSet *bitset) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet)

@interface OrgApacheLuceneQueriesTermsQuery_$1 : OrgApacheLuceneSearchConstantScoreWeight {
 @public
  OrgApacheLuceneQueriesTermsQuery *this$0_;
  OrgApacheLuceneSearchIndexSearcher *val$searcher_;
  jboolean val$needsScores_;
}

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *)rewriteWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set;

- (OrgApacheLuceneSearchBulkScorer *)bulkScorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

- (instancetype)initWithOrgApacheLuceneQueriesTermsQuery:(OrgApacheLuceneQueriesTermsQuery *)outer$
                  withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)capture$0
                                             withBoolean:(jboolean)capture$1
                          withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesTermsQuery_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesTermsQuery_$1, this$0_, OrgApacheLuceneQueriesTermsQuery *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesTermsQuery_$1, val$searcher_, OrgApacheLuceneSearchIndexSearcher *)

__attribute__((unused)) static OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *OrgApacheLuceneQueriesTermsQuery_$1_rewriteWithOrgApacheLuceneIndexLeafReaderContext_(OrgApacheLuceneQueriesTermsQuery_$1 *self, OrgApacheLuceneIndexLeafReaderContext *context);

__attribute__((unused)) static OrgApacheLuceneSearchScorer *OrgApacheLuceneQueriesTermsQuery_$1_scorerWithOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneQueriesTermsQuery_$1 *self, OrgApacheLuceneSearchDocIdSet *set);

__attribute__((unused)) static void OrgApacheLuceneQueriesTermsQuery_$1_initWithOrgApacheLuceneQueriesTermsQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneQueriesTermsQuery_$1 *self, OrgApacheLuceneQueriesTermsQuery *outer$, OrgApacheLuceneSearchIndexSearcher *capture$0, jboolean capture$1, OrgApacheLuceneSearchQuery *arg$0);

__attribute__((unused)) static OrgApacheLuceneQueriesTermsQuery_$1 *new_OrgApacheLuceneQueriesTermsQuery_$1_initWithOrgApacheLuceneQueriesTermsQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneQueriesTermsQuery *outer$, OrgApacheLuceneSearchIndexSearcher *capture$0, jboolean capture$1, OrgApacheLuceneSearchQuery *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesTermsQuery_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneQueriesTermsQuery)

@implementation OrgApacheLuceneQueriesTermsQuery

+ (IOSObjectArray *)toTermArrayWithNSString:(NSString *)field
                           withJavaUtilList:(id<JavaUtilList>)termBytes {
  return OrgApacheLuceneQueriesTermsQuery_toTermArrayWithNSString_withJavaUtilList_(field, termBytes);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)terms {
  OrgApacheLuceneQueriesTermsQuery_initWithJavaUtilList_(self, terms);
  return self;
}

- (instancetype)initWithNSString:(NSString *)field
                withJavaUtilList:(id<JavaUtilList>)terms {
  OrgApacheLuceneQueriesTermsQuery_initWithNSString_withJavaUtilList_(self, field, terms);
  return self;
}

- (instancetype)initWithNSString:(NSString *)field
withOrgApacheLuceneUtilBytesRefArray:(IOSObjectArray *)terms {
  OrgApacheLuceneQueriesTermsQuery_initWithNSString_withOrgApacheLuceneUtilBytesRefArray_(self, field, terms);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms {
  OrgApacheLuceneQueriesTermsQuery_initWithOrgApacheLuceneIndexTermArray_(self, terms);
  return self;
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  jint threshold = JavaLangMath_minWithInt_withInt_(OrgApacheLuceneQueriesTermsQuery_BOOLEAN_REWRITE_TERM_COUNT_THRESHOLD, OrgApacheLuceneSearchBooleanQuery_getMaxClauseCount());
  if ([((OrgApacheLuceneIndexPrefixCodedTerms *) nil_chk(termData_)) size] <= threshold) {
    OrgApacheLuceneSearchBooleanQuery_Builder *bq = [new_OrgApacheLuceneSearchBooleanQuery_Builder_init() autorelease];
    OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *iterator = [termData_ iterator];
    for (OrgApacheLuceneUtilBytesRef *term = [((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(iterator)) next]; term != nil; term = [iterator next]) {
      [bq addWithOrgApacheLuceneSearchQuery:[new_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_([new_OrgApacheLuceneIndexTerm_initWithNSString_withOrgApacheLuceneUtilBytesRef_([iterator field], OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(term)) autorelease]) autorelease] withOrgApacheLuceneSearchBooleanClause_OccurEnum:JreLoadStatic(OrgApacheLuceneSearchBooleanClause_OccurEnum, SHOULD)];
    }
    OrgApacheLuceneSearchConstantScoreQuery *csq = [new_OrgApacheLuceneSearchConstantScoreQuery_initWithOrgApacheLuceneSearchQuery_([bq build]) autorelease];
    [csq setBoostWithFloat:[self getBoost]];
    return csq;
  }
  return [super rewriteWithOrgApacheLuceneIndexIndexReader:reader];
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return YES;
  }
  if (![super isEqual:obj]) {
    return NO;
  }
  OrgApacheLuceneQueriesTermsQuery *that = (OrgApacheLuceneQueriesTermsQuery *) check_class_cast(obj, [OrgApacheLuceneQueriesTermsQuery class]);
  return termDataHashCode_ == ((OrgApacheLuceneQueriesTermsQuery *) nil_chk(that))->termDataHashCode_ && [((OrgApacheLuceneIndexPrefixCodedTerms *) nil_chk(termData_)) isEqual:that->termData_];
}

- (NSUInteger)hash {
  return 31 * ((jint) [super hash]) + termDataHashCode_;
}

- (NSString *)toStringWithNSString:(NSString *)defaultField {
  JavaLangStringBuilder *builder = [new_JavaLangStringBuilder_init() autorelease];
  jboolean first = YES;
  OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *iterator = [((OrgApacheLuceneIndexPrefixCodedTerms *) nil_chk(termData_)) iterator];
  for (OrgApacheLuceneUtilBytesRef *term = [((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(iterator)) next]; term != nil; term = [iterator next]) {
    if (!first) {
      [builder appendWithChar:' '];
    }
    first = NO;
    [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:[iterator field]])) appendWithChar:':'];
    [builder appendWithNSString:[((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) utf8ToString]];
  }
  [builder appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [builder description];
}

- (jlong)ramBytesUsed {
  return OrgApacheLuceneQueriesTermsQuery_BASE_RAM_BYTES_USED_ + [((OrgApacheLuceneIndexPrefixCodedTerms *) nil_chk(termData_)) ramBytesUsed];
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores {
  return [new_OrgApacheLuceneQueriesTermsQuery_$1_initWithOrgApacheLuceneQueriesTermsQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneSearchQuery_(self, searcher, needsScores, self) autorelease];
}

- (void)dealloc {
  RELEASE_(termData_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneQueriesTermsQuery class]) {
    OrgApacheLuceneQueriesTermsQuery_BASE_RAM_BYTES_USED_ = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneQueriesTermsQuery_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneQueriesTermsQuery)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "toTermArrayWithNSString:withJavaUtilList:", "toTermArray", "[Lorg.apache.lucene.index.Term;", 0xa, NULL, NULL },
    { "initWithJavaUtilList:", "TermsQuery", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withJavaUtilList:", "TermsQuery", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withOrgApacheLuceneUtilBytesRefArray:", "TermsQuery", NULL, 0x81, NULL, NULL },
    { "initWithOrgApacheLuceneIndexTermArray:", "TermsQuery", NULL, 0x81, NULL, NULL },
    { "rewriteWithOrgApacheLuceneIndexIndexReader:", "rewrite", "Lorg.apache.lucene.search.Query;", 0x1, "Ljava.io.IOException;", NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "toStringWithNSString:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "ramBytesUsed", NULL, "J", 0x1, NULL, NULL },
    { "getChildResources", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:", "createWeight", "Lorg.apache.lucene.search.Weight;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED_", NULL, 0x1a, "J", &OrgApacheLuceneQueriesTermsQuery_BASE_RAM_BYTES_USED_, NULL, .constantValue.asLong = 0 },
    { "BOOLEAN_REWRITE_TERM_COUNT_THRESHOLD", "BOOLEAN_REWRITE_TERM_COUNT_THRESHOLD", 0x18, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneQueriesTermsQuery_BOOLEAN_REWRITE_TERM_COUNT_THRESHOLD },
    { "termData_", NULL, 0x12, "Lorg.apache.lucene.index.PrefixCodedTerms;", NULL, NULL, .constantValue.asLong = 0 },
    { "termDataHashCode_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.queries.TermsQuery$TermAndState;", "Lorg.apache.lucene.queries.TermsQuery$WeightOrDocIdSet;"};
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesTermsQuery = { 2, "TermsQuery", "org.apache.lucene.queries", NULL, 0x1, 12, methods, 4, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneQueriesTermsQuery;
}

@end

IOSObjectArray *OrgApacheLuceneQueriesTermsQuery_toTermArrayWithNSString_withJavaUtilList_(NSString *field, id<JavaUtilList> termBytes) {
  OrgApacheLuceneQueriesTermsQuery_initialize();
  IOSObjectArray *array = [IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(termBytes)) size] type:OrgApacheLuceneIndexTerm_class_()];
  jint i = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong t in termBytes) {
    IOSObjectArray_SetAndConsume(array, i++, new_OrgApacheLuceneIndexTerm_initWithNSString_withOrgApacheLuceneUtilBytesRef_(field, t));
  }
  return array;
}

void OrgApacheLuceneQueriesTermsQuery_initWithJavaUtilList_(OrgApacheLuceneQueriesTermsQuery *self, id<JavaUtilList> terms) {
  OrgApacheLuceneSearchQuery_init(self);
  IOSObjectArray *sortedTerms = [terms toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(terms)) size] type:OrgApacheLuceneIndexTerm_class_()]];
  OrgApacheLuceneUtilArrayUtil_timSortWithJavaLangComparableArray_(sortedTerms);
  OrgApacheLuceneIndexPrefixCodedTerms_Builder *builder = [new_OrgApacheLuceneIndexPrefixCodedTerms_Builder_init() autorelease];
  OrgApacheLuceneIndexTerm *previous = nil;
  {
    IOSObjectArray *a__ = sortedTerms;
    OrgApacheLuceneIndexTerm * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneIndexTerm * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneIndexTerm *term = *b__++;
      if ([((OrgApacheLuceneIndexTerm *) nil_chk(term)) isEqual:previous] == NO) {
        [builder addWithOrgApacheLuceneIndexTerm:term];
      }
      previous = term;
    }
  }
  JreStrongAssign(&self->termData_, [builder finish]);
  self->termDataHashCode_ = ((jint) [((OrgApacheLuceneIndexPrefixCodedTerms *) nil_chk(self->termData_)) hash]);
}

OrgApacheLuceneQueriesTermsQuery *new_OrgApacheLuceneQueriesTermsQuery_initWithJavaUtilList_(id<JavaUtilList> terms) {
  OrgApacheLuceneQueriesTermsQuery *self = [OrgApacheLuceneQueriesTermsQuery alloc];
  OrgApacheLuceneQueriesTermsQuery_initWithJavaUtilList_(self, terms);
  return self;
}

void OrgApacheLuceneQueriesTermsQuery_initWithNSString_withJavaUtilList_(OrgApacheLuceneQueriesTermsQuery *self, NSString *field, id<JavaUtilList> terms) {
  OrgApacheLuceneQueriesTermsQuery_initWithOrgApacheLuceneIndexTermArray_(self, OrgApacheLuceneQueriesTermsQuery_toTermArrayWithNSString_withJavaUtilList_(field, terms));
}

OrgApacheLuceneQueriesTermsQuery *new_OrgApacheLuceneQueriesTermsQuery_initWithNSString_withJavaUtilList_(NSString *field, id<JavaUtilList> terms) {
  OrgApacheLuceneQueriesTermsQuery *self = [OrgApacheLuceneQueriesTermsQuery alloc];
  OrgApacheLuceneQueriesTermsQuery_initWithNSString_withJavaUtilList_(self, field, terms);
  return self;
}

void OrgApacheLuceneQueriesTermsQuery_initWithNSString_withOrgApacheLuceneUtilBytesRefArray_(OrgApacheLuceneQueriesTermsQuery *self, NSString *field, IOSObjectArray *terms) {
  OrgApacheLuceneQueriesTermsQuery_initWithNSString_withJavaUtilList_(self, field, JavaUtilArrays_asListWithNSObjectArray_(terms));
}

OrgApacheLuceneQueriesTermsQuery *new_OrgApacheLuceneQueriesTermsQuery_initWithNSString_withOrgApacheLuceneUtilBytesRefArray_(NSString *field, IOSObjectArray *terms) {
  OrgApacheLuceneQueriesTermsQuery *self = [OrgApacheLuceneQueriesTermsQuery alloc];
  OrgApacheLuceneQueriesTermsQuery_initWithNSString_withOrgApacheLuceneUtilBytesRefArray_(self, field, terms);
  return self;
}

void OrgApacheLuceneQueriesTermsQuery_initWithOrgApacheLuceneIndexTermArray_(OrgApacheLuceneQueriesTermsQuery *self, IOSObjectArray *terms) {
  OrgApacheLuceneQueriesTermsQuery_initWithJavaUtilList_(self, JavaUtilArrays_asListWithNSObjectArray_(terms));
}

OrgApacheLuceneQueriesTermsQuery *new_OrgApacheLuceneQueriesTermsQuery_initWithOrgApacheLuceneIndexTermArray_(IOSObjectArray *terms) {
  OrgApacheLuceneQueriesTermsQuery *self = [OrgApacheLuceneQueriesTermsQuery alloc];
  OrgApacheLuceneQueriesTermsQuery_initWithOrgApacheLuceneIndexTermArray_(self, terms);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesTermsQuery)

@implementation OrgApacheLuceneQueriesTermsQuery_TermAndState

- (instancetype)initWithNSString:(NSString *)field
withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum {
  OrgApacheLuceneQueriesTermsQuery_TermAndState_initWithNSString_withOrgApacheLuceneIndexTermsEnum_(self, field, termsEnum);
  return self;
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(termsEnum_);
  RELEASE_(term_);
  RELEASE_(state_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withOrgApacheLuceneIndexTermsEnum:", "TermAndState", NULL, 0x0, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "field_", NULL, 0x10, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "termsEnum_", NULL, 0x10, "Lorg.apache.lucene.index.TermsEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "term_", NULL, 0x10, "Lorg.apache.lucene.util.BytesRef;", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x10, "Lorg.apache.lucene.index.TermState;", NULL, NULL, .constantValue.asLong = 0 },
    { "docFreq_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "totalTermFreq_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesTermsQuery_TermAndState = { 2, "TermAndState", "org.apache.lucene.queries", "TermsQuery", 0xa, 1, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueriesTermsQuery_TermAndState;
}

@end

void OrgApacheLuceneQueriesTermsQuery_TermAndState_initWithNSString_withOrgApacheLuceneIndexTermsEnum_(OrgApacheLuceneQueriesTermsQuery_TermAndState *self, NSString *field, OrgApacheLuceneIndexTermsEnum *termsEnum) {
  NSObject_init(self);
  JreStrongAssign(&self->field_, field);
  JreStrongAssign(&self->termsEnum_, termsEnum);
  JreStrongAssign(&self->term_, OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) term]));
  JreStrongAssign(&self->state_, [termsEnum termState]);
  self->docFreq_ = [termsEnum docFreq];
  self->totalTermFreq_ = [termsEnum totalTermFreq];
}

OrgApacheLuceneQueriesTermsQuery_TermAndState *new_OrgApacheLuceneQueriesTermsQuery_TermAndState_initWithNSString_withOrgApacheLuceneIndexTermsEnum_(NSString *field, OrgApacheLuceneIndexTermsEnum *termsEnum) {
  OrgApacheLuceneQueriesTermsQuery_TermAndState *self = [OrgApacheLuceneQueriesTermsQuery_TermAndState alloc];
  OrgApacheLuceneQueriesTermsQuery_TermAndState_initWithNSString_withOrgApacheLuceneIndexTermsEnum_(self, field, termsEnum);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesTermsQuery_TermAndState)

@implementation OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet

- (instancetype)initWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight {
  OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchWeight_(self, weight);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)bitset {
  OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_(self, bitset);
  return self;
}

- (void)dealloc {
  RELEASE_(weight_);
  RELEASE_(set_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneSearchWeight:", "WeightOrDocIdSet", NULL, 0x0, NULL, NULL },
    { "initWithOrgApacheLuceneSearchDocIdSet:", "WeightOrDocIdSet", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "weight_", NULL, 0x10, "Lorg.apache.lucene.search.Weight;", NULL, NULL, .constantValue.asLong = 0 },
    { "set_", NULL, 0x10, "Lorg.apache.lucene.search.DocIdSet;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet = { 2, "WeightOrDocIdSet", "org.apache.lucene.queries", "TermsQuery", 0xa, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet;
}

@end

void OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchWeight_(OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *self, OrgApacheLuceneSearchWeight *weight) {
  NSObject_init(self);
  JreStrongAssign(&self->weight_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(weight));
  JreStrongAssign(&self->set_, nil);
}

OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *new_OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchWeight_(OrgApacheLuceneSearchWeight *weight) {
  OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *self = [OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet alloc];
  OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchWeight_(self, weight);
  return self;
}

void OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *self, OrgApacheLuceneSearchDocIdSet *bitset) {
  NSObject_init(self);
  JreStrongAssign(&self->set_, bitset);
  JreStrongAssign(&self->weight_, nil);
}

OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *new_OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneSearchDocIdSet *bitset) {
  OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *self = [OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet alloc];
  OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_(self, bitset);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet)

@implementation OrgApacheLuceneQueriesTermsQuery_$1

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms {
}

- (OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *)rewriteWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  return OrgApacheLuceneQueriesTermsQuery_$1_rewriteWithOrgApacheLuceneIndexLeafReaderContext_(self, context);
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set {
  return OrgApacheLuceneQueriesTermsQuery_$1_scorerWithOrgApacheLuceneSearchDocIdSet_(self, set);
}

- (OrgApacheLuceneSearchBulkScorer *)bulkScorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *weightOrBitSet = OrgApacheLuceneQueriesTermsQuery_$1_rewriteWithOrgApacheLuceneIndexLeafReaderContext_(self, context);
  if (((OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *) nil_chk(weightOrBitSet))->weight_ != nil) {
    return [weightOrBitSet->weight_ bulkScorerWithOrgApacheLuceneIndexLeafReaderContext:context];
  }
  else {
    OrgApacheLuceneSearchScorer *scorer = OrgApacheLuceneQueriesTermsQuery_$1_scorerWithOrgApacheLuceneSearchDocIdSet_(self, weightOrBitSet->set_);
    if (scorer == nil) {
      return nil;
    }
    return [new_OrgApacheLuceneSearchWeight_DefaultBulkScorer_initWithOrgApacheLuceneSearchScorer_(scorer) autorelease];
  }
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *weightOrBitSet = OrgApacheLuceneQueriesTermsQuery_$1_rewriteWithOrgApacheLuceneIndexLeafReaderContext_(self, context);
  if (((OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *) nil_chk(weightOrBitSet))->weight_ != nil) {
    return [weightOrBitSet->weight_ scorerWithOrgApacheLuceneIndexLeafReaderContext:context];
  }
  else {
    return OrgApacheLuceneQueriesTermsQuery_$1_scorerWithOrgApacheLuceneSearchDocIdSet_(self, weightOrBitSet->set_);
  }
}

- (instancetype)initWithOrgApacheLuceneQueriesTermsQuery:(OrgApacheLuceneQueriesTermsQuery *)outer$
                  withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)capture$0
                                             withBoolean:(jboolean)capture$1
                          withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)arg$0 {
  OrgApacheLuceneQueriesTermsQuery_$1_initWithOrgApacheLuceneQueriesTermsQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneSearchQuery_(self, outer$, capture$0, capture$1, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$searcher_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "extractTermsWithJavaUtilSet:", "extractTerms", "V", 0x1, NULL, NULL },
    { "rewriteWithOrgApacheLuceneIndexLeafReaderContext:", "rewrite", "Lorg.apache.lucene.queries.TermsQuery$WeightOrDocIdSet;", 0x2, "Ljava.io.IOException;", NULL },
    { "scorerWithOrgApacheLuceneSearchDocIdSet:", "scorer", "Lorg.apache.lucene.search.Scorer;", 0x2, "Ljava.io.IOException;", NULL },
    { "bulkScorerWithOrgApacheLuceneIndexLeafReaderContext:", "bulkScorer", "Lorg.apache.lucene.search.BulkScorer;", 0x1, "Ljava.io.IOException;", NULL },
    { "scorerWithOrgApacheLuceneIndexLeafReaderContext:", "scorer", "Lorg.apache.lucene.search.Scorer;", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheLuceneQueriesTermsQuery:withOrgApacheLuceneSearchIndexSearcher:withBoolean:withOrgApacheLuceneSearchQuery:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.queries.TermsQuery;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$searcher_", NULL, 0x1012, "Lorg.apache.lucene.search.IndexSearcher;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$needsScores_", NULL, 0x1012, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneQueriesTermsQuery", "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesTermsQuery_$1 = { 2, "", "org.apache.lucene.queries", "TermsQuery", 0x8008, 6, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneQueriesTermsQuery_$1;
}

@end

OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet *OrgApacheLuceneQueriesTermsQuery_$1_rewriteWithOrgApacheLuceneIndexLeafReaderContext_(OrgApacheLuceneQueriesTermsQuery_$1 *self, OrgApacheLuceneIndexLeafReaderContext *context) {
  OrgApacheLuceneIndexLeafReader *reader = [((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader];
  jint threshold = JavaLangMath_minWithInt_withInt_(OrgApacheLuceneQueriesTermsQuery_BOOLEAN_REWRITE_TERM_COUNT_THRESHOLD, OrgApacheLuceneSearchBooleanQuery_getMaxClauseCount());
  JreAssert(([((OrgApacheLuceneIndexPrefixCodedTerms *) nil_chk(self->this$0_->termData_)) size] > threshold), (@"Query should have been rewritten"));
  id<JavaUtilList> matchingTerms = [new_JavaUtilArrayList_initWithInt_(threshold) autorelease];
  OrgApacheLuceneUtilDocIdSetBuilder *builder = nil;
  OrgApacheLuceneIndexFields *fields = [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) fields];
  NSString *lastField = nil;
  OrgApacheLuceneIndexTerms *terms = nil;
  OrgApacheLuceneIndexTermsEnum *termsEnum = nil;
  OrgApacheLuceneIndexPostingsEnum *docs = nil;
  OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *iterator = [self->this$0_->termData_ iterator];
  for (OrgApacheLuceneUtilBytesRef *term = [((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(iterator)) next]; term != nil; term = [iterator next]) {
    NSString *field = [iterator field];
    if (field != lastField) {
      terms = [((OrgApacheLuceneIndexFields *) nil_chk(fields)) termsWithNSString:field];
      if (terms == nil) {
        termsEnum = nil;
      }
      else {
        termsEnum = [terms iterator];
      }
      lastField = field;
    }
    if (termsEnum != nil && [termsEnum seekExactWithOrgApacheLuceneUtilBytesRef:term]) {
      if (matchingTerms == nil) {
        docs = [termsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:docs withInt:OrgApacheLuceneIndexPostingsEnum_NONE];
        [((OrgApacheLuceneUtilDocIdSetBuilder *) nil_chk(builder)) addWithOrgApacheLuceneSearchDocIdSetIterator:docs];
      }
      else if ([matchingTerms size] < threshold) {
        [matchingTerms addWithId:[new_OrgApacheLuceneQueriesTermsQuery_TermAndState_initWithNSString_withOrgApacheLuceneIndexTermsEnum_(field, termsEnum) autorelease]];
      }
      else {
        JreAssert(([matchingTerms size] == threshold), (@"org/apache/lucene/queries/TermsQuery.java:290 condition failed: assert matchingTerms.size() == threshold;"));
        builder = [new_OrgApacheLuceneUtilDocIdSetBuilder_initWithInt_([reader maxDoc]) autorelease];
        docs = [termsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:docs withInt:OrgApacheLuceneIndexPostingsEnum_NONE];
        [builder addWithOrgApacheLuceneSearchDocIdSetIterator:docs];
        for (OrgApacheLuceneQueriesTermsQuery_TermAndState * __strong t in matchingTerms) {
          [((OrgApacheLuceneIndexTermsEnum *) nil_chk(((OrgApacheLuceneQueriesTermsQuery_TermAndState *) nil_chk(t))->termsEnum_)) seekExactWithOrgApacheLuceneUtilBytesRef:t->term_ withOrgApacheLuceneIndexTermState:t->state_];
          docs = [t->termsEnum_ postingsWithOrgApacheLuceneIndexPostingsEnum:docs withInt:OrgApacheLuceneIndexPostingsEnum_NONE];
          [builder addWithOrgApacheLuceneSearchDocIdSetIterator:docs];
        }
        matchingTerms = nil;
      }
    }
  }
  if (matchingTerms != nil) {
    JreAssert((builder == nil), (@"org/apache/lucene/queries/TermsQuery.java:304 condition failed: assert builder == null;"));
    OrgApacheLuceneSearchBooleanQuery_Builder *bq = [new_OrgApacheLuceneSearchBooleanQuery_Builder_init() autorelease];
    for (OrgApacheLuceneQueriesTermsQuery_TermAndState * __strong t in matchingTerms) {
      OrgApacheLuceneIndexTermContext *termContext = [new_OrgApacheLuceneIndexTermContext_initWithOrgApacheLuceneIndexIndexReaderContext_([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(self->val$searcher_)) getTopReaderContext]) autorelease];
      [termContext register__WithOrgApacheLuceneIndexTermState:((OrgApacheLuceneQueriesTermsQuery_TermAndState *) nil_chk(t))->state_ withInt:context->ord_ withInt:t->docFreq_ withLong:t->totalTermFreq_];
      [bq addWithOrgApacheLuceneSearchQuery:[new_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_([new_OrgApacheLuceneIndexTerm_initWithNSString_withOrgApacheLuceneUtilBytesRef_(t->field_, t->term_) autorelease], termContext) autorelease] withOrgApacheLuceneSearchBooleanClause_OccurEnum:JreLoadStatic(OrgApacheLuceneSearchBooleanClause_OccurEnum, SHOULD)];
    }
    OrgApacheLuceneSearchQuery *q = [new_OrgApacheLuceneSearchConstantScoreQuery_initWithOrgApacheLuceneSearchQuery_([bq build]) autorelease];
    [q setBoostWithFloat:[self score]];
    return [new_OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchWeight_([((OrgApacheLuceneSearchQuery *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(self->val$searcher_)) rewriteWithOrgApacheLuceneSearchQuery:q])) createWeightWithOrgApacheLuceneSearchIndexSearcher:self->val$searcher_ withBoolean:self->val$needsScores_]) autorelease];
  }
  else {
    JreAssert((builder != nil), (@"org/apache/lucene/queries/TermsQuery.java:315 condition failed: assert builder != null;"));
    return [new_OrgApacheLuceneQueriesTermsQuery_WeightOrDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_([((OrgApacheLuceneUtilDocIdSetBuilder *) nil_chk(builder)) build]) autorelease];
  }
}

OrgApacheLuceneSearchScorer *OrgApacheLuceneQueriesTermsQuery_$1_scorerWithOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneQueriesTermsQuery_$1 *self, OrgApacheLuceneSearchDocIdSet *set) {
  if (set == nil) {
    return nil;
  }
  OrgApacheLuceneSearchDocIdSetIterator *disi = [((OrgApacheLuceneSearchDocIdSet *) nil_chk(set)) iterator];
  if (disi == nil) {
    return nil;
  }
  return [new_OrgApacheLuceneSearchConstantScoreScorer_initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchDocIdSetIterator_(self, [self score], disi) autorelease];
}

void OrgApacheLuceneQueriesTermsQuery_$1_initWithOrgApacheLuceneQueriesTermsQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneQueriesTermsQuery_$1 *self, OrgApacheLuceneQueriesTermsQuery *outer$, OrgApacheLuceneSearchIndexSearcher *capture$0, jboolean capture$1, OrgApacheLuceneSearchQuery *arg$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$searcher_, capture$0);
  self->val$needsScores_ = capture$1;
  OrgApacheLuceneSearchConstantScoreWeight_initWithOrgApacheLuceneSearchQuery_(self, arg$0);
}

OrgApacheLuceneQueriesTermsQuery_$1 *new_OrgApacheLuceneQueriesTermsQuery_$1_initWithOrgApacheLuceneQueriesTermsQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneQueriesTermsQuery *outer$, OrgApacheLuceneSearchIndexSearcher *capture$0, jboolean capture$1, OrgApacheLuceneSearchQuery *arg$0) {
  OrgApacheLuceneQueriesTermsQuery_$1 *self = [OrgApacheLuceneQueriesTermsQuery_$1 alloc];
  OrgApacheLuceneQueriesTermsQuery_$1_initWithOrgApacheLuceneQueriesTermsQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneSearchQuery_(self, outer$, capture$0, capture$1, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesTermsQuery_$1)
