//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/ReciprocalFloatFunction.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Float.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/queries/function/FunctionValues.h"
#include "org/apache/lucene/queries/function/ValueSource.h"
#include "org/apache/lucene/queries/function/docvalues/FloatDocValues.h"
#include "org/apache/lucene/queries/function/valuesource/ReciprocalFloatFunction.h"
#include "org/apache/lucene/search/IndexSearcher.h"

@interface OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1 : OrgApacheLuceneQueriesFunctionDocvaluesFloatDocValues {
 @public
  OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *this$0_;
  OrgApacheLuceneQueriesFunctionFunctionValues *val$vals_;
}

- (jfloat)floatValWithInt:(jint)doc;

- (jboolean)existsWithInt:(jint)doc;

- (NSString *)toStringWithInt:(jint)doc;

- (instancetype)initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction:(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *)outer$
                                        withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)capture$0
                                           withOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1, this$0_, OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1, val$vals_, OrgApacheLuceneQueriesFunctionFunctionValues *)

__attribute__((unused)) static void OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1_initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1 *self, OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *outer$, OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionValueSource *arg$0);

__attribute__((unused)) static OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1 *new_OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1_initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *outer$, OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionValueSource *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1)

@implementation OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction

- (instancetype)initWithOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)source
                                                        withFloat:(jfloat)m
                                                        withFloat:(jfloat)a
                                                        withFloat:(jfloat)b {
  OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_initWithOrgApacheLuceneQueriesFunctionValueSource_withFloat_withFloat_withFloat_(self, source, m, a, b);
  return self;
}

- (OrgApacheLuceneQueriesFunctionFunctionValues *)getValuesWithJavaUtilMap:(id<JavaUtilMap>)context
                                 withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext {
  OrgApacheLuceneQueriesFunctionFunctionValues *vals = [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(source_)) getValuesWithJavaUtilMap:context withOrgApacheLuceneIndexLeafReaderContext:readerContext];
  return [new_OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1_initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionValueSource_(self, vals, self) autorelease];
}

- (void)createWeightWithJavaUtilMap:(id<JavaUtilMap>)context
withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher {
  [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(source_)) createWeightWithJavaUtilMap:context withOrgApacheLuceneSearchIndexSearcher:searcher];
}

- (NSString *)description__ {
  return JreStrcat("$$F$$$FC", JavaLangFloat_toStringWithFloat_(a_), @"/(", m_, @"*float(", [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(source_)) description__], @")+", b_, ')');
}

- (NSUInteger)hash {
  jint h = JavaLangFloat_floatToIntBitsWithFloat_(a_) + JavaLangFloat_floatToIntBitsWithFloat_(m_);
  h ^= (JreLShift32(h, 13)) | (JreURShift32(h, 20));
  return h + (JavaLangFloat_floatToIntBitsWithFloat_(b_)) + ((jint) [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(source_)) hash]);
}

- (jboolean)isEqual:(id)o {
  if (OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_class_() != [nil_chk(o) getClass]) return NO;
  OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *other = (OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *) check_class_cast(o, [OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction class]);
  return self->m_ == other->m_ && self->a_ == other->a_ && self->b_ == other->b_ && [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(self->source_)) isEqual:other->source_];
}

- (void)dealloc {
  RELEASE_(source_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheLuceneQueriesFunctionValueSource:withFloat:withFloat:withFloat:", "ReciprocalFloatFunction", NULL, 0x1, NULL, NULL },
    { "getValuesWithJavaUtilMap:withOrgApacheLuceneIndexLeafReaderContext:", "getValues", "Lorg.apache.lucene.queries.function.FunctionValues;", 0x1, "Ljava.io.IOException;", NULL },
    { "createWeightWithJavaUtilMap:withOrgApacheLuceneSearchIndexSearcher:", "createWeight", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "description__", "description", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "source_", NULL, 0x14, "Lorg.apache.lucene.queries.function.ValueSource;", NULL, NULL, .constantValue.asLong = 0 },
    { "m_", NULL, 0x14, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "a_", NULL, 0x14, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "b_", NULL, 0x14, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction = { 2, "ReciprocalFloatFunction", "org.apache.lucene.queries.function.valuesource", NULL, 0x1, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_initWithOrgApacheLuceneQueriesFunctionValueSource_withFloat_withFloat_withFloat_(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *self, OrgApacheLuceneQueriesFunctionValueSource *source, jfloat m, jfloat a, jfloat b) {
  OrgApacheLuceneQueriesFunctionValueSource_init(self);
  JreStrongAssign(&self->source_, source);
  self->m_ = m;
  self->a_ = a;
  self->b_ = b;
}

OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *new_OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_initWithOrgApacheLuceneQueriesFunctionValueSource_withFloat_withFloat_withFloat_(OrgApacheLuceneQueriesFunctionValueSource *source, jfloat m, jfloat a, jfloat b) {
  OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *self = [OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction alloc];
  OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_initWithOrgApacheLuceneQueriesFunctionValueSource_withFloat_withFloat_withFloat_(self, source, m, a, b);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction)

@implementation OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1

- (jfloat)floatValWithInt:(jint)doc {
  return this$0_->a_ / (this$0_->m_ * [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$vals_)) floatValWithInt:doc] + this$0_->b_);
}

- (jboolean)existsWithInt:(jint)doc {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$vals_)) existsWithInt:doc];
}

- (NSString *)toStringWithInt:(jint)doc {
  return JreStrcat("$$F$$$FC", JavaLangFloat_toStringWithFloat_(this$0_->a_), @"/(", this$0_->m_, @"*float(", [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$vals_)) toStringWithInt:doc], @")+", this$0_->b_, ')');
}

- (instancetype)initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction:(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *)outer$
                                        withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)capture$0
                                           withOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)arg$0 {
  OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1_initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionValueSource_(self, outer$, capture$0, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$vals_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "floatValWithInt:", "floatVal", "F", 0x1, NULL, NULL },
    { "existsWithInt:", "exists", "Z", 0x1, NULL, NULL },
    { "toStringWithInt:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction:withOrgApacheLuceneQueriesFunctionFunctionValues:withOrgApacheLuceneQueriesFunctionValueSource:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$vals_", NULL, 0x1012, "Lorg.apache.lucene.queries.function.FunctionValues;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction", "getValuesWithJavaUtilMap:withOrgApacheLuceneIndexLeafReaderContext:" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1 = { 2, "", "org.apache.lucene.queries.function.valuesource", "ReciprocalFloatFunction", 0x8008, 4, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1_initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1 *self, OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *outer$, OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionValueSource *arg$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$vals_, capture$0);
  OrgApacheLuceneQueriesFunctionDocvaluesFloatDocValues_initWithOrgApacheLuceneQueriesFunctionValueSource_(self, arg$0);
}

OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1 *new_OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1_initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction *outer$, OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionValueSource *arg$0) {
  OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1 *self = [OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1 alloc];
  OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1_initWithOrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionValueSource_(self, outer$, capture$0, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceReciprocalFloatFunction_$1)
