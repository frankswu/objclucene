//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexableField.h"
#include "org/apache/lucene/index/MultiFields.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/queries/mlt/MoreLikeThis.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/TermQuery.h"
#include "org/apache/lucene/search/similarities/DefaultSimilarity.h"
#include "org/apache/lucene/search/similarities/TFIDFSimilarity.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/CharsRefBuilder.h"
#include "org/apache/lucene/util/PriorityQueue.h"

@class OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm;

@interface OrgApacheLuceneQueriesMltMoreLikeThis () {
 @public
  id<JavaUtilSet> stopWords_;
  OrgApacheLuceneAnalysisAnalyzer *analyzer_;
  jint minTermFreq_;
  jint minDocFreq_;
  jint maxDocFreq_;
  jboolean boost_;
  IOSObjectArray *fieldNames_;
  jint maxNumTokensParsed_;
  jint minWordLen_;
  jint maxWordLen_;
  jint maxQueryTerms_;
  OrgApacheLuceneSearchSimilaritiesTFIDFSimilarity *similarity_;
  OrgApacheLuceneIndexIndexReader *ir_;
  jfloat boostFactor_;
}

- (OrgApacheLuceneSearchQuery *)createQueryWithOrgApacheLuceneUtilPriorityQueue:(OrgApacheLuceneUtilPriorityQueue *)q;

- (OrgApacheLuceneUtilPriorityQueue *)createQueueWithJavaUtilMap:(id<JavaUtilMap>)words;

- (OrgApacheLuceneUtilPriorityQueue *)retrieveTermsWithInt:(jint)docNum;

- (OrgApacheLuceneUtilPriorityQueue *)retrieveTermsWithJavaUtilMap:(id<JavaUtilMap>)fields;

- (void)addTermFrequenciesWithJavaUtilMap:(id<JavaUtilMap>)termFreqMap
            withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)vector;

- (void)addTermFrequenciesWithJavaIoReader:(JavaIoReader *)r
                           withJavaUtilMap:(id<JavaUtilMap>)termFreqMap
                              withNSString:(NSString *)fieldName;

- (jboolean)isNoiseWordWithNSString:(NSString *)term;

- (OrgApacheLuceneUtilPriorityQueue *)retrieveTermsWithJavaIoReader:(JavaIoReader *)r
                                                       withNSString:(NSString *)fieldName;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesMltMoreLikeThis, stopWords_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesMltMoreLikeThis, analyzer_, OrgApacheLuceneAnalysisAnalyzer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesMltMoreLikeThis, fieldNames_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesMltMoreLikeThis, similarity_, OrgApacheLuceneSearchSimilaritiesTFIDFSimilarity *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesMltMoreLikeThis, ir_, OrgApacheLuceneIndexIndexReader *)

__attribute__((unused)) static OrgApacheLuceneSearchQuery *OrgApacheLuceneQueriesMltMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(OrgApacheLuceneQueriesMltMoreLikeThis *self, OrgApacheLuceneUtilPriorityQueue *q);

__attribute__((unused)) static OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneQueriesMltMoreLikeThis_createQueueWithJavaUtilMap_(OrgApacheLuceneQueriesMltMoreLikeThis *self, id<JavaUtilMap> words);

__attribute__((unused)) static OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithInt_(OrgApacheLuceneQueriesMltMoreLikeThis *self, jint docNum);

__attribute__((unused)) static OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithJavaUtilMap_(OrgApacheLuceneQueriesMltMoreLikeThis *self, id<JavaUtilMap> fields);

__attribute__((unused)) static void OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaUtilMap_withOrgApacheLuceneIndexTerms_(OrgApacheLuceneQueriesMltMoreLikeThis *self, id<JavaUtilMap> termFreqMap, OrgApacheLuceneIndexTerms *vector);

__attribute__((unused)) static void OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(OrgApacheLuceneQueriesMltMoreLikeThis *self, JavaIoReader *r, id<JavaUtilMap> termFreqMap, NSString *fieldName);

__attribute__((unused)) static jboolean OrgApacheLuceneQueriesMltMoreLikeThis_isNoiseWordWithNSString_(OrgApacheLuceneQueriesMltMoreLikeThis *self, NSString *term);

__attribute__((unused)) static OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithJavaIoReader_withNSString_(OrgApacheLuceneQueriesMltMoreLikeThis *self, JavaIoReader *r, NSString *fieldName);

@interface OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ : OrgApacheLuceneUtilPriorityQueue

- (instancetype)initWithInt:(jint)maxSize;

- (jboolean)lessThanWithId:(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *)a
                    withId:(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ)

__attribute__((unused)) static void OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ_initWithInt_(OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ *self, jint maxSize);

__attribute__((unused)) static OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ *new_OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ_initWithInt_(jint maxSize) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ)

@interface OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm : NSObject {
 @public
  NSString *word_;
  NSString *topField_;
  jfloat score_;
  jfloat idf_;
  jint docFreq_;
  jint tf_;
}

- (instancetype)initWithNSString:(NSString *)word
                    withNSString:(NSString *)topField
                       withFloat:(jfloat)score
                       withFloat:(jfloat)idf
                         withInt:(jint)docFreq
                         withInt:(jint)tf;

- (void)updateWithNSString:(NSString *)word
              withNSString:(NSString *)topField
                 withFloat:(jfloat)score
                 withFloat:(jfloat)idf
                   withInt:(jint)docFreq
                   withInt:(jint)tf;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm, word_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm, topField_, NSString *)

__attribute__((unused)) static void OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm_initWithNSString_withNSString_withFloat_withFloat_withInt_withInt_(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *self, NSString *word, NSString *topField, jfloat score, jfloat idf, jint docFreq, jint tf);

__attribute__((unused)) static OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *new_OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm_initWithNSString_withNSString_withFloat_withFloat_withInt_withInt_(NSString *word, NSString *topField, jfloat score, jfloat idf, jint docFreq, jint tf) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm)

@interface OrgApacheLuceneQueriesMltMoreLikeThis_Int : NSObject {
 @public
  jint x_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesMltMoreLikeThis_Int)

__attribute__((unused)) static void OrgApacheLuceneQueriesMltMoreLikeThis_Int_init(OrgApacheLuceneQueriesMltMoreLikeThis_Int *self);

__attribute__((unused)) static OrgApacheLuceneQueriesMltMoreLikeThis_Int *new_OrgApacheLuceneQueriesMltMoreLikeThis_Int_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesMltMoreLikeThis_Int)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneQueriesMltMoreLikeThis)

IOSObjectArray *OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_FIELD_NAMES_;
id<JavaUtilSet> OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_STOP_WORDS_;

@implementation OrgApacheLuceneQueriesMltMoreLikeThis

- (jfloat)getBoostFactor {
  return boostFactor_;
}

- (void)setBoostFactorWithFloat:(jfloat)boostFactor {
  self->boostFactor_ = boostFactor;
}

- (instancetype)initWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)ir {
  OrgApacheLuceneQueriesMltMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_(self, ir);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)ir
   withOrgApacheLuceneSearchSimilaritiesTFIDFSimilarity:(OrgApacheLuceneSearchSimilaritiesTFIDFSimilarity *)sim {
  OrgApacheLuceneQueriesMltMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilaritiesTFIDFSimilarity_(self, ir, sim);
  return self;
}

- (OrgApacheLuceneSearchSimilaritiesTFIDFSimilarity *)getSimilarity {
  return similarity_;
}

- (void)setSimilarityWithOrgApacheLuceneSearchSimilaritiesTFIDFSimilarity:(OrgApacheLuceneSearchSimilaritiesTFIDFSimilarity *)similarity {
  JreStrongAssign(&self->similarity_, similarity);
}

- (OrgApacheLuceneAnalysisAnalyzer *)getAnalyzer {
  return analyzer_;
}

- (void)setAnalyzerWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  JreStrongAssign(&self->analyzer_, analyzer);
}

- (jint)getMinTermFreq {
  return minTermFreq_;
}

- (void)setMinTermFreqWithInt:(jint)minTermFreq {
  self->minTermFreq_ = minTermFreq;
}

- (jint)getMinDocFreq {
  return minDocFreq_;
}

- (void)setMinDocFreqWithInt:(jint)minDocFreq {
  self->minDocFreq_ = minDocFreq;
}

- (jint)getMaxDocFreq {
  return maxDocFreq_;
}

- (void)setMaxDocFreqWithInt:(jint)maxFreq {
  self->maxDocFreq_ = maxFreq;
}

- (void)setMaxDocFreqPctWithInt:(jint)maxPercentage {
  self->maxDocFreq_ = maxPercentage * [((OrgApacheLuceneIndexIndexReader *) nil_chk(ir_)) numDocs] / 100;
}

- (jboolean)isBoost {
  return boost_;
}

- (void)setBoostWithBoolean:(jboolean)boost {
  self->boost_ = boost;
}

- (IOSObjectArray *)getFieldNames {
  return fieldNames_;
}

- (void)setFieldNamesWithNSStringArray:(IOSObjectArray *)fieldNames {
  JreStrongAssign(&self->fieldNames_, fieldNames);
}

- (jint)getMinWordLen {
  return minWordLen_;
}

- (void)setMinWordLenWithInt:(jint)minWordLen {
  self->minWordLen_ = minWordLen;
}

- (jint)getMaxWordLen {
  return maxWordLen_;
}

- (void)setMaxWordLenWithInt:(jint)maxWordLen {
  self->maxWordLen_ = maxWordLen;
}

- (void)setStopWordsWithJavaUtilSet:(id<JavaUtilSet>)stopWords {
  JreStrongAssign(&self->stopWords_, stopWords);
}

- (id<JavaUtilSet>)getStopWords {
  return stopWords_;
}

- (jint)getMaxQueryTerms {
  return maxQueryTerms_;
}

- (void)setMaxQueryTermsWithInt:(jint)maxQueryTerms {
  self->maxQueryTerms_ = maxQueryTerms;
}

- (jint)getMaxNumTokensParsed {
  return maxNumTokensParsed_;
}

- (void)setMaxNumTokensParsedWithInt:(jint)i {
  maxNumTokensParsed_ = i;
}

- (OrgApacheLuceneSearchQuery *)likeWithInt:(jint)docNum {
  if (fieldNames_ == nil) {
    id<JavaUtilCollection> fields = OrgApacheLuceneIndexMultiFields_getIndexedFieldsWithOrgApacheLuceneIndexIndexReader_(ir_);
    JreStrongAssign(&fieldNames_, [fields toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilCollection>) nil_chk(fields)) size] type:NSString_class_()]]);
  }
  return OrgApacheLuceneQueriesMltMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(self, OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithInt_(self, docNum));
}

- (OrgApacheLuceneSearchQuery *)likeWithJavaUtilMap:(id<JavaUtilMap>)filteredDocument {
  if (fieldNames_ == nil) {
    id<JavaUtilCollection> fields = OrgApacheLuceneIndexMultiFields_getIndexedFieldsWithOrgApacheLuceneIndexIndexReader_(ir_);
    JreStrongAssign(&fieldNames_, [fields toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilCollection>) nil_chk(fields)) size] type:NSString_class_()]]);
  }
  return OrgApacheLuceneQueriesMltMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(self, OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithJavaUtilMap_(self, filteredDocument));
}

- (OrgApacheLuceneSearchQuery *)likeWithNSString:(NSString *)fieldName
                           withJavaIoReaderArray:(IOSObjectArray *)readers {
  id<JavaUtilMap> words = [new_JavaUtilHashMap_init() autorelease];
  {
    IOSObjectArray *a__ = readers;
    JavaIoReader * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaIoReader * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaIoReader *r = *b__++;
      OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(self, r, words, fieldName);
    }
  }
  return OrgApacheLuceneQueriesMltMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(self, OrgApacheLuceneQueriesMltMoreLikeThis_createQueueWithJavaUtilMap_(self, words));
}

- (OrgApacheLuceneSearchQuery *)createQueryWithOrgApacheLuceneUtilPriorityQueue:(OrgApacheLuceneUtilPriorityQueue *)q {
  return OrgApacheLuceneQueriesMltMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(self, q);
}

- (OrgApacheLuceneUtilPriorityQueue *)createQueueWithJavaUtilMap:(id<JavaUtilMap>)words {
  return OrgApacheLuceneQueriesMltMoreLikeThis_createQueueWithJavaUtilMap_(self, words);
}

- (NSString *)describeParams {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\t"])) appendWithNSString:@"maxQueryTerms  : "])) appendWithInt:maxQueryTerms_])) appendWithNSString:@"\n"];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\t"])) appendWithNSString:@"minWordLen     : "])) appendWithInt:minWordLen_])) appendWithNSString:@"\n"];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\t"])) appendWithNSString:@"maxWordLen     : "])) appendWithInt:maxWordLen_])) appendWithNSString:@"\n"];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\t"])) appendWithNSString:@"fieldNames     : "];
  NSString *delim = @"";
  {
    IOSObjectArray *a__ = fieldNames_;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *fieldName = *b__++;
      [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:delim])) appendWithNSString:fieldName];
      delim = @", ";
    }
  }
  [sb appendWithNSString:@"\n"];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\t"])) appendWithNSString:@"boost          : "])) appendWithBoolean:boost_])) appendWithNSString:@"\n"];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\t"])) appendWithNSString:@"minTermFreq    : "])) appendWithInt:minTermFreq_])) appendWithNSString:@"\n"];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\t"])) appendWithNSString:@"minDocFreq     : "])) appendWithInt:minDocFreq_])) appendWithNSString:@"\n"];
  return [sb description];
}

- (OrgApacheLuceneUtilPriorityQueue *)retrieveTermsWithInt:(jint)docNum {
  return OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithInt_(self, docNum);
}

- (OrgApacheLuceneUtilPriorityQueue *)retrieveTermsWithJavaUtilMap:(id<JavaUtilMap>)fields {
  return OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithJavaUtilMap_(self, fields);
}

- (void)addTermFrequenciesWithJavaUtilMap:(id<JavaUtilMap>)termFreqMap
            withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)vector {
  OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaUtilMap_withOrgApacheLuceneIndexTerms_(self, termFreqMap, vector);
}

- (void)addTermFrequenciesWithJavaIoReader:(JavaIoReader *)r
                           withJavaUtilMap:(id<JavaUtilMap>)termFreqMap
                              withNSString:(NSString *)fieldName {
  OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(self, r, termFreqMap, fieldName);
}

- (jboolean)isNoiseWordWithNSString:(NSString *)term {
  return OrgApacheLuceneQueriesMltMoreLikeThis_isNoiseWordWithNSString_(self, term);
}

- (OrgApacheLuceneUtilPriorityQueue *)retrieveTermsWithJavaIoReader:(JavaIoReader *)r
                                                       withNSString:(NSString *)fieldName {
  return OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithJavaIoReader_withNSString_(self, r, fieldName);
}

- (IOSObjectArray *)retrieveInterestingTermsWithInt:(jint)docNum {
  JavaUtilArrayList *al = [new_JavaUtilArrayList_initWithInt_(maxQueryTerms_) autorelease];
  OrgApacheLuceneUtilPriorityQueue *pq = OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithInt_(self, docNum);
  OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *scoreTerm;
  jint lim = maxQueryTerms_;
  while (((scoreTerm = [((OrgApacheLuceneUtilPriorityQueue *) nil_chk(pq)) pop]) != nil) && lim-- > 0) {
    [al addWithId:((OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *) nil_chk(scoreTerm))->word_];
  }
  IOSObjectArray *res = [IOSObjectArray arrayWithLength:[al size] type:NSString_class_()];
  return [al toArrayWithNSObjectArray:res];
}

- (IOSObjectArray *)retrieveInterestingTermsWithJavaIoReader:(JavaIoReader *)r
                                                withNSString:(NSString *)fieldName {
  JavaUtilArrayList *al = [new_JavaUtilArrayList_initWithInt_(maxQueryTerms_) autorelease];
  OrgApacheLuceneUtilPriorityQueue *pq = OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithJavaIoReader_withNSString_(self, r, fieldName);
  OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *scoreTerm;
  jint lim = maxQueryTerms_;
  while (((scoreTerm = [((OrgApacheLuceneUtilPriorityQueue *) nil_chk(pq)) pop]) != nil) && lim-- > 0) {
    [al addWithId:((OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *) nil_chk(scoreTerm))->word_];
  }
  IOSObjectArray *res = [IOSObjectArray arrayWithLength:[al size] type:NSString_class_()];
  return [al toArrayWithNSObjectArray:res];
}

- (void)dealloc {
  RELEASE_(stopWords_);
  RELEASE_(analyzer_);
  RELEASE_(fieldNames_);
  RELEASE_(similarity_);
  RELEASE_(ir_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneQueriesMltMoreLikeThis class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_FIELD_NAMES_, [IOSObjectArray newArrayWithObjects:(id[]){ @"contents" } count:1 type:NSString_class_()]);
    JreStrongAssign(&OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_STOP_WORDS_, nil);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneQueriesMltMoreLikeThis)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getBoostFactor", NULL, "F", 0x1, NULL, NULL },
    { "setBoostFactorWithFloat:", "setBoostFactor", "V", 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneIndexIndexReader:", "MoreLikeThis", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchSimilaritiesTFIDFSimilarity:", "MoreLikeThis", NULL, 0x1, NULL, NULL },
    { "getSimilarity", NULL, "Lorg.apache.lucene.search.similarities.TFIDFSimilarity;", 0x1, NULL, NULL },
    { "setSimilarityWithOrgApacheLuceneSearchSimilaritiesTFIDFSimilarity:", "setSimilarity", "V", 0x1, NULL, NULL },
    { "getAnalyzer", NULL, "Lorg.apache.lucene.analysis.Analyzer;", 0x1, NULL, NULL },
    { "setAnalyzerWithOrgApacheLuceneAnalysisAnalyzer:", "setAnalyzer", "V", 0x1, NULL, NULL },
    { "getMinTermFreq", NULL, "I", 0x1, NULL, NULL },
    { "setMinTermFreqWithInt:", "setMinTermFreq", "V", 0x1, NULL, NULL },
    { "getMinDocFreq", NULL, "I", 0x1, NULL, NULL },
    { "setMinDocFreqWithInt:", "setMinDocFreq", "V", 0x1, NULL, NULL },
    { "getMaxDocFreq", NULL, "I", 0x1, NULL, NULL },
    { "setMaxDocFreqWithInt:", "setMaxDocFreq", "V", 0x1, NULL, NULL },
    { "setMaxDocFreqPctWithInt:", "setMaxDocFreqPct", "V", 0x1, NULL, NULL },
    { "isBoost", NULL, "Z", 0x1, NULL, NULL },
    { "setBoostWithBoolean:", "setBoost", "V", 0x1, NULL, NULL },
    { "getFieldNames", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "setFieldNamesWithNSStringArray:", "setFieldNames", "V", 0x1, NULL, NULL },
    { "getMinWordLen", NULL, "I", 0x1, NULL, NULL },
    { "setMinWordLenWithInt:", "setMinWordLen", "V", 0x1, NULL, NULL },
    { "getMaxWordLen", NULL, "I", 0x1, NULL, NULL },
    { "setMaxWordLenWithInt:", "setMaxWordLen", "V", 0x1, NULL, NULL },
    { "setStopWordsWithJavaUtilSet:", "setStopWords", "V", 0x1, NULL, NULL },
    { "getStopWords", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "getMaxQueryTerms", NULL, "I", 0x1, NULL, NULL },
    { "setMaxQueryTermsWithInt:", "setMaxQueryTerms", "V", 0x1, NULL, NULL },
    { "getMaxNumTokensParsed", NULL, "I", 0x1, NULL, NULL },
    { "setMaxNumTokensParsedWithInt:", "setMaxNumTokensParsed", "V", 0x1, NULL, NULL },
    { "likeWithInt:", "like", "Lorg.apache.lucene.search.Query;", 0x1, "Ljava.io.IOException;", NULL },
    { "likeWithJavaUtilMap:", "like", "Lorg.apache.lucene.search.Query;", 0x1, "Ljava.io.IOException;", NULL },
    { "likeWithNSString:withJavaIoReaderArray:", "like", "Lorg.apache.lucene.search.Query;", 0x81, "Ljava.io.IOException;", NULL },
    { "createQueryWithOrgApacheLuceneUtilPriorityQueue:", "createQuery", "Lorg.apache.lucene.search.Query;", 0x2, NULL, NULL },
    { "createQueueWithJavaUtilMap:", "createQueue", "Lorg.apache.lucene.util.PriorityQueue;", 0x2, "Ljava.io.IOException;", NULL },
    { "describeParams", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "retrieveTermsWithInt:", "retrieveTerms", "Lorg.apache.lucene.util.PriorityQueue;", 0x2, "Ljava.io.IOException;", NULL },
    { "retrieveTermsWithJavaUtilMap:", "retrieveTerms", "Lorg.apache.lucene.util.PriorityQueue;", 0x2, "Ljava.io.IOException;", NULL },
    { "addTermFrequenciesWithJavaUtilMap:withOrgApacheLuceneIndexTerms:", "addTermFrequencies", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "addTermFrequenciesWithJavaIoReader:withJavaUtilMap:withNSString:", "addTermFrequencies", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "isNoiseWordWithNSString:", "isNoiseWord", "Z", 0x2, NULL, NULL },
    { "retrieveTermsWithJavaIoReader:withNSString:", "retrieveTerms", "Lorg.apache.lucene.util.PriorityQueue;", 0x2, "Ljava.io.IOException;", NULL },
    { "retrieveInterestingTermsWithInt:", "retrieveInterestingTerms", "[Ljava.lang.String;", 0x1, "Ljava.io.IOException;", NULL },
    { "retrieveInterestingTermsWithJavaIoReader:withNSString:", "retrieveInterestingTerms", "[Ljava.lang.String;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_MAX_NUM_TOKENS_PARSED", "DEFAULT_MAX_NUM_TOKENS_PARSED", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MAX_NUM_TOKENS_PARSED },
    { "DEFAULT_MIN_TERM_FREQ", "DEFAULT_MIN_TERM_FREQ", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MIN_TERM_FREQ },
    { "DEFAULT_MIN_DOC_FREQ", "DEFAULT_MIN_DOC_FREQ", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MIN_DOC_FREQ },
    { "DEFAULT_MAX_DOC_FREQ", "DEFAULT_MAX_DOC_FREQ", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MAX_DOC_FREQ },
    { "DEFAULT_BOOST", "DEFAULT_BOOST", 0x19, "Z", NULL, NULL, .constantValue.asBOOL = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_BOOST },
    { "DEFAULT_FIELD_NAMES_", NULL, 0x19, "[Ljava.lang.String;", &OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_FIELD_NAMES_, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_MIN_WORD_LENGTH", "DEFAULT_MIN_WORD_LENGTH", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MIN_WORD_LENGTH },
    { "DEFAULT_MAX_WORD_LENGTH", "DEFAULT_MAX_WORD_LENGTH", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MAX_WORD_LENGTH },
    { "DEFAULT_STOP_WORDS_", NULL, 0x19, "Ljava.util.Set;", &OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_STOP_WORDS_, "Ljava/util/Set<*>;", .constantValue.asLong = 0 },
    { "stopWords_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<*>;", .constantValue.asLong = 0 },
    { "DEFAULT_MAX_QUERY_TERMS", "DEFAULT_MAX_QUERY_TERMS", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MAX_QUERY_TERMS },
    { "analyzer_", NULL, 0x2, "Lorg.apache.lucene.analysis.Analyzer;", NULL, NULL, .constantValue.asLong = 0 },
    { "minTermFreq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "minDocFreq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxDocFreq_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "boost_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "fieldNames_", NULL, 0x2, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxNumTokensParsed_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "minWordLen_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxWordLen_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "maxQueryTerms_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "similarity_", NULL, 0x2, "Lorg.apache.lucene.search.similarities.TFIDFSimilarity;", NULL, NULL, .constantValue.asLong = 0 },
    { "ir_", NULL, 0x12, "Lorg.apache.lucene.index.IndexReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "boostFactor_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.apache.lucene.queries.mlt.MoreLikeThis$FreqQ;", "Lorg.apache.lucene.queries.mlt.MoreLikeThis$ScoreTerm;", "Lorg.apache.lucene.queries.mlt.MoreLikeThis$Int;"};
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesMltMoreLikeThis = { 2, "MoreLikeThis", "org.apache.lucene.queries.mlt", NULL, 0x11, 43, methods, 24, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_OrgApacheLuceneQueriesMltMoreLikeThis;
}

@end

void OrgApacheLuceneQueriesMltMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneQueriesMltMoreLikeThis *self, OrgApacheLuceneIndexIndexReader *ir) {
  OrgApacheLuceneQueriesMltMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilaritiesTFIDFSimilarity_(self, ir, [new_OrgApacheLuceneSearchSimilaritiesDefaultSimilarity_init() autorelease]);
}

OrgApacheLuceneQueriesMltMoreLikeThis *new_OrgApacheLuceneQueriesMltMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexIndexReader *ir) {
  OrgApacheLuceneQueriesMltMoreLikeThis *self = [OrgApacheLuceneQueriesMltMoreLikeThis alloc];
  OrgApacheLuceneQueriesMltMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_(self, ir);
  return self;
}

void OrgApacheLuceneQueriesMltMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilaritiesTFIDFSimilarity_(OrgApacheLuceneQueriesMltMoreLikeThis *self, OrgApacheLuceneIndexIndexReader *ir, OrgApacheLuceneSearchSimilaritiesTFIDFSimilarity *sim) {
  NSObject_init(self);
  JreStrongAssign(&self->stopWords_, OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_STOP_WORDS_);
  JreStrongAssign(&self->analyzer_, nil);
  self->minTermFreq_ = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MIN_TERM_FREQ;
  self->minDocFreq_ = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MIN_DOC_FREQ;
  self->maxDocFreq_ = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MAX_DOC_FREQ;
  self->boost_ = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_BOOST;
  JreStrongAssign(&self->fieldNames_, OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_FIELD_NAMES_);
  self->maxNumTokensParsed_ = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MAX_NUM_TOKENS_PARSED;
  self->minWordLen_ = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MIN_WORD_LENGTH;
  self->maxWordLen_ = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MAX_WORD_LENGTH;
  self->maxQueryTerms_ = OrgApacheLuceneQueriesMltMoreLikeThis_DEFAULT_MAX_QUERY_TERMS;
  self->boostFactor_ = 1;
  JreStrongAssign(&self->ir_, ir);
  JreStrongAssign(&self->similarity_, sim);
}

OrgApacheLuceneQueriesMltMoreLikeThis *new_OrgApacheLuceneQueriesMltMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilaritiesTFIDFSimilarity_(OrgApacheLuceneIndexIndexReader *ir, OrgApacheLuceneSearchSimilaritiesTFIDFSimilarity *sim) {
  OrgApacheLuceneQueriesMltMoreLikeThis *self = [OrgApacheLuceneQueriesMltMoreLikeThis alloc];
  OrgApacheLuceneQueriesMltMoreLikeThis_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilaritiesTFIDFSimilarity_(self, ir, sim);
  return self;
}

OrgApacheLuceneSearchQuery *OrgApacheLuceneQueriesMltMoreLikeThis_createQueryWithOrgApacheLuceneUtilPriorityQueue_(OrgApacheLuceneQueriesMltMoreLikeThis *self, OrgApacheLuceneUtilPriorityQueue *q) {
  OrgApacheLuceneSearchBooleanQuery_Builder *query = [new_OrgApacheLuceneSearchBooleanQuery_Builder_init() autorelease];
  OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *scoreTerm;
  jfloat bestScore = -1;
  while ((scoreTerm = [((OrgApacheLuceneUtilPriorityQueue *) nil_chk(q)) pop]) != nil) {
    OrgApacheLuceneSearchTermQuery *tq = [new_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_([new_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(((OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *) nil_chk(scoreTerm))->topField_, scoreTerm->word_) autorelease]) autorelease];
    if (self->boost_) {
      if (bestScore == -1) {
        bestScore = (scoreTerm->score_);
      }
      jfloat myScore = (scoreTerm->score_);
      [tq setBoostWithFloat:self->boostFactor_ * myScore / bestScore];
    }
    @try {
      [query addWithOrgApacheLuceneSearchQuery:tq withOrgApacheLuceneSearchBooleanClause_OccurEnum:JreLoadStatic(OrgApacheLuceneSearchBooleanClause_OccurEnum, SHOULD)];
    }
    @catch (OrgApacheLuceneSearchBooleanQuery_TooManyClauses *ignore) {
      break;
    }
  }
  return [query build];
}

OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneQueriesMltMoreLikeThis_createQueueWithJavaUtilMap_(OrgApacheLuceneQueriesMltMoreLikeThis *self, id<JavaUtilMap> words) {
  jint numDocs = [((OrgApacheLuceneIndexIndexReader *) nil_chk(self->ir_)) numDocs];
  jint limit = JavaLangMath_minWithInt_withInt_(self->maxQueryTerms_, [((id<JavaUtilMap>) nil_chk(words)) size]);
  OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ *queue = [new_OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ_initWithInt_(limit) autorelease];
  for (NSString * __strong word in nil_chk([words keySet])) {
    jint tf = ((OrgApacheLuceneQueriesMltMoreLikeThis_Int *) nil_chk([words getWithId:word]))->x_;
    if (self->minTermFreq_ > 0 && tf < self->minTermFreq_) {
      continue;
    }
    NSString *topField = IOSObjectArray_Get(nil_chk(self->fieldNames_), 0);
    jint docFreq = 0;
    {
      IOSObjectArray *a__ = self->fieldNames_;
      NSString * const *b__ = a__->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *fieldName = *b__++;
        jint freq = [self->ir_ docFreqWithOrgApacheLuceneIndexTerm:[new_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(fieldName, word) autorelease]];
        topField = (freq > docFreq) ? fieldName : topField;
        docFreq = (freq > docFreq) ? freq : docFreq;
      }
    }
    if (self->minDocFreq_ > 0 && docFreq < self->minDocFreq_) {
      continue;
    }
    if (docFreq > self->maxDocFreq_) {
      continue;
    }
    if (docFreq == 0) {
      continue;
    }
    jfloat idf = [((OrgApacheLuceneSearchSimilaritiesTFIDFSimilarity *) nil_chk(self->similarity_)) idfWithLong:docFreq withLong:numDocs];
    jfloat score = tf * idf;
    if ([queue size] < limit) {
      [queue addWithId:[new_OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm_initWithNSString_withNSString_withFloat_withFloat_withInt_withInt_(word, topField, score, idf, docFreq, tf) autorelease]];
    }
    else {
      OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *term = [queue top];
      if (((OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *) nil_chk(term))->score_ < score) {
        [term updateWithNSString:word withNSString:topField withFloat:score withFloat:idf withInt:docFreq withInt:tf];
        [queue updateTop];
      }
    }
  }
  return queue;
}

OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithInt_(OrgApacheLuceneQueriesMltMoreLikeThis *self, jint docNum) {
  id<JavaUtilMap> termFreqMap = [new_JavaUtilHashMap_init() autorelease];
  {
    IOSObjectArray *a__ = self->fieldNames_;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *fieldName = *b__++;
      OrgApacheLuceneIndexFields *vectors = [((OrgApacheLuceneIndexIndexReader *) nil_chk(self->ir_)) getTermVectorsWithInt:docNum];
      OrgApacheLuceneIndexTerms *vector;
      if (vectors != nil) {
        vector = [vectors termsWithNSString:fieldName];
      }
      else {
        vector = nil;
      }
      if (vector == nil) {
        OrgApacheLuceneDocumentDocument *d = [self->ir_ documentWithInt:docNum];
        IOSObjectArray *fields = [((OrgApacheLuceneDocumentDocument *) nil_chk(d)) getFieldsWithNSString:fieldName];
        {
          IOSObjectArray *a__ = fields;
          id<OrgApacheLuceneIndexIndexableField> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
          id<OrgApacheLuceneIndexIndexableField> const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            id<OrgApacheLuceneIndexIndexableField> field = *b__++;
            NSString *stringValue = [((id<OrgApacheLuceneIndexIndexableField>) nil_chk(field)) stringValue];
            if (stringValue != nil) {
              OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(self, [new_JavaIoStringReader_initWithNSString_(stringValue) autorelease], termFreqMap, fieldName);
            }
          }
        }
      }
      else {
        OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaUtilMap_withOrgApacheLuceneIndexTerms_(self, termFreqMap, vector);
      }
    }
  }
  return OrgApacheLuceneQueriesMltMoreLikeThis_createQueueWithJavaUtilMap_(self, termFreqMap);
}

OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithJavaUtilMap_(OrgApacheLuceneQueriesMltMoreLikeThis *self, id<JavaUtilMap> fields) {
  JavaUtilHashMap *termFreqMap = [new_JavaUtilHashMap_init() autorelease];
  {
    IOSObjectArray *a__ = self->fieldNames_;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *fieldName = *b__++;
      for (NSString * __strong field in nil_chk([((id<JavaUtilMap>) nil_chk(fields)) keySet])) {
        id<JavaUtilCollection> fieldValues = [fields getWithId:field];
        if (fieldValues == nil) continue;
        for (id __strong fieldValue in nil_chk(fieldValues)) {
          if (fieldValue != nil) {
            OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(self, [new_JavaIoStringReader_initWithNSString_(NSString_valueOf_(fieldValue)) autorelease], termFreqMap, fieldName);
          }
        }
      }
    }
  }
  return OrgApacheLuceneQueriesMltMoreLikeThis_createQueueWithJavaUtilMap_(self, termFreqMap);
}

void OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaUtilMap_withOrgApacheLuceneIndexTerms_(OrgApacheLuceneQueriesMltMoreLikeThis *self, id<JavaUtilMap> termFreqMap, OrgApacheLuceneIndexTerms *vector) {
  OrgApacheLuceneIndexTermsEnum *termsEnum = [((OrgApacheLuceneIndexTerms *) nil_chk(vector)) iterator];
  OrgApacheLuceneUtilCharsRefBuilder *spare = [new_OrgApacheLuceneUtilCharsRefBuilder_init() autorelease];
  OrgApacheLuceneUtilBytesRef *text;
  while ((text = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) next]) != nil) {
    [spare copyUTF8BytesWithOrgApacheLuceneUtilBytesRef:text];
    NSString *term = [spare description];
    if (OrgApacheLuceneQueriesMltMoreLikeThis_isNoiseWordWithNSString_(self, term)) {
      continue;
    }
    jint freq = (jint) [termsEnum totalTermFreq];
    OrgApacheLuceneQueriesMltMoreLikeThis_Int *cnt = [((id<JavaUtilMap>) nil_chk(termFreqMap)) getWithId:term];
    if (cnt == nil) {
      cnt = [new_OrgApacheLuceneQueriesMltMoreLikeThis_Int_init() autorelease];
      [termFreqMap putWithId:term withId:cnt];
      cnt->x_ = freq;
    }
    else {
      cnt->x_ += freq;
    }
  }
}

void OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(OrgApacheLuceneQueriesMltMoreLikeThis *self, JavaIoReader *r, id<JavaUtilMap> termFreqMap, NSString *fieldName) {
  if (self->analyzer_ == nil) {
    @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"To use MoreLikeThis without term vectors, you must provide an Analyzer") autorelease];
  }
  {
    JavaLangThrowable *__mainException = nil;
    OrgApacheLuceneAnalysisTokenStream *ts = [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(self->analyzer_)) tokenStreamWithNSString:fieldName withJavaIoReader:r];
    @try {
      jint tokenCount = 0;
      id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt = [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(ts)) addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()];
      [ts reset];
      while ([ts incrementToken]) {
        NSString *word = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt)) description];
        tokenCount++;
        if (tokenCount > self->maxNumTokensParsed_) {
          break;
        }
        if (OrgApacheLuceneQueriesMltMoreLikeThis_isNoiseWordWithNSString_(self, word)) {
          continue;
        }
        OrgApacheLuceneQueriesMltMoreLikeThis_Int *cnt = [((id<JavaUtilMap>) nil_chk(termFreqMap)) getWithId:word];
        if (cnt == nil) {
          [termFreqMap putWithId:word withId:[new_OrgApacheLuceneQueriesMltMoreLikeThis_Int_init() autorelease]];
        }
        else {
          cnt->x_++;
        }
      }
      [ts end];
    }
    @finally {
      @try {
        [ts close];
      }
      @catch (JavaLangThrowable *e) {
        if (__mainException) {
          [__mainException addSuppressedWithJavaLangThrowable:e];
        } else {
          __mainException = e;
        }
      }
      if (__mainException) {
        @throw __mainException;
      }
    }
  }
}

jboolean OrgApacheLuceneQueriesMltMoreLikeThis_isNoiseWordWithNSString_(OrgApacheLuceneQueriesMltMoreLikeThis *self, NSString *term) {
  jint len = ((jint) [((NSString *) nil_chk(term)) length]);
  if (self->minWordLen_ > 0 && len < self->minWordLen_) {
    return YES;
  }
  if (self->maxWordLen_ > 0 && len > self->maxWordLen_) {
    return YES;
  }
  return self->stopWords_ != nil && [self->stopWords_ containsWithId:term];
}

OrgApacheLuceneUtilPriorityQueue *OrgApacheLuceneQueriesMltMoreLikeThis_retrieveTermsWithJavaIoReader_withNSString_(OrgApacheLuceneQueriesMltMoreLikeThis *self, JavaIoReader *r, NSString *fieldName) {
  id<JavaUtilMap> words = [new_JavaUtilHashMap_init() autorelease];
  OrgApacheLuceneQueriesMltMoreLikeThis_addTermFrequenciesWithJavaIoReader_withJavaUtilMap_withNSString_(self, r, words, fieldName);
  return OrgApacheLuceneQueriesMltMoreLikeThis_createQueueWithJavaUtilMap_(self, words);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesMltMoreLikeThis)

@implementation OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ

- (instancetype)initWithInt:(jint)maxSize {
  OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ_initWithInt_(self, maxSize);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *)a
                    withId:(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *)b {
  return ((OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *) nil_chk(a))->score_ < ((OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *) nil_chk(b))->score_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "FreqQ", NULL, 0x0, NULL, NULL },
    { "lessThanWithId:withId:", "lessThan", "Z", 0x4, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.lucene.queries.mlt.MoreLikeThis$ScoreTerm;"};
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ = { 2, "FreqQ", "org.apache.lucene.queries.mlt", "MoreLikeThis", 0xa, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/queries/mlt/MoreLikeThis$ScoreTerm;>;" };
  return &_OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ;
}

@end

void OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ_initWithInt_(OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ *self, jint maxSize) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, maxSize);
}

OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ *new_OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ_initWithInt_(jint maxSize) {
  OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ *self = [OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ alloc];
  OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ_initWithInt_(self, maxSize);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesMltMoreLikeThis_FreqQ)

@implementation OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm

- (instancetype)initWithNSString:(NSString *)word
                    withNSString:(NSString *)topField
                       withFloat:(jfloat)score
                       withFloat:(jfloat)idf
                         withInt:(jint)docFreq
                         withInt:(jint)tf {
  OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm_initWithNSString_withNSString_withFloat_withFloat_withInt_withInt_(self, word, topField, score, idf, docFreq, tf);
  return self;
}

- (void)updateWithNSString:(NSString *)word
              withNSString:(NSString *)topField
                 withFloat:(jfloat)score
                 withFloat:(jfloat)idf
                   withInt:(jint)docFreq
                   withInt:(jint)tf {
  JreStrongAssign(&self->word_, word);
  JreStrongAssign(&self->topField_, topField);
  self->score_ = score;
  self->idf_ = idf;
  self->docFreq_ = docFreq;
  self->tf_ = tf;
}

- (void)dealloc {
  RELEASE_(word_);
  RELEASE_(topField_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withFloat:withFloat:withInt:withInt:", "ScoreTerm", NULL, 0x0, NULL, NULL },
    { "updateWithNSString:withNSString:withFloat:withFloat:withInt:withInt:", "update", "V", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "word_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "topField_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "score_", NULL, 0x0, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "idf_", NULL, 0x0, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "docFreq_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "tf_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm = { 2, "ScoreTerm", "org.apache.lucene.queries.mlt", "MoreLikeThis", 0xa, 2, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm;
}

@end

void OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm_initWithNSString_withNSString_withFloat_withFloat_withInt_withInt_(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *self, NSString *word, NSString *topField, jfloat score, jfloat idf, jint docFreq, jint tf) {
  NSObject_init(self);
  JreStrongAssign(&self->word_, word);
  JreStrongAssign(&self->topField_, topField);
  self->score_ = score;
  self->idf_ = idf;
  self->docFreq_ = docFreq;
  self->tf_ = tf;
}

OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *new_OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm_initWithNSString_withNSString_withFloat_withFloat_withInt_withInt_(NSString *word, NSString *topField, jfloat score, jfloat idf, jint docFreq, jint tf) {
  OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm *self = [OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm alloc];
  OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm_initWithNSString_withNSString_withFloat_withFloat_withInt_withInt_(self, word, topField, score, idf, docFreq, tf);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesMltMoreLikeThis_ScoreTerm)

@implementation OrgApacheLuceneQueriesMltMoreLikeThis_Int

- (instancetype)init {
  OrgApacheLuceneQueriesMltMoreLikeThis_Int_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Int", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesMltMoreLikeThis_Int = { 2, "Int", "org.apache.lucene.queries.mlt", "MoreLikeThis", 0xa, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheLuceneQueriesMltMoreLikeThis_Int;
}

@end

void OrgApacheLuceneQueriesMltMoreLikeThis_Int_init(OrgApacheLuceneQueriesMltMoreLikeThis_Int *self) {
  NSObject_init(self);
  self->x_ = 1;
}

OrgApacheLuceneQueriesMltMoreLikeThis_Int *new_OrgApacheLuceneQueriesMltMoreLikeThis_Int_init() {
  OrgApacheLuceneQueriesMltMoreLikeThis_Int *self = [OrgApacheLuceneQueriesMltMoreLikeThis_Int alloc];
  OrgApacheLuceneQueriesMltMoreLikeThis_Int_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesMltMoreLikeThis_Int)
