//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/lukhnos/portmobile/file/Files.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/nio/channels/FileChannel.h"
#include "java/nio/channels/SeekableByteChannel.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/lukhnos/portmobile/channels/utils/FileChannelUtils.h"
#include "org/lukhnos/portmobile/file/DirectoryStream.h"
#include "org/lukhnos/portmobile/file/FileVisitResult.h"
#include "org/lukhnos/portmobile/file/FileVisitor.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/NoSuchFileException.h"
#include "org/lukhnos/portmobile/file/Path.h"
#include "org/lukhnos/portmobile/file/StandardOpenOption.h"
#include "org/lukhnos/portmobile/file/attribute/BasicFileAttributes.h"

@implementation OrgLukhnosPortmobileFileFiles

+ (OrgLukhnosPortmobileFilePath *)createDirectoriesWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)dir {
  return OrgLukhnosPortmobileFileFiles_createDirectoriesWithOrgLukhnosPortmobileFilePath_(dir);
}

+ (id<JavaNioChannelsSeekableByteChannel>)newByteChannelWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
                                      withOrgLukhnosPortmobileFileStandardOpenOptionEnum:(OrgLukhnosPortmobileFileStandardOpenOptionEnum *)mustBeReadOnly {
  return OrgLukhnosPortmobileFileFiles_newByteChannelWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardOpenOptionEnum_(path, mustBeReadOnly);
}

+ (OrgLukhnosPortmobileFilePath *)createFileWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgLukhnosPortmobileFileFiles_createFileWithOrgLukhnosPortmobileFilePath_(path);
}

+ (jlong)sizeWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgLukhnosPortmobileFileFiles_sizeWithOrgLukhnosPortmobileFilePath_(path);
}

+ (jboolean)existsWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgLukhnosPortmobileFileFiles_existsWithOrgLukhnosPortmobileFilePath_(path);
}

+ (jboolean)notExistsWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgLukhnosPortmobileFileFiles_notExistsWithOrgLukhnosPortmobileFilePath_(path);
}

+ (jboolean)isDirectoryWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgLukhnosPortmobileFileFiles_isDirectoryWithOrgLukhnosPortmobileFilePath_(path);
}

+ (JavaIoFileOutputStream *)newOutputStreamWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgLukhnosPortmobileFileFiles_newOutputStreamWithOrgLukhnosPortmobileFilePath_(path);
}

+ (JavaIoFileInputStream *)newInputStreamWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgLukhnosPortmobileFileFiles_newInputStreamWithOrgLukhnosPortmobileFilePath_(path);
}

+ (id<OrgLukhnosPortmobileFileDirectoryStream>)newDirectoryStreamWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)dir {
  return OrgLukhnosPortmobileFileFiles_newDirectoryStreamWithOrgLukhnosPortmobileFilePath_(dir);
}

+ (jboolean)deleteIfExistsWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgLukhnosPortmobileFileFiles_deleteIfExistsWithOrgLukhnosPortmobileFilePath_(path);
}

+ (void)delete__WithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  OrgLukhnosPortmobileFileFiles_delete__WithOrgLukhnosPortmobileFilePath_(path);
}

+ (OrgLukhnosPortmobileFilePath *)moveWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)source
                                      withOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)target
                   withOrgLukhnosPortmobileFileStandardCopyOptionArray:(IOSObjectArray *)ignored {
  return OrgLukhnosPortmobileFileFiles_moveWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardCopyOptionArray_(source, target, ignored);
}

+ (OrgLukhnosPortmobileFilePath *)walkFileTreeWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)start
                                       withOrgLukhnosPortmobileFileFileVisitor:(id<OrgLukhnosPortmobileFileFileVisitor>)visitor {
  return OrgLukhnosPortmobileFileFiles_walkFileTreeWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileFileVisitor_(start, visitor);
}

+ (OrgLukhnosPortmobileFileAttributeBasicFileAttributes *)readAttributesWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
                                                                                            withIOSClass:(IOSClass *)clz {
  return OrgLukhnosPortmobileFileFiles_readAttributesWithOrgLukhnosPortmobileFilePath_withIOSClass_(path, clz);
}

- (instancetype)init {
  OrgLukhnosPortmobileFileFiles_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createDirectoriesWithOrgLukhnosPortmobileFilePath:", "createDirectories", "Lorg.lukhnos.portmobile.file.Path;", 0x9, "Ljava.io.IOException;", NULL },
    { "newByteChannelWithOrgLukhnosPortmobileFilePath:withOrgLukhnosPortmobileFileStandardOpenOptionEnum:", "newByteChannel", "Ljava.nio.channels.SeekableByteChannel;", 0x9, "Ljava.io.IOException;", NULL },
    { "createFileWithOrgLukhnosPortmobileFilePath:", "createFile", "Lorg.lukhnos.portmobile.file.Path;", 0x9, "Ljava.io.IOException;", NULL },
    { "sizeWithOrgLukhnosPortmobileFilePath:", "size", "J", 0x9, "Ljava.io.IOException;", NULL },
    { "existsWithOrgLukhnosPortmobileFilePath:", "exists", "Z", 0x9, NULL, NULL },
    { "notExistsWithOrgLukhnosPortmobileFilePath:", "notExists", "Z", 0x9, NULL, NULL },
    { "isDirectoryWithOrgLukhnosPortmobileFilePath:", "isDirectory", "Z", 0x9, NULL, NULL },
    { "newOutputStreamWithOrgLukhnosPortmobileFilePath:", "newOutputStream", "Ljava.io.FileOutputStream;", 0x9, "Ljava.io.IOException;", NULL },
    { "newInputStreamWithOrgLukhnosPortmobileFilePath:", "newInputStream", "Ljava.io.FileInputStream;", 0x9, "Ljava.io.IOException;", NULL },
    { "newDirectoryStreamWithOrgLukhnosPortmobileFilePath:", "newDirectoryStream", "Lorg.lukhnos.portmobile.file.DirectoryStream;", 0x9, "Ljava.io.IOException;", NULL },
    { "deleteIfExistsWithOrgLukhnosPortmobileFilePath:", "deleteIfExists", "Z", 0x9, "Ljava.io.IOException;", NULL },
    { "delete__WithOrgLukhnosPortmobileFilePath:", "delete", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "moveWithOrgLukhnosPortmobileFilePath:withOrgLukhnosPortmobileFilePath:withOrgLukhnosPortmobileFileStandardCopyOptionArray:", "move", "Lorg.lukhnos.portmobile.file.Path;", 0x89, "Ljava.io.IOException;", NULL },
    { "walkFileTreeWithOrgLukhnosPortmobileFilePath:withOrgLukhnosPortmobileFileFileVisitor:", "walkFileTree", "Lorg.lukhnos.portmobile.file.Path;", 0x9, "Ljava.io.IOException;", NULL },
    { "readAttributesWithOrgLukhnosPortmobileFilePath:withIOSClass:", "readAttributes", "Lorg.lukhnos.portmobile.file.attribute.BasicFileAttributes;", 0x9, "Lorg.lukhnos.portmobile.file.NoSuchFileException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgLukhnosPortmobileFileFiles = { 2, "Files", "org.lukhnos.portmobile.file", NULL, 0x1, 16, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgLukhnosPortmobileFileFiles;
}

@end

OrgLukhnosPortmobileFilePath *OrgLukhnosPortmobileFileFiles_createDirectoriesWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *dir) {
  OrgLukhnosPortmobileFileFiles_initialize();
  if (OrgLukhnosPortmobileFileFiles_existsWithOrgLukhnosPortmobileFilePath_(dir)) {
    if (OrgLukhnosPortmobileFileFiles_isDirectoryWithOrgLukhnosPortmobileFilePath_(dir)) {
      return dir;
    }
    else {
      @throw [new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"Path is not a directory: ", dir)) autorelease];
    }
  }
  OrgLukhnosPortmobileFileFiles_createDirectoriesWithOrgLukhnosPortmobileFilePath_([((OrgLukhnosPortmobileFilePath *) nil_chk(dir)) getParent]);
  if ([((JavaIoFile *) nil_chk([dir toFile])) mkdir]) {
    return dir;
  }
  @throw [new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"Failed creating directory: ", dir)) autorelease];
}

id<JavaNioChannelsSeekableByteChannel> OrgLukhnosPortmobileFileFiles_newByteChannelWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardOpenOptionEnum_(OrgLukhnosPortmobileFilePath *path, OrgLukhnosPortmobileFileStandardOpenOptionEnum *mustBeReadOnly) {
  OrgLukhnosPortmobileFileFiles_initialize();
  return OrgLukhnosPortmobileChannelsUtilsFileChannelUtils_openWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardOpenOptionEnumArray_(path, [IOSObjectArray arrayWithObjects:(id[]){ mustBeReadOnly } count:1 type:OrgLukhnosPortmobileFileStandardOpenOptionEnum_class_()]);
}

OrgLukhnosPortmobileFilePath *OrgLukhnosPortmobileFileFiles_createFileWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgLukhnosPortmobileFileFiles_initialize();
  if (![((JavaIoFile *) nil_chk([((OrgLukhnosPortmobileFilePath *) nil_chk(path)) toFile])) createNewFile]) {
    @throw [new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"File cannot be created: ", path)) autorelease];
  }
  return path;
}

jlong OrgLukhnosPortmobileFileFiles_sizeWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgLukhnosPortmobileFileFiles_initialize();
  return [((JavaIoFile *) nil_chk([((OrgLukhnosPortmobileFilePath *) nil_chk(path)) toFile])) length];
}

jboolean OrgLukhnosPortmobileFileFiles_existsWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgLukhnosPortmobileFileFiles_initialize();
  return [((JavaIoFile *) nil_chk(((OrgLukhnosPortmobileFilePath *) nil_chk(path))->file_)) exists];
}

jboolean OrgLukhnosPortmobileFileFiles_notExistsWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgLukhnosPortmobileFileFiles_initialize();
  return !OrgLukhnosPortmobileFileFiles_existsWithOrgLukhnosPortmobileFilePath_(path);
}

jboolean OrgLukhnosPortmobileFileFiles_isDirectoryWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgLukhnosPortmobileFileFiles_initialize();
  return [((JavaIoFile *) nil_chk(((OrgLukhnosPortmobileFilePath *) nil_chk(path))->file_)) isDirectory];
}

JavaIoFileOutputStream *OrgLukhnosPortmobileFileFiles_newOutputStreamWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgLukhnosPortmobileFileFiles_initialize();
  return [new_JavaIoFileOutputStream_initWithJavaIoFile_([((OrgLukhnosPortmobileFilePath *) nil_chk(path)) toFile]) autorelease];
}

JavaIoFileInputStream *OrgLukhnosPortmobileFileFiles_newInputStreamWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgLukhnosPortmobileFileFiles_initialize();
  return [new_JavaIoFileInputStream_initWithJavaIoFile_([((OrgLukhnosPortmobileFilePath *) nil_chk(path)) toFile]) autorelease];
}

id<OrgLukhnosPortmobileFileDirectoryStream> OrgLukhnosPortmobileFileFiles_newDirectoryStreamWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *dir) {
  OrgLukhnosPortmobileFileFiles_initialize();
  if (!OrgLukhnosPortmobileFileFiles_isDirectoryWithOrgLukhnosPortmobileFilePath_(dir)) {
    @throw [new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"Not a directory: ", dir)) autorelease];
  }
  id<JavaUtilList> paths = [new_JavaUtilArrayList_init() autorelease];
  IOSObjectArray *files = [((JavaIoFile *) nil_chk([((OrgLukhnosPortmobileFilePath *) nil_chk(dir)) toFile])) listFiles];
  {
    IOSObjectArray *a__ = files;
    JavaIoFile * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaIoFile * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaIoFile *file = *b__++;
      [paths addWithId:[new_OrgLukhnosPortmobileFilePath_initWithJavaIoFile_(file) autorelease]];
    }
  }
  return [new_OrgLukhnosPortmobileFileDirectoryStream_SimpleDirectoryStream_initWithJavaUtilList_(paths) autorelease];
}

jboolean OrgLukhnosPortmobileFileFiles_deleteIfExistsWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgLukhnosPortmobileFileFiles_initialize();
  if (OrgLukhnosPortmobileFileFiles_existsWithOrgLukhnosPortmobileFilePath_(path)) {
    if (![((JavaIoFile *) nil_chk([((OrgLukhnosPortmobileFilePath *) nil_chk(path)) toFile])) delete__]) {
      @throw [new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"Could not delete path: ", path)) autorelease];
    }
    return YES;
  }
  else {
    return NO;
  }
}

void OrgLukhnosPortmobileFileFiles_delete__WithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgLukhnosPortmobileFileFiles_initialize();
  [((JavaIoFile *) nil_chk([((OrgLukhnosPortmobileFilePath *) nil_chk(path)) toFile])) delete__];
}

OrgLukhnosPortmobileFilePath *OrgLukhnosPortmobileFileFiles_moveWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardCopyOptionArray_(OrgLukhnosPortmobileFilePath *source, OrgLukhnosPortmobileFilePath *target, IOSObjectArray *ignored) {
  OrgLukhnosPortmobileFileFiles_initialize();
  if ([((JavaIoFile *) nil_chk([((OrgLukhnosPortmobileFilePath *) nil_chk(source)) toFile])) renameToWithJavaIoFile:[((OrgLukhnosPortmobileFilePath *) nil_chk(target)) toFile]]) {
    return target;
  }
  @throw [new_JavaIoIOException_initWithNSString_(JreStrcat("$@$@$", @"Move from ", source, @" to ", target, @" failed")) autorelease];
}

OrgLukhnosPortmobileFilePath *OrgLukhnosPortmobileFileFiles_walkFileTreeWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileFileVisitor_(OrgLukhnosPortmobileFilePath *start, id<OrgLukhnosPortmobileFileFileVisitor> visitor) {
  OrgLukhnosPortmobileFileFiles_initialize();
  if (OrgLukhnosPortmobileFileFiles_isDirectoryWithOrgLukhnosPortmobileFilePath_(start)) {
    [((id<OrgLukhnosPortmobileFileFileVisitor>) nil_chk(visitor)) preVisitDirectoryWithId:start withOrgLukhnosPortmobileFileAttributeBasicFileAttributes:nil];
    {
      IOSObjectArray *a__ = [((JavaIoFile *) nil_chk([((OrgLukhnosPortmobileFilePath *) nil_chk(start)) toFile])) listFiles];
      JavaIoFile * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaIoFile * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaIoFile *child = *b__++;
        OrgLukhnosPortmobileFileFiles_walkFileTreeWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileFileVisitor_([new_OrgLukhnosPortmobileFilePath_initWithJavaIoFile_(child) autorelease], visitor);
      }
    }
    [visitor postVisitDirectoryWithId:start withJavaIoIOException:nil];
  }
  else {
    [((id<OrgLukhnosPortmobileFileFileVisitor>) nil_chk(visitor)) visitFileWithId:start withOrgLukhnosPortmobileFileAttributeBasicFileAttributes:nil];
  }
  return start;
}

OrgLukhnosPortmobileFileAttributeBasicFileAttributes *OrgLukhnosPortmobileFileFiles_readAttributesWithOrgLukhnosPortmobileFilePath_withIOSClass_(OrgLukhnosPortmobileFilePath *path, IOSClass *clz) {
  OrgLukhnosPortmobileFileFiles_initialize();
  if (OrgLukhnosPortmobileFileFiles_existsWithOrgLukhnosPortmobileFilePath_(path)) {
    return [new_OrgLukhnosPortmobileFileAttributeBasicFileAttributes_initWithJavaIoFile_([((OrgLukhnosPortmobileFilePath *) nil_chk(path)) toFile]) autorelease];
  }
  @throw [new_OrgLukhnosPortmobileFileNoSuchFileException_init() autorelease];
}

void OrgLukhnosPortmobileFileFiles_init(OrgLukhnosPortmobileFileFiles *self) {
  NSObject_init(self);
}

OrgLukhnosPortmobileFileFiles *new_OrgLukhnosPortmobileFileFiles_init() {
  OrgLukhnosPortmobileFileFiles *self = [OrgLukhnosPortmobileFileFiles alloc];
  OrgLukhnosPortmobileFileFiles_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosPortmobileFileFiles)
